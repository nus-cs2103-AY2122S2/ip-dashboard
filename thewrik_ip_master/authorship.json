[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"thewrik":2}},{"path":"data/duke.tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"1. [T][ ] abc","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"2. [T][ ] abc def","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"3. [T][ ] abcd","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"4. [T][ ] cx","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"thewrik":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.ui.Display;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import duke.ui.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"public class Duke {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"        Storage.initialise();","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"        Display.greet();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"        Parser.parseInput();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":14}},{"path":"src/main/java/duke/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public enum Commands {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    todo,","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"    deadline,","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    event,","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    list,","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"    mark,","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"    unmark,","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    bye,","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    delete,","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    find,","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":13}},{"path":"src/main/java/duke/exceptions/InvalidCommandExcpetion.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public class InvalidCommandExcpetion extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    public InvalidCommandExcpetion(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":7}},{"path":"src/main/java/duke/exceptions/InvalidParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public class InvalidParameterException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    public InvalidParameterException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":7}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    private static Path storagePath;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    private static File storageFile;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"    public static void initialise() {","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"            Path storageFolderPath \u003d Paths.get(\"data\");","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"            if (Files.notExists(storageFolderPath)) Files.createDirectory(storageFolderPath);","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"            Path storageFilePath \u003d storageFolderPath.resolve(Paths.get(\"duke.tasks.txt\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"            if (Files.notExists(storageFilePath)) Files.createFile(storageFilePath);","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"            Storage.storagePath \u003d storageFilePath;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"            Storage.storageFile \u003d Storage.storagePath.toFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"    private static void write(String message) {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"            FileWriter fileWriter \u003d new FileWriter(storageFile.getAbsolutePath());","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"            fileWriter.write(message);","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"    public static void save(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"        write(message);","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"thewrik":40}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    private DeadlineTask(String taskName, LocalDate deadline) {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"    public static DeadlineTask DeadlineTaskBuilder(String taskName) throws InvalidParameterException {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"        if (taskName.length() \u003d\u003d Commands.deadline.toString().length()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"A Deadline Task must have a task name.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"        int lastIndexOfBackslash \u003d taskName.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"        if (lastIndexOfBackslash \u003d\u003d -1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"A Deadline Task must have an associated deadline.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        return new DeadlineTask(","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"                taskName.substring(Commands.deadline.toString().length() + 1, lastIndexOfBackslash).trim(),","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"                LocalDate.parse(","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"                        taskName.substring(lastIndexOfBackslash + 4),","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), deadline.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":38}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    private final LocalDate eventTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    private EventTask(String taskName, LocalDate eventTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    public static EventTask EventTaskBuilder(String taskName) throws InvalidParameterException {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"        if (taskName.length() \u003d\u003d Commands.event.toString().length()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"An Event Task must have a task name.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"        int lastIndexOfBackslash \u003d taskName.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"        if (lastIndexOfBackslash \u003d\u003d -1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"An Event Task must have an associated event time.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        return new EventTask(","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"            taskName.substring(Commands.event.toString().length() + 1, lastIndexOfBackslash).trim(),","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"            LocalDate.parse(","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"                taskName.substring(lastIndexOfBackslash + 4),","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":39}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    private final String taskType;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"    public Task(String taskName, String taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"        this.isDone \u003d Boolean.FALSE;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"    public void mark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        this.isDone \u003d Boolean.TRUE;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"        this.isDone \u003d Boolean.FALSE;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"        String isDoneCharacter \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        return String.format(\"[%s][%s] %s\", taskType, isDoneCharacter, taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":26}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    static String countTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        String pluralSuffix \u003d taskList.size() \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        return String.format(\"%s task%s\", taskList.size(), pluralSuffix);","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    static String add(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"        return String.format(\"Great, have added the following task for you:\\n%s\\nNow you have %s.\", task, countTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"    static Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"        return taskList.get(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"    static String list() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"        int task_no \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"        StringBuilder prompt \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"        prompt.append(String.format(\"You have %s in the list\\n\", countTasks()));","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"            prompt.append(String.format(\"%d. %s\\n\", task_no++, t.toString()));","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"        return prompt.toString().trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"    static void save() {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"        int task_no \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"        StringBuilder currentListState \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"            currentListState.append(String.format(\"%d. %s\\n\", task_no++, t.toString()));","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        Storage.save(currentListState.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"    static Task delete(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"        Task deletedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"        return deletedTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"    static void reinitialise() {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"        taskList.clear();","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"    public static String find(String taskKeyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"        List\u003cTask\u003e filteredTasks \u003d taskList.stream()","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"                .filter(","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"                        task -\u003e Arrays.stream(task","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"                                .toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"                                .toLowerCase()","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"                                .split(\" \"))","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"                                .anyMatch(word -\u003e word.equals(taskKeyword)))","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"        StringBuilder foundStrings \u003d new StringBuilder(\"Here are the tasks found with the given keyword.\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"        int filteredTaskCounter \u003d 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"        for (Task filteredTask :filteredTasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"thewrik"},"content":"            foundStrings.append(String.format(\"%s. %s\\n\", filteredTaskCounter++, filteredTask));","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"thewrik"},"content":"        return foundStrings.toString().trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":79}},{"path":"src/main/java/duke/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidCommandExcpetion;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"     * @param taskName","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"     * @return","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"     * @throws InvalidCommandExcpetion","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"     * @throws InvalidParameterException","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    public static String generateAndAdd(String taskName) throws InvalidCommandExcpetion, InvalidParameterException {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"        Task addedTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"        taskName \u003d taskName.trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"        if (taskName.startsWith(Commands.todo.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"            addedTask \u003d ToDoTask.ToDoTaskBuilder(taskName);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"        } else if (taskName.startsWith(Commands.deadline.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            addedTask \u003d DeadlineTask.DeadlineTaskBuilder(taskName);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        } else if (taskName.startsWith(Commands.event.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"            addedTask \u003d EventTask.EventTaskBuilder(taskName);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"            throw new InvalidCommandExcpetion(\"Could not recognise the command, please try again!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"        return TaskList.add(addedTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    public static String list() {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        return TaskList.list();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"    public static String mark(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"        Task targetTask \u003d TaskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"        targetTask.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"        return (\"Well done! I have marked this task as done.\\n\" + targetTask.toString()).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"    public static String unmark(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"        Task targetTask \u003d TaskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"        targetTask.unmark();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"        return (\"No worries, I have unmarked this task, good luck!\\n\" + targetTask.toString()).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"    public static String delete(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"        Task deletedTask \u003d TaskList.delete(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"        return String.format(\"Noted. I have removed the following task:\\n%s\\nYou now have %s\", deletedTask.toString().trim(), TaskList.countTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"    public static void save() {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"        TaskList.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"    ","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"    public static void reinitialise() {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"        TaskList.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"    public static String find(String taskKeyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"        return TaskList.find(taskKeyword);","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":67}},{"path":"src/main/java/duke/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    private ToDoTask(String taskName) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    public static ToDoTask ToDoTaskBuilder(String taskName) throws InvalidParameterException {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"        if (taskName.length() \u003d\u003d Commands.todo.toString().length()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"A Todo Task must have a task name.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        return new ToDoTask(taskName.substring(Commands.todo.toString().length() + 1).trim());","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":18}},{"path":"src/main/java/duke/ui/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public class Display {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    private static final String hline \u003d \"----------------------------------------------\";","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    static final String greetingMessage \u003d \"Hello! I am Morty, Rick\u0027s assistant.\\nWhat can I do for you, today?\";","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    static final String farewellMessage \u003d \"Hope you had fun talking to me, and bye!\\nHave a nice day ahead!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"    public static void printStylised(Object message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"        System.out.println(String.format(\"%s\\n%s\\n%s\", hline, message.toString(), hline));","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    public static void greet() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        printStylised(greetingMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"    public static void exit() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"        printStylised(farewellMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":20}},{"path":"src/main/java/duke/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.tasks.TaskManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    private static void process(String inputMessage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"        if (inputMessage.trim().equals(Commands.list.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"            Display.printStylised(TaskManager.list());","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.mark.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"            Display.printStylised(TaskManager.mark(Integer.parseInt(inputMessage.substring(Commands.mark.toString().length() + 1))));","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"            TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.unmark.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"            Display.printStylised(TaskManager.unmark(Integer.parseInt(inputMessage.substring(Commands.unmark.toString().length() + 1))));","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"            TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.delete.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"            Display.printStylised(TaskManager.delete(Integer.parseInt(inputMessage.substring(Commands.delete.toString().length() + 1))));","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.find.toString())) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"            Display.printStylised(TaskManager.find(inputMessage.substring(Commands.find.toString().length() + 1)));","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"                Display.printStylised(TaskManager.generateAndAdd(inputMessage));","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"                TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"                Display.printStylised(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"    public static void parseInput() {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"        String inputMessage;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"            inputMessage \u003d sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"            if (inputMessage.equals(Commands.bye.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"                Display.exit();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"                process(inputMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":48}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.tasks.TaskManagerTest;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"    public void test() {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"        TaskManagerTest.test();","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"thewrik":11}},{"path":"src/test/java/duke/tasks/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidCommandExcpetion;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"public class TaskManagerTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    private static void generateAndAddTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        String addMessage \u003d \"Great, have added the following task for you:\\n%s\\nNow you have %s.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"todo borrow book\"), String.format(addMessage, \"[T][ ] borrow book\", \"1 task\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"deadline read book /by 02-04-2022\"), String.format(addMessage, \"[D][ ] read book (by: Apr 02, 2022)\", \"2 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"event book club meeting /at 02-04-2022\"), String.format(addMessage, \"[E][ ] book club meeting (at: Apr 02, 2022)\", \"3 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"            assertThrows(InvalidParameterException.class, () -\u003e TaskManager.generateAndAdd(\"deadline return book Jan 25\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"            assertThrows(InvalidCommandExcpetion.class, () -\u003e TaskManager.generateAndAdd(\"saved\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"            assertThrows(InvalidParameterException.class, () -\u003e TaskManager.generateAndAdd(\"deadline\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"deadline return book /by 02-05-2022\"), String.format(addMessage, \"[D][ ] return book (by: May 02, 2022)\", \"4 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"            System.out.println(\"Test Failed with an Error\" + e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"    private static void markTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"        String markedMessage \u003d \"Well done! I have marked this task as done.\\n%s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.mark(2), String.format(markedMessage, \"[D][X] read book (by: Apr 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.mark(4), String.format(markedMessage, \"[D][X] return book (by: May 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"    private static void unmarkTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"        String unmarkedMessage \u003d \"No worries, I have unmarked this task, good luck!\\n%s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"        markTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.unmark(2), String.format(unmarkedMessage, \"[D][ ] read book (by: Apr 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.unmark(4), String.format(unmarkedMessage, \"[D][ ] return book (by: May 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"    private static void deleteTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"        String deleteMessage \u003d \"Noted. I have removed the following task:\\n%s\\nYou now have %s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.delete(2), String.format(deleteMessage, \"[D][ ] read book (by: Apr 02, 2022)\", \"3 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.delete(3), String.format(deleteMessage, \"[D][ ] return book (by: May 02, 2022)\", \"2 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"    public static void test() {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"        markTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"        unmarkTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"        deleteTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"thewrik":63}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"Hello! I am Morty, Rick\u0027s assistant.","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"What can I do for you, today?","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"Now you have 1 task.","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"[D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"Now you have 2 duke.tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"[E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"Now you have 3 duke.tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"A Deadline Task must have an associated deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"Please try again!","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"A Deadline Task must have a task name.","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"Please try again!","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"[D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"Now you have 4 duke.tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"You have 4 duke.tasks in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"2. [D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"3. [E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"4. [D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"Well done! I have marked this task as done.","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"[T][X] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"Well done! I have marked this task as done.","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"[D][X] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"No worries, I have unmarked this task, good luck!","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"[D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"You have 4 duke.tasks in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"2. [D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"3. [E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"4. [D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"Noted. I have removed the following task:","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"[E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"You now have 3 duke.tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"You have 3 duke.tasks in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"2. [D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"3. [D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"Hope you had fun talking to me, and bye!","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"Have a nice day ahead!","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"deadline read book /by 02-04-2022","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"event book club meeting /at 02-04-2022","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"deadline return book Jan 25","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"deadline return book /by 02-05-2022","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"delete 3","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"thewrik":1}}]
