[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"# README","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"## Morty - Task Manager","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"This is a personal assistant by the name Morty, inspired by and adapted after the eponymous sci-fi character from the show Rick and Morty, who stores, and manages tasks for you. While the Rick and Morty theme plays well in familiarising the user, Morty has none of the memory flaws of their namesake!","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"Go read more on the [product website](https://thewrik.github.io/ip/)!","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"-":3,"thewrik":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"apply plugin: \u0027java\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"sourceCompatibility \u003d 11","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"targetCompatibility \u003d 11","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"    ","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"    archiveBaseName \u003d \"morty\"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"thewrik":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"# User Guide: Morty - Task Manager","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"This is a personal assistant by the name Morty, inspired by and adapted after the eponymous sci-fi character from the show Rick and Morty, who stores, and manages tasks for you. While the Rick and Morty theme plays well in familiarising the user, Morty has none of the memory flaws of their namesake!","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"![Ui](https://thewrik.github.io/ip/Ui.png)","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"## Prerequisites","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"This program uses Java11. [Download java](https://java.com/en/download/help/download_options.html) to proceed if your computer does not have it installed. ","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"*Note: While certain other versions of Java may be sufficient to run the program, you may not receive the full suite of features.*","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"## Setup Instructions","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"**GUI**","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"1. Download the `Morty.jar` from [here](https://github.com/thewrik/ip/releases/tag/A-Release)","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"2. Locate the download folder and double click on `Morty.jar` to run the bot.","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"**CLI**","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"1. Open your terminal.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"2. Use this command:","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"  `java -jar relativePath/Morty.jar`","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"where `relativePath` is a placeholder for the relative path of `Morty.jar` with respect to your current directory location.","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"## Features","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"* CREATE, READ, DELETE functionality for tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"* 3 Types of tasks supported - Todo, Deadline, Event","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"* Tasks can be marked as completed, or unmarked, if not","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"* Task List can be viewed","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"* Task list saved after every action","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"* User errors such as **incorrect date formats** and deadline or event tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"without **valid dates** checked","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"* Tasks can be searched for using keywords matching a word,","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"  or a part thereof in the task body","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"### `list` - Display all tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"Generates a list of all tasks that exist.","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"Example output: ","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"You have 4 tasks in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"2. [D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"3. [E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"4. [D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"   ","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"### `todo` - Add a todo task ","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"Passed along with a string that forms the task body. ","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"Example: `todo borrow book`","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"Morty responds with the following outcome","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"Now you have 1 task.","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"### `event` - Add an event","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"Passed along with a string that forms the task body, as well as a time","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"parameter in the `DD-MM-YYYY`form, separated by `/at`.","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"Example: `event book club meeting /at 05/01/2022`","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"Morty responds with the following outcome","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"thewrik"},"content":"[E][ ] book club meeting (at: Jan 05, 22)","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"thewrik"},"content":"Now you have 3 tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"thewrik"},"content":"In case the date is missed, or incorrect, the user is informed as follows","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"thewrik"},"content":"An Event Task must have an an associated event time.","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"thewrik"},"content":"Please try again!","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"thewrik"},"content":"### `deadline` - Add a deadline","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"thewrik"},"content":"Passed along with a string that forms the task body, as well as a time","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"thewrik"},"content":"parameter in the `DD-MM-YYYY`form, separated by `/by`.","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"thewrik"},"content":"Example: `deadline return book /by 01/08/2022`","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"thewrik"},"content":"Morty responds with the following outcome","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"thewrik"},"content":"[D][ ] return book (by: Jan 08, 22)","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"thewrik"},"content":"Now you have 4 tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"thewrik"},"content":"The standard error checks apply.","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"thewrik"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"thewrik"},"content":"Command passed with a serial number as a parameter, indicating the task number ","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"thewrik"},"content":"that is to be deleted.","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"thewrik"},"content":"Example: `delete 3`","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"thewrik"},"content":"Morty responds with the following outcome, returning the task that was ","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"thewrik"},"content":"deleted as well as the number of remaining tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"``` ","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"thewrik"},"content":"Noted. I have removed the following task:","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"thewrik"},"content":"[E][ ] book club meeting (at: Jan 05, 22)","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"thewrik"},"content":"You now have 3 tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"thewrik"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"thewrik"},"content":"Command passed with a serial number as a parameter, indicating the task number","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"thewrik"},"content":"that is to be marked as completed.","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"thewrik"},"content":"Example `mark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"thewrik"},"content":"Morty responds with the following outcome, returning the task that was marked","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"thewrik"},"content":"completed.","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"thewrik"},"content":"Well done! I have marked this task as done.","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"thewrik"},"content":"[T][X] borrow book","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"thewrik"},"content":"### `unmark` - Unmark a task, i.e. record it as yet to be done","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"thewrik"},"content":"Command passed with a serial number as a parameter, indicating the task number","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"thewrik"},"content":"that is to be marked as not yet complete.","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"thewrik"},"content":"Example `unmark 2`","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"thewrik"},"content":"Morty responds with the following outcome, returning the task that was marked not yet complete","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"thewrik"},"content":"No worries, I have unmarked this task, good luck!","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"thewrik"},"content":"[D][ ] read book (by: Jan 05, 20)","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"thewrik"},"content":"### `find` - Search for tasks with a given keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"thewrik"},"content":"Command passed with a keyword that is searched through all the `tasks` in the list, returning those that contain","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"thewrik"},"content":"the `taskKeyword` in question as one of the constituent words","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"thewrik"},"content":"Example  `find book`","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"thewrik"},"content":"Here are the tasks found with the given keyword.","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"thewrik"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"thewrik"},"content":"2. [E][ ] book club meeting (at: Jan 08, 22)","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"thewrik"},"content":"3. [D][ ] read book (by: Jan 05, 20)","lastModifiedDate":"2022-02-18"},{"lineNumber":155,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"thewrik"},"content":"### `findBetter` - Search for tasks with a given keyword including tasks which contain the keyword as a proper substring of a constituent word","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"thewrik"},"content":"Command passed with a keyword that is searched through all the `tasks` in the list, returning those that contain","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"thewrik"},"content":"the `taskKeyword` in question as one of the constituent words **or** as a substring of the constituent words","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":161,"author":{"gitId":"thewrik"},"content":"Example  `findBetter book`","lastModifiedDate":"2022-02-18"},{"lineNumber":162,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":163,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":164,"author":{"gitId":"thewrik"},"content":"Here are the tasks found with the given keyword.","lastModifiedDate":"2022-02-18"},{"lineNumber":165,"author":{"gitId":"thewrik"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"thewrik"},"content":"2. [E][ ] book club meeting (at: Jan 08, 22)","lastModifiedDate":"2022-02-18"},{"lineNumber":167,"author":{"gitId":"thewrik"},"content":"3. [D][ ] read book (by: Jan 05, 20)","lastModifiedDate":"2022-02-18"},{"lineNumber":168,"author":{"gitId":"thewrik"},"content":"4. [T][ ] make booking for club room","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":170,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":171,"author":{"gitId":"thewrik"},"content":"### `bye` - Exit the bot","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":173,"author":{"gitId":"thewrik"},"content":"Simply terminates processing with a farewell message.","lastModifiedDate":"2022-02-18"},{"lineNumber":174,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":175,"author":{"gitId":"thewrik"},"content":"Example `bye`","lastModifiedDate":"2022-02-18"},{"lineNumber":176,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":177,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":178,"author":{"gitId":"thewrik"},"content":"Hope you had fun talking to me, and bye!","lastModifiedDate":"2022-02-18"},{"lineNumber":179,"author":{"gitId":"thewrik"},"content":"Have a nice day ahead!","lastModifiedDate":"2022-02-18"},{"lineNumber":180,"author":{"gitId":"thewrik"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":181,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"-":25,"thewrik":156}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import duke.ui.Display;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"public class Duke {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"     * Entry point to the program, triggers the beginning of processing.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"     * @param args","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"        Storage.initialise();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"        Application.launch(Display.class, args);","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":22}},{"path":"src/main/java/duke/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public enum Commands {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    todo,","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"    deadline,","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    event,","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    list,","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"    mark,","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"    unmark,","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    bye,","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    delete,","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    find,","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    findBetter,","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":14}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.exceptions;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"thewrik":7}},{"path":"src/main/java/duke/exceptions/InvalidParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public class InvalidParameterException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    public InvalidParameterException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":7}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.tasks.TaskManager;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"import java.util.List;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"    private static Path storagePath;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"    private static File storageFile;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"     * Initialises the file location where the saved state of the task manager is to be stored.","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"    public static void initialise() {","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"            Path storageFolderPath \u003d Paths.get(\"data\");","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            if (Files.notExists(storageFolderPath)) Files.createDirectory(storageFolderPath);","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"            Path storageFilePath \u003d storageFolderPath.resolve(Paths.get(\"tasks.txt\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"            if (Files.notExists(storageFilePath)) Files.createFile(storageFilePath);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"            Storage.storagePath \u003d storageFilePath;","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"            Storage.storageFile \u003d Storage.storagePath.toFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"            loadTasks();","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    private static void loadTasks() {","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"            List\u003cString\u003e savedTaskList \u003d Files.readAllLines(Storage.storagePath);","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"            TaskManager.generateAndAddFromFile(savedTaskList);","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"     * Writes the message passed as a parameter to the file the class was initialised with.","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"     * @param message The message content to be saved.","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"    public static void save(String message) {","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"            FileWriter fileWriter \u003d new FileWriter(storageFile.getAbsolutePath());","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"            fileWriter.write(message);","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"thewrik":57}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    private DeadlineTask(String taskName, LocalDate deadline) {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"    private DeadlineTask(String taskName, LocalDate deadline, Boolean isTaskDone) {","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"D\", isTaskDone);","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"     * Factory method to generate Deadline task.","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"     * @param taskName The name of the task to be created inclusive of the time parameter.","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"     * @return the DeadlineTask created.","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"     * @throws InvalidParameterException If no name is passed, or an invalid date is passed.","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"    public static DeadlineTask buildDeadlineTask(String taskName) throws InvalidParameterException {","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"        if (taskName.length() \u003d\u003d Commands.deadline.toString().length()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"A Deadline Task must have a task name.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        int lastIndexOfBackslash \u003d taskName.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        if (lastIndexOfBackslash \u003d\u003d -1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"A Deadline Task must have an associated deadline.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"        return new DeadlineTask(","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"                taskName.substring(Commands.deadline.toString().length() + 1, lastIndexOfBackslash).trim(),","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"                LocalDate.parse(","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"                        taskName.substring(lastIndexOfBackslash + 4),","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"    public static DeadlineTask generateFromString(String savedTask) {","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"        Boolean isTaskDone \u003d savedTask.charAt(7)\u003d\u003d\u0027X\u0027;","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        int indexOfTimeStamp \u003d savedTask.lastIndexOf(\"(by: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"        String taskName \u003d savedTask.substring(10, indexOfTimeStamp).trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"        LocalDate deadline \u003d LocalDate.parse(savedTask.substring(indexOfTimeStamp + 5, savedTask.length() - 1),","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd, yyyy\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"        return new DeadlineTask(taskName, deadline, isTaskDone);","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"     * Generates the string representation of the Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"     * @return the string representation of the Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), deadline.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":65}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    private final LocalDate eventTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    private EventTask(String taskName, LocalDate eventTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    private EventTask(String taskName, LocalDate eventTime, Boolean isDone) {","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"E\", isDone);","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"     * Factory method to generate Event task.","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"     * @param taskName The name of the task to be created inclusive of the time parameter.","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"     * @return the EventTask created.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"     * @throws InvalidParameterException If no name is passed, or an invalid date is passed.","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"    public static EventTask buildEventTask(String taskName) throws InvalidParameterException {","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        if (taskName.length() \u003d\u003d Commands.event.toString().length()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"An Event Task must have a task name.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"        int lastIndexOfBackslash \u003d taskName.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"        if (lastIndexOfBackslash \u003d\u003d -1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"An Event Task must have an associated event time.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"        return new EventTask(","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"            taskName.substring(Commands.event.toString().length() + 1, lastIndexOfBackslash).trim(),","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"            LocalDate.parse(","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"                taskName.substring(lastIndexOfBackslash + 4),","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"    public static EventTask generateFromString(String savedTask) {","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        Boolean isTaskDone \u003d savedTask.charAt(7)\u003d\u003d\u0027X\u0027;","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"        int indexOfTimeStamp \u003d savedTask.lastIndexOf(\"(at: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"        String taskName \u003d savedTask.substring(10, indexOfTimeStamp).trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"        LocalDate eventTime \u003d LocalDate.parse(savedTask.substring(indexOfTimeStamp + 5, savedTask.length() - 1),","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd, yyyy\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"        return new EventTask(taskName, eventTime, isTaskDone);","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"     * Generates the string representation of the Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"     * @return the string representation of the Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")));","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":66}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"    private final String taskType;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    private static final Task emptyTask \u003d new Task(\"\", \"\");","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"     * Constructor for a Task","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"    public Task(String taskName, String taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"        this.isDone \u003d Boolean.FALSE;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    Task(String taskName, String taskType, Boolean isDone) {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"    public static Task generateFromString(String savedTask) {","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"        switch (savedTask.charAt(4)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"            case \u0027T\u0027: return ToDoTask.generateFromString(savedTask);","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"            case \u0027D\u0027: return DeadlineTask.generateFromString(savedTask);","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"            case \u0027E\u0027: return EventTask.generateFromString(savedTask);","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"            default:  System.out.print(savedTask.charAt(1)); return emptyTask;","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"     * Marks a task as completed.","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"    public void mark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"        this.isDone \u003d Boolean.TRUE;","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"     * Marks a task as yet to be completed.","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        this.isDone \u003d Boolean.FALSE;","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"     * Generates the string representation of the Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"     * @return the string representation of the Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"        String isDoneCharacter \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"        return String.format(\"[%s][%s] %s\", taskType, isDoneCharacter, taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":60}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"     * Gets the number of tasks stored in the Task List.","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"     * @return the size of the task list, i.e. the number of tasks stored in the Task List.","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    static String countTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"        String pluralSuffix \u003d taskList.size() \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"        return String.format(\"%s task%s\", taskList.size(), pluralSuffix);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"     * Adds a Task object to the TaskList.","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"     * @return a message acknowledging the addition of the task, including the task details.","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"    static String add(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        return String.format(\"Great, have added the following task for you:\\n%s\\nNow you have %s.\", task, countTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"     * Fetches a task by index. (1-indexed list).","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"     * @param index The integer passed to get the task at that index.","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"     * @return the task at the given index.","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"    static Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"        return taskList.get(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"     *  Returns a string representation of the list of tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"    static String list() {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"        int task_no \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"        StringBuilder prompt \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"        prompt.append(String.format(\"You have %s in the list\\n\", countTasks()));","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"            prompt.append(String.format(\"%d. %s\\n\", task_no++, t.toString()));","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"        return prompt.toString().trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"     * Saves the current state of the list using the Storage component.","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"    static void save() {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"        int task_no \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"        StringBuilder currentListState \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"            currentListState.append(String.format(\"%d. %s\\n\", task_no++, t.toString()));","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"thewrik"},"content":"        Storage.save(currentListState.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"thewrik"},"content":"     * Deletes the Task at a certain index (1-indexed list).","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"thewrik"},"content":"     * @param index The integer passed to get the task at that index.","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"thewrik"},"content":"     * @return A message acknowledging the deletion with the deleted task included.","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"thewrik"},"content":"    static Task delete(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"thewrik"},"content":"        Task deletedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"thewrik"},"content":"        return deletedTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"thewrik"},"content":"    static void reinitialise() {","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"thewrik"},"content":"        taskList.clear();","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"thewrik"},"content":"     * This is a method that finds all the tasks in the task list which contain the keyword","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"thewrik"},"content":"     * in the task name as a constituent word.","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"thewrik"},"content":"     * @param taskKeyword  The keyword being searched for.","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"thewrik"},"content":"     * @return A string containing the tasks found.","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"thewrik"},"content":"    public static String find(String taskKeyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"thewrik"},"content":"        List\u003cTask\u003e filteredTasks \u003d taskList.stream()","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"thewrik"},"content":"                .filter(","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"thewrik"},"content":"                        task -\u003e Arrays.stream(task","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"thewrik"},"content":"                                .toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"thewrik"},"content":"                                .toLowerCase()","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"thewrik"},"content":"                                .split(\" \"))","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"thewrik"},"content":"                                .anyMatch(word -\u003e word.equals(taskKeyword.toLowerCase())))","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"thewrik"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"thewrik"},"content":"        StringBuilder foundStrings \u003d new StringBuilder(\"Here are the tasks found with the given keyword.\\n\");","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"thewrik"},"content":"        int filteredTaskCounter \u003d 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"thewrik"},"content":"        for (Task filteredTask :filteredTasks) {","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"thewrik"},"content":"            foundStrings.append(String.format(\"%s. %s\\n\", filteredTaskCounter++, filteredTask));","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"thewrik"},"content":"        return foundStrings.toString().trim();","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"thewrik"},"content":"     * This is a method that finds all the tasks in the task list which contain the keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"thewrik"},"content":"     * in the task name as a constituent word, or as a substring of a constituent word.","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"thewrik"},"content":"     * @param taskKeyword  The keyword being searched for.","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"thewrik"},"content":"     * @return A string containing the tasks found.","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"thewrik"},"content":"    public static String findBetter(String taskKeyword) {","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"thewrik"},"content":"        List\u003cTask\u003e filteredTasks \u003d taskList.stream()","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"thewrik"},"content":"            .filter(task -\u003e task.toString().toLowerCase().contains(taskKeyword.toLowerCase()))","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"thewrik"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"thewrik"},"content":"        StringBuilder foundStrings \u003d new StringBuilder(\"Here are the tasks found after Better Search with the given keyword.\\n\");","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"thewrik"},"content":"        int filteredTaskCounter \u003d 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"thewrik"},"content":"        for (Task filteredTask :filteredTasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"thewrik"},"content":"            foundStrings.append(String.format(\"%s. %s\\n\", filteredTaskCounter++, filteredTask));","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"thewrik"},"content":"        return foundStrings.toString().trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":138}},{"path":"src/main/java/duke/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import java.util.List;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"     * Generates a Task of the associated type and adds it to the TaskList.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"     * @param taskName The body of the task to be added.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"     * @return The response relayed by the TaskList acknowledging the addition.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"     * @throws InvalidCommandException If the user fails to prefix their task body with one of the three supported task types.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"     * @throws InvalidParameterException If the user fails to satisfy the parameter requirements of the task type they used.","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"    public static String generateAndAdd(String taskName) throws InvalidCommandException, InvalidParameterException {","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"        Task addedTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        taskName \u003d taskName.trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        if (taskName.startsWith(Commands.todo.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"            addedTask \u003d ToDoTask.buildTodoTask(taskName);","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"            assert(addedTask.toString().startsWith(\"[T]\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"        } else if (taskName.startsWith(Commands.deadline.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"            addedTask \u003d DeadlineTask.buildDeadlineTask(taskName);","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"            assert(addedTask.toString().startsWith(\"[D]\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"            assert(addedTask.toString().contains(\"(by:\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        } else if (taskName.startsWith(Commands.event.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"            addedTask \u003d EventTask.buildEventTask(taskName);","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"            assert(addedTask.toString().startsWith(\"[E]\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"            assert(addedTask.toString().contains(\"(at:\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"            throw new InvalidCommandException(\"Could not recognise the command, please try again!\");","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"        return TaskList.add(addedTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"    public static void generateAndAddFromFile(List\u003cString\u003e savedTaskList) {","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"        for (String savedTask : savedTaskList) {","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"            Task addedTask \u003d Task.generateFromString(savedTask);","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"            TaskList.add(addedTask);","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"     *  Returns a string representation of the list of tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"    public static String list() {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"        return TaskList.list();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"     * Marks a Task at a specific index (1-indexed) to be complete.","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"     * @param index The integer passed to get the task at that index.","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"     * @return A message acknowledging the mark action with the corresponding task included.","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"    public static String mark(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"        Task targetTask \u003d TaskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"        targetTask.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"        assert(targetTask.toString().startsWith(\"[X]\", 3));","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"        return (\"Well done! I have marked this task as done.\\n\" + targetTask.toString()).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"     * Unmarks a Task at a specific index (1-indexed), i.e., records it as yet to be completed.","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"thewrik"},"content":"     * @param index The integer passed to get the task at that index.","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"thewrik"},"content":"     * @return A message acknowledging the unmark action with the corresponding task included.","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"thewrik"},"content":"    public static String unmark(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"thewrik"},"content":"        Task targetTask \u003d TaskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"thewrik"},"content":"        targetTask.unmark();","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"thewrik"},"content":"        assert(targetTask.toString().startsWith(\"[ ]\", 3));","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"thewrik"},"content":"        return (\"No worries, I have unmarked this task, good luck!\\n\" + targetTask.toString()).trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"thewrik"},"content":"     * Deletes the Task at a certain index (1-indexed list).","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"thewrik"},"content":"     * @param index The integer passed to get the task at that index.","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"thewrik"},"content":"     * @return A message acknowledging the deletion with the deleted task included.","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"thewrik"},"content":"    public static String delete(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"thewrik"},"content":"        Task deletedTask \u003d TaskList.delete(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"thewrik"},"content":"        return String.format(\"Noted. I have removed the following task:\\n%s\\nYou now have %s\", deletedTask.toString().trim(), TaskList.countTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"thewrik"},"content":"    public static void save() {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"thewrik"},"content":"        TaskList.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"thewrik"},"content":"    ","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"thewrik"},"content":"    public static void reinitialise() {","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"thewrik"},"content":"        TaskList.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"thewrik"},"content":"     * This is a method that finds all the tasks in the task list which contain the keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"thewrik"},"content":"     * in the task name as a constituent word.","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"thewrik"},"content":"     * @param taskKeyword  The keyword being searched for.","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"thewrik"},"content":"     * @return A string containing the tasks found.","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"thewrik"},"content":"    public static String find(String taskKeyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"thewrik"},"content":"        return TaskList.find(taskKeyword);","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"thewrik"},"content":"     * This is a method that finds all the tasks in the task list which contain the keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"thewrik"},"content":"     * in the task name as a constituent word, or as a substring of a constituent word.","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"thewrik"},"content":"     * @param taskKeyword  The keyword being searched for.","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"thewrik"},"content":"     * @return A string containing the tasks found.","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"thewrik"},"content":"    public static String findBetter(String taskKeyword) {","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"thewrik"},"content":"        return TaskList.findBetter(taskKeyword);","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":126}},{"path":"src/main/java/duke/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    private ToDoTask(String taskName) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"    private ToDoTask(String taskName, Boolean isDone) {","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"        super(taskName, \"T\", isDone);","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"     * Factory method to generate TODO task.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"     * @param taskName The name of the task to be created.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"     * @return the ToDoTask created.","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"     * @throws InvalidParameterException If no name is passed.","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"    public static ToDoTask buildTodoTask(String taskName) throws InvalidParameterException {","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"        if (taskName.length() \u003d\u003d Commands.todo.toString().length()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"            throw new InvalidParameterException(\"A Todo Task must have a task name.\\nPlease try again!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"        return new ToDoTask(taskName.substring(Commands.todo.toString().length() + 1).trim());","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"    public static ToDoTask generateFromString(String savedTask) {","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"        Boolean isTaskDone \u003d savedTask.charAt(7)\u003d\u003d\u0027X\u0027;","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        return new ToDoTask(savedTask.substring(10), isTaskDone);","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":36}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    private Label text;","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    public DialogBox(Label l, ImageView iv, Color color) {","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"        text \u003d l;","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"        text.setTextFill(Color.WHITE);","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"        VBox textWrapper \u003d new VBox();","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"        textWrapper.getChildren().add(text);","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"        textWrapper.setPadding(new Insets(10,10,10,10));","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"        textWrapper.setAlignment(Pos.CENTER);","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"        this.getChildren().addAll(textWrapper, displayPicture);","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"        this.setBackground(new Background(new BackgroundFill(color, new CornerRadii(25), Insets.EMPTY)));","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"        this.setPadding(new Insets(10,10,10,10));","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"    private void flip() {","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"     * This generates a green dialog box with the relevant parameters displayed, pertaining to the User.","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"     * @param l Text to be displayed in the dialog box.","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"     * @param iv The image assigned to the user\u0027s profile.","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"     * @return The Dialogue Box with the above specifications.","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"        return new DialogBox(l, iv, Color.GREEN);","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"     * This generates a blue dialog box with the relevant parameters displayed, pertaining to Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"     * @param l Text to be displayed in the dialog box.","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"     * @param iv The image assigned to Duke\u0027s profile (i.e. Morty).","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"     * @return The Dialogue Box with the above specifications.","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"        var db \u003d new DialogBox(l, iv, Color.BLUE);","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"thewrik"},"content":"        db.flip();","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"thewrik"},"content":"        return db;","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"thewrik":78}},{"path":"src/main/java/duke/ui/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"public class Display extends Application {","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/rick.png\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/morty.png\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"    private Image backgroundImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/background.png\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"    private Background background \u003d new Background(new BackgroundImage(backgroundImage,BackgroundRepeat.REPEAT, BackgroundRepeat.NO_REPEAT, BackgroundPosition.DEFAULT,","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"        BackgroundSize.DEFAULT));","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"        return Parser.process(input);","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"            DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"            DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"        );","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"     * Generates the UI of the application.","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"     * @param stage The platform upon which UI elements are placed.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"thewrik"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"thewrik"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"thewrik"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"thewrik"},"content":"        stage.show();","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"thewrik"},"content":"        // more code to be added here later","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"thewrik"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"thewrik"},"content":"        stage.setTitle(\"Morty - Task Manager\");","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"thewrik"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"thewrik"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"thewrik"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"thewrik"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"thewrik"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"thewrik"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"thewrik"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"thewrik"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"thewrik"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"thewrik"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"thewrik"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"thewrik"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"thewrik"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"thewrik"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"thewrik"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"thewrik"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"thewrik"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"thewrik"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"thewrik"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"thewrik"},"content":"            DialogBox.getDukeDialog(new Label(Parser.greetingMessage), new ImageView(duke))","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"thewrik"},"content":"        );","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"thewrik"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"thewrik"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"thewrik"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"thewrik"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"thewrik"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"thewrik"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"thewrik"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"thewrik"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"thewrik"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"thewrik"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"thewrik"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"thewrik"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"thewrik"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"thewrik"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"thewrik"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"thewrik"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":139}},{"path":"src/main/java/duke/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.commands.Commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.tasks.TaskManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"    static final String greetingMessage \u003d \"Hello! I am Morty, Rick\u0027s assistant.\\nI keep track of your tasks, so you don\u0027t have to. What\u0027s up?\";","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    static final String farewellMessage \u003d \"Hope you had fun talking to me, and bye!\\nHave a nice day ahead!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"     * Allocates the message appropriately to relevant classes for handling.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"     * @param inputMessage The message passed as input to the application.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"     * @return The response generated as a consequence of the action undertaken.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"    public static String process(String inputMessage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"        if (inputMessage.trim().equals(Commands.list.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"            return TaskManager.list();","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.mark.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            String returnableResponseOfAction \u003d TaskManager.mark(Integer.parseInt(inputMessage.substring(Commands.mark.toString().length() + 1)));","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"            TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"            return returnableResponseOfAction;","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.unmark.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"            String returnableResponseOfAction \u003d TaskManager.unmark(Integer.parseInt(inputMessage.substring(Commands.unmark.toString().length() + 1)));","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"            TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"            return returnableResponseOfAction;","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.delete.toString())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"            String returnableResponseOfAction \u003dTaskManager.delete(Integer.parseInt(inputMessage.substring(Commands.delete.toString().length() + 1)));","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"            TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"            return returnableResponseOfAction;","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        }  else if (inputMessage.startsWith(Commands.findBetter.toString())) {","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"            return TaskManager.findBetter(inputMessage.substring(Commands.findBetter.toString().length() + 1));","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.startsWith(Commands.find.toString() + \" \")) {","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"            return  TaskManager.find(inputMessage.substring(Commands.find.toString().length() + 1));","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"        } else if (inputMessage.equals(Commands.bye.toString())) {","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"            return farewellMessage;","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"                String returnableResponseOfAction \u003d TaskManager.generateAndAdd(inputMessage);","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"                TaskManager.save();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"                return  returnableResponseOfAction;","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"                return e.getMessage();","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thewrik":50}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.tasks.TaskManagerTest;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"    public void test() {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"        TaskManagerTest.test();","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"thewrik":11}},{"path":"src/test/java/duke/tasks/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"import duke.exceptions.InvalidParameterException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"public class TaskManagerTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    private static void generateAndAddTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"        String addMessage \u003d \"Great, have added the following task for you:\\n%s\\nNow you have %s.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"todo borrow book\"), String.format(addMessage, \"[T][ ] borrow book\", \"1 task\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"deadline read book /by 02-04-2022\"), String.format(addMessage, \"[D][ ] read book (by: Apr 02, 2022)\", \"2 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"event book club meeting /at 02-04-2022\"), String.format(addMessage, \"[E][ ] book club meeting (at: Apr 02, 2022)\", \"3 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"            assertThrows(InvalidParameterException.class, () -\u003e TaskManager.generateAndAdd(\"deadline return book Jan 25\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"            assertThrows(InvalidCommandException.class, () -\u003e TaskManager.generateAndAdd(\"saved\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"            assertThrows(InvalidParameterException.class, () -\u003e TaskManager.generateAndAdd(\"deadline\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"            assertEquals(TaskManager.generateAndAdd(\"deadline return book /by 02-05-2022\"), String.format(addMessage, \"[D][ ] return book (by: May 02, 2022)\", \"4 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"            System.out.println(\"Test Failed with an Error\" + e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"    private static void markTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"        String markedMessage \u003d \"Well done! I have marked this task as done.\\n%s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.mark(2), String.format(markedMessage, \"[D][X] read book (by: Apr 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.mark(4), String.format(markedMessage, \"[D][X] return book (by: May 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"    private static void unmarkTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"        String unmarkedMessage \u003d \"No worries, I have unmarked this task, good luck!\\n%s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"        markTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.unmark(2), String.format(unmarkedMessage, \"[D][ ] read book (by: Apr 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.unmark(4), String.format(unmarkedMessage, \"[D][ ] return book (by: May 02, 2022)\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"    private static void deleteTest() {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"        TaskManager.reinitialise();","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"        String deleteMessage \u003d \"Noted. I have removed the following task:\\n%s\\nYou now have %s\";","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.delete(2), String.format(deleteMessage, \"[D][ ] read book (by: Apr 02, 2022)\", \"3 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"        assertEquals(TaskManager.delete(3), String.format(deleteMessage, \"[D][ ] return book (by: May 02, 2022)\", \"2 tasks\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"    public static void test() {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"        generateAndAddTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"        markTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"        unmarkTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"        deleteTest();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"thewrik":63}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"Hello! I am Morty, Rick\u0027s assistant.","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"What can I do for you, today?","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"Now you have 1 task.","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"[D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"Now you have 2 duke.tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"[E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"Now you have 3 duke.tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"A Deadline Task must have an associated deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"Please try again!","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"A Deadline Task must have a task name.","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"Please try again!","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"Great, have added the following task for you:","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"[D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"Now you have 4 duke.tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"You have 4 duke.tasks in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"2. [D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"3. [E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"4. [D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"Well done! I have marked this task as done.","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"[T][X] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"thewrik"},"content":"Well done! I have marked this task as done.","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"thewrik"},"content":"[D][X] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"thewrik"},"content":"No worries, I have unmarked this task, good luck!","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"thewrik"},"content":"[D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"thewrik"},"content":"You have 4 tasks in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"thewrik"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"thewrik"},"content":"2. [D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"thewrik"},"content":"3. [E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"thewrik"},"content":"4. [D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"thewrik"},"content":"Noted. I have removed the following task:","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"thewrik"},"content":"[E][ ] book club meeting (at: Jan 22)","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"thewrik"},"content":"You now have 3 tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"thewrik"},"content":"You have 3 duke.tasks in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"thewrik"},"content":"1. [T][X] borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"thewrik"},"content":"2. [D][ ] read book (by: Jan 20)","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"thewrik"},"content":"3. [D][ ] return book (by: Jan 25)","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"Hope you had fun talking to me, and bye!","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"Have a nice day ahead!","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"thewrik"},"content":"----------------------------------------------","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"deadline read book /by 02-04-2022","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"event book club meeting /at 02-04-2022","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"deadline return book Jan 25","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"deadline return book /by 02-05-2022","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"delete 3","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"thewrik":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"thewrik":1}}]
