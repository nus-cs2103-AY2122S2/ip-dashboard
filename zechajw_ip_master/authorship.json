[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zechajw":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"# Duke User Guide","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"* The addition of Tasks (Events, Deadlines, Todos) to a Calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"  * Adding singular tasks ","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"  * Adding recurring events (e.g. repeats every week)","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"* Listing all the tasks in the calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"* The deletion of Tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"* Marking tasks as complete/incomplete","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"* Find tasks by keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"* Saving tasks to a local file","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"* Loading of tasks from local file on program startup","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"### Adding Tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"Tasks of each specified type can be added to the calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"#### 1. Creating a new Todo","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"Adds a new todo to the calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"`todo assignment`","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"Got it! I\u0027ve added this task: ","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    [T][] assignment","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"#### 2. Creating a new Deadline","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"Adds a new deadline to the calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"`deadline report /by 22 Feb 2019`","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"    [D][] report (by: 22 Feb 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"#### 3. Creating a new Event","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"Adds a new event to the calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"`event concert /at 22 Feb 2019`","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"    [E][] concert (at: 22 Feb 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"#### 4. Adding recurring events","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"Adds a recurring event at set intervals until the specified end date","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"`recurring event meeting /at 1 Mar 2019 /interval 7 /ends 8 Mar 2019`","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"Got it! I\u0027ve added all the recurring tasks to the calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"Now you have 5 tasks in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"### Listing Tasks in the Calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"Lists all the tasks in the calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"`list`","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"1. [T][] assignment","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"2. [D][] report (by: 22 Feb 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"zechajw"},"content":"3. [E][] concert (at: 22 Feb 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"4. [E][] meeting (at: 1 Mar 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"5. [E][] meeting (at: 8 Mar 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":"### Deleting Tasks from the Calendar","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"Deletes a task at the specified index in the list","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"`delete 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":95,"author":{"gitId":"zechajw"},"content":"Alright. I\u0027ve deleted this task:","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"zechajw"},"content":"    [T][] assignment","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":98,"author":{"gitId":"zechajw"},"content":"### Marking Tasks as complete/incomplete","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"zechajw"},"content":"#### 1. Marking a task as complete","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"zechajw"},"content":"Marks the task at the specified index as complete","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"zechajw"},"content":"`mark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"zechajw"},"content":"Nice! I\u0027ve marked this task as complete:","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"zechajw"},"content":"    [D][X] report (by: 22 Feb 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":"### 2. Marking a task as incomplete","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"zechajw"},"content":"Marks the task at the specified index as incomplete","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"`unmark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"zechajw"},"content":"Alright. I\u0027ve marked this task as incomplete:","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"zechajw"},"content":"    [D][] report (by: 22 Feb 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"zechajw"},"content":"### Find Task by keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"Find tasks from list with the specified keyword","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"zechajw"},"content":"`find report`","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"zechajw"},"content":"1: [D][] report (by: 22 Feb 2019)","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"zechajw"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"zechajw"},"content":"### Saving data to local storage","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"zechajw"},"content":"Saves data to local storage for reload on next startup","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"zechajw"},"content":"File **auto-saves** on update ","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"zechajw"},"content":"Save file is stored for future program usage","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"zechajw"},"content":"### Loading data from local storage","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"zechajw"},"content":"Loads data from local storage on startup if file is present, otherwise start new file","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"zechajw"},"content":"Example of usage:","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"zechajw"},"content":"File is **auto-loaded** from local storage on update","lastModifiedDate":"2022-02-18"},{"lineNumber":155,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"zechajw"},"content":"Expected Outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"zechajw"},"content":"Save file is loaded for current program use","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"zechajw":130,"-":28}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"zechajw":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.DukeException;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"public class Duke {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    private Calendar calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    private String filePath \u003d \"tasks.txt\";","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * Constructs a Duke object with a new Ui and storage handler. The filePath is set","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * as \"tasks.txt\", and will be used to load a previous save, but a new Calendar will","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * be created if no previous save exists.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public Duke() {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"            this.calendar \u003d new Calendar(storage.load());","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"            this.calendar \u003d new Calendar();","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"    };","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    String getResponse(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"            return c.execute(calendar, ui, storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"     * Runs the Duke program using the run() method specified.","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"     * @param args - command line arguments","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"    public static void main (String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"        new Duke().run();","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"     * Executes the Duke Program.","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"    public void run() {","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"                ui.showLine(); // show divider line","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"                c.execute(calendar, ui, storage);","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"            } finally {","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"                ui.showLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":76}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"    public Launcher() {};","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"zechajw":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"            stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"zechajw":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"zechajw":57}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Task;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * Constructs an AddCommand with the specified taskToAdd, which contains","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * the task to be added in the execute command.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * @param taskToAdd - the task to be added","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    public AddCommand(Task taskToAdd) {","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * Adds the task specified in taskToAdd to the specified calendar. Afterwards,","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * display a success message showing that the task has been successfully added","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * using the ui handler, and save the new version of the calendar to storage.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     * @return success message if complete or error message if execution failed","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"            int previousNumOfEntries \u003d calendar.numOfEntries();","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"            calendar.add(taskToAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"            assert calendar.numOfEntries() - previousNumOfEntries \u003d\u003d 1 : \"task was not added\";","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"            storage.save(calendar);","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"            return ui.showTaskAdded(taskToAdd, calendar.numOfEntries());","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":48}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.InvalidInputException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"     * Constructs an empty Command","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    Command() {}","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Returns true if and only if the Command is an instance of","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * ExitCommand","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * @return - true if the command is an ExitCommand","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        return (this instanceof ExitCommand);","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"     * Runs the execute command specific to the command type. This command will be overridden","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * in child classes to specify the appropriate execute functionality","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * @throws InvalidInputException - if the input to the subclass commands are invalid","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        /* To be overridden in child classes; */","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"        return \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":36}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Deadline;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * Constructs a Deadline command","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     * @param deadline - the deadline to be created","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     * @param date - the date of the deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    public DeadlineCommand(String deadline, String date) {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"        super(new Deadline(deadline, date, false));","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":16}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.InvalidInputException;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import duke.utils.Text;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    private final String indexToDelete;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * Constructs a DeleteCommand with the specified indexToDelete string","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * @param indexToDelete","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    public DeleteCommand(String indexToDelete) {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"        this.indexToDelete \u003d indexToDelete;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * Deletes the task at the specified indexToDelete. This is done by using the remove method","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * of the calendar object. Afterwards, display a message on the UI handler to indicate that","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * the task was successfully deleted, and use the save method in the storage handler to save","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * the new calendar to file.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     * @throws InvalidInputException - thrown when the index to delete is invalid","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"            int index \u003d Integer.parseInt(indexToDelete);","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"            String taskString \u003d calendar.taskStringAtIndex(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"            calendar.remove(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"            storage.save(calendar);","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"            return ui.showTaskDeleted(taskString);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"            throw new InvalidInputException(String.format(Text.TEXT_INVALID_LIST_INDEX,","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"                    calendar.numOfEntries(), Integer.parseInt(indexToDelete)));","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"            throw new InvalidInputException(String.format(Text.TEXT_NON_INTEGER_LIST_INDEX, this.indexToDelete));","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":52}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Event;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * Constructs an EventCommand with the specified event and date of the event.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     * @param event - the event to be added","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     * @param date - the date of the event","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    public EventCommand(String event, String date) {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"        super(new Event(event, date, false));","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":16}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"     * Constructs an ExitCommand","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    public ExitCommand() {}","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Shows the goodbye message on the ui handler.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":25}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    private final String keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"     * @param keyword - the keyword to be used for Find","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * Displays the calendar with all the tasks that match the given keyword","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     * Using the tasksMatchingKeyword method in the Calendar class, obtains","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"     * a calendar of all tasks matching the keyword. Then, this resultant","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"     * calendar is then displayed using the ui handler specified.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        return ui.showCalendar(calendar.tasksMatchingKeyword(this.keyword));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zechajw":32}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     * Constructs a ListCommand","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    public ListCommand() {}","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"     * Displays the string representation of the specified calendar using the","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * specified ui handler.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        return ui.showCalendar(calendar);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":25}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.InvalidInputException;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import duke.utils.Text;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    private final String indexToMark;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Constructs a MarkCommand with the specified indexToMark","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @param indexToMark - index to mark as complete","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public MarkCommand(String indexToMark) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"        this.indexToMark \u003d indexToMark;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     * Marks the task in the specified calendar at indexToMark as complete. The","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"     * string indexToMark is converted into an Integer index and which is used","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * in the Calendar markAsDone method. Then, display the success message showing","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * that the command was executed successfully on the specified ui handler and save","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * the new state of the calendar to the file using the specified storage handler.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     * @throws InvalidInputException - if the indexToMark is invalid","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"            Integer index \u003d Integer.parseInt(indexToMark);","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"            calendar.markAsDone(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"            assert calendar.getTaskAtIndex(index).getIsComplete() : \"task is still marked as incomplete\";","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"            storage.save(calendar);","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"            return ui.showTaskComplete(calendar.taskStringAtIndex(index));","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"            throw new InvalidInputException(String.format(Text.TEXT_INVALID_LIST_INDEX,","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"                    calendar.numOfEntries(), Integer.parseInt(indexToMark)));","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"            throw new InvalidInputException(String.format(Text.TEXT_NON_INTEGER_LIST_INDEX, this.indexToMark));","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":53}},{"path":"src/main/java/duke/commands/RecurringAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Task;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"public abstract class RecurringAddCommand extends Command {","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    private final ArrayList\u003cTask\u003e recurringTasksToAdd;","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"     * Constructs a RecurringAddCommand with the specified list of","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * tasks to add","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @param recurringTasksToAdd - list of tasks to be added","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public RecurringAddCommand(ArrayList\u003cTask\u003e recurringTasksToAdd) {","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"        this.recurringTasksToAdd \u003d recurringTasksToAdd;","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     * Adds all the tasks specified in the recurringTasksToAdd ArrayList to the specified calendar.","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"     * Afterwards, diisplays a success message showing that the task has been successfully added","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * using the ui handler, and save the new version of the calendar to storage","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * @return success message if complete or error message if execution failed","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"            calendar.addAll(recurringTasksToAdd);","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"            storage.save(calendar);","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"            return ui.showAllTasksAdded(calendar.numOfEntries());","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"zechajw":42}},{"path":"src/main/java/duke/commands/RecurringEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Event;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class RecurringEventCommand extends RecurringAddCommand {","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"     * Constructs a RecurringEventCommand with the given parameters","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * @param event - title of the recurring event","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     * @param date - date of the first event","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     * @param interval - interval between recurrences","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"     * @param endDate - date that the recurrences end","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    public RecurringEventCommand(String event, String date, int interval, String endDate) {","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"        super(new Event(event, date, false).getRecurrences(interval, endDate));","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"zechajw":16}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Todo;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * Constructs a TodoCommand with the specified input","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     * @param input - the input used to create the Todo","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"        super(new Todo(input, false));","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    };","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":15}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.InvalidInputException;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import duke.utils.Text;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    private final String indexToUnmark;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Constructs an UnmarkCommand with the specified indexToUnmark","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @param indexToUnmark - index to mark as incomplete","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public UnmarkCommand(String indexToUnmark) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"        this.indexToUnmark \u003d indexToUnmark;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     * Marks the task in the specified calendar at indexToUnmark as incomplete. The string","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"     * indexToUnmark is converted into an Integer index which is used in the Calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * markAsNotDone method. Then, display the success message showing that the command","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * was executed successfully on the specified ui handler and save the new state of the","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * calendar to the file using the specified storage handler.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar used in the program","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * @param ui - the ui handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * @param storage - the storage handler for the program","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     * @throws InvalidInputException - if the indexToUnmark is invalid","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    public String execute(Calendar calendar, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"            Integer index \u003d Integer.parseInt(indexToUnmark);","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"            calendar.markAsNotDone(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"            assert calendar.getTaskAtIndex(index).getIsComplete() \u003d\u003d false : \"task is still marked as complete\";","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"            storage.save(calendar);","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"            return ui.showTaskIncomplete(calendar.taskStringAtIndex(index));","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"            throw new InvalidInputException(String.format(Text.TEXT_INVALID_LIST_INDEX,","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"                    calendar.numOfEntries(), Integer.parseInt(indexToUnmark)));","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"            throw new InvalidInputException(String.format(Text.TEXT_NON_INTEGER_LIST_INDEX, this.indexToUnmark));","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":53}},{"path":"src/main/java/duke/info/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"     * Constructs a new DukeException with str as its detail message","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"     * @param str - the detail message","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    public DukeException(String str) {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"        super(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":13}},{"path":"src/main/java/duke/info/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.utils.Text;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class InvalidCommandException extends InvalidInputException {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * Constructs an InvalidCommandException with the invalid command error","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     * from Text.java in the utils package.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"        super(Text.TEXT_INVALID_COMMAND_ERROR);","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":15}},{"path":"src/main/java/duke/info/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"     * Constructs an InvalidInputException with the specified","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"     * detail message","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * @param str - the detail message","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    public InvalidInputException(String str) {","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"        super(str);","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":14}},{"path":"src/main/java/duke/info/exception/NoPreviousSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.utils.Text;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class NoPreviousSaveException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * Constructs a NoPreviousSaveException with the loading error","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     * from Text.java in the duke.utils package","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    public NoPreviousSaveException() {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"        super(Text.TEXT_LOADING_ERROR);","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":15}},{"path":"src/main/java/duke/info/task/Calendar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.utils.Text;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"public class Calendar {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    private final ArrayList\u003cTask\u003e calendar;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"     * Constructs a Calendar object with an empty ArrayList in the calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    public Calendar() {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"        this.calendar \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * Constructs a Calendar object with the specified calendar in the input.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the ArrayList of tasks to construct the Calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public Calendar(ArrayList\u003cTask\u003e calendar) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        this.calendar \u003d calendar;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * Gets the Task at the specified index in the Calendar","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * @param indexToGet - the 1-based index of the Task to get","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * @return - the Task at the specified indexToGet","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    public Task getTaskAtIndex(int indexToGet) {","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        return calendar.get(indexToGet - 1);","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"     * Adds the task specified in taskToAdd to the ArrayList in calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"     * @param taskToAdd - the Task to be added to the Calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"    public void add(Task taskToAdd) {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"        calendar.add(taskToAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"     * Adds all the tasks in the specified ArrayList tasksToAdd to calendar","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"     * @param tasksToAdd - the ArrayList of Tasks to be added to the calendar","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"    public void addAll(ArrayList\u003cTask\u003e tasksToAdd) {","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        calendar.addAll(tasksToAdd);","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"     * Removes the task at the index specified by indexToRemove from the ArrayList","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"     * in calendar. The index is converted from 0-indexing in the ArrayList to a","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"     * natural 1-indexing","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"     * @param indexToRemove - the index of the task to be removed","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"    public void remove(int indexToRemove) {","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"        calendar.remove(indexToRemove - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"     * Marks the task at the index specified by indexToMark as complete from the","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"     * ArrayList in calendar. The index is converted from 0-indexing in the ArrayList to","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"     * a natural 1-indexing","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"     * @param indexToMark - the index of the task to be marked as complete","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"    public void markAsDone(int indexToMark) {","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"        calendar.get(indexToMark - 1).complete();","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"     * Marks the task at the index specified by indexToMark as incomplete from the","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"     * ArrayList in calendar. The index is converted from 0-indexing in the ArrayList to","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"     * a natural 1-indexing","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"     * @param indexToMark - the index of the task to be marked as incomplete","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"    public void markAsNotDone(int indexToMark) {","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"        calendar.get(indexToMark - 1).incomplete();","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"zechajw"},"content":"     * Returns the number of tasks currently in the calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"     * @return - the number of tasks currently in the calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"    public int numOfEntries() {","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":"        return this.calendar.size();","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"     * Returns the String representation of the task at the specified index","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"zechajw"},"content":"     * @param index - the index of the task to be retrieved","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"     * @return - the string representation of the task at index","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"zechajw"},"content":"    public String taskStringAtIndex(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"zechajw"},"content":"        return this.calendar.get(index - 1).toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"zechajw"},"content":"     * Returns a new Calendar with the tasks matching the specified keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"zechajw"},"content":"     * The method iterates through the calendar and adds all tasks matching the specified","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"zechajw"},"content":"     * keyword to a new Calendar. Each task is matched using the Task matchesKeyword method","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"zechajw"},"content":"     * @param keyword - the keyword to be matched","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"zechajw"},"content":"     * @return - a Calendar with all the tasks that match the given keyword","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"zechajw"},"content":"    public Calendar tasksMatchingKeyword(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"zechajw"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"zechajw"},"content":"        for (Task task: this.calendar) {","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"zechajw"},"content":"            if (task.matchesKeyword(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"zechajw"},"content":"                result.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"zechajw"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":"        return new Calendar(result);","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"zechajw"},"content":"     * Returns a save format representation of the task. The save format consists of a list","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"     * of the Calendar\u0027s tasks in the order that they are returned by an iterator. Adjacent","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"zechajw"},"content":"     * elements are separated by a line. Elements are converted to the appropriate save format","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"zechajw"},"content":"     * using the Task saveFormat method","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"zechajw"},"content":"     * @return - the save format representation of the calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"zechajw"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"zechajw"},"content":"        String product \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"zechajw"},"content":"        if (this.calendar.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"zechajw"},"content":"            product +\u003d this.calendar.get(0).saveFormat();","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"            return product;","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"zechajw"},"content":"        for (int i \u003d 0; i \u003c this.calendar.size(); i++) {","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"zechajw"},"content":"            product +\u003d this.calendar.get(i).saveFormat();","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"zechajw"},"content":"            product +\u003d \"\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"zechajw"},"content":"        return product;","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"     * Returns a string representation of this Calendar. The string representation consists","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"zechajw"},"content":"     * of a list of the Calendar\u0027s tasks in the order that they are returned by an iterator.","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"zechajw"},"content":"     * Adjacent elements are separated by a line and 1-indexed. Elements are converted to","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"zechajw"},"content":"     * strings using the Task toString method.","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"zechajw"},"content":"     * @return - the string representation of the calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":144,"author":{"gitId":"zechajw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":145,"author":{"gitId":"zechajw"},"content":"        if (calendar.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":146,"author":{"gitId":"zechajw"},"content":"            return Text.TEXT_EMPTY_LIST;","lastModifiedDate":"2022-01-21"},{"lineNumber":147,"author":{"gitId":"zechajw"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":148,"author":{"gitId":"zechajw"},"content":"            String product \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":149,"author":{"gitId":"zechajw"},"content":"            for (int i \u003d 0; i \u003c this.calendar.size() - 1; i++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":150,"author":{"gitId":"zechajw"},"content":"                product +\u003d String.format(\"%s: %s\\n\", i + 1, this.calendar.get(i).toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":151,"author":{"gitId":"zechajw"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":152,"author":{"gitId":"zechajw"},"content":"            product +\u003d String.format(\"%s: %s\", this.calendar.size(),","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"zechajw"},"content":"                    this.calendar.get(this.calendar.size() - 1).toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"zechajw"},"content":"            return product;","lastModifiedDate":"2022-01-21"},{"lineNumber":155,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":156,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":157,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":157}},{"path":"src/main/java/duke/info/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"     * Constructs a Deadline object with the specified deadline, date and isComplete boolean.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"     * @param deadline - the deadline string","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * @param date - the date of the deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     * @param isComplete - true if the deadline is complete","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    public Deadline(String deadline, String date, boolean isComplete) {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"        super(deadline, \"deadline\", isComplete, date);","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Returns the save format of the Deadline. The string contains the save format representation","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * of the task superclass, followed by the string representation of the date as obtained from","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * the getDateString of the superclass method delimited by a \"|\".","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * @return - the save format of the Deadline as a string","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        return super.saveFormat() + \"|\" + this.getDateString();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * Returns a representation of the Deadline. The string consists of the type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     * contained by \"[]\", the task description, followed by the date of the deadline as obtained","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"     * by the super.getDateString method.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"     * contained by \"()\"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * @return - a string representation of the Deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.getDateString());","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":37}},{"path":"src/main/java/duke/info/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"     * Constructs an Event object with the specified event, date, isComplete","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"     * @param event - the event to be added","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"     * @param date - the date of the event to be added","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"     * @param isComplete - whether the task is complete","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    public Event(String event, String date, boolean isComplete) {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"        super(event, \"event\", isComplete, date);","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * Returns an ArrayList of all recurrences of the Event at the specified interval until the specified endDate","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     * @param interval - interval between recurrences","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"     * @param endDate - endDate of recurrences","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"     * @return","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    public ArrayList\u003cTask\u003e getRecurrences(int interval, String endDate) {","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"        LocalDate start \u003d this.getDate();","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d LLL yyyy\");","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"        LocalDate end \u003d LocalDate.parse(endDate, dtf);","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        ArrayList\u003cTask\u003e recurringEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        recurringEvents.add(this);","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        String dateString \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        while (end.isAfter(start)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"            start \u003d start.plusDays(interval);","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"            dateString \u003d start.format(dtf);","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"            System.out.println(dateString);","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"            recurringEvents.add(new Event(this.getAction(), dateString, this.getIsComplete()));","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"            count++;","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"        return recurringEvents;","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"     * Returns the save format of the Event. The string contains the save format representation from","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"     * the task superclass, followed by the string representation of the date as obtained from the","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"     * getDateString of the superclass method delimited by a \"|\".","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"     * @return - the save format of the Event as a string","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"        return super.saveFormat() + \"|\" + this.getDateString();","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"     * Returns a string presentation of the Event. The string consists of the type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"     * contained by \"[]\", the task description, followed by the date of the Event as obtained","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"     * by the super.getDateString method.","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"     * @return - a string representation of the Event.","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.getDateString());","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":63}},{"path":"src/main/java/duke/info/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    private final String action;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    private final String type;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    private String dateString;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Constructor for an abstract Task uses the specified action, type and","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * isComplete boolean. The dateString and date is instantiated as null","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * @param action - the action of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * @param type - the type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * @param isComplete - whether the task is complete","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    Task(String action, String type, boolean isComplete) {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"        this.isComplete \u003d isComplete; // task added is not complete by default","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"        this.dateString \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        this.date \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * Constructor for an abstract Task with a specified date that uses the","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     * specified action, type, isComplete boolean and dateString. If the dateString","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     * can be parsed as a LocalDate, it will be saved as a LocalDate object. Otherwise,","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"     * it will be saved as a raw dateString.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"     * @param action - the action of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"     * @param type - the type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"     * @param isComplete - whether the task is complete","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"     * @param dateString - the string representation of the date of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"    Task(String action, String type, boolean isComplete, String dateString) {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d LLL yyyy\");","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"            this.date \u003d LocalDate.parse(dateString, dtf);","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"            this.dateString \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"            this.date \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"            this.dateString \u003d dateString;","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"     * Marks the task as complete by setting isComplete to true","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"    void complete() {","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"     * Marks the task as incomplete by setting isComplete to false","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"    void incomplete() {","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"     * Returns a save format representation of the task. To allow for easy parsing during","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"     * reloading, each field is delimited by a \u0027|\u0027.","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"     * @return - the save format representation of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"        return String.format(\"%s|%s|%s\", this.type, this.isComplete ? \"1\" : \"0\", this.action);","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"     * Returns a boolean value that is true if and only if the task is complete","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"     * @return true if isComplete is true and false otherwise","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"    public boolean getIsComplete() {","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"        return this.isComplete;","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"     * Returns a string presentation of the action in the Task as specified by action.","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":"     * @return - the string representation of the action required for the task","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"zechajw"},"content":"    public String getAction() {","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"        return this.action;","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"zechajw"},"content":"     * Returns a string representation of the type of the task as specified in type","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"zechajw"},"content":"     * @return - the string representation of the type of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"zechajw"},"content":"    public String getType() {","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"zechajw"},"content":"        return this.type;","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"zechajw"},"content":"     * Returns LocalDate representing the date of the event","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"zechajw"},"content":"     * @return - the LocalDate object representing the date","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"zechajw"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"zechajw"},"content":"        return this.date;","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":108,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"zechajw"},"content":"    /**j","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"zechajw"},"content":"     * Returns a string representation of the date of the task. If the date is saved as a","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"zechajw"},"content":"     * LocalDate object, it is returned as the format \"d MMM yyyy\". Otherwise the raw","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"zechajw"},"content":"     * dateString is returned","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":"     * @return - the string representation of the date","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"zechajw"},"content":"    public String getDateString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"zechajw"},"content":"        if (this.date !\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"zechajw"},"content":"            return this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"zechajw"},"content":"            return this.dateString;","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"zechajw"},"content":"     * Returns true if and only if the task matches the specified keyword. The task","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"zechajw"},"content":"     * is considered as matching the keyword if its action contains the keyword as","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"zechajw"},"content":"     * determined by the String.contains method.","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"     * @param keyword - the keyword to be used in the matching","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"zechajw"},"content":"     * @return true if the keyword matches, false otherwise","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"zechajw"},"content":"    public boolean matchesKeyword(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"zechajw"},"content":"        return this.action.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"zechajw"},"content":"     * Returns a string representation of this task. The string consists of a \"[]\" if the","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"zechajw"},"content":"     * task is incomplete or \"[X]\" if the task is complete, followed by the specified action","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"     * of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"zechajw"},"content":"     * @return - a string representation of the Task","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":141,"author":{"gitId":"zechajw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":142,"author":{"gitId":"zechajw"},"content":"        String product \u003d \"\";","lastModifiedDate":"2022-01-17"},{"lineNumber":143,"author":{"gitId":"zechajw"},"content":"        if (isComplete) {","lastModifiedDate":"2022-01-21"},{"lineNumber":144,"author":{"gitId":"zechajw"},"content":"            product +\u003d \"[X] \";","lastModifiedDate":"2022-01-17"},{"lineNumber":145,"author":{"gitId":"zechajw"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":146,"author":{"gitId":"zechajw"},"content":"            product +\u003d \"[ ] \";","lastModifiedDate":"2022-01-17"},{"lineNumber":147,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":148,"author":{"gitId":"zechajw"},"content":"        product +\u003d this.action;","lastModifiedDate":"2022-01-17"},{"lineNumber":149,"author":{"gitId":"zechajw"},"content":"        return product;","lastModifiedDate":"2022-01-17"},{"lineNumber":150,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":151,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"zechajw":151}},{"path":"src/main/java/duke/info/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.info.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"     * Constructs a Todo with the specified todo, isComplete information","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"     * @param todo - the details of the todo to be added","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"     * @param isComplete - true if the task is already complete","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    public Todo(String todo, boolean isComplete) {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"        super(todo, \"todo\", isComplete);","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"     * Returns a string representation of the Todo. The string consists of \"[T]\" to represent","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * the Todo task type, followed by the details of the todo.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @return - a string representation of the Todo.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.parser;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import duke.commands.RecurringEventCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.InvalidCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"public class Parser {","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    Parser() {}","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     * Returns a command as specified by the specified input fullCommand. This command","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"     * takes in a string line from I/O and converts it into a command depending on the","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"     * leading identifier keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     * @param fullCommand - string command to be parsed","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"     * @return - Command from specified fullCommand","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * @throws InvalidCommandException - if the String cannot be parsed into a Command","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    public static Command parse(String fullCommand) throws InvalidCommandException {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        String[] splitCommand \u003d fullCommand.split(\" \", 2); // splits the first word from the command","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        String command \u003d splitCommand[0];","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"        if (splitCommand.length \u003e 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"            input \u003d splitCommand[1];","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"            input \u003d input.trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        switch(command) {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        case \"recurring\":","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"            // format: recurring event hello /at 2 Dec 2019 /interval 7 /ends 1 Jan 2021","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"            String[] splitEndDate \u003d splitCommand[1].split(\" /ends \", 2);","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"            String endDate \u003d splitEndDate[1];","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"            String[] splitInterval \u003d splitEndDate[0].split(\" /interval \", 2);","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"            int interval \u003d Integer.valueOf(splitInterval[1]);","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"            String[] splitDate \u003d splitInterval[0].split(\" /at \", 2);","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"            String date \u003d splitDate[1];","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"            String[] splitAction \u003d splitDate[0].split(\" \", 2);","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"            String event \u003d splitAction[1];","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"            return new RecurringEventCommand(event, date, interval, endDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"        case \"list\":","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"            String[] splitDeadline \u003d input.split(\" /by \", 2); // splits the action from the date","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"            return new DeadlineCommand(splitDeadline[0], splitDeadline[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"        case \"event\":","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"            String[] splitEvent \u003d input.split(\" /at \", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"            return new EventCommand(splitEvent[0], splitEvent[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"        case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"            return new FindCommand(input);","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"        default:","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":73}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.io.File;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import duke.info.exception.NoPreviousSaveException;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Event;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"public class Storage {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    private final File file;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     * Constructs a Storage object using the save file as specified","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"     * by filePath. If no previous file exists, a new file will be created","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * at the file location.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     * @param filePath - the path to the file with the previous save","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"     * Returns the Task from the specified fileEntry. This method converts","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"     * a fileEntry in the save file into a Task that can be used by Duke","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"     * @param fileEntry - the file entry with the saved task","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"     * @return - Task represented by the file entry","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"     * @throws DukeException - if there was an error with parsing the task","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    Task parseTask(String fileEntry) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"        String[] splitEntry \u003d fileEntry.split(\"\\\\|\");","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"        String type \u003d splitEntry[0];","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"        String action \u003d splitEntry[2];","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"        boolean isComplete \u003d splitEntry[1].equals(\"0\") ? false : true;","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"        switch(type) {","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"            return new Todo(action, isComplete);","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"            String deadlineDate \u003d splitEntry[3];","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"            return new Deadline(action, deadlineDate, isComplete);","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"        case \"event\":","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"            String eventDate \u003d splitEntry[3];","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"            return new Event(action, eventDate, isComplete);","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"        default:","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"            throw new DukeException(\"Error while parsing save file\");","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"     * Returns an ArrayList of tasks that is loaded from the File object.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"     * This method reads the File from the File attribute and parses each","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"     * task using the parseTask() method. The parsed Task is added into an","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"     * ArrayList and returned by the method.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"     * @return - an ArrayList of Tasks from the save file","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"     * @throws NoPreviousSaveException - if there is no previous save file","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"    public ArrayList\u003cTask\u003e load() throws NoPreviousSaveException {","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"                taskList.add(parseTask(scanner.nextLine()));","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"            return taskList;","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"     * Saves a file to persistent memory. Saves the specified calendar","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"     * to the File as specified by the filePath in the constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the Calendar to be saved to a file","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":"     * @throws IOException - if there was an error saving file using I/O","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"zechajw"},"content":"    public void save(Calendar calendar) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"        fw.write(calendar.saveFormat());","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"zechajw"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":94}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.ui;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Calendar;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Task;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import duke.utils.Text;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"public class Ui {","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"     * Constructs an Ui object with a new Scanner","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"     * that takes input from System.in","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    public Ui() {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"     * Displays the welcome message specified in","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"     * Text.java in the duke.utils package","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        System.out.println(Text.TEXT_WELCOME);","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * Returns the next line of input from","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     * the Scanner object","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     * @return the String command from I/O","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"     * Prints the text divider as specified in","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"     * Text.java in the duke.utils package","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"    public void showLine() {","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"        System.out.println(Text.TEXT_DIVIDER);","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"     * Returns the loading error as specified in","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"     * Text.java in the duke.utils package","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"        showLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"        System.out.println(Text.TEXT_LOADING_ERROR);","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"        showLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"     * Returns the error message specified by errorMessage","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"     * @param errorMessage - the error message to print","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"     * @return the error message","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"     * Returns the goodbye message","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"     * @return the goodbye message","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"    public String showGoodbye() {","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"        return Text.TEXT_GOODBYE_MESSAGE;","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"     * Returns the toString() format of the specified calendar","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"     * object","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"     * @param calendar - the calendar to be printed","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"     * @return string format of calendar to be printed","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"    public String showCalendar(Calendar calendar) {","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"        return calendar.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"     * Returns the success message indicating the task was","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":"     * successfully added to the calendar. Also displays","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"     * the total number of tasks in the calendar after the","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"zechajw"},"content":"     * addition.","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"     * @param addedTask - the task that was added","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"     * @param numOfTasks - the total number of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"zechajw"},"content":"     * @return success message showing task was added","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"zechajw"},"content":"    public String showTaskAdded(Task addedTask, int numOfTasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"zechajw"},"content":"        return String.format(Text.TEXT_TASK_ADDED, addedTask, numOfTasks);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"zechajw"},"content":"     * Returns the success message indicating all tasks in the list","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"zechajw"},"content":"     * were successfully added to the calendar. Also displays the total","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"zechajw"},"content":"     * number of tasks in the calendar after the additions","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"zechajw"},"content":"     * @param numOfTasks - the total number of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"zechajw"},"content":"     * @return success message showing all tasks were added","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"zechajw"},"content":"    public String showAllTasksAdded(int numOfTasks) {","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"zechajw"},"content":"        return String.format(Text.TEXT_ALL_TASKS_ADDED, numOfTasks);","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":108,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"zechajw"},"content":"     * Returns the success message indicating the specified","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"zechajw"},"content":"     * task was marked as complete in the calendar.","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"zechajw"},"content":"     * @param taskString - toString() of the task marked complete","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":"     * @return success message showing task was marked as complete","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"zechajw"},"content":"    public String showTaskComplete(String taskString) {","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"zechajw"},"content":"        return String.format(Text.TEXT_MARKED, taskString);","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"zechajw"},"content":"     * Returns the success message indicating the specified task","lastModifiedDate":"2022-02-13"},{"lineNumber":121,"author":{"gitId":"zechajw"},"content":"     * was marked as yet to be completed in the calendar.","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"zechajw"},"content":"     * @param taskString - toString() of the task marked incomplete","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"zechajw"},"content":"     * @return success message showing task was marked as incomplete","lastModifiedDate":"2022-02-13"},{"lineNumber":124,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"zechajw"},"content":"    public String showTaskIncomplete(String taskString) {","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"zechajw"},"content":"        return String.format(Text.TEXT_UNMARKED, taskString);","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"zechajw"},"content":"     * Prints the success message indicating the specified task has","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"zechajw"},"content":"     * been deleted from the calendar.","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"zechajw"},"content":"     * @param taskString - toString() of the task that was deleted","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"zechajw"},"content":"     * @return success message showing task was deleted","lastModifiedDate":"2022-02-13"},{"lineNumber":134,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"zechajw"},"content":"    public String showTaskDeleted(String taskString) {","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"zechajw"},"content":"        return String.format(Text.TEXT_DELETED, taskString);","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":138}},{"path":"src/main/java/duke/utils/Text.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package duke.utils;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"public class Text {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_WELCOME \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_LOADING_ERROR \u003d \"No previous calendar found... Creating new save file\";","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_INVALID_COMMAND_ERROR \u003d \"Sorry! I don\u0027t know what that means :(\"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"            + \"Please type a valid command!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_GOODBYE_MESSAGE \u003d \"Bye! Hope to see you again soon... :)\";","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_EMPTY_LIST \u003d \"Sorry! There are no items in the list as of now! :(\";","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_INVALID_LIST_INDEX \u003d \"Sorry! This list only has %s values but\"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"            + \" the input index for this command was %s\";","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_NON_INTEGER_LIST_INDEX \u003d \"Sorry! The list index should be an integer value but\"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"            + \" the input value for this command was %s\";","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_TASK_ADDED \u003d \"Got it! I\u0027ve added this task:\\n   %s\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            + \"Now you have %s tasks in the list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_ALL_TASKS_ADDED \u003d \"Got it! I\u0027ve added all the recurring tasks to the calendar\\n\"","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"            + \"Now you have %s tasks in the list.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_MARKED \u003d \"Nice! I\u0027ve marked this task as complete:\\n   %s\";","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_UNMARKED \u003d \"Ok!! I\u0027ve marked this task as incomplete:\\n   %s\";","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    public static final String TEXT_DELETED \u003d \"Alright. I\u0027ve deleted this task:\\n   %s\";","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zechajw":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"zechajw":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"zechajw":19}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import duke.info.task.Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Tests the constructor for creating a Todo with a custom description, and checks if it has the type todo\"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public void constructorTest() {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"        Todo testTodo \u003d new Todo(\"Finish CS2103T Assignment\", false);","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        assertEquals(testTodo.getAction(), \"Finish CS2103T Assignment\");","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"        assertEquals(testTodo.getType(), \"todo\");","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"     * Tests if the toString format is correct for the Todo created","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    public void stringTest() {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        Todo testTodo \u003d new Todo(\"Finish CS2103T Assignment\", false);","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        assertEquals(testTodo.toString(), \"[T][ ] Finish CS2103T Assignment\");","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"zechajw":33}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"event|0|meeting|8 Mar 2019","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"zechajw":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"todo task 1","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"todo task 2","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"event tswift concert /at 21st Jan 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"deadline assignment /by 20 Jan 2359","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"mark assignment","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"mark 4","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"mark 7","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zechajw":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zechajw":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zechajw":1,"-":37}}]
