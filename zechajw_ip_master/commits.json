{"authorDailyContributionsMap":{"zechajw":[{"date":"2022-01-16","commitResults":[{"hash":"cfec524d6c13803fd7f0a84f4f7dd656cf318015","messageTitle":"Add .class files to gitignore, add greet echo exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":6}}}]},{"date":"2022-01-17","commitResults":[{"hash":"b2c550eb130a70360d5ca466d51e87ea5662b725","messageTitle":"Add Calendar, Task for Add, List functionality","messageBody":"","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":1}}},{"hash":"74e3d42c425c05dfe37f8db2f1122441ac902576","messageTitle":"Add mark, unmark functionality for Level 3","messageBody":"To ensure that there is no invalid input, command checks for if the\nnumber is within range of list and if the value input after\n\"mark/unmark\" is an integer value\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":8}}}]},{"date":"2022-01-19","commitResults":[{"hash":"ad8faf2ec903b3c8539ebbc728f8e3e86023f02c","messageTitle":"Split tasks into Deadline, Event, Todo for Level-4","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":28}}},{"hash":"77fb3513650af9d54df1c2823b7d55d024e6f2fc","messageTitle":"Added Exception Handling and readded mark/unmark","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":31}}},{"hash":"182055c877ed96d74f2ed5990c2b539c5720bfdb","messageTitle":"Add delete function with exception handling","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}}]},{"date":"2022-01-20","commitResults":[{"hash":"5218aeb4f9a9132a902792a4cbc0468f47d734a7","messageTitle":"Automated Text UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0}}}]},{"date":"2022-01-21","commitResults":[{"hash":"dff8cbe6d5a7ed921062d7327b565e8c431e9272","messageTitle":"Organize previous code into packages","messageBody":"Previously, the bulk of the code resided in the main Duke driver class,\nand OOP was only employed to model the Calendar and Tasks (Deadline,\nTodo, Event).\n\nTo better to adhere to OOP principles for this software engineering\nproject. The code was refactored into different packages. All the code\nis in the overarching duke package, and each subpackage aims to serve a\nspecific function for the program. E.g. duke.info stores all the\ninformation required for the program (Calendar, Tasks, Exceptions) and\nthe duke.ui package handles the reading and writing from user input.\n\nLet\u0027s\n* Refactor the code into separate packages for better organization\n* Use parent abstract classes to abstract out common functionalities\n* Use a Text file to store all standard output messages\n","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":566,"deletions":228},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"20017391ed52771ff448a5ac3518db994993ea3e","messageTitle":"Fix bug in \"unmark\" command","messageBody":"Previously, there was a bug where the unmark command did not mark the\njob as incomplete, but instead marked the job as complete due to an\nerroneous call of markAsDone() instead of markAsNotDone().\n\nThis commit changes the method call to properly reflect the action of\nmarking the task as incomplete.\n\nLet\u0027s\n* Fix the unmark command to properly carry out the desired functionality\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2022-01-22","commitResults":[{"hash":"c3cf1ce4d7a5d6d1646224e8ca8d514b6af4b1ec","messageTitle":"Add save functionality when Calendar chanes","messageBody":"Previously, the list of tasks in the Calendar was deleted when the\nprogram exits. This meant that the user would lose all the information\nabout the tasks after each run of the program.\n\nTo make the usage of the program more meaningful, a save functionality\nwas added that saves the current list of tasks to \"tasks.txt\" in the\nmain program folder whenever the task list is updated. This makes the\nprogram more meaningful to use, as there is persistent information that\nusers can use between each program run.\n\nLet\u0027s\n* Add a save function to allow users to keep their progress\n* Add a load function to automatically load a previous save on startup\n* Use a \"tasks.txt\" file in the main directory to store progress\n","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":81,"deletions":18}}}]},{"date":"2022-01-28","commitResults":[{"hash":"96217debf288ee15065d784776e11aac0bd30df3","messageTitle":"Add Date functionality to Duke","messageBody":"Currently, dates are stored merely as strings in each Task. This means\nthat the dates cannot be manipulated in a meaningful way and prevents\nany further improvement to the date functionality (such as filtering\ntasks by date)\n\nTo make the date formatting more useful, the date attribute now utilizes\nthe LocalDate library to parse dates. When a date is input, the Task()\nconstructor will attempt to parse it into a LocalDate format. If the\ndate cannot be parsed, it will be treated as a simple string.\n\nLets\n* Use the LocalDate library to allow dates to be utilized more\n  functionally\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":35,"deletions":13}}},{"hash":"bbac5b32605bf670cbd81d1ecc9cb76bd2ada768","messageTitle":"Add Find Functionality to Duke","messageBody":"Currently, the list of tasks can only be shown statically, which means\nthat as the list of tasks scale up and there are a large amount of\ntasks, it would be difficult for a user to search for a specific task or\nany tasks matching a certain criteria.\n\nTo make the calendar more useful, FindCommand is added and the user can\ninput \"find \u003ckeyword\u003e\" to list all tasks that match that particular\nkeyword.\n\nLets\n* Add a find function to allow users to find tasks matching a keyword\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":2}}},{"hash":"35dbb932a4a9bb27ea9f7c61f439b792aa1735dd","messageTitle":"Add JavaDocs documentation to code","messageBody":"Currently, there is no documentation for the codebase. This makes it\ndifficult for other developers to contribute to the project or to fix\nbugs related to the codebase in the future.\n\nTo make the codebase more informative, JavaDocs documentation has been\nadded to describe each method and ease future development of the\ncodebase\n\nLets\n* Add JavaDocs documentation to all methods in the codebase\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":426,"deletions":21}}}]},{"date":"2022-01-29","commitResults":[{"hash":"b69a827b25d1acbfbd95f804b8fec051c6e6149b","messageTitle":"Add JUnit tests for Todo","messageBody":"Currently, there are no unit tests for the classes in the package. This\nmeans that there is no confirmation that any of the classes is working\nas intended, which might result in regression bugs in the future when\nthe code is extended.\n\nTo test the codebase, JUnit tests for Todo was added to check that the\nmethods in the Todo class are working as intended.\n\nLets\n* Add preliminary JUNit tests for the Todo class\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}}]},{"date":"2022-02-06","commitResults":[{"hash":"eac4fed3feef529e66a05f33e316eeef12ab3c53","messageTitle":"Add Checkstyle and gradle support","messageBody":"","tags":["A-Gradle","A-Checkstyle"],"fileTypesAndContributionMap":{"java":{"insertions":136,"deletions":92}}},{"hash":"4ccc63aef3de05a6020d46fd3073d1cc105b88ba","messageTitle":"Added Duke UI","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":208,"deletions":50}}}]},{"date":"2022-02-12","commitResults":[{"hash":"2e73b2421888d2333974e27298256d4b74d56d2e","messageTitle":"Add Java Assertions","messageBody":"Currently, there are not assertions for the methods in the package. This\nmeans that the integrity of the code is not checked as the code runs,\nand there could be unintended bugs at various points in the code. This\nmight result in regression bugs in the future when the code is extended.\n\nTo test the codebase, Java assertions were added at various points to\ncheck that the methods are working as intended.\n\nLets\n* Add assertions to ensure that the code is working at various points\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}}]},{"date":"2022-02-13","commitResults":[{"hash":"0d1723372503123cfa3462fb11564027c3cca972","messageTitle":"Added Recurring Events functionality","messageBody":"Currently, there is no support for recurring event functionality in\nDuke. However, users might want to schedule an event that recurs at a\nspecific interval (interval of 7 days). The lack of this feature would\nmean that users would have to manually calculate and input the events\none-by-one until the desired effect is achieved.\n\nUsing the LocalDate feature, users can now use the \"recurring event\"\nfunctionality to add a recurring event to their Calendar. The command\ntakes the form \"recurring event \u003caction\u003e /at \u003cdate\u003e /interval \u003cnumber\u003e\n/ends \u003cend date\u003e. Each parameter is delimited by the appropriate /label\nto separate each input for easier parsing.\n\nLets\n* Add a preliminary recurring event functionality\n","tags":["BCD-Extension","A-FullCommitMessage","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":151,"deletions":17}}}]}]},"authorFileTypeContributionMap":{"zechajw":{"java":1520,"md":0,"fxml":35,"sh":1,"bat":1,"gradle":15,"txt":16}},"authorContributionVariance":{"zechajw":35965.71},"authorDisplayNameMap":{"zechajw":"CS2103T-W13-4 ZECH.. WEN"}}
