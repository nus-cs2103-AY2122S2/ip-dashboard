{"authorDailyContributionsMap":{"zhongfu":[{"date":"2022-01-19","commitResults":[{"hash":"bdba727f9224d7e7cb9f22636b04fb9b222cdb66","messageTitle":"feat: Duke Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":10}}},{"hash":"489e4592b6c20b59c8f4cade180f0f173c152ce4","messageTitle":"feat: Duke Level-2","messageBody":"","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}}]},{"date":"2022-01-20","commitResults":[{"hash":"a8ee8da038c401547135f349b0bb362efbd7f801","messageTitle":"fix: use return (from `main()`) instead of System.exit to silence linter","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"0291e5b402217afa014ced41cbe78ada3a4e2ddd","messageTitle":"refactor: use generics for enumerateList param","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":3}}},{"hash":"5aefd8a0f65b304b69a41140d9e0bf6c2c0d9ba8","messageTitle":"feat: represent tasks as Task objects","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":4}}},{"hash":"78e89efc90706bdb0a4f47e0fba38e5ff227726c","messageTitle":"style: fix formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":29}}},{"hash":"7542f524b37d337ce76ded48a36d30c75e4a63e6","messageTitle":"refactor: add single-line dialog method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"65adcc552d97b439ffee47f906e946cb767473df","messageTitle":"feat: mark tasks as done or undone","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":1}}},{"hash":"4651ea7f094f41a3b6edf2755e97241bb493c07b","messageTitle":"feat: add informative messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2}}},{"hash":"135fae2e24eabff626d4fd1d4018542359165425","messageTitle":"feat: users have to add tasks explicitly now","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}},{"hash":"40c71553be9e970b4b9bdffb86d65a5ee17bc378","messageTitle":"feat: add new task types (deadline, event, todo)","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":6}}},{"hash":"cbe25c4675039a79e2708f772e7f2044ed997aaa","messageTitle":"feat: add deadline/todo commands to chatbot","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":4}}},{"hash":"19054388a9e6dfd9364867292797f3056f1bd677","messageTitle":"test: add simple tests, update gitignore","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":25,"deletions":0},"sh":{"insertions":3,"deletions":3}}},{"hash":"de23b51e6e1eef6a3f9d1b78b97facd8d2d35f08","messageTitle":"fix: ignore surrounding whitespace when parsing task arg strings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"656bb428457165af2572e3976fe9c4a4799bb273","messageTitle":"feat: warn if task name or time is empty","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":5}}},{"hash":"ce71cf138332eebb9fb5b6dc1150df0661006be8","messageTitle":"feat: add generic DukeException for... unexpected input?","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":73}}},{"hash":"7ab5d9f3c8a8941eea51d7a72c4f9e181f650b5b","messageTitle":"refactor: remove unreachable if-branch","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":4}}},{"hash":"e875f8e06f2acd4e3f6da55fb52e6af32c0ef488","messageTitle":"feat: add delete command","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":8}}},{"hash":"54dd0377d9c4748b1acb11290752ca9dde6da754","messageTitle":"tests: update text-ui-test","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"1684e26e5d370721ab3f61ef435b10b2fb234482","messageTitle":"fix: split lines in dialog(String) so that message will be indented properly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2022-01-25","commitResults":[{"hash":"d0f6218d2f1997447fabb11b8603ad66f80e7e87","messageTitle":"refactor: types into new package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":4}}}]},{"date":"2022-01-26","commitResults":[{"hash":"d0aa09ff4c1d167f023880a68559698b2886d555","messageTitle":"feat: load/save tasks","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":8}}},{"hash":"6aaaacfa22097f9a79acb2c30ad0b7dd67d77a84","messageTitle":"feat: use LocalDateTime instead of Strings for dates","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":12}}},{"hash":"6bc24693aec7216049444634d98e5be02f8ed359","messageTitle":"fix: allow classes from java.time to be deserialized","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"22eb4e27d30233211bbb3c75e226603044e53f6f","messageTitle":"refactor: Storage as non-static class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":36},"md":{"insertions":2,"deletions":0}}},{"hash":"942c2b2502c0485397927ac499b273667d95146d","messageTitle":"refactor: task list as non-static class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":51}}},{"hash":"7079dab0bd65aa477a01264a7eee68e4f9e08516","messageTitle":"refactor: chatbot task types -\u003e chatbot.types.tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"e1dd8aa52164b9c2932d4b8625761f680d6d818a","messageTitle":"fix: missing (+ extra) import in TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"a954959cd5a7e7a612f51167c9d8c13c63dfba28","messageTitle":"refactor: parser as separate class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":170,"deletions":68}}},{"hash":"e02a3cf2b5f8482096e431493bc6e73494991233","messageTitle":"refactor: output stuff to separate class i know it says UserInterface even though it\u0027s only used to print stuff out, i promise i\u0027ll fix it soon^tm","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":39}}},{"hash":"81ff273ba15aaf56773aaae2c33ab80487171e39","messageTitle":"refactor: Duke as non-static class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":46}}}]},{"date":"2022-01-30","commitResults":[{"hash":"771dc9597d3181e180e22516c5d45dc32848df85","messageTitle":"refactor: move Parser into UserInterface","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":7}}},{"hash":"e41a2ebe62e50748a077a75e7263240065a91849","messageTitle":"refactor: move other ui-related classes into chatbot.types.ui","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":31}}},{"hash":"e4ed47345d1639455d01a2c2328f2631983d56ce","messageTitle":"fix(parser): strip positional args","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"fcd07abdd947af6325a0a1bc14841d89f83d269d","messageTitle":"feat(types/tasks): add equals(), hashCode()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":2}}},{"hash":"f2696664915e903420b3e1c4d60d349693c2c930","messageTitle":"fix(parser): make datetime resolver stricter (e.g. reject invalid dates like 30 Feb 2021)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":5}}},{"hash":"a9229f14397e607998436173c8694255c79af0f9","messageTitle":"tests: add tests for Storage and Parser","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":172,"deletions":0}}}]},{"date":"2022-02-02","commitResults":[{"hash":"71834011e268fa585fdd32022ba9f7d6c30a1508","messageTitle":"build: add gradle","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":25,"deletions":0}}},{"hash":"c0d1844262aa1bc38c6b483905f4cc207ba9b60a","messageTitle":"fix: add @Override decorator for toString()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2022-02-03","commitResults":[{"hash":"6416a1cae254049961ff7d0718e05e42f77e92e4","messageTitle":"docs: add/improve javadocs","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":317,"deletions":3}}},{"hash":"0dc73c2562f328bb5aa96beaa64cde91724f61a3","messageTitle":"style: fix style to match Java Coding Standards","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":170,"deletions":149}}},{"hash":"e9991e5d25f922b6c3aaee67c4c608407fd88bb9","messageTitle":"Add find feature for searching tasks","messageBody":"","tags":["Level-9","A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"8966c0ace818c8148f7f53260b9626b7b7f1da8e","messageTitle":"Add JUnit deps to Gradle, remove JUnit 4 usage","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":4},"java":{"insertions":19,"deletions":17}}},{"hash":"d72a7c4a17d767dc886bee35222ffe08908d8ba3","messageTitle":"Add Checkstyle to Gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":10}}},{"hash":"a7255e69f022d62941b46073a74131a4f87e26ae","messageTitle":"Remove unused fields, imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"b1d8eafcb8a8797aa1206c60ae729e513e587484","messageTitle":"Fix trailing whitespaces","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":37}}}]},{"date":"2022-02-07","commitResults":[{"hash":"272b06035b3bcff46369970426afe307e98af560","messageTitle":"Add Storage.save() that uses varargs","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}}]},{"date":"2022-02-13","commitResults":[{"hash":"6b70dcfd82474c3025126bc7cc4667c7602e5081","messageTitle":"Add find command to help message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"6e2a7d55dbfbe5244ceea04eb4a599d16f5513a4","messageTitle":"Refactor Duke to decouple chatbot logic and UI","messageBody":"Duke logic is tightly coupled to UI and makes assumptions about the\nimplementation details of the UI class (e.g. that it behaves like a\nterminal, or that it can block and wait for user input).\n\nThis makes implementing other types of user interfaces (e.g. desktop\nGUIs or web UIs) more cumbersome than necessary, such as displaying\ndifferent types of messages in different styles.\n\nRepresenting the input/output to/from the chatbot logic as abstract\nmessages allows us to accomodate a larger variety of behaviors and\nquirks for different UIs, and possibly easily expand the types of\nmessages that can be displayed in different styles in the future.\n\nRefactoring chatbot logic out into a discrete class also allows us to\nadd support for different types of UIs with relative ease, and will\nfacilitate easier testing (as we can test the chatbot logic separately\nfrom the UI logic).\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":353,"deletions":216}}}]},{"date":"2022-02-14","commitResults":[{"hash":"64a592f942f50187f8212fc92710cc5bf4dc11fe","messageTitle":"Implement rudimentary GUI for Duke","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":30,"deletions":0},"java":{"insertions":209,"deletions":4}}},{"hash":"f02cfb3e419e96ebad19763159e2eb3e9bcfeb37","messageTitle":"Remove obsolete TUI test files","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":28},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":0,"deletions":38}}},{"hash":"daa057263e9cdf0a6de05940fffc0939617d9e6f","messageTitle":"Add some assertions to validate application state","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"cb315246d94d63b58448276768ddc55e20169e45","messageTitle":"Remove unnecessary imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":5}}},{"hash":"60f9808b3ca6a769f26ef42b7a4fda3d35ffadfa","messageTitle":"Decrease scope for methods and constructors","messageBody":"Some of them have an unnecessarily wide scope, so we\u0027re reducing them\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"193e5d883e74001f93766b90f43cee3dce917944","messageTitle":"Add and update javadoc comments; minor style fixes","messageBody":"Some newly refactored and/or added methods and\nconstructors are missing javadoc comments.\n\nStyle fixes are minor, e.g. extra lines removed, undescriptive\nnames changed\n","fileTypesAndContributionMap":{"java":{"insertions":166,"deletions":31}}}]},{"date":"2022-02-15","commitResults":[{"hash":"c931d31c2c781fa044c917cc8d5b7a0120a74494","messageTitle":"Fix javadocs style issues","messageBody":"- subject-verb agreement (print -\u003e prints)\n- trailing whitespace\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"9185ad3b4f222e6f75b0f6f3be1c1d9090bdad35","messageTitle":"Update ParserTest to avoid testing private methods","messageBody":"ParserTest tests parseArgString(), which was made private recently.\n\nWe can still test it indirectly through parseInput() (which also makes\nmore sense, since parseInput() is the bit that\u0027ll actually be used by\nmethods outside of Parser)\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":18}}},{"hash":"993204c6f8205fbbd5524cd71b72d2b2bdb78321","messageTitle":"Reduce complexity of Duke handleInput() method","messageBody":"It\u0027s kind of too complicated, but I\u0027m also a little lazy, so I\u0027m just\ngonna break it up into multiple methods for each command.\n\nThey all have similar interfaces though, so if we do end up wanting to\nmake it Better^tm, then it shouldn\u0027t be too difficult.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":145,"deletions":101}}},{"hash":"bd56ace38cf2b880ba1febd002b986dfed9be78e","messageTitle":"Add shorter aliases for todo/event/deadline","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":6}}},{"hash":"54d61f8e2697b97e32dbf12edfc70373d9a452a4","messageTitle":"Remove trailing whitespace","messageBody":"Those don\u0027t conform to the Java Code Conventions.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}}]},{"date":"2022-02-21","commitResults":[{"hash":"9931d3a8793b2a3a593afccabe255574e998d910","messageTitle":"Wrap words in message bubbles","messageBody":"Some messages can be long enough that the resulting message bubble\nexceeds the width of the window.\n\nAn obvious fix would have been to enable word wrapping. However, the\nold MessageBubble implementation did not have the ability to resize\ndynamically, as the sizes were determined on creation (based on the\nbounds of the text).\n\nWe reimplement MessageBubble to allow them to resize dynamically,\nwhich also allows us to wrap (and... unwrap?) words easily.\n","fileTypesAndContributionMap":{"fxml":{"insertions":37,"deletions":1},"java":{"insertions":61,"deletions":91}}},{"hash":"af3cdd1ac95e43c4d8a7bfb24ec5d14cd00d0cfd","messageTitle":"Add title, enforce min height/width","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"0543b207151eba32b06b7f03512c09df479d845d","messageTitle":"Wrap words in \"system\" messages too","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"d3e006bbfb63c2d923f81e9d7522d5cd434d319f","messageTitle":"Use Serializable instead of Object for Storage.save()","messageBody":"We can only take in instances that implement Serializable, so specifying\nObject instead doesn\u0027t make much sense\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"576ec6f480abd6b4577423f18ea63c18065c66ad","messageTitle":"Add user guide and screenshot","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":159,"deletions":14}}},{"hash":"ba31bf1acf6a170cbf749dfb6d2741bdaaf3fb40","messageTitle":"Update user guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":0}}},{"hash":"722af402f7a046254cd30b00a651833950b0654d","messageTitle":"Add command input history","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":68,"deletions":0}}},{"hash":"fd5c0f145bfbaf99066e15c451655417fe57bf48","messageTitle":"Make StorageTest work again","messageBody":"I think I broke it in d3e006b.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"44b9d56b91b9717a1430040d1b5e43d137069ed5","messageTitle":"Bump version to 0.2","messageBody":"","tags":["A-Release","0.2"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0}}},{"hash":"e295fb79ff71fdce7d19f49e37c43a0efd8c87a4","messageTitle":"Ignore command submission if input field is empty","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"55250c59e0c2f4f353efd6e6b0c78a042b7b0d6e","messageTitle":"Submit command only if text field is in focus","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"zhongfu":{"java":1876,"md":163,"fxml":66,"sh":0,"bat":0,"gradle":64,"txt":0}},"authorContributionVariance":{"zhongfu":61585.527},"authorDisplayNameMap":{"zhongfu":"CS2103T-T11-4 LI Z..G FU"}}
