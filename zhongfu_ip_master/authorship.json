[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"plugins {","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"repositories {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"    mavenCentral()","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"apply plugin: \u0027java\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"sourceCompatibility \u003d 1.11","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"targetCompatibility \u003d 1.11","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"jar {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"    manifest {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"        attributes \u0027Main-Class\u0027: \u0027li.zhongfu.cs2103.chatbot.Duke\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"checkstyle {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"dependencies {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"    testImplementation(\u0027org.junit.jupiter:junit-jupiter-api:5.8.2\u0027)","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"    testRuntimeOnly(\u0027org.junit.jupiter:junit-jupiter-engine:5.8.2\u0027)","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"test {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zhongfu":32}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"/*","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":" * in the user manual at https://docs.gradle.org/7.3/userguide/multi_project_builds.html","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"include(\u0027app\u0027)","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"zhongfu":11}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.util.List;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.exceptions.StorageException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.ui.ParserResult;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.ui.UserInterface;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":" * A chat bot.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"public class Duke {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"    private final String botName;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"    private UserInterface ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"     * Creates a new Duke instance with the given chatbot name and Task storage path.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     * @param botName the name of the chatbot","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     * @param filePath the path for Task persistent storage","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"    public Duke(String botName, String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"        this.botName \u003d botName;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"        this.ui \u003d new UserInterface(System.in, System.out);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"        this.init();","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"     * Creates a new Duke instance with the given chatbot name.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"     * Uses the default Task storage path.","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"     * @param botName the name of the chatbot","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"    public Duke(String botName) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"        this(botName, \"data/tasks.dat\");","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"    private void init() {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"        this.ui.printMotd();","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"            this.tasks \u003d TaskList.loadFromStorage(this.storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"            this.ui.println(String.format(\"Loaded %s tasks.\", this.tasks.size()));","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"            this.ui.println(\"No saved tasks file found, starting with an empty task list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"            this.ui.println(\"Error loading tasks! Starting with an empty task list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"        this.ui.printDialog(new String[] {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"            String.format(\"Hello! I\u0027m %s\", this.botName),","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"            \"How can I help you?\"","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"        });","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"     * Runs the chatbot REPL loop.","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"     * @throws IOException if there was an error reading user input or printing messages to the output","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"    public void loop() throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"        while (true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"                ParserResult result \u003d this.ui.getInput();","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"                String cmd \u003d result.getCmd();","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"                switch (cmd) {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"                        int idx \u003d Integer.parseInt(result.getPosArg()) - 1; // list is 1-indexed","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"                        if (\"delete\".equals(cmd)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"                            Task task \u003d this.tasks.remove(idx);","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"                            this.ui.printDialog(new String[] {","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"                                \"Task removed:\",","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"                                String.format(\" %s\", task)","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"zhongfu"},"content":"                            });","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"zhongfu"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"zhongfu"},"content":"                            // set as done if cmd \u003d\u003d \"mark\", else (e.g. cmd \u003d\u003d \"unmark\") set as undone","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"zhongfu"},"content":"                            boolean done \u003d \"mark\".equals(cmd);","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"zhongfu"},"content":"                            Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"zhongfu"},"content":"                            task.setDone(done);","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"zhongfu"},"content":"                            this.ui.printDialog(new String[] {","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"zhongfu"},"content":"                                String.format(\"Task marked as %sdone:\", done ? \"\" : \"un\"),","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"zhongfu"},"content":"                                String.format(\" %s\", task)","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"zhongfu"},"content":"                            });","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"zhongfu"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"zhongfu"},"content":"                        throw new DukeException(","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"zhongfu"},"content":"                                String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"zhongfu"},"content":"                                        \"Hmm, that doesn\u0027t seem like a valid task number! Try \u0027%s \u003cnumber\u003e\u0027.\",","lastModifiedDate":"2022-02-03"},{"lineNumber":109,"author":{"gitId":"zhongfu"},"content":"                                        cmd),","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"zhongfu"},"content":"                                e);","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"zhongfu"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"zhongfu"},"content":"                        throw new DukeException(\"That task doesn\u0027t exist!\", e);","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"zhongfu"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"zhongfu"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"zhongfu"},"content":"                case \"list\":","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"zhongfu"},"content":"                    if (this.tasks.isEmpty()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"zhongfu"},"content":"                        this.ui.printDialog(\"You have no tasks in your task list!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"zhongfu"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"zhongfu"},"content":"                        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"zhongfu"},"content":"                        output.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"zhongfu"},"content":"                        output.addAll(this.tasks.toEnumeratedList());","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"zhongfu"},"content":"                        this.ui.printDialog(output.toArray(String[]::new));","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"zhongfu"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"zhongfu"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"zhongfu"},"content":"                case \"find\":","lastModifiedDate":"2022-02-03"},{"lineNumber":128,"author":{"gitId":"zhongfu"},"content":"                    if (!result.hasNonblankPosArg()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":129,"author":{"gitId":"zhongfu"},"content":"                        throw new DukeException(\"No search query provided! Try \u0027find meeting\u0027.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"zhongfu"},"content":"                    } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"zhongfu"},"content":"                        TaskList matchingTasks \u003d this.tasks.find(result.getPosArg());","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"zhongfu"},"content":"                        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"zhongfu"},"content":"                        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":134,"author":{"gitId":"zhongfu"},"content":"                            output.add(\"No tasks with that query found!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":135,"author":{"gitId":"zhongfu"},"content":"                        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":136,"author":{"gitId":"zhongfu"},"content":"                            output.add(String.format(\"Tasks containing \u0027%s\u0027:\", result.getPosArg()));","lastModifiedDate":"2022-02-03"},{"lineNumber":137,"author":{"gitId":"zhongfu"},"content":"                            output.addAll(matchingTasks.toEnumeratedList());","lastModifiedDate":"2022-02-03"},{"lineNumber":138,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-02-03"},{"lineNumber":139,"author":{"gitId":"zhongfu"},"content":"                        this.ui.printDialog(output.toArray(String[]::new));","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"zhongfu"},"content":"                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":141,"author":{"gitId":"zhongfu"},"content":"                    break;","lastModifiedDate":"2022-02-03"},{"lineNumber":142,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":143,"author":{"gitId":"zhongfu"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"zhongfu"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"zhongfu"},"content":"                case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"zhongfu"},"content":"                    Task task;","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"zhongfu"},"content":"                    if (!result.hasNonblankPosArg()) { // including strings with only whitespaces","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"zhongfu"},"content":"                        throw new DukeException(\"Task name cannot be empty!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"zhongfu"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"zhongfu"},"content":"                    if (\"deadline\".equals(cmd)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"zhongfu"},"content":"                        if (!result.hasNonblankArg(\"by\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"zhongfu"},"content":"                            throw new DukeException(String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"zhongfu"},"content":"                                    \"You need a time for your deadline! Try: deadline %s /by 1 jan 2050 12:15\",","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"zhongfu"},"content":"                                    result.getPosArg()));","lastModifiedDate":"2022-02-03"},{"lineNumber":156,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"zhongfu"},"content":"                        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"zhongfu"},"content":"                            task \u003d new Deadline(result.getPosArg(), this.ui.parseDateTime(result.getArg(\"by\")));","lastModifiedDate":"2022-01-30"},{"lineNumber":160,"author":{"gitId":"zhongfu"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"zhongfu"},"content":"                            throw new DukeException(String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":162,"author":{"gitId":"zhongfu"},"content":"                                    \"Unknown date format! Try: deadline %s /by 1 jan 2050 12:15\",","lastModifiedDate":"2022-02-03"},{"lineNumber":163,"author":{"gitId":"zhongfu"},"content":"                                    result.getPosArg()));","lastModifiedDate":"2022-02-03"},{"lineNumber":164,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-02-03"},{"lineNumber":165,"author":{"gitId":"zhongfu"},"content":"                    } else if (\"event\".equals(cmd)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"zhongfu"},"content":"                        if (!result.hasNonblankArg(\"at\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"zhongfu"},"content":"                            throw new DukeException(String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":168,"author":{"gitId":"zhongfu"},"content":"                                    \"You need a time for your event! Try: event %s /at 1 jan 2050 12:15\",","lastModifiedDate":"2022-02-03"},{"lineNumber":169,"author":{"gitId":"zhongfu"},"content":"                                    result.getPosArg()));","lastModifiedDate":"2022-02-03"},{"lineNumber":170,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"zhongfu"},"content":"                        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"zhongfu"},"content":"                            task \u003d new Event(result.getPosArg(), this.ui.parseDateTime(result.getArg(\"at\")));","lastModifiedDate":"2022-01-30"},{"lineNumber":174,"author":{"gitId":"zhongfu"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"zhongfu"},"content":"                            throw new DukeException(String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":176,"author":{"gitId":"zhongfu"},"content":"                                    \"Unknown date format! Try: event %s /at 1 jan 2050 12:15\",","lastModifiedDate":"2022-02-03"},{"lineNumber":177,"author":{"gitId":"zhongfu"},"content":"                                    result.getPosArg()));","lastModifiedDate":"2022-02-03"},{"lineNumber":178,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"zhongfu"},"content":"                    } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":180,"author":{"gitId":"zhongfu"},"content":"                        task \u003d new ToDo(result.getPosArg());","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"zhongfu"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"zhongfu"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"zhongfu"},"content":"                    this.ui.printDialog(new String[] {","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"zhongfu"},"content":"                        \"New task added:\",","lastModifiedDate":"2022-01-20"},{"lineNumber":186,"author":{"gitId":"zhongfu"},"content":"                        String.format(\" %s\", task),","lastModifiedDate":"2022-01-20"},{"lineNumber":187,"author":{"gitId":"zhongfu"},"content":"                        String.format(\"You now have %d tasks in your task list.\", this.tasks.size())","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"zhongfu"},"content":"                    });","lastModifiedDate":"2022-01-20"},{"lineNumber":189,"author":{"gitId":"zhongfu"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":190,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":191,"author":{"gitId":"zhongfu"},"content":"                case \"reload\":","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"zhongfu"},"content":"                    try {","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"zhongfu"},"content":"                        this.tasks \u003d TaskList.loadFromStorage(this.storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":194,"author":{"gitId":"zhongfu"},"content":"                        this.ui.printDialog(String.format(\"Tasks reloaded; %d tasks in list now\", this.tasks.size()));","lastModifiedDate":"2022-01-26"},{"lineNumber":195,"author":{"gitId":"zhongfu"},"content":"                    } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":196,"author":{"gitId":"zhongfu"},"content":"                        this.ui.printDialog(\"Saved tasks file not found! Skipping reload.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":197,"author":{"gitId":"zhongfu"},"content":"                    } catch (StorageException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":198,"author":{"gitId":"zhongfu"},"content":"                        this.ui.printDialog(\"Error loading tasks! Skipping reload.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":199,"author":{"gitId":"zhongfu"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"zhongfu"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":202,"author":{"gitId":"zhongfu"},"content":"                case \"save\":","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"zhongfu"},"content":"                    this.tasks.save(this.storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"zhongfu"},"content":"                    this.ui.printDialog(\"Tasks saved!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"zhongfu"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":206,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"zhongfu"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"zhongfu"},"content":"                    this.tasks.save(this.storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"zhongfu"},"content":"                    this.ui.printDialog(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"zhongfu"},"content":"                    return;","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":212,"author":{"gitId":"zhongfu"},"content":"                default:","lastModifiedDate":"2022-01-20"},{"lineNumber":213,"author":{"gitId":"zhongfu"},"content":"                    throw new DukeException(\"I don\u0027t know what that means!\"","lastModifiedDate":"2022-02-03"},{"lineNumber":214,"author":{"gitId":"zhongfu"},"content":"                            + \"Try: todo, deadline, event, list, delete, mark, unmark, reload, save, bye\");","lastModifiedDate":"2022-02-03"},{"lineNumber":215,"author":{"gitId":"zhongfu"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":216,"author":{"gitId":"zhongfu"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":217,"author":{"gitId":"zhongfu"},"content":"                this.ui.printDialog(e.getMessage().split(\"\\n\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":218,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":219,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":220,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":221,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":222,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":223,"author":{"gitId":"zhongfu"},"content":"     * The main method.","lastModifiedDate":"2022-02-03"},{"lineNumber":224,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":225,"author":{"gitId":"zhongfu"},"content":"     * @param args command line args","lastModifiedDate":"2022-02-03"},{"lineNumber":226,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":227,"author":{"gitId":"zhongfu"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":228,"author":{"gitId":"zhongfu"},"content":"        Duke duke \u003d new Duke(\"Duke\");","lastModifiedDate":"2022-01-26"},{"lineNumber":229,"author":{"gitId":"zhongfu"},"content":"        duke.loop();","lastModifiedDate":"2022-01-26"},{"lineNumber":230,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":231,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-19"},{"lineNumber":232,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":233,"author":{"gitId":"zhongfu"},"content":"class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":234,"author":{"gitId":"zhongfu"},"content":"    DukeException() {","lastModifiedDate":"2022-01-20"},{"lineNumber":235,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":236,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":237,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":238,"author":{"gitId":"zhongfu"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":239,"author":{"gitId":"zhongfu"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":240,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":241,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":242,"author":{"gitId":"zhongfu"},"content":"    DukeException(String message, Throwable cause) {","lastModifiedDate":"2022-01-20"},{"lineNumber":243,"author":{"gitId":"zhongfu"},"content":"        super(message, cause);","lastModifiedDate":"2022-01-20"},{"lineNumber":244,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":245,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"zhongfu":245}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":" * Signals that a storage exception has occured, e.g. when loading or saving state to persistent storage.","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"public class StorageException extends Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"     * Constructs a StorageException with the specified detail message.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"     * @param message a String containing a detail message","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"    public StorageException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"     * Constructs a StorageException with the specified detail message and the cause of the exception.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"     * @param message a String containing a detail message","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"     * @param cause a Throwable representing the cause of the exception","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"    public StorageException(String message, Throwable cause) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"        super(message, cause);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhongfu":25}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"Classes belonging to this package should be **safe to serialize**,","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"or not be serializable at all.","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhongfu":2}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.io.EOFException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import java.io.ObjectInputFilter;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"import java.io.ObjectInputFilter.FilterInfo;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"import java.io.ObjectInputFilter.Status;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"import java.util.List;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.exceptions.StorageException;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":" * A class that presents an interface for loading and storing serializable objects to a file.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"    private static Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"    private final File dataFile;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    private final ObjectInputFilter objectFilter;","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"     * Creates a new Storage instance with the given data file path and object filter.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     * @param filePath the path to load objects from, or save objects to","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"     * @param objectFilter the ObjectInputFilter to use when loading objects from file","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"    public Storage(String filePath, ObjectInputFilter objectFilter) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"        this.dataFile \u003d new File(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"        this.objectFilter \u003d objectFilter;","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"     * Creates a new Storage instance with the given data file path.","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"     * @param filePath the path to load objects from, or save objects to","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"        this(filePath, TaskFilter::checkInput);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"     * Loads objects from the configured file path.","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"     * @return a list of loaded objects","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"     * @throws FileNotFoundException if the configured file path does not exist","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"     * @throws StorageException if there was any error while loading objects, e.g. objects rejected by filter","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"    public List\u003cObject\u003e load() throws FileNotFoundException, StorageException {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"        List\u003cObject\u003e objs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"        try (FileInputStream fileStream \u003d new FileInputStream(this.dataFile);","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"                ObjectInputStream objectStream \u003d new ObjectInputStream(fileStream)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"            objectStream.setObjectInputFilter(this.objectFilter);","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"            while (true) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"                Object o \u003d objectStream.readObject();","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"                if (o !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"                    objs.add(o);","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"                    logger.warning(\"Got null in objectStream, ignoring\");","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"        } catch (EOFException e) { // also means objectStream has no more objects, return normally","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"            return objs;","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"        } catch (FileNotFoundException e) { // throw FileNotFoundException instead of IOException/StorageException","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"            throw e;","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"            throw new StorageException(\"Got IOException while trying to load objects\", e);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"            throw new StorageException(\"Unknown class found in storage!\", e);","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"     * Saves objects to the configured file path.","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"     * @param objs a list of Serializable objects to save","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"     * @throws IOException if there was an error while saving objects","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"    public void save(List\u003c? extends Object\u003e objs) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"        File parent \u003d this.dataFile.getParentFile();","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"        parent.mkdirs(); // attempt to make all parent dirs, and ignore if already exists","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"        try (FileOutputStream fileStream \u003d new FileOutputStream(this.dataFile);","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"zhongfu"},"content":"                ObjectOutputStream objectStream \u003d new ObjectOutputStream(fileStream)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"zhongfu"},"content":"            for (Object o : objs) {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"zhongfu"},"content":"                objectStream.writeObject(o);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"zhongfu"},"content":"// https://docs.oracle.com/javase/10/core/serialization-filtering1.htm#JSCOR-GUID-0A1D23AB-2F18-4979-9288-9CFEC04F207E","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"zhongfu"},"content":"class TaskFilter {","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"zhongfu"},"content":"    private static final String[] ALLOWED_PACKAGES \u003d {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"zhongfu"},"content":"        \"java.time\",","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"zhongfu"},"content":"        \"li.zhongfu.cs2103.chatbot.types.tasks\"","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"zhongfu"},"content":"    };","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"zhongfu"},"content":"    private TaskFilter() {","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"zhongfu"},"content":"    static Status checkInput(FilterInfo filterInfo) {","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"zhongfu"},"content":"        Class\u003c?\u003e cls \u003d filterInfo.serialClass();","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"zhongfu"},"content":"        if (cls !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"zhongfu"},"content":"            String packageName \u003d cls.getPackageName();","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"zhongfu"},"content":"            return Arrays.stream(ALLOWED_PACKAGES).anyMatch(packageName::equals) ? Status.ALLOWED : Status.REJECTED;","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"zhongfu"},"content":"        return Status.UNDECIDED;","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhongfu":120}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.util.List;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.exceptions.StorageException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":" * A task list for storing and handling a collection of Tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"    private TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"     * Creates a new blank TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"     * Adds a task to this task list.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     * @param task the task to be added","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"            throw new NullPointerException(\"Expected Task, got null\");","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"        this.list.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"     * @param idx the index of the task to be retrieved","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"     * @return the task at the given index","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"        return this.list.get(idx);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"     * Removes the task at the given index, and returns it.","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"     * @param idx the index of the task to be removed","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"     * @return the removed task","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"    public Task remove(int idx) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"        return this.list.remove(idx);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"     * Returns a TaskList containing only Tasks with a name that contains the search string.","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"     * @param query the search string","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"     * @return a TaskList containing only Tasks with a name that contains the search string","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"    public TaskList find(String query) {","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"        return new TaskList(this.list","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"                .stream()","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"                .filter(task -\u003e task.getName().contains(query))","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"     * Returns a boolean indicating whether this list is empty.","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"     * @return true if the list is empty, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"        return this.list.isEmpty();","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"     * Returns the number of tasks in this list.","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"     * @return the number of tasks in this list","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"    public int size() {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"        return this.list.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"     * Saves all tasks in this list to the given Storage.","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"zhongfu"},"content":"     * @param storage the Storage to be used to save tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"zhongfu"},"content":"     * @throws IOException if there was an error while saving tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"zhongfu"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"zhongfu"},"content":"        storage.save(this.list);","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"zhongfu"},"content":"     * Returns a list of strings representing the tasks in this TaskList as","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"zhongfu"},"content":"     * an (1-indexed) ordered list.","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"zhongfu"},"content":"     * Each string in the list is of the form {@code n. foo}, where {@code n} is the","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"zhongfu"},"content":"     * index of the item (starting from 1)","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"zhongfu"},"content":"     * and {@code foo} is the string representation of the item.","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"zhongfu"},"content":"     * @return a list of strings representing the tasks in this TaskList as an 1-indexed ordered list","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"zhongfu"},"content":"    public List\u003cString\u003e toEnumeratedList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"zhongfu"},"content":"        List\u003cString\u003e enumerated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"zhongfu"},"content":"        int idx \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"zhongfu"},"content":"        for (Task item : this.list) {","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"zhongfu"},"content":"            enumerated.add(String.format(\"%d. %s\", ++idx, item));","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"zhongfu"},"content":"        return enumerated;","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"zhongfu"},"content":"     * Loads tasks from the given Storage into a List of tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"zhongfu"},"content":"     * @param storage the Storage to load tasks with","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"zhongfu"},"content":"     * @return a List of Tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":126,"author":{"gitId":"zhongfu"},"content":"     * @throws FileNotFoundException if the file configured in the Storage instance doesn\u0027t exist","lastModifiedDate":"2022-02-03"},{"lineNumber":127,"author":{"gitId":"zhongfu"},"content":"     * @throws StorageException if there was any other error while loading Tasks from the given Storage","lastModifiedDate":"2022-02-03"},{"lineNumber":128,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":129,"author":{"gitId":"zhongfu"},"content":"    private static List\u003cTask\u003e load(Storage storage) throws FileNotFoundException, StorageException {","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"zhongfu"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"zhongfu"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"zhongfu"},"content":"            List\u003cObject\u003e objs \u003d storage.load();","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"zhongfu"},"content":"            for (Object o : objs) {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"zhongfu"},"content":"                if (o instanceof Task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"zhongfu"},"content":"                    tasks.add((Task) o);","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"zhongfu"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"zhongfu"},"content":"                    // is this a good idea? but it catches null too","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"zhongfu"},"content":"                    throw new ClassCastException(String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":139,"author":{"gitId":"zhongfu"},"content":"                            \"Expected Task, got %s\",","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"zhongfu"},"content":"                            o instanceof Object ? o.getClass().getName() : \"null\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":141,"author":{"gitId":"zhongfu"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"zhongfu"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"zhongfu"},"content":"            throw new StorageException(\"Got invalid type from Storage!\", e);","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"zhongfu"},"content":"        return tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":150,"author":{"gitId":"zhongfu"},"content":"     * Loads tasks from the given Storage into a TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":152,"author":{"gitId":"zhongfu"},"content":"     * @param storage the Storage to load tasks with","lastModifiedDate":"2022-02-03"},{"lineNumber":153,"author":{"gitId":"zhongfu"},"content":"     * @return a TaskList containing the tasks loaded from the given Storage","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"zhongfu"},"content":"     * @throws FileNotFoundException if the file configured in the Storage instance doesn\u0027t exist","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"zhongfu"},"content":"     * @throws StorageException if there was any other error while loading Tasks from the given Storage","lastModifiedDate":"2022-02-03"},{"lineNumber":156,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":157,"author":{"gitId":"zhongfu"},"content":"    public static TaskList loadFromStorage(Storage storage) throws FileNotFoundException, StorageException {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"zhongfu"},"content":"        return new TaskList(TaskList.load(storage));","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhongfu":160}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":" * A representation of a deadline item in a task list, which also contains a date and time for the deadline.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"    private LocalDateTime eventTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"     * Creates a new deadline task item with the specified task name and deadline date and time.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"     * @param name the name of the task","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"     * @param eventTime the date and time of the deadilne","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"    public Deadline(String name, LocalDateTime eventTime) {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"     * Returns the date and time representing the deadline of this task item.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"     * @return the date and time representing the deadline of this task item.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"        return this.eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     * Returns a string representation of this deadline task item.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"     * @returns a string representation of this deadline task item","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"        return String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"                \"[D][%s] %s (by: %s)\",","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"                this.getDone() ? \"X\" : \" \",","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"                this.getName(),","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"                this.getDeadline().format(DATE_TIME_FORMAT));","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"     * Indicates whether the Object {@code o} is equal to this Deadline.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"     * @param o the Object to compare this Deadline against","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"     * @returns true if {@code o} is equal to this Deadline, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"            Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"            return super.equals(deadline) \u0026\u0026 this.eventTime.equals(deadline.eventTime);","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"        return false;","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"     * Returns a hash code value for this Deadline.","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"     * @returns a hash code value for this Deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"        return Objects.hash(super.hashCode(), this.eventTime);","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":70}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":" * A representation of an event item in a task list, which also contains an event date and time.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"    private LocalDateTime eventTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"     * Creates a new event item.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"     * @param name the name of the event","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"     * @param eventTime the date and time of the event","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"    public Event(String name, LocalDateTime eventTime) {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"     * Returns the date and time of the event.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"     * @returns the date and time of the event","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    public LocalDateTime getEventTime() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"        return this.eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     * Returns a string representation of this event item.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"     * @returns a string representation of this event item","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"        return String.format(","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"                \"[E][%s] %s (at: %s)\", this.getDone() ? \"X\" : \" \",","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"                this.getName(),","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"                this.getEventTime().format(DATE_TIME_FORMAT));","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"     * Indicates whether the Object {@code o} is equal to this Event.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"     * @param o the Object to compare this Event against","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"     * @returns true if {@code o} is equal to this Event, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"            Event event \u003d (Event) o;","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"            return super.equals(event) \u0026\u0026 this.eventTime.equals(event.eventTime);","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"        return false;","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"     * Returns a hash code value for this Event.","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"     * @returns a hash code value for this Event","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"        return Objects.hash(super.hashCode(), this.eventTime);","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":69}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":" * A representation of to-do list task that contains a name and a state.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":" * Currently, it probably isn\u0027t possible for the state to be inconsistent e.g. after deserializing","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":" * a (potentially malicious) serialized object, but keep this in mind if implementing subclasses","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":" * with more advanced logic.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"    private String name;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"     * Creates a new task with the given name.","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"     * @param name name of task","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"    protected Task(String name) {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"     * Sets task as done or not done.","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"     * @param done true if task is to be set as done, false otherwise","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"     * Returns name of task.","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"     * @return name of task","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"    public String getName() {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"        return this.name;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"     * Returns \"done\" state of task.","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"     * @return true if task is marked as done, false otherwise","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"        return this.isDone;","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"     * Returns task information in a human-readable string.","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"     * @return task details in a human-readable string","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"    public abstract String toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"     * Indicates whether the Object {@code o} is equal to this Task.","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"     * @param o the Object to compare this Task against","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"     * @returns true if {@code o} is equal to this Task, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"        if (o !\u003d null \u0026\u0026 this.getClass() \u003d\u003d o.getClass()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"            Task task \u003d (Task) o;","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"            return this.name \u003d\u003d task.name \u0026\u0026 this.isDone \u003d\u003d task.isDone;","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"        return false;","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"     * Returns a hash code value for this Task.","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"     * @returns a hash code value for this Task","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"        return Objects.hash(this.name, this.isDone);","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":86}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":" * A representation of a to-do task item, which has a name and can be set as done.","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"     * Creates a new to-do task item.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"     * @param name the name of the task item","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"     * Returns a string representation of this to-do item.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"     * @returns a string representation of this to-do item","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"        return String.format(\"[T][%s] %s\", this.getDone() ? \"X\" : \" \", this.getName());","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"    // no equals() and hashCode() -- use Task implementation","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":27}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":" * A class encapsulating various parsing functions.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"    private static final DateTimeFormatter DEFAULT_DATE_TIME_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"            .parseCaseInsensitive()","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"            .appendPattern(\"[uuuu-MM-dd[ HH:mm[:ss]][\u0027T\u0027HH:mm[:ss]]]\")","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"            .appendPattern(\"[MMM d uuuu[ HH:mm[:ss]]]\")","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"            .appendPattern(\"[d MMM uuuu[ HH:mm[:ss]]]\")","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"            .appendPattern(\"[MMMM d uuuu[ HH:mm[:ss]]]\")","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"            .appendPattern(\"[d MMMM uuuu[ HH:mm[:ss]]]\")","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"            .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"            .toFormatter()","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"    private DateTimeFormatter dtFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     * Creates a new Parser instance that uses the given DateTimeFormatter to parse date-time strings.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"     * @param dateTimeFormatter DateTimeFormatter to be used for parsing date-time strings","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"    public Parser(DateTimeFormatter dateTimeFormatter) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"        this.dtFormatter \u003d dateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"     * Cretes a new Parser instance that uses the default DateTimeFormatter to parse date-time strings.","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"    public Parser() {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"        this(DEFAULT_DATE_TIME_FORMATTER);","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"    // i\u0027m literally just doing this because they said i had to","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"    // maybe one day it\u0027ll support different formats","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"     * Parses a string in the form {@code positional argument /arg1 foo bar /arg2 baz bax /arg3}","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"     * and returns a {@code Map\u003cString, String\u003e} containing the parsed arguments, e.g.:","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"     * \u003cpre\u003e{","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"     *      \"\": \"positional argument\",","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"     *      \"arg1\": \"foo bar\",","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"     *      \"arg2\": \"baz bax\",","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"     *      \"arg3\": \"\"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"     * }\u003c/pre\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"     * Empty argument names will be dropped; other duplicate argument names will have the value of","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"     * the last occurrence of the argument.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"     * @param argString a string containing unparsed arguments","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"     * @return a Map containing parsed arguments","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"    public Map\u003cString, String\u003e parseArgString(String argString) {","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"        Map\u003cString, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"        String[] parts \u003d argString.split(\"(^|\\\\s+)/\");","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"        args.put(\"\", parts[0].strip());","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"            String[] arg \u003d parts[i].split(\"\\\\s+\", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"            if (\"\".equals(arg[0])) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"                continue;","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"            args.put(arg[0], arg.length \u003d\u003d 2 ? arg[1].strip() : \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"        return args;","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"    // er, probably not the best place for this, but whatever","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"     * Parses a LocalDateTime from a given date-time string.","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"     * @param dateTimeString a string containing a date and time to be parsed","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"     * @return a parsed date/time in the form of a LocalDateTime instances","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"     * @throws DateTimeParseException if dateTimeString contains an unrecognized date-time format","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"    public LocalDateTime parseDateTime(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"        return LocalDateTime.parse(dateTimeString, this.dtFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhongfu":93}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/ui/ParserResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":" * A class used to encapsulate the result of parsing a user command.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":" * Parsed commands consist of the command keyword, a optional positional arg, and optional named args.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"public class ParserResult {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"    private String cmd;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"    private Map\u003cString, String\u003e args;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"     * Class used to encapsulate the result from Parser.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"     * @param cmd the parsed command","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"     * @param args the parsed arguments","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"    public ParserResult(String cmd, Map\u003cString, String\u003e args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"     * Returns the command keyword.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"     * @return the command keyword","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"    public String getCmd() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"        return this.cmd;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"     * Returns a boolean indicating whether the named argument was in the parsed command.","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"     * @param key the named argument key to search for","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"     * @return true if the named argument exists, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"    public boolean hasArg(String key) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"        return this.args.containsKey(key);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"     * Returns a boolean indicating whether the named argument was in the parsed command, and is non-blank.","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"     * @param key the named argument key to search for","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"     * @return true if the named argument exists and is non-blank, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"    public boolean hasNonblankArg(String key) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"        return this.hasArg(key) \u0026\u0026 !this.getArg(key).isBlank();","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"     * Returns the named argument value associated with the argument key.","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"     * @param key the named argument key to search for","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"     * @return the associated named argument value if it exists, or null otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"    public String getArg(String key) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"        return this.args.get(key);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"     * Returns a boolean indicating whether a positional argument was parsed.","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"     * @return true if a positional argument was parsed, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"    public boolean hasPosArg() {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"        return this.hasArg(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"     * Returns a boolean indicating whether a positional argument was parsed, and is non-blank.","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"     * @return true if a positional argument was parsed and is non-blank, false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"    public boolean hasNonblankPosArg() {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"        return this.hasNonblankArg(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"     * Returns the positional argument","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"     * @return the positional argument","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"    public String getPosArg() {","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"        return this.getArg(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"     * Returns a {@code Map\u003cString, String\u003e} containing all parsed arguments.","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"zhongfu"},"content":"     * @return a {@code Map\u003cString, String\u003e} containing all parsed arguments","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"zhongfu"},"content":"    public Map\u003cString, String\u003e getArgs() {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"zhongfu"},"content":"        return this.args;","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhongfu":100}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/types/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":" * The interface between Duke and the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"public class UserInterface {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"    private static final String HLINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"    private static final String MOTD \u003d \"Hello from\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"            + \" ____        _        \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"    private PrintStream output;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"    private BufferedReader br;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"     * Creates a new UserInterface instance with the given InputStream and PrintStream as input and output.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     * @param input the InputStream to read user input from","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"     * @param output the PrintStream to output messages to","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"    public UserInterface(InputStream input, PrintStream output) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"        this.output \u003d output;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"        this.br \u003d new BufferedReader(new InputStreamReader(input));","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"     * Prints the given lines in a dialog.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"     * Each array element represents a new line, and each element will additionally be split into multiple","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"     * lines if a newline character is present.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"     * @param lines an array containing the lines to print, split by lines","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"    public void printDialog(String[] lines) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"        this.output.println(\"    \" + HLINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"            if (line.contains(\"\\n\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"                String[] sublines \u003d line.split(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"                for (String subline : sublines) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"                    this.output.println(\"    \" + subline);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"                this.output.println(\"    \" + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"        this.output.println(\"    \" + HLINE + \"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"     * Print the given string in a dialog.","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"     * @param line the string to be printed","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"    public void printDialog(String line) {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"        this.printDialog(line.split(\"\\n\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"     * Prints the message of the day.","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"    public void printMotd() {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"        this.output.println(MOTD); // extra newline","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"     * Prints a string and a newline character to the output without additional formatting.","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"     * @param str the string to be printed","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"    public void println(String str) {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"        this.output.println(str);","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"     * Prints a string to the output without additional newline characters or formatting.","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"     * @param str the string to be printed","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"zhongfu"},"content":"    public void print(String str) {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"zhongfu"},"content":"        this.output.print(str);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"zhongfu"},"content":"     * Parses user input as a command and returns a ParserResult with the user input.","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"zhongfu"},"content":"     * @return a ParserResult containing the user input","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":104,"author":{"gitId":"zhongfu"},"content":"    public ParserResult getInput() throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"zhongfu"},"content":"        String input \u003d this.br.readLine();","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"zhongfu"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2); // split into command and args","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"zhongfu"},"content":"        String cmd \u003d parts[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"zhongfu"},"content":"        if (parts.length \u003d\u003d 1) { // only command","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"zhongfu"},"content":"            return new ParserResult(cmd, new HashMap\u003c\u003e());","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"zhongfu"},"content":"        } else { // length is 2","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"zhongfu"},"content":"            Map\u003cString, String\u003e args \u003d this.parser.parseArgString(parts[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"zhongfu"},"content":"            return new ParserResult(cmd, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":115,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"zhongfu"},"content":"    // i know this really really really doesn\u0027t belong here","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"zhongfu"},"content":"    // but i kinda can\u0027t be arsed","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"zhongfu"},"content":"    // todo fix this when you implement... idk... command objects, handlers, whatever","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"zhongfu"},"content":"     * Parses a LocalDateTime from a given date-time string.","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"zhongfu"},"content":"     * @param dateTimeString a string containing a date and time to be parsed","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"zhongfu"},"content":"     * @return a parsed date/time in the form of a LocalDateTime instances","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"zhongfu"},"content":"     * @throws DateTimeParseException if dateTimeString contains an unrecognized date-time format","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":126,"author":{"gitId":"zhongfu"},"content":"    public LocalDateTime parseDateTime(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"zhongfu"},"content":"        return this.parser.parseDateTime(dateTimeString);","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zhongfu":129}},{"path":"src/test/java/li/zhongfu/cs2103/chatbot/types/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.io.File;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"import java.util.List;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.exceptions.StorageException;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"import li.zhongfu.cs2103.chatbot.types.tasks.ToDo;","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"    @TempDir","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"    File tempDir;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"    @BeforeEach","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"    public void setup() throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"        storage \u003d new Storage(File.createTempFile(\"DukeStorageTest\", \".dat\", tempDir).toString());","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"    public void load_emptyFile() throws FileNotFoundException, StorageException {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"        List\u003cObject\u003e objects \u003d storage.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"        assertEquals(0, objects.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"    public void saveAndLoad_whitelistedTypes() throws IOException, StorageException {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"        List\u003c? super Task\u003e objects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"        objects.add(new Deadline(\"random deadline\", LocalDateTime.now().plusDays(4)));","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"        objects.add(new Event(\"random event\", LocalDateTime.now().plusMinutes(30)));","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"        objects.add(new ToDo(\"hello world\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"        storage.save(objects);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"        List\u003cObject\u003e objects2 \u003d storage.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"        assertEquals(objects.size(), objects2.size());","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"    public void saveAndLoad_unwhitelistedTypes() throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"        List\u003c? super Object\u003e objects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"        objects.add(new TestClass());","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"        storage.save(objects);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"        assertThrows(StorageException.class, () -\u003e storage.load());","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"class TestClass implements Serializable {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhongfu":63}},{"path":"src/test/java/li/zhongfu/cs2103/chatbot/types/ui/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot.types.ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"    @BeforeEach","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"    public void setup() {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"    public void parseArgString_blankString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"        Map\u003cString, String\u003e result;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"        result \u003d parser.parseArgString(\"\");","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"\", result.get(\"\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"        result \u003d parser.parseArgString(\"  \");","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"\", result.get(\"\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"    public void parseArgString_posArgOnly() {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"        Map\u003cString, String\u003e result;","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"        result \u003d parser.parseArgString(\"testing one two\");","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"testing one two\", result.get(\"\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"        result \u003d parser.parseArgString(\" with leading and trailing spaces? \");","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"with leading and trailing spaces?\", result.get(\"\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"    public void parseArgString_keywordArgs() {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"        Map\u003cString, String\u003e result;","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"        result \u003d parser.parseArgString(\" /arg1  val1   /arg2 /arg3 val2\");","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"        assertEquals(4, result.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"\", result.get(\"\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"val1\", result.get(\"arg1\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"\", result.get(\"arg2\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"val2\", result.get(\"arg3\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"        result \u003d parser.parseArgString(\" here\u0027s a pos arg /and here are some /more keyword arguments  \"","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"                + \"/and_one_without_a_value   /one_more? why not \");","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"        assertEquals(5, result.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"here\u0027s a pos arg\", result.get(\"\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"here are some\", result.get(\"and\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"keyword arguments\", result.get(\"more\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"\", result.get(\"and_one_without_a_value\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"        assertEquals(\"why not\", result.get(\"one_more?\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"    public void parseDateTime_validFormats() {","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"        // todo random years/months/days/etc","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"        LocalDateTime expectedNoTime \u003d LocalDateTime.of(2021, Month.NOVEMBER, 12, 0, 0);","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"        LocalDateTime expectedNoSeconds \u003d LocalDateTime.of(2021, Month.NOVEMBER, 12, 13, 14);","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"        LocalDateTime expectedWithSeconds \u003d LocalDateTime.of(2021, Month.NOVEMBER, 12, 13, 14, 15);","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoTime, parser.parseDateTime(\"2021-11-12\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoTime, parser.parseDateTime(\"nov 12 2021\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoTime, parser.parseDateTime(\"November 12 2021\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoTime, parser.parseDateTime(\"12 Nov 2021\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoTime, parser.parseDateTime(\"12 november 2021\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoSeconds, parser.parseDateTime(\"2021-11-12T13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoSeconds, parser.parseDateTime(\"2021-11-12 13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoSeconds, parser.parseDateTime(\"nov 12 2021 13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoSeconds, parser.parseDateTime(\"November 12 2021 13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoSeconds, parser.parseDateTime(\"12 Nov 2021 13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedNoSeconds, parser.parseDateTime(\"12 november 2021 13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedWithSeconds, parser.parseDateTime(\"2021-11-12T13:14:15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedWithSeconds, parser.parseDateTime(\"2021-11-12 13:14:15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedWithSeconds, parser.parseDateTime(\"nov 12 2021 13:14:15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedWithSeconds, parser.parseDateTime(\"November 12 2021 13:14:15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedWithSeconds, parser.parseDateTime(\"12 Nov 2021 13:14:15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"        assertEquals(expectedWithSeconds, parser.parseDateTime(\"12 november 2021 13:14:15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"zhongfu"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"zhongfu"},"content":"    public void parseDateTime_invalidFormats() {","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"1 nov\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"2021-02-30T15:20\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"2021-02-10 15:20T14:30\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"2021-11-12T\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"2021-13-12 14:15\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"three years ago\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"31 feb 2021 13:14\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"11 nov 2021 25:21\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"zhongfu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e parser.parseDateTime(\"nov 3 2021 14:80\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"zhongfu":110}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"help","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"mark test","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"todo foo bar","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"deadline bar baz /at qux /remarks lorem ipsum","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"deadline bar baz /by qux /remarks lorem ipsum","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"event sleep /at night","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"event sleep more /for a very long time","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"mark 5","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"unmark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"unmark 8","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"unmark everything","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"event eat /at noon","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"mark 4","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":28}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/li/zhongfu/cs2103/chatbot/*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"java -classpath ../bin li.zhongfu.cs2103.chatbot.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhongfu":2,"-":36}}]
