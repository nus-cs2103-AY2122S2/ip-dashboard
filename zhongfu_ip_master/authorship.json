[{"path":"src/main/java/li/zhongfu/cs2103/chatbot/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"    private String eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"    public Deadline(String name, String eventTime) {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"        return this.eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getDone() ? \"X\" : \" \", this.getName(), this.getDeadline());","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":18}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"import java.util.List;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"public class Duke {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"    private static final String HLINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"    private static final String BOT_NAME \u003d \"Duke\";","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"    private static void dialog(String[] lines) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"        System.out.println(\"    \" + HLINE);","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"            System.out.println(\"    \" + line);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"        System.out.println(\"    \" + HLINE + \"\\n\");","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"    private static void dialog(String line) {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"        dialog(line.split(\"\\n\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"     * Takes a list of items and returns a list of strings representing the items in","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"     * an (1-indexed) ordered list.","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"     * Each string in the list is of the form {@code n. foo}, where {@code n} is the","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     * index of the item (starting from 1)","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"     * and {@code foo} is the string representation of the item.","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"     * @param \u003cT\u003e   the type of items in {@code items}","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"     * @param items the list of items to be enumerated","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"     * @return a list of strings representing the items in an 1-indexed ordered list","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"    private static \u003cT\u003e List\u003cString\u003e enumerateList(List\u003cT\u003e items) {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"        List\u003cString\u003e enumerated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"        int idx \u003d 0;","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"        for (T item : items) {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"            enumerated.add(String.format(\"%d. %s\", ++idx, item));","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"        return enumerated;","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"     * Parses a string in the form {@code positional argument /arg1 foo bar /arg2 baz bax /arg3}","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"     * and returns a {@code Map\u003cString, String\u003e} containing the parsed arguments, e.g.:","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"     * \u003cpre\u003e{","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"zhongfu"},"content":"     *      \"\": \"positional argument\",","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"zhongfu"},"content":"     *      \"arg1\": \"foo bar\",","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"zhongfu"},"content":"     *      \"arg2\": \"baz bax\",","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"zhongfu"},"content":"     *      \"arg3\": \"\"","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"zhongfu"},"content":"     * }\u003c/pre\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"zhongfu"},"content":"     * Empty argument names will be dropped; other duplicate argument names will have the value of","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"zhongfu"},"content":"     * the last occurrence of the argument.","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"zhongfu"},"content":"     * @param args a string containing unparsed arguments","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"zhongfu"},"content":"     * @return a Map containing parsed arguments","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"zhongfu"},"content":"    private static Map\u003cString, String\u003e parseArgString(String taskString) {","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"zhongfu"},"content":"        Map\u003cString, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"zhongfu"},"content":"        String[] parts \u003d taskString.split(\"(^|\\\\s+)/\");","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"zhongfu"},"content":"        args.put(\"\", parts[0]);","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"zhongfu"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"zhongfu"},"content":"            String[] arg \u003d parts[i].split(\"\\\\s+\", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"zhongfu"},"content":"            if (arg[0] \u003d\u003d \"\") {","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"zhongfu"},"content":"                continue;","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"zhongfu"},"content":"            args.put(arg[0], arg.length \u003d\u003d 2 ? arg[1]: \"\");","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"zhongfu"},"content":"        return args;","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"zhongfu"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"zhongfu"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"zhongfu"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"zhongfu"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"zhongfu"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"zhongfu"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"zhongfu"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"zhongfu"},"content":"        dialog(new String[] {","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"zhongfu"},"content":"                String.format(\"Hello! I\u0027m %s\", BOT_NAME),","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"zhongfu"},"content":"                \"How can I help you?\"","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"zhongfu"},"content":"        });","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"zhongfu"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"zhongfu"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"zhongfu"},"content":"        while (true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"zhongfu"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"zhongfu"},"content":"                String input \u003d br.readLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"zhongfu"},"content":"                String[] parts \u003d input.split(\"\\\\s\", 2); // split into command and args","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"zhongfu"},"content":"                String inCmd \u003d parts[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"zhongfu"},"content":"                String inArgs \u003d parts.length \u003d\u003d 2 ? parts[1] : \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"zhongfu"},"content":"                switch (inCmd) {","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"zhongfu"},"content":"                    case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"zhongfu"},"content":"                    case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"zhongfu"},"content":"                    case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"zhongfu"},"content":"                        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"zhongfu"},"content":"                            int idx \u003d Integer.parseInt(inArgs) - 1; // list is 1-indexed","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"zhongfu"},"content":"                            if (inCmd.equals(\"delete\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"zhongfu"},"content":"                                Task task \u003d tasks.remove(idx);","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"zhongfu"},"content":"                                dialog(new String[] {","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"zhongfu"},"content":"                                    \"Task removed:\",","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"zhongfu"},"content":"                                    String.format(\" %s\", task)","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"zhongfu"},"content":"                                });","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"zhongfu"},"content":"                            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"zhongfu"},"content":"                                Task task \u003d tasks.get(idx);","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"zhongfu"},"content":"                                boolean done \u003d inCmd.equals(\"mark\"); // set as done if cmd \u003d\u003d \"mark\", else (e.g. cmd \u003d\u003d \"unmark\") set as undone","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"zhongfu"},"content":"                                task.setDone(done); ","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"zhongfu"},"content":"                                dialog(new String[] {","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"zhongfu"},"content":"                                    String.format(\"Task marked as %sdone:\", done ? \"\" : \"un\"),","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"zhongfu"},"content":"                                    String.format(\" %s\", task)","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"zhongfu"},"content":"                                });","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"zhongfu"},"content":"                            }","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"zhongfu"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"zhongfu"},"content":"                            throw new DukeException(String.format(\"Hmm, that doesn\u0027t seem like a valid task number! Try \u0027%s \u003cnumber\u003e\u0027.\", inCmd), e);","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"zhongfu"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"zhongfu"},"content":"                            throw new DukeException(\"That task doesn\u0027t exist!\", e);","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"zhongfu"},"content":"                        break;","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"zhongfu"},"content":"                    case \"list\":","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"zhongfu"},"content":"                        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"zhongfu"},"content":"                            dialog(\"You have no tasks in your task list!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"zhongfu"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"zhongfu"},"content":"                            List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"zhongfu"},"content":"                            output.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"zhongfu"},"content":"                            output.addAll(enumerateList(tasks));","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"zhongfu"},"content":"                            dialog(output.toArray(String[]::new));","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"zhongfu"},"content":"                        break;","lastModifiedDate":"2022-01-19"},{"lineNumber":141,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"zhongfu"},"content":"                    case \"bye\":","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"zhongfu"},"content":"                        dialog(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"zhongfu"},"content":"                        return; // to shut the linter up","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"zhongfu"},"content":"                    case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"zhongfu"},"content":"                    case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"zhongfu"},"content":"                    case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"zhongfu"},"content":"                        Task task;","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"zhongfu"},"content":"                        Map\u003cString, String\u003e taskArgs \u003d parseArgString(inArgs);","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"zhongfu"},"content":"                        if (taskArgs.get(\"\").isBlank()) { // includes strings with only whitespaces","lastModifiedDate":"2022-01-20"},{"lineNumber":152,"author":{"gitId":"zhongfu"},"content":"                            throw new DukeException(\"Task name cannot be empty!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":153,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":155,"author":{"gitId":"zhongfu"},"content":"                        if (inCmd.equals(\"deadline\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"zhongfu"},"content":"                            if (!taskArgs.containsKey(\"by\") || taskArgs.get(\"by\").isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"zhongfu"},"content":"                                throw new DukeException(String.format(\"You need a time for your deadline! Try: deadline %s /by next Sunday\", taskArgs.get(\"\")));","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"zhongfu"},"content":"                            }","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"zhongfu"},"content":"                            task \u003d new Deadline(taskArgs.get(\"\"), taskArgs.get(\"by\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"zhongfu"},"content":"                        } else if (inCmd.equals(\"event\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"zhongfu"},"content":"                            if (!taskArgs.containsKey(\"at\") || taskArgs.get(\"at\").isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"zhongfu"},"content":"                                throw new DukeException(String.format(\"You need a time for your event! Try: event %s /at next Sunday\", taskArgs.get(\"\")));","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"zhongfu"},"content":"                            }","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"zhongfu"},"content":"                            task \u003d new Event(taskArgs.get(\"\"), taskArgs.get(\"at\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"zhongfu"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"zhongfu"},"content":"                            task \u003d new ToDo(taskArgs.get(\"\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"zhongfu"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":168,"author":{"gitId":"zhongfu"},"content":"                        ","lastModifiedDate":"2022-01-20"},{"lineNumber":169,"author":{"gitId":"zhongfu"},"content":"                        tasks.add(task);","lastModifiedDate":"2022-01-20"},{"lineNumber":170,"author":{"gitId":"zhongfu"},"content":"                        dialog(new String[] {","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"zhongfu"},"content":"                            \"New task added:\",","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"zhongfu"},"content":"                            String.format(\" %s\", task),","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"zhongfu"},"content":"                            String.format(\"You now have %d tasks in your task list.\", tasks.size())","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"zhongfu"},"content":"                        });","lastModifiedDate":"2022-01-20"},{"lineNumber":175,"author":{"gitId":"zhongfu"},"content":"                        break;","lastModifiedDate":"2022-01-20"},{"lineNumber":176,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":177,"author":{"gitId":"zhongfu"},"content":"                    default:","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"zhongfu"},"content":"                        throw new DukeException(\"I don\u0027t know what that means! Try: todo, deadline, event, list, delete, mark, unmark, bye\");","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"zhongfu"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":180,"author":{"gitId":"zhongfu"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":181,"author":{"gitId":"zhongfu"},"content":"                dialog(e.getMessage().split(\"\\n\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"zhongfu"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"zhongfu"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":184,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":185,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-19"},{"lineNumber":186,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":187,"author":{"gitId":"zhongfu"},"content":"class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":188,"author":{"gitId":"zhongfu"},"content":"    DukeException() {","lastModifiedDate":"2022-01-20"},{"lineNumber":189,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":190,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":191,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":192,"author":{"gitId":"zhongfu"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":193,"author":{"gitId":"zhongfu"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":194,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":195,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":196,"author":{"gitId":"zhongfu"},"content":"    DukeException(String message, Throwable cause) {","lastModifiedDate":"2022-01-20"},{"lineNumber":197,"author":{"gitId":"zhongfu"},"content":"        super(message, cause);","lastModifiedDate":"2022-01-20"},{"lineNumber":198,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":199,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"zhongfu":199}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"    private String eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"    public Event(String name, String eventTime) {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"    public String getEventTime() {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"        return this.eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", this.getDone() ? \"X\" : \" \", this.getName(), this.getEventTime());","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":18}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":" * Object that represents a to-do list task. Contains a name and a state.","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"    private String name;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"    ","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"     * Creates a new task with the given name.","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"     * @param name name of task","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"    protected Task(String name) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"        this.name \u003d name; ","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"    ","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"     * Sets task as done or not done.","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"     * @param done true if task is to be set as done, false otherwise","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"    ","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"     * Returns name of task.","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"     * @return name of task","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"    public String getName() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"        return this.name;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"    ","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"zhongfu"},"content":"     * Returns \"done\" state of task.","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"zhongfu"},"content":"     * @return true if task is marked as done, false otherwise","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"zhongfu"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"zhongfu"},"content":"        return this.done;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"zhongfu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"zhongfu"},"content":"     * Returns task information in a human-readable string.","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"zhongfu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"zhongfu"},"content":"     * @return task details in a human-readable string","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"zhongfu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"zhongfu"},"content":"    abstract public String toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":52}},{"path":"src/main/java/li/zhongfu/cs2103/chatbot/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"package li.zhongfu.cs2103.chatbot;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"        return String.format(\"[T][%s] %s\", this.getDone() ? \"X\" : \" \", this.getName());","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"help","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"mark test","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"todo foo bar","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"deadline bar baz /at qux /remarks lorem ipsum","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"deadline bar baz /by qux /remarks lorem ipsum","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"event sleep /at night","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"event sleep more /for a very long time","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"mark 5","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"unmark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"unmark 8","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"unmark everything","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"event eat /at noon","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"mark 4","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zhongfu":28}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/li/zhongfu/cs2103/chatbot/*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"java -classpath ../bin li.zhongfu.cs2103.chatbot.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhongfu":2,"-":36}}]
