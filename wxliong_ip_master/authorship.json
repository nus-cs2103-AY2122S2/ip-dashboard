[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"    archiveBaseName \u003d \"batman\"","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxliong":19,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"\u003cimg src\u003d\"https://wxliong.github.io/ip/Ui.png\" width\u003d\"310\" height\u003d\"500\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"### Adding Todo task: `todo` ","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"\u003e Adds a todo task.  ","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"Format: `todo \u003cDESCRIPTION\u003e`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"Example: `todo kill joker` ","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"### Adding Event task: `event` ","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"\u003e Adds an event task which includes date and time of event.   ","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"Format: `event DESCRIPTION /at DATE TIME`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"Example: ","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"* `event charity ball /at 10/11/2022 19:00` ","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"* `event charity ball /at 2022-10-11 19:00` ","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"### Adding Deadline task: `deadline` ","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"\u003e Adds a deadline task which includes date and time of deadline.   ","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"Format: `deadline DESCRIPTION /by DATE TIME`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"Example: ","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"* `deadline repair batmobile /by 18/2/2022 23:59` ","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"* `deadline repair batmobile /by 2022-2-18 23:59` ","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"### Listing All Tasks: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"\u003e Displays all existing tasks.  ","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"Format: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"_Note:_  ","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"_- List is sorted in chronological order._  ","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"_- Todo tasks are by default at the top of the list._","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"### Deleting a task: `delete` ","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"\u003e Deletes a task according to the index in the list.  ","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"Format: `delete INDEX`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"Example: `delete 3`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"_Note: Deletes only if the index exists_","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"### Finding keyword within task: `find` ","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"\u003e Displays tasks that matches the keyword given.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"Format: `find`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"Example: ","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"* `find joker` ","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"* `find 18 Feb`","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"### Marking a task: `mark` ","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"\u003e Marks a task as done. Shows X if done, nothing otherwise.","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"Format: `mark INDEX`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"Example: `mark 3` ","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"_Note: Marks only if the index exists_","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"### Unmarking a task: `unmark` ","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"\u003e Unmarks a task as undone. Shows X if done, nothing otherwise. ","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"Format: `unmark INDEX`  ","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"Example: `unmark 3` ","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"_Note: Unmarks only if the index exists_","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"\u003e Program displays exit message and closes after 3 seconds.","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"Format: `bye`  ","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"wxliong":60,"-":24}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    private HBox pictureBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    private final Circle clip \u003d new Circle(45, 45, 45);","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"        pictureBox.setClip(clip);","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wxliong":65}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"import batman.parser.Parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"import batman.storage.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import batman.ui.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"     * Creates a chatbot that assists in","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     * keeping track of tasks a person may have.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     * @param filePath Path to indicate where the","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     *                 storage of the tasks will be located at.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"        ui \u003d new Ui(\"Batman\");","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"     * Gets response from application and parse user\u0027s","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     * input to return a String result.","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     * @return String object of result from user\u0027s input.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"            ui.greeting();","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"            String result \u003d Parser.parseInput(input).toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"                storage.writeToFile(taskList.getTaskList());","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"                return ui.exit();","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"            return result;","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"            return ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wxliong":46,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wxliong":13}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    private static final Duke CHATBOT \u003d new Duke(\"/data/tasks.txt\");","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    private final Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/icon.png\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(CHATBOT);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"            stage.setTitle(\"Batman\");","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"wxliong":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"import java.util.Timer;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import batman.ui.Ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/joker.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/batman.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     * Initializes the start of the GUI.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        ui \u003d new Ui(\"batman\");","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"                DialogBox.getDukeDialog(ui.greeting(), dukeImage));","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"     * Creates two dialog boxes, one echoing user input and the","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"     * other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"                public void run () {","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"                    System.exit(0);","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"            }, 3000);","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wxliong":69}},{"path":"src/main/java/batman/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.exception;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"    protected Error err;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"    public DukeException(Error err) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"        this.err \u003d err;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"     * Returns a string if an invalid input is encountered.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     * @return String object of an invalid input.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    public String invalidInput() {","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        if (this.err \u003d\u003d Error.INVALID_COMMAND) {","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"            return \"I\u0027m sorry, but I don\u0027t know what that means.\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"        return \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"     * Returns a string if an invalid argument is encountered.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"     * @return String object of an empty description.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    public String invalidArg() {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"        if (this.err \u003d\u003d Error.INVALID_ARG) {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"            return \"The argument provided for the task is invalid.\\n\";","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"        return \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"     * Returns a string if an invalid index is encountered.","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"     * @return resulting String object of invalid index.","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"    public String invalidIndex() {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"        if (this.err \u003d\u003d Error.INVALID_DIGIT) {","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"            return \"Please provide a number.\\n\";","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"        return \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"     * Returns a string if index in list does not exist.","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"     * @return String object of a non-existing index in list.","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"    public String listError() {","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"        if (this.err \u003d\u003d Error.LIST_ERROR) {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"            return \"Index does not exists in array.\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"        return \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"     * Returns a string if event task is formatted wrongly.","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"     * @return String object of a wrongly formatted event.","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"    public String invalidEvent() {","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"        if (this.err \u003d\u003d Error.INVALID_EVENT) {","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"            return \"Format is wrong.\\nevent \u003cdesc\u003e /at \u003cdate\u003e \u003ctime\u003e\";","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"        return \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"     * Returns a string if deadline task is formatted wrongly.","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"     * @return String object of a wrongly formatted deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"    public String invalidDeadline() {","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"        if (this.err \u003d\u003d Error.INVALID_DEADLINE) {","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"            return \"Format is wrong.\\ndeadline \u003cdesc\u003e /by \u003cdate\u003e \u003ctime\u003e\";","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"        return \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"     * Returns a string if deadline task is formatted wrongly.","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"     * @return String object of a wrongly formatted deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"    public String emptyCommand() {","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"        if (this.err \u003d\u003d Error.EMPTY_COMMAND) {","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"wxliong"},"content":"            return \"Please enter a valid command.\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"wxliong"},"content":"                   + \"todo \u003cdesc\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"wxliong"},"content":"                   + \"event \u003cdesc\u003e /at \u003cdate\u003e \u003ctime\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"wxliong"},"content":"                   + \"deadline \u003cdesc\u003e /by \u003cdate\u003e \u003ctime\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"wxliong"},"content":"                   + \"mark/unmark \u003cindex\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"wxliong"},"content":"                   + \"delete \u003cindex\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"wxliong"},"content":"                   + \"find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"wxliong"},"content":"                   + \"list\";","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"wxliong"},"content":"        return \"\";","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"wxliong":102}},{"path":"src/main/java/batman/exception/Error.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.exception;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"public enum Error {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"    INVALID_COMMAND,","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"    INVALID_ARG,","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"    INVALID_DIGIT,","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"    INVALID_EVENT,","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"    INVALID_DEADLINE,","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    EMPTY_COMMAND,","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"    LIST_ERROR","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"wxliong":11}},{"path":"src/main/java/batman/parser/DateUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"public class DateUtil {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"    private static final DateTimeFormatter FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-M-d HH:mm\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"            .toFormatter();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    private static final DateTimeFormatter STRING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     * Converts String of datetime to a DateTime object.","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"     * @param str user\u0027s input datetime.","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException check if the datetime string","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"     *                                  matches the given format.","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    public static LocalDateTime stringToDate(String str) throws DateTimeParseException {","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        return LocalDateTime.parse(str, FORMATTER);","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"     * Converts DateTime object to String.","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     * @param dateTime user\u0027s input datetime.","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     * @return String object.","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"    public static String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"        return dateTime.format(STRING_FORMATTER);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"wxliong":38}},{"path":"src/main/java/batman/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import batman.exception.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import batman.exception.Error;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Deadline;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Event;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Task;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Todo;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"public class Parser {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     * Returns a StringBuilder by parsing user","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"     * input and decides next action to take based on it.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     * @param input User input.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     * @return StringBuilder object of result from user\u0027s input.","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    public static StringBuilder parseInput(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"            if (input.equals(\"\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.EMPTY_COMMAND);","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"            switch (command[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"            case \"list\":","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.printList());","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"                checkValidIndex(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"                sb.append(updateStatus(command[0], Integer.parseInt(command[1]) - 1));","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"                checkValid(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"                sb.append(splitTask(command));","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"                checkValidEvent(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"                sb.append(splitTask(command));","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"                checkValidDeadline(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"                sb.append(splitTask(command));","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"                checkValidIndex(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.deleteTask(Integer.parseInt(command[1]) - 1));","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"            case \"find\":","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"                checkValid(command);","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.findTask(command[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.INVALID_COMMAND);","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"            sb.append(e.invalidInput());","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"            sb.append(e.invalidIndex());","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"            sb.append(e.invalidArg());","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"            sb.append(e.invalidEvent());","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"            sb.append(e.invalidDeadline());","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"            sb.append(e.emptyCommand());","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"        return sb;","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"     * Throws an exception if invalid argument is provided.","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"     * @param command User input.","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"    public static void checkValid(String[] command) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"        if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"            throw new DukeException(Error.INVALID_ARG);","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"     * Throws an exception if invalid event is provided.","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"     * @param command User input.","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"    public static void checkValidEvent(String[] command) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"        if (command.length \u003c\u003d 1 || command[1].equals(\"\") || !command[1].contains(\"/at\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"            throw new DukeException(Error.INVALID_EVENT);","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"wxliong"},"content":"     * Throws an exception if invalid deadline is provided.","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"wxliong"},"content":"     * @param command User input.","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"wxliong"},"content":"    public static void checkValidDeadline(String[] command) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"wxliong"},"content":"        if (command.length \u003c\u003d 1 || command[1].equals(\"\") || !command[1].contains(\"/by\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"wxliong"},"content":"            throw new DukeException(Error.INVALID_DEADLINE);","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"wxliong"},"content":"     * Throws an exception if a digit is not provided.","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"wxliong"},"content":"     * @param command User input.","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"wxliong"},"content":"    public static void checkValidIndex(String[] command) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"wxliong"},"content":"        if (command.length \u003c\u003d 1 || command[1].equals(\"\")","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"wxliong"},"content":"                || !command[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"wxliong"},"content":"            throw new DukeException(Error.INVALID_DIGIT);","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":117,"author":{"gitId":"wxliong"},"content":"     * Returns a String object by parsing user","lastModifiedDate":"2022-02-14"},{"lineNumber":118,"author":{"gitId":"wxliong"},"content":"     * input and adding it to tasklist.","lastModifiedDate":"2022-02-14"},{"lineNumber":119,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":120,"author":{"gitId":"wxliong"},"content":"     * @param command User input.","lastModifiedDate":"2022-02-14"},{"lineNumber":121,"author":{"gitId":"wxliong"},"content":"     * @return String object of added task.","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":123,"author":{"gitId":"wxliong"},"content":"    public static String splitTask(String[] command) {","lastModifiedDate":"2022-02-14"},{"lineNumber":124,"author":{"gitId":"wxliong"},"content":"        String task;","lastModifiedDate":"2022-02-14"},{"lineNumber":125,"author":{"gitId":"wxliong"},"content":"        Task t;","lastModifiedDate":"2022-02-14"},{"lineNumber":126,"author":{"gitId":"wxliong"},"content":"        String description;","lastModifiedDate":"2022-02-14"},{"lineNumber":127,"author":{"gitId":"wxliong"},"content":"        String details;","lastModifiedDate":"2022-02-14"},{"lineNumber":128,"author":{"gitId":"wxliong"},"content":"        task \u003d command[1];","lastModifiedDate":"2022-02-14"},{"lineNumber":129,"author":{"gitId":"wxliong"},"content":"        switch (command[0]) {","lastModifiedDate":"2022-02-14"},{"lineNumber":130,"author":{"gitId":"wxliong"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-14"},{"lineNumber":131,"author":{"gitId":"wxliong"},"content":"            description \u003d task.split(\" /\")[0];","lastModifiedDate":"2022-02-14"},{"lineNumber":132,"author":{"gitId":"wxliong"},"content":"            details \u003d task.split(\"/by \")[1];","lastModifiedDate":"2022-02-14"},{"lineNumber":133,"author":{"gitId":"wxliong"},"content":"            t \u003d new Deadline(description, details);","lastModifiedDate":"2022-02-14"},{"lineNumber":134,"author":{"gitId":"wxliong"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":135,"author":{"gitId":"wxliong"},"content":"        case \"event\":","lastModifiedDate":"2022-02-14"},{"lineNumber":136,"author":{"gitId":"wxliong"},"content":"            description \u003d task.split(\" /\")[0];","lastModifiedDate":"2022-02-14"},{"lineNumber":137,"author":{"gitId":"wxliong"},"content":"            details \u003d task.split(\"/at \")[1];","lastModifiedDate":"2022-02-14"},{"lineNumber":138,"author":{"gitId":"wxliong"},"content":"            t \u003d new Event(description, details);","lastModifiedDate":"2022-02-14"},{"lineNumber":139,"author":{"gitId":"wxliong"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":140,"author":{"gitId":"wxliong"},"content":"        default:","lastModifiedDate":"2022-02-14"},{"lineNumber":141,"author":{"gitId":"wxliong"},"content":"            description \u003d task;","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"wxliong"},"content":"            t \u003d new Todo(description);","lastModifiedDate":"2022-02-14"},{"lineNumber":143,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":144,"author":{"gitId":"wxliong"},"content":"        return TaskList.addTask(t);","lastModifiedDate":"2022-02-14"},{"lineNumber":145,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":146,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":147,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":148,"author":{"gitId":"wxliong"},"content":"     * Returns a String object by parsing user","lastModifiedDate":"2022-02-14"},{"lineNumber":149,"author":{"gitId":"wxliong"},"content":"     * input and updating status of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":150,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":151,"author":{"gitId":"wxliong"},"content":"     * @param action User input.","lastModifiedDate":"2022-02-14"},{"lineNumber":152,"author":{"gitId":"wxliong"},"content":"     * @param index Index of existing task in list.","lastModifiedDate":"2022-02-14"},{"lineNumber":153,"author":{"gitId":"wxliong"},"content":"     * @return String object of added task.","lastModifiedDate":"2022-02-14"},{"lineNumber":154,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":155,"author":{"gitId":"wxliong"},"content":"    public static String updateStatus(String action, int index) {","lastModifiedDate":"2022-02-14"},{"lineNumber":156,"author":{"gitId":"wxliong"},"content":"        String result;","lastModifiedDate":"2022-02-14"},{"lineNumber":157,"author":{"gitId":"wxliong"},"content":"        switch (action) {","lastModifiedDate":"2022-02-14"},{"lineNumber":158,"author":{"gitId":"wxliong"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-14"},{"lineNumber":159,"author":{"gitId":"wxliong"},"content":"            result \u003d TaskList.markStatus(index);","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"wxliong"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"wxliong"},"content":"        default:","lastModifiedDate":"2022-02-14"},{"lineNumber":162,"author":{"gitId":"wxliong"},"content":"            result \u003d TaskList.unmarkStatus(index);","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"wxliong"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":164,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":165,"author":{"gitId":"wxliong"},"content":"        return result;","lastModifiedDate":"2022-02-14"},{"lineNumber":166,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":167,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":167}},{"path":"src/main/java/batman/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.io.File;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Todo;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"public class Storage {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    private static Path path;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"     * Stores and loads tasks in specified file.","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"     * @param filePath Path to indicate where the","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"     *                 storage of the tasks will be located at.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        String dataPath \u003d System.getProperty(\"user.dir\") + filePath;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"        path \u003d Paths.get(dataPath);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"        createFile();","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     * Creates file to store tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    private static void createFile() {","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        File dataDir \u003d new File(\"./data\");","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        dataDir.mkdirs();","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            Files.createFile(path);","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"            assert Files.exists(path) : \"File does not exists\";","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"            System.out.println(\"File has been created...\");","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"            System.out.println(\"Loading content...\");","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"     * Writes existing tasks to file.","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"     * @param tasks An arrayList of existing tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"        Files.write(path, \"\".getBytes());","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"            Files.write(path, t.appendToFile().getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"     * Returns tasks from specified file.","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"     * @return ArrayList of existing tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"            String[] item \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"            switch (item[0]) {","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"            case \"D\":","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"                tasks.add(new Deadline(item[1].equals(\"1\"), item[2], item[3]));","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"            case \"E\":","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"                tasks.add(new Event(item[1].equals(\"1\"), item[2], item[3]));","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"            default:","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"                String date \u003d item[3].split(\"Date Added: \")[1];","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"                tasks.add(new Todo(item[1].equals(\"1\"), item[2], date));","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"        return tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":86}},{"path":"src/main/java/batman/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import batman.parser.DateUtil;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":" * A task that has the date and time to indicate its deadline","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     * Creates a Deadline object which has date and time included.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"     * @param by Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    public Deadline(boolean isDone, String description, String by) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"        this.by \u003d DateUtil.stringToDate(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"     * Creates a Deadline object which has date and time included.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     * @param by Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        this(false, description, by);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"     * Returns Task\u0027s details to store in file.","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"     * @return String object of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"    public String appendToFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"        return \"D|\" + (super.isDone ? \"1\" : \"0\") + \"|\" + super.description + \"|\" + DateUtil.dateToString(by) + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"     * Returns details of task\u0027s date and time.","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"        return by;","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"     * Returns task\u0027s type.","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"     * @return String object of task\u0027s type.","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"    public String taskType() {","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"        return \"D\";","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"     * Checks if keyword is found in tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"     * @param keyword Total number of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"     * @return Boolean object of whether matched tasks exists.","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"        String task \u003d taskType() + description + DateUtil.dateToString(by);","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"        return task.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"     * Returns status icon and description of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"     * @return String object of task\u0027s details.","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateUtil.dateToString(by) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":91}},{"path":"src/main/java/batman/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import batman.parser.DateUtil;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":" * A Task encapsulating an event with a date and time.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     * Creates an Event object which has date and time included.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"     * @param at Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    public Event(boolean isDone, String description, String at) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"        this.at \u003d DateUtil.stringToDate(at);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"     * Creates an Event object which has date and time included.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     * @param at Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public Event(String description, String at) throws DateTimeParseException {","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        this(false, description, at);","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"     * Returns Task\u0027s details to store in file.","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"     * @return String object of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"    public String appendToFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"        return \"E|\" + (super.isDone ? \"1\" : \"0\") + \"|\" + super.description + \"|\" + DateUtil.dateToString(at) + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"     * Returns details of task\u0027s date and time.","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"        return at;","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"     * Returns task\u0027s type.","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"     * @return String object of task\u0027s type.","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"    public String taskType() {","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"        return \"E\";","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"     * Checks if keyword is found in tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"     * @param keyword Total number of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"     * @return Boolean object of whether matched tasks exists.","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"        String task \u003d taskType() + description + DateUtil.dateToString(at);","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"        return task.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"     * Returns status icon and description of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"     * @return String object of task\u0027s details.","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateUtil.dateToString(at) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":91}},{"path":"src/main/java/batman/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"    protected String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"     * Encapsulates tasks to be done, that can be marked as completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"     * Returns icon of task\u0027s status.","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"     * If task is done, X is returned.","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"     * @return String of icon of task\u0027s status.","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     * Marks task as done.","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"    public void markDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"     * Unmarks task as not done.","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"     * Prints total number of tasks in existing list.","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"     * @param totalTasks Total number of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"     * @return String object of total number of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"    public String printNoOfTasks(int totalTasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"        return \"Now you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"    public abstract boolean contains(String keyword);","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"    public abstract String taskType();","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"    public abstract String appendToFile();","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"    public abstract LocalDateTime getDateTime();","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"     * Sorts the tasks chronologically.","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"     * @param o1 Task object to be compared with.","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"     * @return An integer, returns 0 if equal,","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"     *          less than 0 if smaller,","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"     *          greater than 0 if greater.","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"    public int compareTo(Task o1) {","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"        return getDateTime().compareTo(o1.getDateTime());","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"     * Returns status icon and description of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"     * @return String object of task\u0027s details.","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"wxliong":81}},{"path":"src/main/java/batman/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import batman.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"import batman.exception.Error;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"public class TaskList {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     * Creates a new ArrayList to store tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"     * Creates and stores existing tasks in ArrayList.","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"     * @param tasks Existing ArrayList of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     * Returns current task by index.","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     * @param index An integer specifying an index in the list.","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"     * Returns size of list.","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"     * Returns an ArrayList of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"        return tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"     * Adds tasks to list.","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"     * @param t Task object","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"     * @return String object of added task.","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"    public static String addTask(Task t) {","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"            tasks.add(t);","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"            Collections.sort(tasks);","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"            return printTask(t);","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"            return \"Missing argument(s) for tasks\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"                    + \"e.g. \u003ctask\u003e \u003cdesc\u003e /(at or by) \u003cdatetime\u003e\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"            return \"Get the date format right!\\ndd/MM/yyyy HH:mm OR yyyy-MM-dd HH:mm\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"     * Deletes an existing task based on the index given.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"     * @param index The index of an existing task in the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"     * @return String object of deleted task and existing list.","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"    public static String deleteTask(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"            if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.LIST_ERROR);","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"            tasks.remove(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"            return \"Got it. Task removed:\\n  \" + t + \"\\n\" + t.printNoOfTasks(tasks.size()) + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"            return printList() + e.listError();","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"wxliong"},"content":"     * Marks the status of the task.","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"wxliong"},"content":"     * @param index The index of an existing task in the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"wxliong"},"content":"     * @return String object of the task\u0027s changed status.","lastModifiedDate":"2022-02-14"},{"lineNumber":97,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"wxliong"},"content":"    public static String markStatus(int index) {","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"wxliong"},"content":"            if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.LIST_ERROR);","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"wxliong"},"content":"            tasks.get(index).markDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"wxliong"},"content":"            return \"Alfred, mark it as done!\\n  \"","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"wxliong"},"content":"                    + tasks.get(index).toString() + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":107,"author":{"gitId":"wxliong"},"content":"            return printList() + e.listError();","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":110,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":112,"author":{"gitId":"wxliong"},"content":"     * Unmarks the status of the task.","lastModifiedDate":"2022-02-14"},{"lineNumber":113,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":114,"author":{"gitId":"wxliong"},"content":"     * @param index The index of an existing task in the list.","lastModifiedDate":"2022-02-14"},{"lineNumber":115,"author":{"gitId":"wxliong"},"content":"     * @return String object of the task\u0027s changed status.","lastModifiedDate":"2022-02-14"},{"lineNumber":116,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":117,"author":{"gitId":"wxliong"},"content":"    public static String unmarkStatus(int index) {","lastModifiedDate":"2022-02-14"},{"lineNumber":118,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-02-14"},{"lineNumber":119,"author":{"gitId":"wxliong"},"content":"            if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-02-14"},{"lineNumber":120,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.LIST_ERROR);","lastModifiedDate":"2022-02-14"},{"lineNumber":121,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"wxliong"},"content":"            tasks.get(index).unmarkDone();","lastModifiedDate":"2022-02-14"},{"lineNumber":123,"author":{"gitId":"wxliong"},"content":"            return \"Make up your mind. Alfred, unmark it!\\n  \"","lastModifiedDate":"2022-02-14"},{"lineNumber":124,"author":{"gitId":"wxliong"},"content":"                    + tasks.get(index).toString() + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":125,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"wxliong"},"content":"            return printList() + e.listError();","lastModifiedDate":"2022-02-14"},{"lineNumber":127,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"wxliong"},"content":"     * Finds tasks using given keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"wxliong"},"content":"     * @param keyword A word given by user.","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"wxliong"},"content":"     * @return String object of the tasks found.","lastModifiedDate":"2022-02-14"},{"lineNumber":135,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"wxliong"},"content":"    public static String findTask(String keyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":137,"author":{"gitId":"wxliong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":138,"author":{"gitId":"wxliong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"wxliong"},"content":"            if (t.contains(keyword)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":140,"author":{"gitId":"wxliong"},"content":"                int index \u003d tasks.indexOf(t) + 1;","lastModifiedDate":"2022-02-14"},{"lineNumber":141,"author":{"gitId":"wxliong"},"content":"                result +\u003d index + \". \" + t + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":143,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":144,"author":{"gitId":"wxliong"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2022-02-14"},{"lineNumber":145,"author":{"gitId":"wxliong"},"content":"            return \"No matching tasks in your list.\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":146,"author":{"gitId":"wxliong"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":147,"author":{"gitId":"wxliong"},"content":"            return \"Here are the matching tasks in your list:\\n\" + result;","lastModifiedDate":"2022-02-14"},{"lineNumber":148,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":149,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":150,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":151,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":152,"author":{"gitId":"wxliong"},"content":"     * Returns String object of all existing tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":153,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"wxliong"},"content":"     * @return String object of task list.","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":156,"author":{"gitId":"wxliong"},"content":"    public static String printList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":157,"author":{"gitId":"wxliong"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":158,"author":{"gitId":"wxliong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":159,"author":{"gitId":"wxliong"},"content":"            return \"List is empty.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":160,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":161,"author":{"gitId":"wxliong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":162,"author":{"gitId":"wxliong"},"content":"            s.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":163,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":164,"author":{"gitId":"wxliong"},"content":"        return s.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":165,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":166,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":167,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":168,"author":{"gitId":"wxliong"},"content":"     * Returns String object of added task.","lastModifiedDate":"2022-02-14"},{"lineNumber":169,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":170,"author":{"gitId":"wxliong"},"content":"     * @param t Task object","lastModifiedDate":"2022-02-14"},{"lineNumber":171,"author":{"gitId":"wxliong"},"content":"     * @return String object of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":172,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":173,"author":{"gitId":"wxliong"},"content":"    private static String printTask(Task t) {","lastModifiedDate":"2022-01-30"},{"lineNumber":174,"author":{"gitId":"wxliong"},"content":"        return \"Got it. Task added:\\n  \" + t + \"\\n\" + t.printNoOfTasks(tasks.size()) + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":176}},{"path":"src/main/java/batman/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import batman.parser.DateUtil;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    public Todo(boolean isDone, String description, String time) {","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"        this.time \u003d DateUtil.stringToDate(time);","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    public Todo(String description) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        this(false, description, DateUtil.dateToString(LocalDateTime.now()));","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     * Returns Task\u0027s details to store in file.","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     * @return String object of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"    public String appendToFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        return \"T|\" + (super.isDone ? \"1\" : \"0\") + \"|\" + super.description","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"                + \"|\" + \"Date Added: \" + DateUtil.dateToString(time) + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"     * Returns details of task\u0027s date and time.","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"        return time;","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"     * Returns task\u0027s type.","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"     * @return String object of task\u0027s type.","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"    public String taskType() {","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"        return \"T\";","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"     * Checks if keyword is found in tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"     * @param keyword Total number of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"     * @return Boolean object of whether matched tasks exists.","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"        String task \u003d taskType() + description;","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"        return task.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"     * Returns status icon and description of tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"     * @return String object of task\u0027s details.","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":83}},{"path":"src/main/java/batman/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"public class Ui {","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"    private final String botName;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"     * Handles the interaction with the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"     * @param botName Name of the chatbot","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    public Ui(String botName) {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"        this.botName \u003d botName;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     * Displays the initialisation message.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    public String greeting() {","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"        return \"Hello! I\u0027m \" + botName + \"\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"     * Displays the exit message.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"    public String exit() {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"        return \"Bye this program will self-destruct in 3 seconds. \"","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"                + \"This city needs me. na na na na na na BATMAN\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     * Displays the error message.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     * @param error Message of error","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public String showLoadingError(String error) {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        return error;","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" minHeight\u003d\"-Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"BOTTOM_RIGHT\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 5; -fx-background-color: #FFFFFF; -fx-text-fill: BLACK\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        \u003cHBox fx:id\u003d\"pictureBox\" style\u003d\"-fx-background-color: #EAFBDB; -fx-padding: 5 5 0 0; \"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wxliong":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"        \u003cImageView fitHeight\u003d\"557.0\" fitWidth\u003d\"430.0\" pickOnBounds\u003d\"true\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"                \u003cImage url\u003d\"@../images/background.jpeg\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.5\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"wxliong":26}},{"path":"src/test/java/batman/DateUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import batman.parser.Parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"public class DateUtilTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"    private StringBuilder result;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    private String expected;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    private String input;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    public void parser_invalidInput_incorrectDateResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        input \u003d \"event project meeting \" + \"/at Sunday\";","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Get the date format right!\\ndd/MM/yyyy HH:mm OR yyyy-MM-dd HH:mm\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    public void parser_validInput_correctDateResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        input \u003d \"event project meeting /at 1/01/2022 11:00\";","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(0)","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":33}},{"path":"src/test/java/batman/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import batman.parser.Parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    private static final String[] COMMANDS \u003d {\"event\", \"deadline\", \"todo\"};","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    private static final String[] DESC \u003d {\" project meeting \", \" return book \", \" borrow book \"};","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"    private static final String DATETIME \u003d \"1/01/2022 11:00\";","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    private StringBuilder result;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    private String expected;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    private String input;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    public void parser_incorrectInput_invalidCommandResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"        String command \u003d \"test\";","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(command);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    public void parser_incorrectInput_emptyDescResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"            StringBuilder result \u003d Parser.parseInput(COMMANDS[i]);","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"            expected \u003d \"The description of a task cannot be empty.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"            assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"    public void parser_incorrectInput_missingArgResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"            String input \u003d COMMANDS[i] + DESC[i] + DATETIME;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            StringBuilder result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"            expected \u003d \"Missing argument(s) for tasks\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"                   + \"e.g. \u003ctask\u003e \u003cdesc\u003e /(at or by) \u003cdatetime\u003e\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"            assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"    public void parser_correctInput_validCommandResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"        input \u003d COMMANDS[0] + DESC[0] + \"/at \" + DATETIME;","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(0)","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"        input \u003d COMMANDS[1] + DESC[1] + \"/by \" + DATETIME;","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(1)","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"        input \u003d COMMANDS[2] + DESC[2];","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(2)","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"        input \u003d \"delete 3\";","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task removed:\\n  [T][ ]\" + DESC[2]","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"    public void parser_correctInput_invalidIndexResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"        input \u003d \"delete 3\";","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"        expected \u003d taskList.printList() + \"Index does not exists in array.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"        input \u003d \"mark 3\";","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"        expected \u003d taskList.printList() + \"Index does not exists in array.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":89}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"bleh","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"delete 1","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"deadline","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"deadline return book /by 1/1/2020 18:00","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"event project meeting /at 12/12/2021 09:00","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"mark 0","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"unmark 0","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"delete 4","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"delete 3","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"event project meeting /at 12/12/2021 09:00","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"find test","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"find project","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":26}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"bye","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"wxliong":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"then","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"fi","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxliong":6,"-":38}}]
