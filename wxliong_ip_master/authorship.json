[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import batman.parser.Parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import batman.storage.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import batman.ui.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     * Duke class, a chatbot that assists in","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"     * keeping track of tasks a person may have.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     * @param filePath Path to indicate where the","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     *                 storage of the tasks will be located at.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"        ui \u003d new Ui(\"Batman\");","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"    private void run() {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"            taskList.getTasksFromFile(storage.load());","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"            ui.greeting();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"            String userInput \u003d ui.read();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"            while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"                ui.printOutput(Parser.parseInput(userInput));","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"                userInput \u003d ui.read();","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"                storage.writeToFile(taskList.getTaskList());","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            ui.exit();","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"     * Creates a Duke object and runs the chatbot.","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"        Duke chatBot \u003d new Duke(\"/data/tasks.txt\");","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"        chatBot.run();","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wxliong":48,"-":4}},{"path":"src/main/java/batman/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.exception;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"    protected Error err;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"    public DukeException(Error err) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"        this.err \u003d err;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"     * Returns a string if an invalid input is encountered.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"    public String invalidInput() {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"        return \"I\u0027m sorry, but I don\u0027t know what that means.\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    public String emptyDesc() {","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        return \"The description of a task cannot be empty.\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"    public String listError() {","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        return \"Index does not exists in array.\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"wxliong":26}},{"path":"src/main/java/batman/exception/Error.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.exception;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"public enum Error {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"    INVALID,","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"    EMPTYDESC,","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"    LISTERROR","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"wxliong":7}},{"path":"src/main/java/batman/parser/DateUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"public class DateUtil {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"    private static final DateTimeFormatter FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-M-d HH:mm\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"            .toFormatter();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    private static final DateTimeFormatter STRING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    public static LocalDateTime stringToDate(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        return LocalDateTime.parse(dateTime, FORMATTER);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    public static String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        return dateTime.format(STRING_FORMATTER);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"wxliong":24}},{"path":"src/main/java/batman/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import batman.exception.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import batman.exception.Error;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"public class Parser {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"     * Returns a StringBuilder by parsing user","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"     * input and decides next action to take based on it.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"     * @param input User input.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    public static StringBuilder parseInput(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"            switch (command[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"            case \"list\":","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.printList());","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.toggleStatus(\"mark\", Integer.parseInt(command[1]) - 1));","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.toggleStatus(\"unmark\", Integer.parseInt(command[1]) - 1));","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"            case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.addTask(command));","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.deleteTask(Integer.parseInt(command[1]) - 1));","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"            case \"find\":","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"                sb.append(TaskList.findTask(command[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.INVALID);","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"            sb.append(e.invalidInput());","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"        return sb;","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":48}},{"path":"src/main/java/batman/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.io.File;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"import batman.tasks.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"public class Storage {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    private static Path path;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     * Storage for tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"     * @param filePath Path to indicate where the","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"     *                 storage of the tasks will be located at.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"        //initialize Path object","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        String dataPath \u003d System.getProperty(\"user.dir\") + filePath;","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"        path \u003d Paths.get(dataPath);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        createFile();","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     * Creates file to store tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"    public static void createFile() {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"        File dataDir \u003d new File(\"./data\");","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"        dataDir.mkdirs();","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        //create file","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"            Files.createFile(path);","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            System.out.println(\"File has been created...\");","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"            System.out.println(\"Loading content...\");","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"     * Writes existing tasks to file.","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"     * @param tasks An arrayList of existing tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"        Files.write(path, \"\".getBytes());","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"            Files.write(path, t.appendtoFile().getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"    public List\u003cString\u003e load() throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"        return Files.readAllLines(path);","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":62}},{"path":"src/main/java/batman/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import batman.parser.DateUtil;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":" * A task that has the date and time to indicate its deadline","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     * @param by Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    public Deadline(boolean isDone, String description, String by) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        this.by \u003d DateUtil.stringToDate(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"     * @param by Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"        this(false, description, by);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"    public String appendtoFile() {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        return \"D|\" + (super.isDone ? \"1\" : \"0\") + \"|\" + super.description + \"|\" + DateUtil.dateToString(by) + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateUtil.dateToString(by) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":45}},{"path":"src/main/java/batman/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"import batman.parser.DateUtil;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":" * A Task encapsulating an event with a date and time.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"     * @param at Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    public Event(boolean isDone, String description, String at) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        this.at \u003d DateUtil.stringToDate(at);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"     * @param by Format: \"yyyy-mm-dd hh:mm\" or \"dd/mm/yyyy hh:mm\" (24h time).","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"    public Event(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"        this(false, description, by);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"    public String appendtoFile() {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        return \"E|\" + (super.isDone ? \"1\" : \"0\") + \"|\" + super.description + \"|\" + DateUtil.dateToString(at) + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateUtil.dateToString(at) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":45}},{"path":"src/main/java/batman/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"    protected String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"     * An encapsulation of a Task to be done, that can be marked as completed.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    public void markItem() {","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    public void unmarkItem() {","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    public String printNoOfTasks(int totalTasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"        return \"Now you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"    public abstract String appendtoFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"wxliong":39}},{"path":"src/main/java/batman/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import batman.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import batman.exception.Error;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"public class TaskList {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"        return tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"     * Adds tasks depending on what type of task it is.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"     * @param command An array of strings containing the","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"     *                details of a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    public static String addTask(String[] command) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"            String task;","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"            Task t;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            String description;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"            String details;","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.EMPTYDESC);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"            task \u003d command[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"            switch (command[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"                description \u003d task.split(\" /\")[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"                details \u003d task.split(\"/by \")[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"                t \u003d new Deadline(description, details);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"            case \"event\":","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"                description \u003d task.split(\" /\")[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"                details \u003d task.split(\"/at \")[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"                t \u003d new Event(description, details);","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"                description \u003d task;","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"                t \u003d new Todo(description);","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"            tasks.add(t);","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"            return printTask(t);","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"            return e.emptyDesc();","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"            return \"Missing argument(s) for tasks\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"                    + \"e.g. \u003ctask\u003e \u003cdesc\u003e /(at or by) \u003cdatetime\u003e\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"            return \"Get the date format right!\\ndd/MM/yyyy HH:mm OR yyyy-MM-dd HH:mm\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"     * Deletes an existing task based on the index given.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"     * @param index The index of an existing task in the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"    public static String deleteTask(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"            if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.LISTERROR);","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"            tasks.remove(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"            return \"Got it. Task removed:\\n  \" + t + \"\\n\" + t.printNoOfTasks(tasks.size()) + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"            return printList() + e.listError();","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"wxliong"},"content":"     * Toggles the status of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"wxliong"},"content":"     * @param action Mark/Unmark task.","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"wxliong"},"content":"     * @param index The index of an existing task in the list.","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"wxliong"},"content":"    public static StringBuilder toggleStatus(String action, int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"wxliong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"wxliong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"wxliong"},"content":"            if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"wxliong"},"content":"                throw new DukeException(Error.LISTERROR);","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"wxliong"},"content":"            switch (action) {","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"wxliong"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"wxliong"},"content":"                tasks.get(index).markItem();","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"wxliong"},"content":"                sb.append(\"Alfred, mark it as done!\\n  \")","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"wxliong"},"content":"                        .append(tasks.get(index).toString()).append(\"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":108,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"wxliong"},"content":"            default:","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"wxliong"},"content":"                tasks.get(index).unmarkItem();","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"wxliong"},"content":"                sb.append(\"Make up your mind. Alfred, unmark it!\\n  \")","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"wxliong"},"content":"                        .append(tasks.get(index).toString()).append(\"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"wxliong"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":115,"author":{"gitId":"wxliong"},"content":"            return sb;","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"wxliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"wxliong"},"content":"            return sb.append(printList()).append(e.listError());","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"wxliong"},"content":"     * Finds tasks using given keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"wxliong"},"content":"     * @param keyword A word given by user.","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"wxliong"},"content":"    public static StringBuilder findTask(String keyword) {","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"wxliong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"wxliong"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"wxliong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"wxliong"},"content":"            if (t.description.contains(keyword)) {","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"wxliong"},"content":"                temp.add(t);","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"wxliong"},"content":"        if (temp.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"wxliong"},"content":"            sb.append(\"No matching tasks in your list.\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"wxliong"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"wxliong"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"wxliong"},"content":"            for (int i \u003d 0; i \u003c temp.size(); i++) {","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"wxliong"},"content":"                sb.append(i + 1).append(\". \").append(temp.get(i)).append(\"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":140,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":141,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":142,"author":{"gitId":"wxliong"},"content":"        return sb;","lastModifiedDate":"2022-01-31"},{"lineNumber":143,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":144,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":145,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":146,"author":{"gitId":"wxliong"},"content":"     * Gets tasks from specified file.","lastModifiedDate":"2022-01-31"},{"lineNumber":147,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":148,"author":{"gitId":"wxliong"},"content":"     * @param lines A list of strings that is read from the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":149,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":150,"author":{"gitId":"wxliong"},"content":"    public void getTasksFromFile(List\u003cString\u003e lines) {","lastModifiedDate":"2022-01-30"},{"lineNumber":151,"author":{"gitId":"wxliong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":152,"author":{"gitId":"wxliong"},"content":"        if (lines !\u003d null) {","lastModifiedDate":"2022-01-30"},{"lineNumber":153,"author":{"gitId":"wxliong"},"content":"            for (String line : lines) {","lastModifiedDate":"2022-01-30"},{"lineNumber":154,"author":{"gitId":"wxliong"},"content":"                String[] item \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"wxliong"},"content":"                switch (item[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":156,"author":{"gitId":"wxliong"},"content":"                case \"D\":","lastModifiedDate":"2022-01-30"},{"lineNumber":157,"author":{"gitId":"wxliong"},"content":"                    tasks.add(new Deadline(item[1].equals(\"1\"), item[2], item[3]));","lastModifiedDate":"2022-01-30"},{"lineNumber":158,"author":{"gitId":"wxliong"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":159,"author":{"gitId":"wxliong"},"content":"                case \"E\":","lastModifiedDate":"2022-01-30"},{"lineNumber":160,"author":{"gitId":"wxliong"},"content":"                    tasks.add(new Event(item[1].equals(\"1\"), item[2], item[3]));","lastModifiedDate":"2022-01-30"},{"lineNumber":161,"author":{"gitId":"wxliong"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":162,"author":{"gitId":"wxliong"},"content":"                default:","lastModifiedDate":"2022-01-30"},{"lineNumber":163,"author":{"gitId":"wxliong"},"content":"                    tasks.add(new Todo(item[1].equals(\"1\"), item[2]));","lastModifiedDate":"2022-01-30"},{"lineNumber":164,"author":{"gitId":"wxliong"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":165,"author":{"gitId":"wxliong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":166,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":167,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":168,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":169,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":170,"author":{"gitId":"wxliong"},"content":"     * Prints all existing tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":171,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":172,"author":{"gitId":"wxliong"},"content":"    public static String printList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":173,"author":{"gitId":"wxliong"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":174,"author":{"gitId":"wxliong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"wxliong"},"content":"            return \"List is empty.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":177,"author":{"gitId":"wxliong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"wxliong"},"content":"            s.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":179,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":180,"author":{"gitId":"wxliong"},"content":"        return s.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":181,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":182,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":183,"author":{"gitId":"wxliong"},"content":"    private static String printTask(Task t) {","lastModifiedDate":"2022-01-30"},{"lineNumber":184,"author":{"gitId":"wxliong"},"content":"        return \"Got it. Task added:\\n  \" + t + \"\\n\" + t.printNoOfTasks(tasks.size()) + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":185,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":186,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":186}},{"path":"src/main/java/batman/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"    protected boolean status;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"     * @throws DateTimeParseException  If by is wrongly formatted.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"    public Todo(String description) throws DateTimeParseException {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        this(false, description);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    public String appendtoFile() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        return \"T|\" + (super.isDone ? \"1\" : \"0\") + \"|\" + super.description + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":35}},{"path":"src/main/java/batman/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman.ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"public class Ui {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"    private final String line \u003d \"+\" + String.valueOf(\u0027-\u0027).repeat(50) + \"+\";","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"    private final String botName;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"     * Ui handles the interaction with the user","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"     * @param botName Name of the chatbot","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    public Ui(String botName) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        this.botName \u003d botName;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"     * Displays the initialisation message","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    public void greeting() {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"        String logo \u003d \"          .  .\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"                + \"          |\\\\_|\\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"                + \"          | a_a\\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"                + \"          | | \\\"]\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"                + \"      ____| \u0027-\\\\___\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"                + \"     /.----.___.-\u0027\\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"                + \"   /   .-. (~v~) /|\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"                + \"  |\u0027|  \\\\:  .--  / \\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"                + \" / |-/  \\\\_/____/\\\\/~|\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"                + \"|/  \\\\ |  []_|_|_] \\\\ |\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"                + \"| \\\\  | \\\\ |___   _\\\\ ]_}\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"                + \"| |    |  /  /  |    \\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"                + \"\\\\ |    |/\\\\|  |/|/\\\\    \\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"                + \" \\\\|\\\\ |\\\\|  |  | / /\\\\/\\\\__\\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"                + \"  \\\\ \\\\| | /   | |__\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"                + \"       / |   |____)\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"                + \"       |_/\";","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"        sb.append(logo).append(\"\\n\").append(\"Hello! I\u0027m \").append(botName)","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"                .append(\"\\n\").append(\"What can I do for you?\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"        printOutput(sb);","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"    public String read() {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"    public void printOutput(StringBuilder input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"        System.out.println(line + \"\\n\" + input + line);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"     * Displays the exit message","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"    public void exit() {","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"        sc.close();","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"        String logo \u003d \"          _,     _   _     ,_\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"                + \"      .-\u0027` /     \\\\\u0027-\u0027/     \\\\ `\u0027-.\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"                + \"     /    |      |   |      |    \\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"                + \"    ;      \\\\_  _/     \\\\_  _/      ;\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"                + \"   |         ``         ``         |\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"                + \"   |                               |\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"                + \"    ;    .-.   .-.   .-.   .-.    ;\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"                + \"     \\\\  (   \u0027.\u0027   \\\\ /   \u0027.\u0027   )  /\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"                + \"      \u0027-.;         V         ;.-\u0027\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"                + \"          `                 `\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"        sb.append(\"Bye. This city needs me. na na na na na na BATMAN\\n\").append(logo);","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"        printOutput(sb);","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"     * Displays the error message","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"     * @param error Message of error","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"    public void showLoadingError(String error) {","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"        sb.append(error);","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"        printOutput(sb);","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":87}},{"path":"src/test/java/batman/DateUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import batman.parser.Parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"public class DateUtilTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"    private StringBuilder result;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    private String expected;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    private String input;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    public void parser_invalidInput_incorrectDateResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"        input \u003d \"event project meeting \" + \"/at Sunday\";","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Get the date format right!\\ndd/MM/yyyy HH:mm OR yyyy-MM-dd HH:mm\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"    public void parser_validInput_correctDateResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"        input \u003d \"event project meeting /at 1/01/2022 11:00\";","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(0)","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":33}},{"path":"src/test/java/batman/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"package batman;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"import batman.parser.Parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"import batman.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"    private static final String[] COMMANDS \u003d {\"event\", \"deadline\", \"todo\"};","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"    private static final String[] DESC \u003d {\" project meeting \", \" return book \", \" borrow book \"};","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"    private static final String DATETIME \u003d \"1/01/2022 11:00\";","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"    private StringBuilder result;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"    private String expected;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    private String input;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"    public void parser_incorrectInput_invalidCommandResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"        String command \u003d \"test\";","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(command);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"wxliong"},"content":"    public void parser_incorrectInput_emptyDescResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"wxliong"},"content":"            StringBuilder result \u003d Parser.parseInput(COMMANDS[i]);","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"wxliong"},"content":"            expected \u003d \"The description of a task cannot be empty.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"wxliong"},"content":"            assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"wxliong"},"content":"    public void parser_incorrectInput_missingArgResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"wxliong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"wxliong"},"content":"            String input \u003d COMMANDS[i] + DESC[i] + DATETIME;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"wxliong"},"content":"            StringBuilder result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"wxliong"},"content":"            expected \u003d \"Missing argument(s) for tasks\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"wxliong"},"content":"                   + \"e.g. \u003ctask\u003e \u003cdesc\u003e /(at or by) \u003cdatetime\u003e\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"wxliong"},"content":"            assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"wxliong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"wxliong"},"content":"    public void parser_correctInput_validCommandResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"wxliong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"wxliong"},"content":"        input \u003d COMMANDS[0] + DESC[0] + \"/at \" + DATETIME;","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(0)","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"wxliong"},"content":"        input \u003d COMMANDS[1] + DESC[1] + \"/by \" + DATETIME;","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(1)","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"wxliong"},"content":"        input \u003d COMMANDS[2] + DESC[2];","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task added:\\n  \" + taskList.get(2)","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"wxliong"},"content":"        input \u003d \"delete 3\";","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"wxliong"},"content":"        expected \u003d \"Got it. Task removed:\\n  [T][ ]\" + DESC[2]","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"wxliong"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"wxliong"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"wxliong"},"content":"    public void parser_correctInput_invalidIndexResult() {","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"wxliong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"wxliong"},"content":"        input \u003d \"delete 3\";","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"wxliong"},"content":"        expected \u003d taskList.printList() + \"Index does not exists in array.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"wxliong"},"content":"        input \u003d \"mark 3\";","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"wxliong"},"content":"        result \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"wxliong"},"content":"        expected \u003d taskList.printList() + \"Index does not exists in array.\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"wxliong"},"content":"        assertEquals(expected, result.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"wxliong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"wxliong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"wxliong":89}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"bleh","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"wxliong"},"content":"delete 1","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"wxliong"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"wxliong"},"content":"deadline","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"wxliong"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"wxliong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"wxliong"},"content":"deadline return book /by 1/1/2020 18:00","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"wxliong"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"wxliong"},"content":"event project meeting /at 12/12/2021 09:00","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"wxliong"},"content":"mark 0","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"wxliong"},"content":"unmark 0","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"wxliong"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"wxliong"},"content":"delete 4","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"wxliong"},"content":"delete 3","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"wxliong"},"content":"event project meeting /at 12/12/2021 09:00","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"wxliong"},"content":"find test","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"wxliong"},"content":"find project","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"wxliong"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"wxliong":26}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxliong"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"wxliong"},"content":"bye","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"wxliong":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"wxliong"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"wxliong"},"content":"then","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"wxliong"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"wxliong"},"content":"fi","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"wxliong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"wxliong"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxliong":6,"-":38}}]
