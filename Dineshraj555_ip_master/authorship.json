[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"# duke project template","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Dineshraj555":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"T : 0 :  this","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"T : 0 :  that","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"T : 0 :  lala","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"T : 0 :  boom boom","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"T : 0 :  work","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"D : 0 :  work  : Mar-03-2022 09:23 AM","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"E : 0 :  work  : park","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Dineshraj555":7}},{"path":"src/Test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    public void testToSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"                \"D : 0 : work : 2022-02-02 06:30\",","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"                new Deadline(\"work\", \"2022-02-02 06:30\").toSave());","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"                \"[D][ ] work (by: 2022-02-02 06:30)\",","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"                new Deadline(\"work\", \"2022-02-02 06:30\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":20}},{"path":"src/Test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class EventTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    public void testToSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"                \"E : 0 : work : 2022-02-02 06:30\",","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"                new Event(\"work\", \"2022-02-02 06:30\").toSave());","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"                \"[E][ ] work (by: 2022-02-02 06:30)\",","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"                new Event(\"work\", \"2022-02-02 06:30\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import duke.UI;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":" * Representation of Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"     * File where Duke is stored, read and written.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * List containing Tasks for Duke to process.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * User Interface point of Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    private UI ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * Creates Duke to process.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     * @param filePath Name of the path where Duke is to be stored.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * @throws Exception If something unexpected happens.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    public Duke(String filePath) throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        tasks \u003d new TaskList(storage.readData());","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     * Runs Duke program from the introduction","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     * to termination.","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @throws Exception If program fails.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"    public void run() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        ui.printIntro(); // start","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        parser.processData(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        storage.writeData(tasks.getList());","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        ui.printTerminate(); // end","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"     * Main method which runs Duke program.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     * @throws Exception If unexpected error occurs.","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Dineshraj555":56,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents Exceptions specific to Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"     * Creates custom exception for Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"     * @param s Error Message.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"        super(s);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import task.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":" * Represents the manner in which the program is parsed","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":" * and expected to behave when user inputs are entered.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     * Processes the TaskList according to the input","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"     * entered by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * @param tasklist TaskList to process on","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * @throws IOException If unexpected input is entered.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    public void processData(TaskList tasklist) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"        String cmd \u003d br.readLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        int n \u003d tasklist.getSize();","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        while(!cmd.equals(\"bye\")){","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            String[] c \u003d cmd.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"                if (cmd.equals(\"todo\") || cmd.equals(\"deadline\") || cmd.equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"                    throw new DukeException(UI.gdes);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"                } else if (cmd.equals(\"mark\") || cmd.equals(\"unmark\") || cmd.equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"                    throw new DukeException(UI.gnum);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.printTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"                    int no \u003d Integer.parseInt(c[1]) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.mark(no);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"                    int no \u003d Integer.parseInt(c[1]) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.unMark(no);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.add(new Todo(cmd.substring(4)), n);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"                    String[] x \u003d cmd.substring(8).split(\"/by \");","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.add(new Deadline(x[0], formatDate(x[1])), n);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"event\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"                    String[] x \u003d cmd.substring(5).split(\"/at \");","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.add(new Event(x[0], x[1]), n);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"                    int no \u003d Integer.parseInt(c[1]) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.delete(no);","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"                } else if (c[0].equals(\"find\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"                    tasklist.find(c[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"                    throw new DukeException(UI.invalid);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"                UI.printWithLines(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"            n \u003d tasklist.getSize();","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"            cmd \u003d br.readLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the formatted Date to display from the deadline input.","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"     * @param input the input Date as per \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"     * @return the formatted Date as per \"MMM-dd-yyyy HH:mm a\"","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"    private String formatDate(String input) {","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter formatIn \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter formatOut \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm a\");","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"        return LocalDateTime.parse(input, formatIn).format(formatOut);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":84}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import task.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":" * Represents the storage space, together with","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":" * functions to read and write data from the file path.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * The filePath where data is stored.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    private String filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     * @param filePath location where the file is to be stored.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the list of tasks stored if the file already","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"     * exits or else returns an empty list.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     * @return list containing saved tasks or empty list.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     * @throws Exception If an unexpected error occurs.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    public ArrayList\u003cTask\u003e readData() throws Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"            BufferedReader r \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"            String t \u003d r.readLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"            while (t !\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"                char i \u003d t.charAt(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"                if (i \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"                    String[] in \u003d t.split(\":\");","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"                    list.add(new Todo(in[2]));","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"                } else if (i \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"                    String[] in \u003d t.split(\":\");","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"                    list.add(new Deadline(in[2], in[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"                } else if (i \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"                    String[] in \u003d t.split(\":\");","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"                    list.add(new Event(in[2], in[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"                    // do nothing","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"                t \u003d r.readLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        return list;","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"     * Writes data entered by the user as a file","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"     * as per the file path.","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"     * @param list Updated list of Tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"     * @throws Exception If unexpected error occurs.","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"    public void writeData(ArrayList\u003cTask\u003e list) throws Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"        for(int n \u003d 0; n \u003c list.size(); n++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"            fw.write(list.get(n).toSave() + \"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"        fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":83}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Representation containing all string representation and methods","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" * used in Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"public class UI {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"     * Staring message for marking tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    static final String mark \u003d \"Nice! I\u0027ve marked this task as\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"     * String representation of custom line for Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    static final String line \u003d \"\\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * Error message to indicate user to provide a number.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    static final String gnum \u003d \"Give me a Number.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * Error message to inform user that description is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    static final String gdes \u003d \"Description is empty, give me a description.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     * Error message to inform user that description is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    static final String invalid \u003d \"INVALID Entry man, Try again :-( \";","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"     * Prints the intro of Mike with logo","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     * and intro paragraph.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"    public static void printIntro() {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        String start \u003d \"              Greetings! Mike here!\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"                \"               How can I help you?\\n\" ;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        String logo \u003d","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"                \"||\u003d\u003d\u003d\u003d\u003d\u003d||\u003d\u003d||\u003d\u003d\u003d\u003d\u003d\u003d|| !!!! ||\u003d\u003d\u003d\u003d||    //\u003d\u003d\u003d//\u003d\u003d\u003d\u003d\u003d\u003d||\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"                        + \"||                  || !!!! ||    ||   //   //       ||\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"                        + \"||  ||\u003d\u003d||  ||\u003d\u003d||  ||\u003d\u003d\u003d\u003d\u003d\u003d||    ||\u003d\u003d||   //  ||\u003d\u003d\u003d\u003d||\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"                        + \"||  ||  ||  ||  ||  ||      ||            |||  ||\u003d\u003d\u003d\u003d||\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"                        + \"||  ||  ||  ||  ||  ||      ||    ||\u003d\u003d||   \\\\\\\\  ||\u003d\u003d\u003d\u003d||\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"                        + \"||  ||  ||  ||  ||  ||      ||    ||   \\\\\\\\   \\\\\\\\       ||\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                        + \"||\u003d\u003d||  ||\u003d\u003d||  ||\u003d\u003d||\u003d\u003d\u003d\u003d\u003d\u003d||\u003d\u003d\u003d\u003d||    \\\\\\\\\u003d\u003d\u003d\\\\\\\\\u003d\u003d\u003d\u003d\u003d\u003d||\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(\"\\n\" + logo + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(start + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     * Prints custom line for Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"    public static void printLine() {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(line);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"     * Prints bye message for Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"    public static void printTerminate() {","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(line + \"Bye yo. Hope I helped you!\" + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"     * Prints text in between custom lines of Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Text to be printed.","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"    public static void printWithLines(String text) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(line + text + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"     * Prints add message whenever a task is added.","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Description of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"     * @param n Index of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"    public static void printAddMessage(String text, int n) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"        String gotit \u003d \"Got it. I\u0027ve added this task:\\n \";","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"        String now1 \u003d \"Now you have \";","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"        String now2 \u003d \" tasks in the list.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(line + gotit + text + \"\\n\" + now1 + (n + 1) + now2 + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"     * Prints message that Task has been deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"     * @param text description of deleted Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"    public static void deleteMessage(String text) {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"        String deleted \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(line + deleted + text + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"     * Prints message that Task has been deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"     * @param text description of Marked Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"    public static void printMarked(String text) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(line + mark + \" as done:\\n\" + text + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"     * Prints message that Task has been deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"     * @param text description of Unmarked Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"    public static void printUnMarked(String text) {","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"        System.out.println(line + mark + \" as not done yet:\\n\" + text + line);","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":118}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents Task which is entered with Deadline Prefix.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"     * Deadline date.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    protected String by;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"     * Creates a Deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * @param by Deadline Date.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, mark status, description and","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * deadline date.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to display.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, mark status, description and","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     * deadline date.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to save.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        return \"D\" + super.toSave() + \" : \" + by;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":46}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents Task which is entered with Event Prefix.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"     * Event location.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    protected String at;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"     * Creates a Event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * @param at Event location.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, mark status, description and","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     * event location.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to display.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        return \"[E]\" + super.toString() + \" (by: \" + at + \")\";","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, mark status, description and","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     * event location.","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to save.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        return \"E\" + super.toSave() + \" : \" + at;","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":46}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents a Task, containing its relevant fields","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" * and methods.","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"     * Name of Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"     * Status to indicate if the Task is done or not.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * Creates Task as per description entered, initializing the","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * task as undone.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Name of Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     * Returns String representation of the Task based","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * on whether if the task is done or not. X if done","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     * and an empty space otherwise.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"     * @return \"X\" if Task is done and \" \" if not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * Returns String representation of Task description.","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task description","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        return description;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"     * Mark the Task as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"     * Mark the Task as undone.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"     * on the mark status and description.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to save.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"            return \" : 1 : \" + this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"            return \" : 0 : \" + this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"     * on the mark status and description.","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to display.","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Dineshraj555":89}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import duke.UI;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":" * Represents a list housing all the Tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"     * List to house the Tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * Creates a Task list based on an already","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * existing list or empty list.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * @param list","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the list in ArrayList representation.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * @return List in ArrayList representation.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        return this.list;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     * @return size of the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        return list.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"     * Adds Task to the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"     * @param n Index of Task added.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"    public void add(Task task, int n) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        list.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        UI.printAddMessage(list.get(n).toString(), n);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     * Deletes the Task on the list corresponding to the","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"     * input value.","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"     * @param no Number of Task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"    public void delete(int no) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"        UI.deleteMessage(list.remove(no).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"     * Marks the Task on the list corresponding to the","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"     * input value.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"     * @param n Number of Task to be marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"    public void mark(int n) {","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"        list.get(n).markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"        UI.printMarked(list.get(n).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"     * Unmarks the Task on the list corresponding to the","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"     * input value.","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"     * @param n Number of Task to be unmarked.","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"    public void unMark(int n) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"        list.get(n).markAsUnDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"        UI.printUnMarked(list.get(n).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"     * Prints the Tasks in the Task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"    public void printTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"        UI.printLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        for(int m \u003d 0; m \u003c list.size(); m++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"            System.out.println((m + 1) + \".\" + list.get(m).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"        UI.printLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"    public void find(String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"        printSearchList(generateList(str));","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"    private ArrayList\u003cTask\u003e generateList(String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"        for (int m \u003d 0; m \u003c list.size(); m++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"            String in \u003d list.get(m).getDescription();","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"            if (in.equals(str)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"                output.add(list.get(m));","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"            } else if (scan(in, str)){","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"                output.add(list.get(m));","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"                // add nothing","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"        return output;","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"    private boolean scan(String in, String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"        boolean isPresent \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"        String[] y \u003d in.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"        for(int n \u003d 0; n \u003c y.length; n++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"            if (y[n].equals(str)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"                isPresent \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"        return isPresent;","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"    private void printSearchList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"        UI.printLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"        for(int m \u003d 0; m \u003c list.size(); m++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"            System.out.println((m + 1) + \".\" + list.get(m).toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"        UI.printLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":135}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents task which is entered with Todo Prefix.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"     * Creates a Todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, mark status and description.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to display.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, mark status and description.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to save.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        return \"T\" + super.toSave();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"event meeting /at library @ 3pm","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Dineshraj555":1,"-":20}}]
