[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"# duke project template","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Dineshraj555":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Dineshraj555":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"T:0: work   : fun","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"D:0: yy    :   null     :     Feb-09-2022 18","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"T:0: work    :   hell","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"E:0: eat    :   null     :     lalala","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"T:0: slides for GE project : null","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"D:0: project 1  : null : Feb-03-2022 23:59 PM","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"E:0: wedding  : null : Hotel Rainbow","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"Dineshraj555":7}},{"path":"data/mike.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"T:0: work : null","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"Dineshraj555":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"# MIKE User Guide","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"## Introduction","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"Mike is a computer based chatbox designed to ease your life by managing your tasks conveniently. Mike is","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"* text-based","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"* simple","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"* efficient","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"* ~~fun~~ ***SUPER FUN***","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"## Quick Start","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"Before including Mike into your life, please ensure you have the following:","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"1. Java 11 or more advanced version of java installed on your computer.","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"2. Download the latest jar release from this repo.","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"3. Launch the jar file.","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"4. Interact with Mike with the commands specified below(**Usage**).","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"### Add a task","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"Add any form of task to Mike.","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"Mike has divided tasks to the following three simple categories:","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"1. *todo*","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"2. *event*","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"3. *deadline*","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"### Update a task status","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"Update the status of your tasks by marking and unmarking them as you deem fit.","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"### Delete a task","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"Done with a task and do not want to see it on your list?","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"Delete it as you please.","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"### Tag a task","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"Mike gives you an option to tag a task with any label you desire.","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"You may choose not to use this feature.","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"### Find a task","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"Long list of tasks? No problem.","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"Find what you are looking for entering a keyword.","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"### View all tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"Want to see everything that you have going on in your life?","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"Mike will display it to you on your command. ","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"### `todo` - Adds todo task","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"Adds a task to the task list. ","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"`todo slides for GE project`","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"Mike will add the todo task to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"[T][] slides for GE project","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"### `deadline` - Adds deadline task","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"Adds a task with a deadline to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"`deadline project 1 /by 2022-02-03 23:59`","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"Mike will add the deadline task to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"[D][] project 1 (by: Feb-03-2022 23:59 PM)","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"### `event` - Adds event task","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"Adds an task with a location to the task list. ","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"`event wedding /at Hotel Rainbow`","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"Mike will add the event task to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"[E][] wedding (at: Hotel Rainbow)","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"### `list` - Displays task list","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"Displays all tasks present in the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"`list`","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"Mike will display all tasks present on the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"Your list has 3 tasks:","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"1. [T][] slides for GE project","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"2. [D][] project 1 (by: Feb-03-2022 23:59 PM)","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"3. [E][] wedding (at: Hotel Rainbow)","lastModifiedDate":"2022-02-17"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"### `mark` - Mark a task","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"Marks a task as done.","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"`mark 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"Mike will mark the first task on the task list as done.","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":141,"author":{"gitId":"Dineshraj555"},"content":"[T][x] slides for GE project","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":143,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"Dineshraj555"},"content":"### `unmark` - Unmark a task","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"Dineshraj555"},"content":"Unmarks a task as undone.","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"Dineshraj555"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"Dineshraj555"},"content":"`unmark 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"Dineshraj555"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":154,"author":{"gitId":"Dineshraj555"},"content":"Mike will unmark the first task on the task list as undone.","lastModifiedDate":"2022-02-17"},{"lineNumber":155,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":156,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"Dineshraj555"},"content":"[T][] slides for GE project","lastModifiedDate":"2022-02-17"},{"lineNumber":158,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"Dineshraj555"},"content":"### `tag` - Tags a task with a label","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":162,"author":{"gitId":"Dineshraj555"},"content":"Tags a task on the task list with a label.","lastModifiedDate":"2022-02-17"},{"lineNumber":163,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":164,"author":{"gitId":"Dineshraj555"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":165,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":166,"author":{"gitId":"Dineshraj555"},"content":"`tag 3 fun`","lastModifiedDate":"2022-02-17"},{"lineNumber":167,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":168,"author":{"gitId":"Dineshraj555"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":169,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":170,"author":{"gitId":"Dineshraj555"},"content":"Mike will tag the third task on the task list as fun.","lastModifiedDate":"2022-02-17"},{"lineNumber":171,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":172,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":173,"author":{"gitId":"Dineshraj555"},"content":"The following task:","lastModifiedDate":"2022-02-17"},{"lineNumber":174,"author":{"gitId":"Dineshraj555"},"content":"[E][] wedding (at: Hotel Rainbow)","lastModifiedDate":"2022-02-17"},{"lineNumber":175,"author":{"gitId":"Dineshraj555"},"content":"has been tagged as a fun task.","lastModifiedDate":"2022-02-17"},{"lineNumber":176,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":177,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":178,"author":{"gitId":"Dineshraj555"},"content":"### `find` - finds tasks with the keyword","lastModifiedDate":"2022-02-17"},{"lineNumber":179,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":180,"author":{"gitId":"Dineshraj555"},"content":"Finds tasks on the task list corresponding to the keyword.","lastModifiedDate":"2022-02-17"},{"lineNumber":181,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":182,"author":{"gitId":"Dineshraj555"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":183,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":184,"author":{"gitId":"Dineshraj555"},"content":"`find wedding`","lastModifiedDate":"2022-02-17"},{"lineNumber":185,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":186,"author":{"gitId":"Dineshraj555"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":187,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":188,"author":{"gitId":"Dineshraj555"},"content":"Mike will search the task list for tasks with the word wedding and display results.","lastModifiedDate":"2022-02-17"},{"lineNumber":189,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":190,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":191,"author":{"gitId":"Dineshraj555"},"content":"Your list has 1 tasks:","lastModifiedDate":"2022-02-17"},{"lineNumber":192,"author":{"gitId":"Dineshraj555"},"content":"1.[E][] wedding (at: Hotel Rainbow)","lastModifiedDate":"2022-02-17"},{"lineNumber":193,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":194,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":195,"author":{"gitId":"Dineshraj555"},"content":"### `bye` - Terminates Mike","lastModifiedDate":"2022-02-17"},{"lineNumber":196,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":197,"author":{"gitId":"Dineshraj555"},"content":"Program will be terminated.","lastModifiedDate":"2022-02-18"},{"lineNumber":198,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":199,"author":{"gitId":"Dineshraj555"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":200,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":201,"author":{"gitId":"Dineshraj555"},"content":"`bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":202,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":203,"author":{"gitId":"Dineshraj555"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":204,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":205,"author":{"gitId":"Dineshraj555"},"content":"Mike will display termination message and program will be terminated.","lastModifiedDate":"2022-02-18"},{"lineNumber":206,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":207,"author":{"gitId":"Dineshraj555"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":208,"author":{"gitId":"Dineshraj555"},"content":"Hope I helped you!","lastModifiedDate":"2022-02-17"},{"lineNumber":209,"author":{"gitId":"Dineshraj555"},"content":"Program terminated.","lastModifiedDate":"2022-02-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"Dineshraj555":177,"-":33}},{"path":"src/Test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    public void testToSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"                \"D : 0 : work : 2022-02-02 06:30\",","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"                new Deadline(\"work\", \"2022-02-02 06:30\").toSave());","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"                \"[D][ ] work (by: 2022-02-02 06:30)\",","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"                new Deadline(\"work\", \"2022-02-02 06:30\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":20}},{"path":"src/Test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class EventTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    public void testToSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"                \"E : 0 : work : 2022-02-02 06:30\",","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"                new Event(\"work\", \"2022-02-02 06:30\").toSave());","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"        assertEquals(","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"                \"[E][ ] work (by: 2022-02-02 06:30)\",","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"                new Event(\"work\", \"2022-02-02 06:30\").toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":" * Represents Mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    /** Storage where Mike is saved, read and updated. */","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    /** List containing Tasks for Mike to process. */","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    /** Parser to handle user inputs. */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private Parser parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates Mike with storage,","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * task list and parser information.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public Duke() {","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"            tasks \u003d new TaskList(this.storage.readData());","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"            parser \u003d new Parser(this.tasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * Returns Mike response according to","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     * the user command input.","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"     * @param command User command input.","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     * @return Mike response.","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"                storage.storeData(tasks.getList());","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"                return UI.printTerminate();","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"            } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"                return parser.processCommand(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Dineshraj555":47,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents exceptions that are specific to Mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates DukeException with the given error message.","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"     * @param message Error message of DukeException.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"        super(message);","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import task.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":" * Represents the parser that parses inputs entered by the user.","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    /** TaskList to be processed by parser. */","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    protected TaskList tasklist;","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates parser to process user inputs.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @param list Task list retrieved from data.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public Parser(TaskList list) {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        this.tasklist \u003d list;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * Returns a response by Mike based on user input.","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     * @param command User command input.","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * @return Response to user from Mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     * @throws DukeException If input command is invalid.","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    public String processCommand(String command) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        String[] commandLine \u003d command.split(\" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        String prefixCommand \u003d commandLine[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        if (prefixCommand.equals(\"list\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"            return parseList();","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"mark\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"            return parseMark(commandLine);","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"unmark\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"            return parseUnmark(commandLine);","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"todo\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"            return parseTodo(command);","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"deadline\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"            return parseDeadline(command);","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"event\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"            return parseEvent(command);","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"delete\")) {","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"            return parseDelete(commandLine);","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"tag\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"            return parseTag(commandLine);","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        } else if (prefixCommand.equals(\"find\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"            return parseFind(commandLine);","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        } else if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"            throw new DukeException(UI.ERROR_NO_DESCRIPTION);","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        } else if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"            throw new DukeException(UI.ERROR_NO_NUMBER);","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            throw new DukeException(UI.ERROR_INVALID);","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"     * Returns list containing all tasks on the task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"     * @throws DukeException If list is empty.","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    private String parseList() throws DukeException {","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.printTaskList();","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been marked as per command line.","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"     * @param commandLine User input with mark prefix command in array representation.","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been marked.","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"    private String parseMark(String[] commandLine) {","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"        int index \u003d Integer.parseInt(commandLine[1]) - 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"        assert index \u003e\u003d 0 : UI.ASSERTION_INDEX_ISSUE;","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.mark(index);","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been unmarked as per command line.","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"     * @param commandLine User input with unmark prefix command in array representation.","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been unmarked.","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"    private String parseUnmark(String[] commandLine) {","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        int index \u003d Integer.parseInt(commandLine[1]) - 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"        assert index \u003e\u003d 0 : UI.ASSERTION_INDEX_ISSUE;","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.unMark(index);","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that todo task has been added to the list as per user command.","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"     * @param command User input with todo prefix command.","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that todo task has been added to task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"    private String parseTodo(String command) {","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.add(new Todo(command.substring(4)));","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that deadline task has been added to the list as per user command.","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"     * @param command User input with deadline prefix command.","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that deadline task has been added to task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"    private String parseDeadline(String command) {","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"        String[] commandSentence \u003d command.substring(8).split(\"/by \");","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"        assert commandSentence.length \u003d\u003d 2 : UI.ASSERTION_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.add(new Deadline(commandSentence[0], commandSentence[1]));","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that event task has been added to the list as per user command.","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"     * @param command User input with event prefix command.","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that event task has been added to task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"    private String parseEvent(String command) {","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"        String[] commandSentence \u003d command.substring(5).split(\"/at \");","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"        assert commandSentence.length \u003d\u003d 2 : UI.ASSERTION_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.add(new Event(commandSentence[0], commandSentence[1]));","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been deleted from the task list as per user command.","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"     * @param commandLine User input with delete prefix command in array representation.","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been deleted from task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"    private String parseDelete(String[] commandLine) {","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"        int index \u003d Integer.parseInt(commandLine[1]) - 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"Dineshraj555"},"content":"        assert index \u003e\u003d 0 : UI.ASSERTION_INDEX_ISSUE;","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.delete(index);","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been tagged as per user command.","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"Dineshraj555"},"content":"     * @param commandLine User input with tag prefix in array representation.","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been tagged.","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"Dineshraj555"},"content":"    private String parseTag(String[] commandLine) {","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"Dineshraj555"},"content":"        int index \u003d Integer.parseInt(commandLine[1]) - 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"Dineshraj555"},"content":"        assert index \u003e\u003d 0 : UI.ASSERTION_INDEX_ISSUE;","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.tag(index, commandLine[2]);","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":155,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message of the search result.","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"Dineshraj555"},"content":"     * @param commandLine User input with find prefix command in array representation.","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message of list of tasks found.","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"Dineshraj555"},"content":"     * @throws DukeException If no task is found.","lastModifiedDate":"2022-02-18"},{"lineNumber":161,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":162,"author":{"gitId":"Dineshraj555"},"content":"    private String parseFind(String[] commandLine) throws DukeException {","lastModifiedDate":"2022-02-18"},{"lineNumber":163,"author":{"gitId":"Dineshraj555"},"content":"        return tasklist.find(commandLine[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":164,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":165,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":166}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import task.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":" * Represents the storage space to read past data from the file and write data to file.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    /** Name of directory where data is to be stored. */","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    protected static final String DIRECTORY_NAME \u003d \"data\";","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    /** Name of file where data is to be stored. */","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    protected static final String FILE_NAME \u003d \"/mike.txt\";","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    /** File where data is to be stored. */","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    protected File storageFile;","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates storage class with the directory and files required","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * to read and write the data of mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     * @throws IOException If there is an error with the file path.","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"        Path directoryPath \u003d Paths.get(DIRECTORY_NAME);","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        if (!Files.exists(directoryPath)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"            Files.createDirectories(directoryPath);","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        Path filePath \u003d Paths.get(DIRECTORY_NAME + FILE_NAME);","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        storageFile \u003d new File(filePath.toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the list of tasks stored if the file already exists","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     * or else returns an empty list.","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"     * @return List containing saved tasks if any, otherwise empty list.","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"     * @throws Exception If an error occurs when reading data from saved file.","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    public ArrayList\u003cTask\u003e readData() throws Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"            ArrayList\u003cTask\u003e startingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(storageFile));","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"                char firstLetter \u003d line.charAt(0);","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"                String[] data \u003d line.split(\":\");","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"                if (firstLetter \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"                    startingList.add(new Todo(data));","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"                } else if (firstLetter \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"                    startingList.add(new Deadline(data));","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"                } else if (firstLetter \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"                    startingList.add(new Event(data));","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"                    throw new DukeException(UI.ERROR_UNKNOWN);","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2022-02-08"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"            return startingList;","lastModifiedDate":"2022-02-08"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"            throw new DukeException(UI.ERROR_CANNOT_READ);","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"     * Stores updated data entered to the file as per file path.","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"     * @param list Updated list of Tasks to be saved.","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"     * @throws Exception If an error occurs when storing data.","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"    public void storeData(ArrayList\u003cTask\u003e list) throws Exception {","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"            FileWriter fileWriter \u003d new FileWriter(storageFile);","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"            for (int n \u003d 0; n \u003c list.size(); n++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"                fileWriter.write(list.get(n).toSave() + \"\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"            fileWriter.close();","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"            throw new DukeException(UI.ERROR_CANNOT_SAVE);","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":98}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents a UI class which contains string representation of Mike\u0027s responses.","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class UI {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /** Assertion message to inform an issue with Index. */","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ASSERTION_INDEX_ISSUE \u003d \"Index should be more than or equal to 0.\";","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    /** Assertion message to inform an issue with command format. */","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ASSERTION_INVALID_COMMAND_FORMAT \u003d \"More or less than 2 elements detected\";","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    /** Opening message for marking tasks. */","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    private static final String MARK \u003d \"Sweet! I\u0027ve marked this task as\";","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user that file cannot be saved. */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_CANNOT_SAVE \u003d \"There appears to be an issue,\\nwhen saving the data.\";","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user that file cannot be read. */","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_CANNOT_READ \u003d \"There appears to be an issue,\\nwhen reading the data.\";","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user that list is empty. */","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_EMPTY_LIST \u003d \"I don\u0027t see any tasks on the list\\nYou appear to be a free man!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user that there is description entered. */","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_NO_DESCRIPTION \u003d \"Can you indicate the description too?\";","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user to provide a number. */","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_NO_NUMBER \u003d \"Can you indicate the index of the task\\n you are referring to?\";","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user that the search results returned nothing. */","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_NO_RESULT \u003d \"I was unable to find anything.\";","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user that command is invalid. */","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_INVALID \u003d \"Invalid entry boss.\\nTell me something else?\";","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    /** Error message to inform user that there is an unknown entry. */","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    public static final String ERROR_UNKNOWN \u003d \"There appears to be an unknown entry.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the introduction paragraph of Mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    public static String printIntro() {","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        return \"Greetings Boss! Mike here!\\nHow can I be at your service?\";","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the termination message of Mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * @return Termination message.","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"    public static String printTerminate() {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        return \"Hope I helped you!\\nProgram Terminated.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has added to list with details","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     * of task and total number of tasks on list.","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Description of task","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"     * @param no Number of tasks on list.","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"     * @return Added message with description of task added and total number of tasks on list.","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"    public static String printAddMessage(String text, int no) {","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        String line \u003d \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        return String.format(line, text, no);","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been deleted with task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Description of deleted task.","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"    public static String printDeleteMessage(String text) {","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"        String deleted \u003d \"Noted. I\u0027ve removed this task from\\nboth the list and your life:\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"        return deleted + text;","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been marked with task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Description of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"     * @return Marked message with task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"    public static String printMarked(String text) {","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"        return UI.MARK + \" done:\\n\" + text;","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been unmarked with task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Description of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"     * @return Unmarked message with task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"    public static String printUnMarked(String text) {","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"        return UI.MARK + \" not done yet:\\n\" + text;","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that the input task has been tagged as per tag input.","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Description of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"     * @param tag Name of tag.","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"     * @return Tag message with description of task and name of tag.","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"    public static String printTag(String text, String tag) {","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"        return String.format(\"The following task:\\n%s\\nhas been tagged as a %s task.\", text, tag);","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":101}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiate a DialogBox for GUI with a text and an image.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Text to output.","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * @param img Image to output.","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"     * Returns user dialogue to GUI.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"     * @param text User input.","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"     * @param img User image.","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"     * @return Dialogue box with user image and text.","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"     * Returns Mike response to GUI.","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"     * @param text Mike response.","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"     * @param img Mike image.","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"     * @return Dialogue box with Mike image and text.","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Dineshraj555":81}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Dineshraj555":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":" * A GUI for Mike using FXML.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /** Instance of Mike for GUI to operate on. */","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * Triggers JavaFX application for Mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"     * @param stage Primary window of JavaFX.","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027serif\u0027\");","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this.duke);","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"            stage.setTitle(\"Mike\");","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Dineshraj555":40}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import duke.UI;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    /** Mike to be printed. */","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    /** Image of user. */","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    /** Image of Mike. */","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * Sets up the main window of Mike\u0027s GUI.","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"     * @param d Instance of Mike object.","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        String intro \u003d UI.printIntro();","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(intro, dukeImage));","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Mike.","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     * Mike\u0027s reply and then appends them to the dialog container.","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"                    DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"                    DialogBox.getDukeDialog(response, this.dukeImage)","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"            );","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"            PauseTransition pauseTransition \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"            pauseTransition.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"            pauseTransition.play();","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"                    DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"                    DialogBox.getDukeDialog(response, this.dukeImage)","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"            );","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Dineshraj555":81}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":" * Represents Task which is entered with Deadline Prefix.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    /** Deadline date.*/","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    protected String by;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates a deadline task with task description and deadline.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * @param by Deadline Date.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        this.by \u003d formatDate(by);","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates a deadline task with details of the task retrieved","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     * from the stored file.","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * @param data Array containing details of deadline task from stored file.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    public Deadline(String[] data) {","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        super(data[1],data[2],data[3]);","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        this.by \u003d data[4];","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the formatted date to display from the deadline input.","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     * @param input Input Date as per \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * @return Formatted Date as per \"MMM-dd-yyyy HH:mm a\"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    private String formatDate(String input) {","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter formatIn \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter formatOut \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm a\");","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        return LocalDateTime.parse(input, formatIn).format(formatOut);","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, task status, task description and","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"     * deadline date.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of deadline task to be displayed.","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, task status, task description and","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"     * deadline date.","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of deadline task to be stored.","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"        return \"D\" + super.toSave() + \" : \" + by;","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":71}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents Task which is entered with Event Prefix.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /** Location of event. */","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    protected String at;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates an event task with the description of event","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"     * and location of event.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * @param at Event location.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates an event task with details of the task retrieved","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * from the stored file.","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     * @param data Array containing details of event from stored file.","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    public Event(String[] data) {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        super(data[1], data[2], data[3]);","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"        this.at \u003d data[4];","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, task status, task description and","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     * event location.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of event to be displayed.","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, task status, task description and","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     * event location.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of event to be stored.","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        return \"E\" + super.toSave() + \" : \" + at;","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":56}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents a task, containing its relevant fields and methods.","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /** Name of task. */","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    /** Status to indicate if the task is done or not. */","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    /** Tag of task. */","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    protected String tag;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates task with description input.","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * Sets the task status as false and task tag as null.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"        this.tag \u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates task with task description, task status and task tag","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * from data retrieved from the stored file.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     * @param status Status of task retrieved.","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of task retrieved.","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     * @param tag Tag of task retrieved.","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    public Task(String status, String description, String tag) {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        this.isDone \u003d formatStatus(status);","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * Returns string representation of the task status.","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * If task is done returns X, else an empty space.","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"     * @return Task status. If task is done returns X, else an empty space.","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"     * Returns task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"     * @return Description of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        return this.description;","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"     * Tags the task as per tag label.","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"     * @param tag Tag label.","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"    public void tag(String tag) {","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the status of task retrieved from the stored file.","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"     * If task is done returns true, else false.","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"     * @param no The string value representing the status of the task.","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"     * @return Task status. If task is done returns true, else false.","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"    private Boolean formatStatus(String no) {","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"        int status \u003d Integer.parseInt(no);","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        return status \u003d\u003d 1 ? true : false;","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation of task with details","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"     * on the task status and description to be stored.","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of task to be stored.","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"        String status \u003d this.isDone ? \":1:\" : \":0:\";","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"        return status + this.description + \" : \" + this.tag;","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation of task with details","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"     * on the task status and description to be displayed.","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to be displayed.","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Dineshraj555":117}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import duke.UI;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":" * Represents a list containing all the tasks and method related to the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    /** List that contains all tasks. */","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    private ArrayList\u003cTask\u003e Tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates the task list with a list of tasks from the stored data.","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * If no data is present, instantiates the task list with an empty list.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @param list List of tasks from stored data.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        this.Tasks \u003d list;","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the task list in ArrayList representation.","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     * @return Task list in ArrayList representation.","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"        return this.Tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"     * @return Number of tasks in TaskList.","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        return this.Tasks.size();","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task has been added to the task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been added to the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    public String add(Task task) {","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        this.Tasks.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        int index \u003d this.getSize();","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        assert index \u003e 0 : \"Index must be more than 0.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        return UI.printAddMessage(this.Tasks.get(index - 1).toString(), index);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task corresponding to input index has been deleted.","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"     * @param no Index of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been deleted with details on task.","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    public String delete(int no) {","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        return UI.printDeleteMessage(this.Tasks.remove(no).toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task corresponding to the input index has been marked.","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"     * @param no Index of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been marked with details on task.","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"    public String mark(int no) {","lastModifiedDate":"2022-02-08"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"        this.Tasks.get(no).markAsDone();","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"        return UI.printMarked(this.Tasks.get(no).toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that task corresponding to the input index has been unmarked.","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"     * @param no Index of task.","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been unmarked with details on task.","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"    public String unMark(int no) {","lastModifiedDate":"2022-02-08"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"        this.Tasks.get(no).markAsUnDone();","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"        return UI.printUnMarked(this.Tasks.get(no).toString());","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"     * Returns message that the task corresponding to the input index has","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"     * been tagged as per input tag.","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"     * @param no Index of task to be tagged.","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"     * @param str Label of tag.","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"     * @return Message that task has been tagged.","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"    public String tag(int no, String str) {","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"        this.Tasks.get(no).tag(str);","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"        return UI.printTag(this.Tasks.get(no).toString(), str);","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"     * Returns list with all tasks on the task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"     * @return List of tasks on task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"     * @throws DukeException If no task is on the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"    public String printTaskList() throws DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"        return printList(this.Tasks);","lastModifiedDate":"2022-02-08"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the list of tasks which contains the search string.","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"     * @param str String to search for.","lastModifiedDate":"2022-02-08"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"     * @return Search result.","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"     * @throws DukeException If no result is found.","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"    public String find(String str) throws DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"        ArrayList\u003cTask\u003e resultList \u003d generateList(str);","lastModifiedDate":"2022-02-08"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"        if (resultList.size() !\u003d 0) {","lastModifiedDate":"2022-02-08"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"            return printList(resultList);","lastModifiedDate":"2022-02-08"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"            throw new DukeException(UI.ERROR_NO_RESULT);","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"     * Generates the list of tasks containing the string input.","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"     * Used only by find() method.","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"     * @param str String to search for.","lastModifiedDate":"2022-02-08"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"     * @return List of tasks with match, else empty list.","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"    private ArrayList\u003cTask\u003e generateList(String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"        ArrayList\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"        for (int m \u003d 0; m \u003c this.Tasks.size(); m++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"            String in \u003d this.Tasks.get(m).getDescription();","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"            if (in.equals(str) || scan(in, str)) {","lastModifiedDate":"2022-02-08"},{"lineNumber":139,"author":{"gitId":"Dineshraj555"},"content":"                resultList.add(this.Tasks.get(m));","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"Dineshraj555"},"content":"        return resultList;","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"Dineshraj555"},"content":"     * Returns true if a string is present in sentence and false","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"Dineshraj555"},"content":"     * if the string is not.","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":149,"author":{"gitId":"Dineshraj555"},"content":"     * @param sentence Sentence to be searched.","lastModifiedDate":"2022-02-08"},{"lineNumber":150,"author":{"gitId":"Dineshraj555"},"content":"     * @param str String input to search against.","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"Dineshraj555"},"content":"     * @return Outcome of search. If String is present return true, else false.","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":153,"author":{"gitId":"Dineshraj555"},"content":"    private boolean scan(String sentence, String str) {","lastModifiedDate":"2022-02-08"},{"lineNumber":154,"author":{"gitId":"Dineshraj555"},"content":"        boolean isPresent \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"Dineshraj555"},"content":"        String[] words \u003d sentence.split(\" \");","lastModifiedDate":"2022-02-08"},{"lineNumber":156,"author":{"gitId":"Dineshraj555"},"content":"        for (int n \u003d 0; n \u003c words.length; n++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":157,"author":{"gitId":"Dineshraj555"},"content":"            if (words[n].equals(str)) {","lastModifiedDate":"2022-02-08"},{"lineNumber":158,"author":{"gitId":"Dineshraj555"},"content":"                isPresent \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":160,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":161,"author":{"gitId":"Dineshraj555"},"content":"        return isPresent;","lastModifiedDate":"2022-01-28"},{"lineNumber":162,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":163,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":164,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":165,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation of the list with all tasks in the task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":167,"author":{"gitId":"Dineshraj555"},"content":"     * @param list Task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":168,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of the list of tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"Dineshraj555"},"content":"     * @throws DukeException If list is empty.","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":171,"author":{"gitId":"Dineshraj555"},"content":"    private String printList(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2022-02-08"},{"lineNumber":172,"author":{"gitId":"Dineshraj555"},"content":"        int size \u003d list.size();","lastModifiedDate":"2022-02-08"},{"lineNumber":173,"author":{"gitId":"Dineshraj555"},"content":"        String str \u003d \"Your list has \" + size + \" tasks:\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":174,"author":{"gitId":"Dineshraj555"},"content":"        if (size !\u003d 0) {","lastModifiedDate":"2022-02-08"},{"lineNumber":175,"author":{"gitId":"Dineshraj555"},"content":"            for (int m \u003d 0; m \u003c size; m++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":176,"author":{"gitId":"Dineshraj555"},"content":"                str+\u003d m + 1 + \".\" + list.get(m).toString() + \"\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"Dineshraj555"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":178,"author":{"gitId":"Dineshraj555"},"content":"            return str;","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":180,"author":{"gitId":"Dineshraj555"},"content":"            throw new DukeException(UI.ERROR_EMPTY_LIST);","lastModifiedDate":"2022-02-09"},{"lineNumber":181,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":182,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":183,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Dineshraj555":183}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Represents task which is entered with Todo Prefix.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates a Todo task with a description.","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * Instantiates a todo based on stored data. Data will contain details of","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * task status, description and tag.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * @param data Array representation of data retrieved from the stored file.","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    public Todo(String[] data) {","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"        super(data[1], data[2], data[3]);","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, task status and task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of Task to be displayed.","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"     * Returns the string representation with details","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * on the task type, task status and task description.","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of task to be stored.","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    public String toSave() {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        return \"T\" + super.toSave();","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: yellow; -fx-background-radius: 15; -fx-padding: 15;\"/\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Dineshraj555":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: pink;\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"Dineshraj555":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"event meeting /at library @ 3pm","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Dineshraj555":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Dineshraj555":1,"-":20}}]
