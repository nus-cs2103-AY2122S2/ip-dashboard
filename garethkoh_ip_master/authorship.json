[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"garethkoh"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"garethkoh":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"class Deadline extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"    public Deadline(String name, String dueDate) {","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"        if (super.getStatus() \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"            return \"[D][X] \" + super.getName() + \" (by: \"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"                    + dueDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"            return \"[D][ ] \" + super.getName() + \" (by: \"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"                    + dueDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"garethkoh":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"public class Duke {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"        // load in the TaskList","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"        TaskList taskList \u003d new TaskList(new Storage());","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"        Ui.initialize(parser);","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"        Storage.save(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"garethkoh":14,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"class Event extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"    private final LocalDate time;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"        if (super.getStatus() \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"            return \"[E][X] \" + super.getName() + \" (at: \"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"                    + time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"            return \"[E][ ] \" + super.getName() + \" (at: \"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"                    + time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"garethkoh":27}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"public class Parser {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"    private boolean isByeCommand \u003d false;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"    public Parser(TaskList taskList){","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"    public String parse(String userInput) {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"        // Split user input into individual words","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"        String[] split \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"        String outputMessage \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"        ArrayList\u003cTask\u003e toDoList \u003d taskList.getToDoList();","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"        switch (split[0]) {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"            outputMessage \u003d \"goodbye!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"            isByeCommand \u003d true;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"        case \"list\":","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"            for (int i \u003d 0; i \u003c toDoList.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"                Task task \u003d toDoList.get(i);","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"garethkoh"},"content":"                outputMessage +\u003d String.format(\"%d. \" + task + \"\\n\", i + 1);","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"garethkoh"},"content":"        case \"help\":","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"garethkoh"},"content":"            outputMessage \u003d \"try the following commands:\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"garethkoh"},"content":"                    + \"   list (list out all tasks in your todo list)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"garethkoh"},"content":"                    + \"   todo \u003ctask\u003e (add a basic task to your todo list)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"garethkoh"},"content":"                    + \"   deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e (add a task with a deadline to your todo list)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"garethkoh"},"content":"                    + \"   event \u003ctask\u003e /at \u003cyyyy-mm-dd\u003e (add a new event with its corresponding date to your todo list)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"garethkoh"},"content":"                    + \"   mark \u003ctask index\u003e (mark that specific task as completed)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"garethkoh"},"content":"                    + \"   unmark \u003ctask index\u003e (remove mark from specific task)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"garethkoh"},"content":"                    + \"   delete \u003ctask index\u003e (remove task from todo list)\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"garethkoh"},"content":"                    + \"   bye (close application)\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"garethkoh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"garethkoh"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"garethkoh"},"content":"                int item \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"garethkoh"},"content":"                try {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"garethkoh"},"content":"                    Task t \u003d toDoList.get(item - 1);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"garethkoh"},"content":"                    t.unmark();","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d String.format(\"Boo! more work to do: %s\\n\", t.getName());","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"garethkoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d \"the index you have entered does not exist!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"garethkoh"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"garethkoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d (\"unmark description cannot be empty!\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"garethkoh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d \"unmark description must be an integer!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"garethkoh"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"garethkoh"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"garethkoh"},"content":"                int item \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"garethkoh"},"content":"                try {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"garethkoh"},"content":"                    Task t \u003d toDoList.get(item - 1);","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"garethkoh"},"content":"                    t.mark();","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d String.format(\"great job! I\u0027ve marked this task as done: %s\\n\", t.getName());","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"garethkoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d \"the index you have entered does not exist!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"garethkoh"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"garethkoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d \"mark description cannot be empty!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"garethkoh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d \"mark description must be an integer!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"garethkoh"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"garethkoh"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"garethkoh"},"content":"                // Check if description is empty","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"garethkoh"},"content":"                String check \u003d split[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"garethkoh"},"content":"                // Take the substring of user input after todo","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"garethkoh"},"content":"                String name \u003d userInput.substring(5);","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"garethkoh"},"content":"                ToDo t \u003d new ToDo(name);","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"garethkoh"},"content":"                toDoList.add(t);","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d String.format(\"task added:\\n%s\\n\", t);","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"garethkoh"},"content":"                outputMessage +\u003d String.format(\"you now have %d tasks\\n\", toDoList.size());","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"garethkoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d (\"the description of a todo cannot be empty!\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"garethkoh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"garethkoh"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"garethkoh"},"content":"                // Check if description is empty","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"garethkoh"},"content":"                String check \u003d split[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"garethkoh"},"content":"                try {","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"garethkoh"},"content":"                    // Take the substring of user input after deadline","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"garethkoh"},"content":"                    String item \u003d userInput.substring(9);","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"garethkoh"},"content":"                    // Divide the substring into task name and deadline","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"garethkoh"},"content":"                    String[] divide \u003d item.split(\"/\");","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"garethkoh"},"content":"                    String name \u003d divide[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"garethkoh"},"content":"                    String dueDate \u003d divide[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"garethkoh"},"content":"                    Deadline d \u003d new Deadline(name.trim(), dueDate.substring(3));","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"garethkoh"},"content":"                    toDoList.add(d);","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d String.format(\"task added:\\n%s\\n\", d);","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"garethkoh"},"content":"                    outputMessage +\u003d String.format(\"you now have %d tasks\\n\", toDoList.size());","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"garethkoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d \"deadline description must contain a date!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"garethkoh"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"garethkoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d \"deadline description cannot be empty!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"garethkoh"},"content":"        case \"event\":","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"garethkoh"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"garethkoh"},"content":"                // Check if description is empty","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"garethkoh"},"content":"                String check \u003d split[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"garethkoh"},"content":"                try {","lastModifiedDate":"2022-02-04"},{"lineNumber":117,"author":{"gitId":"garethkoh"},"content":"                    // Take the substring of user input after event","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"garethkoh"},"content":"                    String item \u003d userInput.substring(6);","lastModifiedDate":"2022-02-04"},{"lineNumber":119,"author":{"gitId":"garethkoh"},"content":"                    // Divide the substring into task name and date","lastModifiedDate":"2022-02-04"},{"lineNumber":120,"author":{"gitId":"garethkoh"},"content":"                    String[] divide \u003d item.split(\"/\");","lastModifiedDate":"2022-02-04"},{"lineNumber":121,"author":{"gitId":"garethkoh"},"content":"                    String name \u003d divide[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"garethkoh"},"content":"                    String time \u003d divide[1];","lastModifiedDate":"2022-02-04"},{"lineNumber":123,"author":{"gitId":"garethkoh"},"content":"                    Event e \u003d new Event(name.trim(), time.substring(3));","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"garethkoh"},"content":"                    toDoList.add(e);","lastModifiedDate":"2022-02-04"},{"lineNumber":125,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d String.format(\"task added:\\n%s\\n\", e);","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"garethkoh"},"content":"                    outputMessage +\u003d String.format(\"you now have %d tasks\\n\", toDoList.size());","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"garethkoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d \"event description must contain a date!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":129,"author":{"gitId":"garethkoh"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"garethkoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d \"event description cannot be empty!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":132,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":134,"author":{"gitId":"garethkoh"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"garethkoh"},"content":"            try {","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"garethkoh"},"content":"                // Checks if description is empty","lastModifiedDate":"2022-02-04"},{"lineNumber":137,"author":{"gitId":"garethkoh"},"content":"                int toDelete \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":138,"author":{"gitId":"garethkoh"},"content":"                try {","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"garethkoh"},"content":"                    Task t \u003d toDoList.get(toDelete - 1);","lastModifiedDate":"2022-02-04"},{"lineNumber":140,"author":{"gitId":"garethkoh"},"content":"                    toDoList.remove(toDelete - 1);","lastModifiedDate":"2022-02-04"},{"lineNumber":141,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d String.format(\"task removed:\\n%s\\n\", t.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":142,"author":{"gitId":"garethkoh"},"content":"                    outputMessage +\u003d String.format(\"you now have %d tasks\\n\", toDoList.size());","lastModifiedDate":"2022-02-04"},{"lineNumber":143,"author":{"gitId":"garethkoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":144,"author":{"gitId":"garethkoh"},"content":"                    outputMessage \u003d \"the index you have entered does not exist!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":145,"author":{"gitId":"garethkoh"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":146,"author":{"gitId":"garethkoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":147,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d \"delete description cannot be empty!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":148,"author":{"gitId":"garethkoh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":149,"author":{"gitId":"garethkoh"},"content":"                outputMessage \u003d \"delete description must be an integer!\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":150,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":151,"author":{"gitId":"garethkoh"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":152,"author":{"gitId":"garethkoh"},"content":"        default:","lastModifiedDate":"2022-02-04"},{"lineNumber":153,"author":{"gitId":"garethkoh"},"content":"            // If user input does not match any commands","lastModifiedDate":"2022-02-04"},{"lineNumber":154,"author":{"gitId":"garethkoh"},"content":"            outputMessage \u003d \"invalid command! try \u0027help\u0027 for list of commands\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":155,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":156,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":157,"author":{"gitId":"garethkoh"},"content":"        return outputMessage;","lastModifiedDate":"2022-02-04"},{"lineNumber":158,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":159,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":160,"author":{"gitId":"garethkoh"},"content":"    public boolean checkByeCommand() {","lastModifiedDate":"2022-02-04"},{"lineNumber":161,"author":{"gitId":"garethkoh"},"content":"        return isByeCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":162,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":163,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"garethkoh":163}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.io.File;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"public class Storage {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"    private static final File FOLDER_PATH \u003d new File(\"../../../../data\");","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"    private static final File DATA_PATH \u003d new File(\"../../../../data/data.txt\");","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"    public Storage(){","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"    public static \u003cT\u003e T castToAnything(Object obj) {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"        return (T) obj;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"        ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"garethkoh"},"content":"            if (FOLDER_PATH.mkdir()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"                Ui.print(\"Folder is created!\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"garethkoh"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"garethkoh"},"content":"                Ui.print(\"Folder already exists.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"garethkoh"},"content":"            if (DATA_PATH.createNewFile()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"garethkoh"},"content":"                Ui.print(\"File is created!\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"garethkoh"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"garethkoh"},"content":"                Ui.print(\"File already exists.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"garethkoh"},"content":"                try {","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"garethkoh"},"content":"                    FileInputStream reader \u003d new FileInputStream(DATA_PATH);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"garethkoh"},"content":"                    ObjectInputStream listInput \u003d new ObjectInputStream(reader);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"garethkoh"},"content":"                    toDoList \u003d castToAnything(listInput.readObject());","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"garethkoh"},"content":"                    listInput.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"garethkoh"},"content":"                    reader.close();","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"garethkoh"},"content":"                } catch (ClassNotFoundException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"garethkoh"},"content":"                    Ui.print(\"class not found\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"garethkoh"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"garethkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"garethkoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"garethkoh"},"content":"        return toDoList;","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"garethkoh"},"content":"    public static void save(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"garethkoh"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"garethkoh"},"content":"            FileOutputStream writer \u003d new FileOutputStream(DATA_PATH);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"garethkoh"},"content":"            ObjectOutputStream saveList \u003d new ObjectOutputStream(writer);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"garethkoh"},"content":"            saveList.writeObject(taskList.getToDoList());","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"garethkoh"},"content":"            saveList.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"garethkoh"},"content":"            Ui.print(\"your list has been saved!\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"garethkoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"garethkoh"},"content":"            Ui.print(\"file not found\");","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"garethkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"garethkoh"},"content":"            Ui.print(\"failed to write to file\");","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"garethkoh":67}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"class Task implements Serializable {","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"    // 1 indicates done and 0 indicates not done","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"    private int status;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"    private final String name;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"        this.status \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"    public int getStatus() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"        return status;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"    public String getName() {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"        return name;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"    public void mark() {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"        this.status \u003d 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"garethkoh"},"content":"        this.status \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"garethkoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"garethkoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"garethkoh"},"content":"        if (status \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"garethkoh"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"garethkoh"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"garethkoh"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"garethkoh":40}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"public class TaskList {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"    private ArrayList\u003cTask\u003e toDoList;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"    // Constructor used for creating stubs for testing","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e manualList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"        this.toDoList \u003d manualList;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"        toDoList \u003d storage.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"    public ArrayList\u003cTask\u003e getToDoList() {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"        return toDoList;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"        toDoList.add(task);","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"        toDoList.remove(index);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"garethkoh":28}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"class ToDo extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"        super(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"        if (super.getStatus() \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"            return \"[T][X] \" + super.getName();","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"            return \"[T][ ] \" + super.getName();","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"garethkoh":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"public class Ui {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"    public static final String ANSI_BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"    public static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"    private static final String LOGO  \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"    private static final String INITIALIZATION_MESSAGE \u003d \"Hello from\\n\" + LOGO + \"enter a command\\n\" +","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"                \"use command \u0027help\u0027 to see list of commands\";","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"    public static void initialize(Parser parser) {","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"        System.out.println(ANSI_BLUE + INITIALIZATION_MESSAGE + ANSI_RESET);","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"        while (true) {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"            String returnMessage \u003d parser.parse(userInput);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"            System.out.print(ANSI_BLUE + returnMessage + ANSI_RESET);","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"            if (parser.checkByeCommand()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"garethkoh"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"garethkoh"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"garethkoh"},"content":"       sc.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"garethkoh"},"content":"    public static void print(String message) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"garethkoh"},"content":"        System.out.print(ANSI_BLUE + message + ANSI_RESET);","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"garethkoh":38}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"    public Parser initialiseParserWithTaskListStub() {","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"garethkoh"},"content":"        Deadline deadline \u003d new Deadline(\"Buy Groceries\", \"2022-01-01\");","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"garethkoh"},"content":"        Event event \u003d new Event(\"Meeting\", \"2022-01-02\");","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"garethkoh"},"content":"        ToDo toDo \u003d new ToDo(\"Homework\");","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"garethkoh"},"content":"        list.add(deadline);","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"garethkoh"},"content":"        list.add(event);","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"garethkoh"},"content":"        list.add(toDo);","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"garethkoh"},"content":"        return new Parser(new TaskListStub(list));","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"garethkoh"},"content":"    public void byeCommandTest() {","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"goodbye!\\n\", parser.parse(\"bye\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"garethkoh"},"content":"        assertTrue(parser.checkByeCommand());","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"garethkoh"},"content":"    public void listCommandTest() {","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"1. [D][ ] Buy Groceries (by: Saturday, 1 January 2022)\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"garethkoh"},"content":"                \"2. [E][ ] Meeting (at: Sunday, 2 January 2022)\\n\" +","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"garethkoh"},"content":"                \"3. [T][ ] Homework\\n\", parser.parse(\"list\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"garethkoh"},"content":"    public void helpCommandTest() {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"try the following commands:\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"garethkoh"},"content":"                + \"   list (list out all tasks in your todo list)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"garethkoh"},"content":"                + \"   todo \u003ctask\u003e (add a basic task to your todo list)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"garethkoh"},"content":"                + \"   deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e (add a task with a deadline to your todo list)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"garethkoh"},"content":"                + \"   event \u003ctask\u003e /at \u003cyyyy-mm-dd\u003e (add a new event with its corresponding date to your todo list)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"garethkoh"},"content":"                + \"   mark \u003ctask index\u003e (mark that specific task as completed)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"garethkoh"},"content":"                + \"   unmark \u003ctask index\u003e (remove mark from specific task)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"garethkoh"},"content":"                + \"   delete \u003ctask index\u003e (remove task from todo list)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"garethkoh"},"content":"                + \"   bye (close application)\\n\", parser.parse(\"help\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"garethkoh"},"content":"    public void unmarkCommandEmptyDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"unmark description cannot be empty!\\n\", parser.parse(\"unmark\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"garethkoh"},"content":"    public void unmarkCommandNonInteger() {","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"unmark description must be an integer!\\n\", parser.parse(\"unmark 1.2\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"garethkoh"},"content":"    public void unmarkCommandOutOfBounds() {","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"the index you have entered does not exist!\\n\", parser.parse(\"unmark 5\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"garethkoh"},"content":"    public void unmarkCommandSuccess() {","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"Boo! more work to do: Buy Groceries\\n\", parser.parse(\"unmark 1\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"garethkoh"},"content":"    public void markCommandEmptyDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"mark description cannot be empty!\\n\", parser.parse(\"mark\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"garethkoh"},"content":"    public void markCommandNonInteger() {","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"mark description must be an integer!\\n\", parser.parse(\"mark one\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"garethkoh"},"content":"    public void markCommandOutOfBounds() {","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"the index you have entered does not exist!\\n\", parser.parse(\"mark 4\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"garethkoh"},"content":"    public void markCommandSuccess() {","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"great job! I\u0027ve marked this task as done: Buy Groceries\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"garethkoh"},"content":"                , parser.parse(\"mark 1\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":103,"author":{"gitId":"garethkoh"},"content":"    public void toDoCommandEmptyDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":104,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"the description of a todo cannot be empty!\\n\", parser.parse(\"todo \"));","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"garethkoh"},"content":"    public void toDoCommandSuccess() {","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"task added:\\n\" + \"[T][ ] study\\n\" + \"you now have 4 tasks\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":112,"author":{"gitId":"garethkoh"},"content":"                , parser.parse(\"todo study\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"garethkoh"},"content":"    public void deadlineCommandEmptyDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"deadline description cannot be empty!\\n\", parser.parse(\"deadline \"));","lastModifiedDate":"2022-02-10"},{"lineNumber":119,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":121,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":122,"author":{"gitId":"garethkoh"},"content":"    public void deadlineCommandMissingDate() {","lastModifiedDate":"2022-02-10"},{"lineNumber":123,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"deadline description must contain a date!\\n\", parser.parse(\"deadline do \"));","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":126,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":127,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":128,"author":{"gitId":"garethkoh"},"content":"    public void deadlineCommandSuccess() {","lastModifiedDate":"2022-02-10"},{"lineNumber":129,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":130,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"task added:\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":131,"author":{"gitId":"garethkoh"},"content":"                        + \"[D][ ] study (by: Thursday, 3 March 2022)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":132,"author":{"gitId":"garethkoh"},"content":"                        + \"you now have 4 tasks\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":133,"author":{"gitId":"garethkoh"},"content":"                , parser.parse(\"deadline study /by 2022-03-03\") );","lastModifiedDate":"2022-02-10"},{"lineNumber":134,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":135,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":136,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":137,"author":{"gitId":"garethkoh"},"content":"    public void eventCommandEmptyDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":138,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":139,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"event description cannot be empty!\\n\", parser.parse(\"event \"));","lastModifiedDate":"2022-02-10"},{"lineNumber":140,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":141,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":142,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":143,"author":{"gitId":"garethkoh"},"content":"    public void eventCommandMissingDate() {","lastModifiedDate":"2022-02-10"},{"lineNumber":144,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":145,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"event description must contain a date!\\n\", parser.parse(\"event one\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":146,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":147,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":148,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":149,"author":{"gitId":"garethkoh"},"content":"    public void eventCommandSuccess() {","lastModifiedDate":"2022-02-10"},{"lineNumber":150,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":151,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"task added:\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":152,"author":{"gitId":"garethkoh"},"content":"                + \"[E][ ] virtual meeting (at: Monday, 4 April 2022)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":153,"author":{"gitId":"garethkoh"},"content":"                + \"you now have 4 tasks\\n\", parser.parse(\"event virtual meeting /at 2022-04-04\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":154,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":155,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":156,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":157,"author":{"gitId":"garethkoh"},"content":"    public void deleteCommandEmptyDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":158,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":159,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"delete description cannot be empty!\\n\", parser.parse(\"delete \"));","lastModifiedDate":"2022-02-10"},{"lineNumber":160,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":161,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":162,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":163,"author":{"gitId":"garethkoh"},"content":"    public void deleteCommandNonInteger() {","lastModifiedDate":"2022-02-10"},{"lineNumber":164,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":165,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"delete description must be an integer!\\n\", parser.parse(\"delete one\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":166,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":167,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":168,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":169,"author":{"gitId":"garethkoh"},"content":"    public void deleteCommandOutOfBounds() {","lastModifiedDate":"2022-02-10"},{"lineNumber":170,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":171,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"the index you have entered does not exist!\\n\", parser.parse(\"delete 4\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":172,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":173,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":174,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":175,"author":{"gitId":"garethkoh"},"content":"    public void deleteCommandSuccess() {","lastModifiedDate":"2022-02-10"},{"lineNumber":176,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":177,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"task removed:\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":178,"author":{"gitId":"garethkoh"},"content":"                + \"[D][ ] Buy Groceries (by: Saturday, 1 January 2022)\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":179,"author":{"gitId":"garethkoh"},"content":"                + \"you now have 2 tasks\\n\", parser.parse(\"delete 1\") );","lastModifiedDate":"2022-02-10"},{"lineNumber":180,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":181,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":182,"author":{"gitId":"garethkoh"},"content":"    @Test","lastModifiedDate":"2022-02-10"},{"lineNumber":183,"author":{"gitId":"garethkoh"},"content":"    public void invalidCommand() {","lastModifiedDate":"2022-02-10"},{"lineNumber":184,"author":{"gitId":"garethkoh"},"content":"        Parser parser \u003d initialiseParserWithTaskListStub();","lastModifiedDate":"2022-02-10"},{"lineNumber":185,"author":{"gitId":"garethkoh"},"content":"        assertEquals(\"invalid command! try \u0027help\u0027 for list of commands\\n\", parser.parse(\"help1\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":186,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":187,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"garethkoh":187}},{"path":"src/test/java/duke/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"public class TaskListStub extends TaskList{","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"    public TaskListStub(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"        super(list);","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"garethkoh":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"garethkoh"},"content":"todo buy groceries","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"garethkoh"},"content":"deadline homework /by friday","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"garethkoh"},"content":"event bday party /at 4pm","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"garethkoh"},"content":"mark 1","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"garethkoh"},"content":"list","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"garethkoh"},"content":"mark 3","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"garethkoh"},"content":"list","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"garethkoh"},"content":"unmark 1","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"garethkoh"},"content":"list","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"garethkoh"},"content":"delete 3","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"garethkoh"},"content":"list","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"garethkoh"},"content":"mark 2","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"garethkoh"},"content":"bye","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"garethkoh":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"garethkoh"},"content":"## convert to UNIX format","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"garethkoh"},"content":"diff -b -B ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"garethkoh":2}}]
