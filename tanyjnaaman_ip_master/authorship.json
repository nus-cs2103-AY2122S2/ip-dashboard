[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"# Duke\u0027s successor, Alfred","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"This is a project based on _Duke_, a project template for a greenfield Java project named after the Java mascot _Duke_. ","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"## Features and summary of progress","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"- [X] Mark as done, delete functionalities","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"- [X] Task types","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"- [X] Exception handling","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"- [X] Save functionality","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"- [X] Refactor for OOP","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"- [X] Gradle","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"- [X] Windows GUI","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":10,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"plugins {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"repositories {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"sourceSets {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    main {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"        java {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    test {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"        java {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"            srcDirs \u003d [\u0027src/test/java\u0027]","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"dependencies {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"test {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"    testLogging {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"        showExceptions true","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        showCauses true","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"checkstyle {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"run{","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"tanyjnaaman":68}},{"path":"data/Alfred.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"T` `things","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"T` ` other thing","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":":execute","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":":end","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"tanyjnaaman"},"content":":fail","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"tanyjnaaman"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"tanyjnaaman"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"tanyjnaaman"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"tanyjnaaman"},"content":"exit /b 1","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"tanyjnaaman"},"content":":mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"tanyjnaaman"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"tanyjnaaman"},"content":":omega","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"tanyjnaaman":89}},{"path":"src/main/java/alfred/Alfred.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.parser.AlfredParser;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.AlfredException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.controller.DialogBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":" * This class encapsulates the Alfred bot.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"public class Alfred {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"    // internals","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    private AlfredUserInterface ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    private AlfredParser parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    private AlfredStorage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    private boolean isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs an Alfred object that saves the list data to Alfred.txt in","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"     * /data of the project root directory.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    public Alfred() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        this.ui \u003d new AlfredUserInterface();","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        this.parser \u003d new AlfredParser();","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        this.storage \u003d new AlfredStorage(","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"                String.join(File.separator, \".\", \"data\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"                String.join(File.separator, \".\", \"data\", \"Alfred.txt\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"     * Runs Alfred in the console. To terminate, use the command","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"     * \"bye\".","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"    public void run() {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        this.ui.greeting();","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"                Command command \u003d this.parser.parseInput(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"                command.execute(ui, storage);","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"            } catch (AlfredException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"                ui.handleAlfredException(e);","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"     * Returns the appropriate respnonse and modifies the internal","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"     * data state of Alfred, given a user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input User input.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"     * @return String output to user, in response to input.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"tanyjnaaman"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"tanyjnaaman"},"content":"            Command command \u003d this.parser.parseInput(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"tanyjnaaman"},"content":"            String response \u003d command.response(this.ui, this.storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"tanyjnaaman"},"content":"            this.isExit \u003d command.isExit();","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"tanyjnaaman"},"content":"            return response;","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (AlfredException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"tanyjnaaman"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"tanyjnaaman"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"tanyjnaaman"},"content":"        return this.ui.getGreetingMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"tanyjnaaman"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":98}},{"path":"src/main/java/alfred/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"public class Launcher {","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":9}},{"path":"src/main/java/alfred/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.controller.MainWindow;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":" * A GUI for Alfred using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    private Alfred alfred \u003d new Alfred();","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        // initialize","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAlfred(alfred);","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"            stage.show();","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"            // greeting","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":38}},{"path":"src/main/java/alfred/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.Alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.AlfredException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":" * This is an abstract class encapsulating all valid commands","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":" * read by Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    public abstract void execute(AlfredUserInterface ui, AlfredStorage storage) throws","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"            AlfredException;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    public abstract String response(AlfredUserInterface ui, AlfredStorage storage) throws AlfredException;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":21}},{"path":"src/main/java/alfred/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":" * This is a class encapsulating the Deadline command.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"    private String[] arguments;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs a DeadlineCommand object. Removes the first 8 characters,","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"     * assuming it is \"deadline\". Then splits it by \" /by \" to get the arguments,","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"     * and removes empty strings.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String input read from the console, with the starting keyword","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"     *              as \"deadline\".","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"        this.arguments \u003d input.substring(8).split(\" /by \");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"        this.arguments \u003d Arrays.stream(this.arguments).filter(in -\u003e !in.isEmpty())","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"                .toArray(String[]::new); // filter away empty strings","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the Deadline command by checking for valid input format,","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"     * adding the task to an internal storage object, before printing out","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"     * the new task added.","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used as the UI interface for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle internal storage for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidDateTimeException If date-time being given is not in ISO format.","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidInputException    If any missing arguments.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage)","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"            throws InvalidDateTimeException, InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        String response \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(response);","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage)","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"            throws InvalidDateTimeException, InvalidInputException {","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"        // check validity of data","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        if (this.arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"            LocalDateTime.parse(this.arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"        // modify data state","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"        Task event \u003d new Deadline(this.arguments[0], this.arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"        storage.addTask(event);","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"        // response","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Yes sir, I\u0027ve added this task.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d event.toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.summarizeList();","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":78}},{"path":"src/main/java/alfred/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidIndexException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":" * This class encapsulates the Delete Command.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    private final String[] arguments;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String input read from the console, assuming the starting keyword","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"     *              as \"delete\".","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        this.arguments \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the Delete Command, by removing the designated task from","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"     * the internal storage object used by Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used as the UI interface for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle internal storage for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidInputException If too many or too few arguments, or list index is not numeric.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidIndexException If item index is out of bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage) throws InvalidInputException,","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"            InvalidIndexException {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"        String response \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(response);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage) throws InvalidInputException,","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"            InvalidIndexException {","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        // check only two arguments","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        // check that second argument is numerical","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        int taskId;","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"            taskId \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        // response","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Noted sir. I\u0027ve removed the following task:\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.taskToString(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"        // modify in storage","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"        storage.deleteTask(taskId);","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":72}},{"path":"src/main/java/alfred/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the Event Command.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"    private String[] arguments;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs an EventCommand object. Assumes that first word is","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"     * \"event\", and splits input from console accordingly to get","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"     * other arguments.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String input from the console. Assumes that input","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"     *              begins with \"event\".","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"        this.arguments \u003d input.substring(5).split(\" /at \");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"        this.arguments \u003d Arrays.stream(this.arguments).filter(in -\u003e !in.isEmpty())","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"                .toArray(String[]::new); // filter away empty strings","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the event command. Checks for valid input, modifies","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"     * the internal data state of Alfred, then prints new task to console.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used as the UI interface for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle internal storage for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidDateTimeException If date-time being given is not in ISO format.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidInputException    If any missing arguments.","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage)","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"            throws InvalidDateTimeException, InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        String response \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(response);","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage)","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"            throws InvalidDateTimeException, InvalidInputException {","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        // check validity of data","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"        if (this.arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"            LocalDateTime.parse(this.arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"        // modify data state","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"        Task event \u003d new Event(this.arguments[0], this.arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"        storage.addTask(event);","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"        // response","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Yes sir, I\u0027ve added this task.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d event.toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.summarizeList();","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":75}},{"path":"src/main/java/alfred/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the exit command.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"     * Calls the UI to print exit message to the console.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used as the UI interface for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle internal storage for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"        ui.bye();","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"        return ui.getByeMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"        return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":33}},{"path":"src/main/java/alfred/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.MissingInputException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the find command.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    private String text;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String input to be matched with tasks for searching.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"        this.text \u003d input.substring(4); // remove \"find\"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the find command.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used for handling interactions with the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to manage internal data state of Alfred.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws MissingInputException if no valid string found after \"find\" in input.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage) throws","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"            MissingInputException {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(out);","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage) throws","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"            MissingInputException {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"        // validity check","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        if ((this.text.length() \u003c 1) || this.text.split(\" \").length \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"            throw new MissingInputException();","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"        // do","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Here are the matching tasks, sir:\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.find(this.text);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"tanyjnaaman":53}},{"path":"src/main/java/alfred/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.Alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the list command.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the list command by iterating through all tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"     * in the internal data state and printing them to console.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used as the UI interface for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle internal storage for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(out);","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d \"Sir, here are the things you need to do:\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.listToString();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":37}},{"path":"src/main/java/alfred/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.Alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidIndexException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the mark command.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    private final String[] arguments;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String input from the console. Assumes that input is","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"     *              correctly formatted, such that first word is \"mark\".","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"        this.arguments \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the mark command, by modifying the internal data state","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"     * of Alfred and then printing the change to console.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used as the UI interface for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle internal storage for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidInputException If there is more than 1 argument following \"mark\"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"     *                               in the input.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidIndexException If object to be marked is at an invalid index.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage) throws InvalidInputException,","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"            InvalidIndexException {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(out);","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage)","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"            throws InvalidInputException,","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"            InvalidIndexException {","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        // check only two arguments","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"        if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        // check that second argument is numerical","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"        int taskId;","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"            taskId \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        // modify in storage","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        storage.markTask(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"        // print out","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Good job sir. I\u0027ve marked this as complete.\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.taskToString(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":71}},{"path":"src/main/java/alfred/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.Alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.MissingInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.ToDo;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the T0D0 command.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    private final String description;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs a ToDoCommand object.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String input from the console. Assumes correct formatting,","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"     *              where first word is \"todo\".","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    public ToDoCommand(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"        this.description \u003d input.substring(4);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the T0D0 command, by adding a new task to the internal","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"     * data state of Alfred and printing to console.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used by Alfred for handling","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"     *                interactions with the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle the internal data","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"     *                states of Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws MissingInputException If there is no valid task description after","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"     *                               the \"todo\" keyword.","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage)","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"            throws MissingInputException {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(out);","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage) throws MissingInputException {","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        // validity check","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"        if ((this.description.length() \u003c 1) || this.description.split(\" \").length \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"            throw new MissingInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        // modify data state","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"        Task todo \u003d new ToDo(this.description);","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"        storage.addTask(todo);","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        // response","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Yes sir, I\u0027ve added this task.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d todo.toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.summarizeList();","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":66}},{"path":"src/main/java/alfred/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.Alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidIndexException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.storage.AlfredStorage;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the unmark command.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    private final String[] arguments;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs an UnmarkCommand object.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input input from the console. Assumes that input is","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"     *              *         correctly formatted, such that first word is \"unmark\".","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"        this.arguments \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"     * Executes the unmark command, by modifying the internal data state","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"     * of Alfred and then printing the change to console.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui      AlfredUserInterface object used as the UI interface for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"     * @param storage AlfredStorage object used to handle internal storage for Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidInputException If there is more than 1 argument following \"mark\"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"     *                               in the input.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidIndexException If object to be unmarked is at an invalid index.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    public void execute(AlfredUserInterface ui, AlfredStorage storage) throws InvalidInputException,","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"            InvalidIndexException {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d this.response(ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(out);","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"    public String response(AlfredUserInterface ui, AlfredStorage storage)","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"            throws InvalidInputException,","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"            InvalidIndexException {","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        // check only two arguments","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"        if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        // check that second argument is numerical","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"        int taskId;","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"            taskId \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        // modify in storage","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        storage.unmarkTask(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"        // response","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"I see, no worries sir. I\u0027ve marked this as to-be-done.\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d storage.taskToString(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":72}},{"path":"src/main/java/alfred/exceptions/AlfredException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.exceptions;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates all expected exceptions generated by the Alfred class.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"public class AlfredException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"    public AlfredException(String errorMessage) {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":10}},{"path":"src/main/java/alfred/exceptions/IllegalCharacterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the exception thrown when there is an illegal character in the input.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"public class IllegalCharacterException extends AlfredException {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"            \"Sorry sir, your input likely contains an invalid character\";","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    public IllegalCharacterException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tanyjnaaman":13}},{"path":"src/main/java/alfred/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.exceptions;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates an exception that occurs when an invalid command keyword","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":" * is passed to Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidCommandException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Invalid command, sir. I\u0027m not sure what you want me to do.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidCommandException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":13}},{"path":"src/main/java/alfred/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the exception thrown when an invalid date time format","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":" * (non-ISO) is passed to Alfred for the \"event\" and \"deadline\" commands.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidDateTimeException extends AlfredException {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"            \"Invalid date time format, sir.\"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"                    + \" Check that it follows ISO local format, of \u003cYYYY\u003e-\u003cMM\u003e-\u003cDD\u003eT\u003cHH\u003e:\u003cmm\u003e:\u003css\u003e\";","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidDateTimeException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":15}},{"path":"src/main/java/alfred/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.exceptions;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the exception thrown when an index is used to reference","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":" * an item in the list that is out of valid bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidIndexException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Invalid input, sir. Likely due to an invalid list item.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidIndexException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":13}},{"path":"src/main/java/alfred/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the exception thrown when a valid command is identifiable","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":" * in the input, but the format of arguments is not as expected.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"            \"Sorry sir, that\u0027s a valid command but invalid input.\"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"                    +","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"                    \" Likely due to wrong format after \u0027(un)mark\u0027, \u0027delete\u0027, \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    public InvalidInputException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":16}},{"path":"src/main/java/alfred/exceptions/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the exception thrown when only the keyword is passed","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":" * to Alfred, without any arguments.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"public class MissingInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"            \"Missing input, sir. \"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"                    + \"No valid input found after keyword arguments \u0027(un)mark\u0027, \u0027todo\u0027, \u0027event\u0027 or \u0027deadline\u0027.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    public MissingInputException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"        super(MissingInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":16}},{"path":"src/main/java/alfred/parser/AlfredParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.DeadlineCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.DeleteCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.EventCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.ExitCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.FindCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.ListCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.MarkCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.ToDoCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.command.UnmarkCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.IllegalCharacterException;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidCommandException;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates a parser used to identify the command","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":" * being passed to the Alfred bot.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"public class AlfredParser {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"     * Parses the input from the console.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String input from the console.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"     * @return Command object that can be executed.","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidCommandException if no valid command is identified in the input.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"    public Command parseInput(String input) throws InvalidCommandException,","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"            IllegalCharacterException {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"        // read in arguments","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"        String[] arguments \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"        String command \u003d arguments[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"        // case by case, check for valid input","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"        if (input.contains(Task.FORMAT_SPLIT)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"            throw new IllegalCharacterException();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        // LIST","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"        if ((command.equals(\"list\")) \u0026\u0026 (arguments.length \u003d\u003d 1)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"            // (UN)MARK and DELETE","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"            return new ToDoCommand(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"            return new EventCommand(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"            return new FindCommand(input);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":66}},{"path":"src/main/java/alfred/storage/AlfredStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.InvalidIndexException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.ui.AlfredUserInterface;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the logic for managing the internal data states","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":" * of Alfred.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"public class AlfredStorage {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    private final String dataPath;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    private final String folderPath;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs an AlfredStorage object.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"     * @param dataPath Data path to where Alfred.txt file should be saved.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"    public AlfredStorage(String folderPath, String dataPath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"        this.dataPath \u003d dataPath;","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"        this.taskList \u003d this.loadFromFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"     * Returns a string representation of the list of tasks being","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"     * tracked by the object.","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"     * @return String object representing the list of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    public String listToString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        return this.listToString(this.taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"     * Updates internal data state to mark the defined task","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"     * as complete.","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"     * @param taskId Integer as 0-indexed key.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidIndexException if index is out of bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"    public void markTask(int taskId) throws InvalidIndexException {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"        this.checkValidListIndex(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        this.taskList.get(taskId).markComplete();","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"        this.saveToFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"     * Updates internal data state to mark the defined task","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"     * as incomplete.","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"     * @param taskId Integer as 0-indexed key.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidIndexException if index is out of bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"    public void unmarkTask(int taskId) throws InvalidIndexException {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"        this.checkValidListIndex(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"        this.taskList.get(taskId).markIncomplete();","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"        this.saveToFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"     * Updates internal data state to delete the defined task.","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"     * @param taskId Integer as 0-indexed key.","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidIndexException if index is out of bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"    public void deleteTask(int taskId) throws InvalidIndexException {","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"tanyjnaaman"},"content":"        this.checkValidListIndex(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"tanyjnaaman"},"content":"        this.taskList.remove(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"tanyjnaaman"},"content":"        this.saveToFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"tanyjnaaman"},"content":"     * Updates the internal data state to add a Task object","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"tanyjnaaman"},"content":"     * to the list and calls the UI to print a response.","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"tanyjnaaman"},"content":"     * @param task Task object.","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui   AlfredInterface object used by Alfred to handle inputs","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"tanyjnaaman"},"content":"     *             and outputs with the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"tanyjnaaman"},"content":"    public void addTaskAndPrint(Task task, AlfredUserInterface ui) {","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"tanyjnaaman"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Yes sir, I\u0027ve added this task.\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d this.summarizeList();","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"tanyjnaaman"},"content":"        ui.sandwichAndPrint(out);","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"tanyjnaaman"},"content":"        this.saveToFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"tanyjnaaman"},"content":"     * Updates the internal data state to add a Task object","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"tanyjnaaman"},"content":"     * to the list and returns the response.","lastModifiedDate":"2022-01-31"},{"lineNumber":104,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"tanyjnaaman"},"content":"     * @param task Task object.","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"tanyjnaaman"},"content":"     * @param ui   AlfredInterface object used by Alfred to handle inputs","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"tanyjnaaman"},"content":"     *             and outputs with the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":108,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":109,"author":{"gitId":"tanyjnaaman"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"tanyjnaaman"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"Yes sir, I\u0027ve added this task.\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d this.summarizeList();","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"tanyjnaaman"},"content":"        this.saveToFile();","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"tanyjnaaman"},"content":"     * Gets the string representation of a given task.","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"tanyjnaaman"},"content":"     * @param taskId 0-indexed id of a task.","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"tanyjnaaman"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"tanyjnaaman"},"content":"     * @throws InvalidIndexException If the index is out of bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"tanyjnaaman"},"content":"    public String taskToString(int taskId) throws InvalidIndexException {","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"tanyjnaaman"},"content":"        this.checkValidListIndex(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"tanyjnaaman"},"content":"        return this.taskList.get(taskId).toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"tanyjnaaman"},"content":"     * Returns a formatted string that lists all matching tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":131,"author":{"gitId":"tanyjnaaman"},"content":"     * with a name that matches input text.","lastModifiedDate":"2022-01-24"},{"lineNumber":132,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":133,"author":{"gitId":"tanyjnaaman"},"content":"     * @param text Input text to be matched with regex.","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"tanyjnaaman"},"content":"     * @return Formatted output list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"tanyjnaaman"},"content":"    public String find(String text) {","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"tanyjnaaman"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"tanyjnaaman"},"content":"        // iterate through arraylist to find match","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"tanyjnaaman"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"tanyjnaaman"},"content":"            Task task \u003d this.taskList.get(i);","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"tanyjnaaman"},"content":"            if (task.match(text)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"tanyjnaaman"},"content":"                matches.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"tanyjnaaman"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"tanyjnaaman"},"content":"            return \"None found.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"tanyjnaaman"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"tanyjnaaman"},"content":"            return this.listToString(matches);","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"tanyjnaaman"},"content":"    private String listToString(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"tanyjnaaman"},"content":"        for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"tanyjnaaman"},"content":"            out +\u003d i + \". \" + taskList.get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":157,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":158,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-24"},{"lineNumber":159,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":160,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":161,"author":{"gitId":"tanyjnaaman"},"content":"    private void checkValidListIndex(int taskId) throws InvalidIndexException {","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"tanyjnaaman"},"content":"        if (taskId \u003e\u003d this.taskList.size() || taskId \u003c 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"tanyjnaaman"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"tanyjnaaman"},"content":"    public String summarizeList() {","lastModifiedDate":"2022-01-31"},{"lineNumber":168,"author":{"gitId":"tanyjnaaman"},"content":"        return \"Now you have \" + this.taskList.size() + \" task(s) in the your list.\";","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"tanyjnaaman"},"content":"    private ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"tanyjnaaman"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"tanyjnaaman"},"content":"        // try to load from file","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"tanyjnaaman"},"content":"            File file \u003d new File(this.dataPath);","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"tanyjnaaman"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"tanyjnaaman"},"content":"            // if can load, create list","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"tanyjnaaman"},"content":"            String line;","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"tanyjnaaman"},"content":"            Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"tanyjnaaman"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"tanyjnaaman"},"content":"                line \u003d sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"tanyjnaaman"},"content":"                task \u003d Task.parseSavedInput(line);","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"tanyjnaaman"},"content":"                arr.add(task); // FIFO","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"tanyjnaaman"},"content":"            return arr;","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (FileNotFoundException fe) {","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"tanyjnaaman"},"content":"            // create empty file","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"tanyjnaaman"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"tanyjnaaman"},"content":"                System.out.println(\"Alfred.txt not created. Will create at: \" + this.dataPath);","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"tanyjnaaman"},"content":"                File directory \u003d new File(this.folderPath);","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"tanyjnaaman"},"content":"                directory.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"tanyjnaaman"},"content":"                File output \u003d new File(this.dataPath);","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"tanyjnaaman"},"content":"                output.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"tanyjnaaman"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"tanyjnaaman"},"content":"                System.out.println(","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"tanyjnaaman"},"content":"                        \"Something went wrong trying to save the file: \" + ioe.getMessage()","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"tanyjnaaman"},"content":"                        + \"\\nPlease restart.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"tanyjnaaman"},"content":"            return arr;","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"tanyjnaaman"},"content":"    private void saveToFile() {","lastModifiedDate":"2022-01-23"},{"lineNumber":208,"author":{"gitId":"tanyjnaaman"},"content":"        FileWriter fw;","lastModifiedDate":"2022-01-23"},{"lineNumber":209,"author":{"gitId":"tanyjnaaman"},"content":"        // save to file","lastModifiedDate":"2022-01-23"},{"lineNumber":210,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":211,"author":{"gitId":"tanyjnaaman"},"content":"            fw \u003d new FileWriter(this.dataPath);","lastModifiedDate":"2022-01-23"},{"lineNumber":212,"author":{"gitId":"tanyjnaaman"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"tanyjnaaman"},"content":"                if (i !\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"tanyjnaaman"},"content":"                    fw.write(\"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"tanyjnaaman"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"tanyjnaaman"},"content":"                fw.write(this.taskList.get(i).taskToSaveString());","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"tanyjnaaman"},"content":"            fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":219,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (FileNotFoundException fe) { // create if needed","lastModifiedDate":"2022-01-23"},{"lineNumber":220,"author":{"gitId":"tanyjnaaman"},"content":"            System.out.println(\"Something went wrong trying to load the file: \" + fe.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":221,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":222,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-01-23"},{"lineNumber":223,"author":{"gitId":"tanyjnaaman"},"content":"            System.out.println(","lastModifiedDate":"2022-01-24"},{"lineNumber":224,"author":{"gitId":"tanyjnaaman"},"content":"                    \"Something went wrong trying to save the file: \" + ioe.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":225,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":226,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":227,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":227}},{"path":"src/main/java/alfred/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates a deadline task.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    protected final static String type \u003d \"D\";","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    private final String dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs a deadline object.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     * @param description String name of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     * @param dateAndTime String input of the date and time of the deadline,","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"     *                    in ISO format.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"    public Deadline(String description, String dateAndTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateAndTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"    protected Deadline(Boolean marked, String description, String dateAndTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateAndTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"        if (marked) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"            this.markComplete();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"    public String taskToSaveString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"        String mark \u003d this.completed ? Task.COMPLETION_MARK : Task.INCOMPLETE_MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        return String.join(Task.FORMAT_SPLIT, this.type, mark, this.description, this.dateAndTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"                + super.localDateTimeToString(this.dateTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":49}},{"path":"src/main/java/alfred/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the event task.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    protected final static String type \u003d \"E\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    private final String dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs an Event object.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"     * @param description String name of the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"     * @param dateAndTime Date and time of the event in ISO format.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateAndTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    protected Event(Boolean marked, String description, String dateAndTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateAndTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"        if (marked) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"            this.markComplete();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    public String taskToSaveString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"        String mark \u003d this.completed ? Task.COMPLETION_MARK : Task.INCOMPLETE_MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"        return String.join(Task.FORMAT_SPLIT, this.type, mark, this.description, this.dateAndTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"                + super.localDateTimeToString(this.dateTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":45}},{"path":"src/main/java/alfred/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates all Alfred Tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    // class constants","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    public static final String FORMAT_SPLIT \u003d \"`\";","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    protected static final String COMPLETION_MARK \u003d \"X\";","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"    protected static final String INCOMPLETE_MARK \u003d \" \";","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"            DateTimeFormatter.ofLocalizedDateTime(","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"                    FormatStyle.MEDIUM, FormatStyle.MEDIUM);","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    // instance attributes","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"    protected final String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    protected boolean completed;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructor of the parent class, so every task must have","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"     * some description and completion status.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"     * @param description Task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"    private String markIfComplete() {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"        if (this.completed) {","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"            return Task.COMPLETION_MARK;","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"            return Task.INCOMPLETE_MARK;","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"     * Updates internal state of the task to be complete.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"    public void markComplete() {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"     * Updates internal state of the task to be incomplete.","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"    public void markIncomplete() {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"     * Returns formatted date and time given a LocalDateTime object.","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"     * Intended as a helper method.","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"     * @param dateTime LocalDateTime object encapsulating date and time.","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"     * @return String format as defined by an internal format.","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"    public static String localDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"        return dateTime.format(Task.dateTimeFormatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"     * Checks if a given input string matches the description of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"     * @param text String input to be matched.","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"     * @return True if matching.","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"    public boolean match(String text) {","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"        Pattern pattern \u003d Pattern.compile(text, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"tanyjnaaman"},"content":"        Matcher matcher \u003d pattern.matcher(this.description);","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"tanyjnaaman"},"content":"        return matcher.find();","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"tanyjnaaman"},"content":"     * Parses a save string to return a Task object.","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"tanyjnaaman"},"content":"     * @param input String representation of saved task.","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tanyjnaaman"},"content":"     * @return Task object that was saved.","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"tanyjnaaman"},"content":"    public static Task parseSavedInput(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"tanyjnaaman"},"content":"        String[] arguments \u003d input.split(Task.FORMAT_SPLIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"tanyjnaaman"},"content":"        arguments \u003d Arrays.stream(arguments).map(s -\u003e s.trim()).toArray(String[]::new);","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"tanyjnaaman"},"content":"        String command \u003d arguments[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"tanyjnaaman"},"content":"        System.out.println(command);","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"tanyjnaaman"},"content":"        boolean marked \u003d arguments[1].equals(Task.COMPLETION_MARK);","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"tanyjnaaman"},"content":"        switch (command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"tanyjnaaman"},"content":"            case ToDo.type:","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"tanyjnaaman"},"content":"                return new ToDo(marked, arguments[2]);","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"tanyjnaaman"},"content":"            case Event.type:","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"tanyjnaaman"},"content":"                return new Event(marked, arguments[2], arguments[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"tanyjnaaman"},"content":"            case Deadline.type:","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"tanyjnaaman"},"content":"                return new Deadline(marked, arguments[2], arguments[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"tanyjnaaman"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"tanyjnaaman"},"content":"                throw new RuntimeException(\"Invalid command saved!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"tanyjnaaman"},"content":"     * Converts a task to a save string for saving.","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"tanyjnaaman"},"content":"     * @return String for saving.","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"tanyjnaaman"},"content":"    public abstract String taskToSaveString();","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":116,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":117,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.markIfComplete() + \"] \" + this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":119,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":119}},{"path":"src/main/java/alfred/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates a T0D0 task.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    protected final static String type \u003d \"T\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"     * Constructs a T0D0 object.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"     * @param description Name of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    protected ToDo(Boolean marked, String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        if (marked) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"            this.markComplete();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"    public String taskToSaveString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"        String mark \u003d this.completed ? Task.COMPLETION_MARK : Task.INCOMPLETE_MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"        return String.join(Task.FORMAT_SPLIT, this.type, mark, this.description);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.type + \"]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":38}},{"path":"src/main/java/alfred/ui/AlfredUserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.exceptions.AlfredException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":" * Encapsulates the logic and handling of interactions between the internal","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":" * workings of Alfred and the input/output with the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"public class AlfredUserInterface {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    // class constants","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    private static final String GREETING \u003d \"Hello! My name is Alfred.\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"            + \"How can I be of service?\";","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    private static final String BYE \u003d \"Bye! Hope I was of service.\";","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    private static final int BREAK_CHAR_LENGTH \u003d 100;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    private static final String BREAK_LINE \u003d AlfredUserInterface.line();","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    // instance variables","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    Scanner io;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"     * Creates an AlfredUserInterface object, and begins reading from","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"     * console inputs.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    public AlfredUserInterface() {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"        io \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    public String getByeMessage() {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"        return this.BYE;","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"        return this.GREETING;","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"    private static String line() {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"        for (int i \u003d 0; i \u003c AlfredUserInterface.BREAK_CHAR_LENGTH; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"            out +\u003d \"-\";","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"     * Wraps a given text input between break lines (e.g. \u003d\u003d\u003d)","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"     * and prints them to console.","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"     * @param text Text to be wrapped.","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"    public void sandwichAndPrint(String text) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d AlfredUserInterface.BREAK_LINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d text + \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d AlfredUserInterface.BREAK_LINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        System.out.println(out);","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"     * Prints a predetermined greeting message to the console.","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"    public void greeting() {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwichAndPrint(AlfredUserInterface.GREETING);","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"     * Prints a predetermined goodbye message to the console.","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"    public void bye() {","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwichAndPrint(AlfredUserInterface.BYE);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"     * Handles AlfredExceptions by printing its internal message","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"     * to the console.","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"tanyjnaaman"},"content":"     * @param e AlfredException thrown by other methods in the Alfred package.","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"tanyjnaaman"},"content":"    public void handleAlfredException(AlfredException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwichAndPrint(e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"tanyjnaaman"},"content":"     * Returns console input.","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"tanyjnaaman"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"tanyjnaaman"},"content":"     * @return String input from the console.","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"tanyjnaaman"},"content":"    public String readInput() {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"tanyjnaaman"},"content":"        return this.io.nextLine();","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":95}},{"path":"src/main/java/alfred/ui/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.ui.controller;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.SnapshotParameters;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        displayPicture.setImage(DialogBox.getRoundedImage(img, 100));","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"    private static Image getRoundedImage(Image image, double radius) {","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        Circle clip \u003d new Circle(image.getWidth() / 2, image.getHeight() / 2, radius);","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        ImageView imageView \u003d new ImageView(image);","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"        imageView.setClip(clip);","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"        SnapshotParameters parameters \u003d new SnapshotParameters();","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        parameters.setFill(Color.TRANSPARENT);","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"        return imageView.snapshot(parameters, null);","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"    private void flip() {","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"        db.flip();","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"        return db;","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"    public static DialogBox getAlfredDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":74}},{"path":"src/main/java/alfred/ui/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.ui.controller;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import alfred.Alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.Dialog;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    private Alfred alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    private final Image alfredImage \u003d","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/alfred.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"    public void greetUser() {","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        String greetingMessage \u003d this.alfred.getGreetingMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"        DialogBox startupDialog \u003d DialogBox.getAlfredDialog(greetingMessage, this.alfredImage);","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        this.dialogContainer.getChildren().addAll(startupDialog);","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"    public void setAlfred(Alfred alfred) {","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        this.alfred \u003d alfred;","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"        String response \u003d this.alfred.getResponse(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"        this.dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"                DialogBox.getAlfredDialog(response, this.alfredImage));","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        if (this.alfred.isExit()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"            Platform.exit();","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"        this.userInput.clear();","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"            \u003cFont name\u003d\"Lucida Sans Unicode\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"56.0\" fitWidth\u003d\"56.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"alfred.ui.controller.MainWindow\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"tanyjnaaman":19}},{"path":"src/test/java/alfred/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    public void todo_valid_toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"        ToDo todo \u003d new ToDo(\"Expected description\");","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"        assertEquals(todo.toString(), \"[T][ ] Expected description\");","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":15}},{"path":"src/test/java/alfred/ui/AlfredUserInterfaceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"package alfred.ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"public class AlfredUserInterfaceTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"  private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"  @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"  public void sandwichAndPrint_test() {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    // generate expected","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    String line \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"    for (int i \u003d 0; i \u003c 100; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"      line +\u003d \"-\";","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    String expected \u003d line + \"\\n\" + \"expected\" +\"\\n\" + line + \"\\n\" + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"    // set","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    System.setOut(new PrintStream(this.outContent));","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    // test","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"    AlfredUserInterface ui \u003d new AlfredUserInterface();","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    ui.sandwichAndPrint(\"expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"    assertEquals(expected.trim().replace(\"\\r\",\"\"), outContent.toString().trim().replace(\"\\r\",\"\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":33}},{"path":"text-ui-test/data/Alfred.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"D` ` return book`2021-01-02T10:00:00","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"E` ` project meeting`2022-11-03T22:00:00","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"T`X` join sports club","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"T` ` borrow book","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"D` ` return book`2021-05-28T09:01:00","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"E` ` project meeting`2023-05-03T12:43:00","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by wrongDateformat","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by 2021-01-02T10:00:00","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at 2022-11-03T22:00:00","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"todo join sports club","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"mark 4","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by 2021-05-28T09:01:00","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"deadline /by withoutname","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at wrongdateformat","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at 2023-05-03T12:43:00","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"event /at withoutname","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"todo","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"todo ","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"event without at","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"deadline without by","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"invalidrandomcommand","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"mark","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"unmark","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"mark invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"unmark invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"delete invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"delete","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"find","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"find nonexistentthing","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"find","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"find pro","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"tanyjnaaman":30}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"# delete output from previous run","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"if [ -e \"./data/Alfred.txt\" ]","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"then","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    rm -rf data","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"fi","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"java -classpath ../bin Run \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanyjnaaman":7,"-":37}}]
