[{"path":"src/main/java/Alfred.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"public class Alfred {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"    // class constants","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"    private static final String GREETING \u003d \"Hello! My name is Alfred.\\n\"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"            + \"How can I be of service?\";","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    private static final String BYE \u003d \"Bye! Hope I was of service.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    private static final int BREAK_CHAR_LENGTH \u003d 100;","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    private final String BREAK_LINE \u003d this.line();","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    // functional attributes","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    ArrayList\u003cTask\u003e task_list;","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"    Alfred() {","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"        this.task_list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    private String line() {","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        for (int i \u003d 0; i \u003c Alfred.BREAK_CHAR_LENGTH; i++) {","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"            out +\u003d \"-\";","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d \"\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"        return out;","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    private void sandwich_and_print(String text) {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d this.BREAK_LINE;","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d text + \"\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d this.BREAK_LINE;","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"        System.out.println(out);","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    private void greeting() {","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwich_and_print(Alfred.GREETING);","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"    private void bye() {","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwich_and_print(Alfred.BYE);","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"    private void add_task(Task task) {","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        this.task_list.add(task);","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"        String text \u003d \"Yes sir, I\u0027ve added this task.\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"        text +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"        text +\u003d this.summarize_list();","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwich_and_print(text);","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"    private void add_todo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"        this.add_task(task);","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"    private void add_deadline(String description, String deadline) {","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"        Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"        this.add_task(task);","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"    private void add_event(String description, String dateAndTime) {","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"        Task task \u003d new Event(description, dateAndTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"        this.add_task(task);","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"    private String summarize_list() {","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"        return \"Now you have \" + this.task_list.size() + \" task(s) in the your list.\";","lastModifiedDate":"2022-01-15"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"    private void list_tasks() {","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d this.BREAK_LINE;","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d \"Sir, here are the things you need to do:\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"        for (int i \u003d 1; i \u003c this.task_list.size() + 1; i++) {","lastModifiedDate":"2022-01-15"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"            out +\u003d i + \". \" + this.task_list.get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":79,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":80,"author":{"gitId":"tanyjnaaman"},"content":"        out +\u003d this.BREAK_LINE;","lastModifiedDate":"2022-01-15"},{"lineNumber":81,"author":{"gitId":"tanyjnaaman"},"content":"        System.out.println(out);","lastModifiedDate":"2022-01-15"},{"lineNumber":82,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":83,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":84,"author":{"gitId":"tanyjnaaman"},"content":"    private void mark_task(int task_id) {","lastModifiedDate":"2022-01-15"},{"lineNumber":85,"author":{"gitId":"tanyjnaaman"},"content":"        // update data state","lastModifiedDate":"2022-01-15"},{"lineNumber":86,"author":{"gitId":"tanyjnaaman"},"content":"        this.task_list.get(task_id).mark_complete();","lastModifiedDate":"2022-01-15"},{"lineNumber":87,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":88,"author":{"gitId":"tanyjnaaman"},"content":"        // return representation","lastModifiedDate":"2022-01-15"},{"lineNumber":89,"author":{"gitId":"tanyjnaaman"},"content":"        String text \u003d \"Good job sir. I\u0027ve marked this as complete.\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":90,"author":{"gitId":"tanyjnaaman"},"content":"        text +\u003d this.task_list.get(task_id).toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":91,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwich_and_print(text);","lastModifiedDate":"2022-01-15"},{"lineNumber":92,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":93,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":94,"author":{"gitId":"tanyjnaaman"},"content":"    private void unmark_task(int task_id) {","lastModifiedDate":"2022-01-15"},{"lineNumber":95,"author":{"gitId":"tanyjnaaman"},"content":"        // update data state","lastModifiedDate":"2022-01-15"},{"lineNumber":96,"author":{"gitId":"tanyjnaaman"},"content":"        this.task_list.get(task_id).mark_incomplete();","lastModifiedDate":"2022-01-15"},{"lineNumber":97,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":98,"author":{"gitId":"tanyjnaaman"},"content":"        // return representation","lastModifiedDate":"2022-01-15"},{"lineNumber":99,"author":{"gitId":"tanyjnaaman"},"content":"        String text \u003d \"I see, no worries sir. I\u0027ve marked this as to-be-done.\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":100,"author":{"gitId":"tanyjnaaman"},"content":"        text +\u003d this.task_list.get(task_id).toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":101,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwich_and_print(text);","lastModifiedDate":"2022-01-15"},{"lineNumber":102,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":103,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":104,"author":{"gitId":"tanyjnaaman"},"content":"    private void delete_task(int task_id) {","lastModifiedDate":"2022-01-16"},{"lineNumber":105,"author":{"gitId":"tanyjnaaman"},"content":"        // update data state","lastModifiedDate":"2022-01-16"},{"lineNumber":106,"author":{"gitId":"tanyjnaaman"},"content":"        Task task \u003d this.task_list.remove(task_id);","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":108,"author":{"gitId":"tanyjnaaman"},"content":"        // return representation","lastModifiedDate":"2022-01-16"},{"lineNumber":109,"author":{"gitId":"tanyjnaaman"},"content":"        String text \u003d \"Noted sir. I\u0027ve removed the following task:\\n\";","lastModifiedDate":"2022-01-16"},{"lineNumber":110,"author":{"gitId":"tanyjnaaman"},"content":"        text +\u003d task.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":111,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwich_and_print(text);","lastModifiedDate":"2022-01-16"},{"lineNumber":112,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":113,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":114,"author":{"gitId":"tanyjnaaman"},"content":"    private void read_input(String input) throws InvalidCommandException, InvalidInputException, InvalidIndexException, MissingInputException {","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"tanyjnaaman"},"content":"        // read in arguments","lastModifiedDate":"2022-01-16"},{"lineNumber":116,"author":{"gitId":"tanyjnaaman"},"content":"        String[] arguments \u003d input.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":117,"author":{"gitId":"tanyjnaaman"},"content":"        String command \u003d arguments[0];","lastModifiedDate":"2022-01-16"},{"lineNumber":118,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":119,"author":{"gitId":"tanyjnaaman"},"content":"        // case by case, with checks","lastModifiedDate":"2022-01-16"},{"lineNumber":120,"author":{"gitId":"tanyjnaaman"},"content":"        // LIST","lastModifiedDate":"2022-01-16"},{"lineNumber":121,"author":{"gitId":"tanyjnaaman"},"content":"        if ((command.equals(\"list\")) \u0026\u0026 (arguments.length \u003d\u003d 1)) {","lastModifiedDate":"2022-01-16"},{"lineNumber":122,"author":{"gitId":"tanyjnaaman"},"content":"            this.list_tasks();","lastModifiedDate":"2022-01-15"},{"lineNumber":123,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":124,"author":{"gitId":"tanyjnaaman"},"content":"        // (UN)MARK and DELETE","lastModifiedDate":"2022-01-16"},{"lineNumber":125,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\")) { // validity check for (un)mark","lastModifiedDate":"2022-01-16"},{"lineNumber":126,"author":{"gitId":"tanyjnaaman"},"content":"            if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-16"},{"lineNumber":127,"author":{"gitId":"tanyjnaaman"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":129,"author":{"gitId":"tanyjnaaman"},"content":"            int task_id;","lastModifiedDate":"2022-01-16"},{"lineNumber":130,"author":{"gitId":"tanyjnaaman"},"content":"            try {","lastModifiedDate":"2022-01-16"},{"lineNumber":131,"author":{"gitId":"tanyjnaaman"},"content":"                task_id \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":132,"author":{"gitId":"tanyjnaaman"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-16"},{"lineNumber":133,"author":{"gitId":"tanyjnaaman"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":134,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":135,"author":{"gitId":"tanyjnaaman"},"content":"            if (task_id \u003e\u003d this.task_list.size()) {","lastModifiedDate":"2022-01-16"},{"lineNumber":136,"author":{"gitId":"tanyjnaaman"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2022-01-16"},{"lineNumber":137,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":138,"author":{"gitId":"tanyjnaaman"},"content":"            // checks complete","lastModifiedDate":"2022-01-16"},{"lineNumber":139,"author":{"gitId":"tanyjnaaman"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":140,"author":{"gitId":"tanyjnaaman"},"content":"                this.mark_task(task_id);","lastModifiedDate":"2022-01-15"},{"lineNumber":141,"author":{"gitId":"tanyjnaaman"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":142,"author":{"gitId":"tanyjnaaman"},"content":"                this.unmark_task(task_id);","lastModifiedDate":"2022-01-15"},{"lineNumber":143,"author":{"gitId":"tanyjnaaman"},"content":"            } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":144,"author":{"gitId":"tanyjnaaman"},"content":"                this.delete_task(task_id);","lastModifiedDate":"2022-01-16"},{"lineNumber":145,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":146,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":147,"author":{"gitId":"tanyjnaaman"},"content":"        // DEADLINE","lastModifiedDate":"2022-01-16"},{"lineNumber":148,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":149,"author":{"gitId":"tanyjnaaman"},"content":"            String s \u003d input.substring(8); // select those after keyword","lastModifiedDate":"2022-01-16"},{"lineNumber":150,"author":{"gitId":"tanyjnaaman"},"content":"            String[] arg \u003d s.split(\" /by \");","lastModifiedDate":"2022-01-16"},{"lineNumber":151,"author":{"gitId":"tanyjnaaman"},"content":"            arg \u003d Arrays.stream(arg).filter(in -\u003e !in.isEmpty()).toArray(String[]::new); // filter away empty strings","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"tanyjnaaman"},"content":"            if (arg.length \u003c 2) {","lastModifiedDate":"2022-01-16"},{"lineNumber":153,"author":{"gitId":"tanyjnaaman"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":154,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":155,"author":{"gitId":"tanyjnaaman"},"content":"            this.add_deadline(arg[0], arg[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":156,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":157,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":158,"author":{"gitId":"tanyjnaaman"},"content":"            String descripton \u003d input.substring(4);","lastModifiedDate":"2022-01-15"},{"lineNumber":159,"author":{"gitId":"tanyjnaaman"},"content":"            if ((descripton.length() \u003c 1) || descripton.split(\" \").length \u003d\u003d 0) {","lastModifiedDate":"2022-01-16"},{"lineNumber":160,"author":{"gitId":"tanyjnaaman"},"content":"                throw new MissingInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":161,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":162,"author":{"gitId":"tanyjnaaman"},"content":"            this.add_todo(descripton);","lastModifiedDate":"2022-01-15"},{"lineNumber":163,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":164,"author":{"gitId":"tanyjnaaman"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":165,"author":{"gitId":"tanyjnaaman"},"content":"            String s \u003d input.substring(5);","lastModifiedDate":"2022-01-15"},{"lineNumber":166,"author":{"gitId":"tanyjnaaman"},"content":"            String[] arg \u003d s.split(\" /at \");","lastModifiedDate":"2022-01-16"},{"lineNumber":167,"author":{"gitId":"tanyjnaaman"},"content":"            arg \u003d Arrays.stream(arg).filter(in -\u003e !in.isEmpty()).toArray(String[]::new); // filter away empty strings","lastModifiedDate":"2022-01-18"},{"lineNumber":168,"author":{"gitId":"tanyjnaaman"},"content":"            if (arg.length \u003c 2) {","lastModifiedDate":"2022-01-16"},{"lineNumber":169,"author":{"gitId":"tanyjnaaman"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":170,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":171,"author":{"gitId":"tanyjnaaman"},"content":"            this.add_event(arg[0], arg[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":172,"author":{"gitId":"tanyjnaaman"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":173,"author":{"gitId":"tanyjnaaman"},"content":"            // invalid command","lastModifiedDate":"2022-01-16"},{"lineNumber":174,"author":{"gitId":"tanyjnaaman"},"content":"           throw new InvalidCommandException();","lastModifiedDate":"2022-01-16"},{"lineNumber":175,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":176,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":177,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":178,"author":{"gitId":"tanyjnaaman"},"content":"    private void handle_alfredException(AlfredException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":179,"author":{"gitId":"tanyjnaaman"},"content":"        this.sandwich_and_print(e.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":180,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":181,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":182,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":183,"author":{"gitId":"tanyjnaaman"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-15"},{"lineNumber":184,"author":{"gitId":"tanyjnaaman"},"content":"        // initialize","lastModifiedDate":"2022-01-15"},{"lineNumber":185,"author":{"gitId":"tanyjnaaman"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-15"},{"lineNumber":186,"author":{"gitId":"tanyjnaaman"},"content":"        Alfred bot \u003d new Alfred();","lastModifiedDate":"2022-01-15"},{"lineNumber":187,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":188,"author":{"gitId":"tanyjnaaman"},"content":"        // greet","lastModifiedDate":"2022-01-15"},{"lineNumber":189,"author":{"gitId":"tanyjnaaman"},"content":"        bot.greeting();","lastModifiedDate":"2022-01-15"},{"lineNumber":190,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":191,"author":{"gitId":"tanyjnaaman"},"content":"        // input","lastModifiedDate":"2022-01-15"},{"lineNumber":192,"author":{"gitId":"tanyjnaaman"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":193,"author":{"gitId":"tanyjnaaman"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":194,"author":{"gitId":"tanyjnaaman"},"content":"            try {","lastModifiedDate":"2022-01-16"},{"lineNumber":195,"author":{"gitId":"tanyjnaaman"},"content":"                bot.read_input(input);","lastModifiedDate":"2022-01-15"},{"lineNumber":196,"author":{"gitId":"tanyjnaaman"},"content":"            } catch(AlfredException e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":197,"author":{"gitId":"tanyjnaaman"},"content":"                bot.handle_alfredException(e);","lastModifiedDate":"2022-01-16"},{"lineNumber":198,"author":{"gitId":"tanyjnaaman"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":199,"author":{"gitId":"tanyjnaaman"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":200,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":201,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":202,"author":{"gitId":"tanyjnaaman"},"content":"        // close","lastModifiedDate":"2022-01-15"},{"lineNumber":203,"author":{"gitId":"tanyjnaaman"},"content":"        bot.bye();","lastModifiedDate":"2022-01-15"},{"lineNumber":204,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":205,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":206,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":206}},{"path":"src/main/java/AlfredException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class AlfredException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    public AlfredException(String errorMessage) {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    String type \u003d \"D\";","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    String date;","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    Deadline(String description, String date) {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \"(by: \"+ this.date + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    String type \u003d \"E\";","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    String dateAndTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    Event(String description, String dateAndTime) {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \"(at: \"+ this.dateAndTime + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":14}},{"path":"src/main/java/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class IncompleteInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Missing argument! /by or /at argument missing for deadline or event.\\nProper formatting: deadline \u003ctask\u003e /by \u003cdate\u003e, analogous for event.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    IncompleteInputException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(IncompleteInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidCommandException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Invalid command, sir. I\u0027m not sure what you want me to do.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    InvalidCommandException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidCommandException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":7}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidIndexException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Invalid input, sir. Likely due to an invalid list item.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    InvalidIndexException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidIndexException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Sorry sir, that\u0027s a valid command but invalid input. Likely due to wrong format after \u0027(un)mark\u0027, \u0027delete\u0027, \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    InvalidInputException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class MissingInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Missing input, sir. No valid input found after keyword arguments \u0027(un)mark\u0027, \u0027todo\u0027, \u0027event\u0027 or \u0027deadline\u0027.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    MissingInputException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(MissingInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    // class constants","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    private static String COMPLETION_MARK \u003d \"X\";","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    private static String INCOMPLETE_MARK \u003d \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"    // instance attributes","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    private String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    private boolean completed;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"    Task (String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"    private String check_if_complete() {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"        if (this.completed) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"            return Task.COMPLETION_MARK;","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"            return Task.INCOMPLETE_MARK;","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"    public void mark_complete() {","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"    public void mark_incomplete() {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.check_if_complete() + \"] \" + this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":37}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    String type \u003d \"T\";","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    ToDo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.type + \"]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"todo join sports club","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"mark 4","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"todo","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"todo ","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"event without at","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"deadline without by","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"invalidrandomcommand","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"mark","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"unmark","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"mark invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"unmark invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"delete invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"delete","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":22}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"java -classpath ../bin Alfred \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanyjnaaman":1,"-":37}}]
