[{"path":"data/Alfred.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"1. [D][X]  something (by: 10 Oct 2003)","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":1}},{"path":"src/main/java/Alfred.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"public class Alfred {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"  // class constants","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"  private static final String GREETING \u003d \"Hello! My name is Alfred.\\n\"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"      + \"How can I be of service?\";","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"  private static final String BYE \u003d \"Bye! Hope I was of service.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"  private static final int BREAK_CHAR_LENGTH \u003d 100;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"  private static final String BREAK_LINE \u003d Alfred.line();","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"  private static final String projectRoot \u003d \".\";","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"  private static final String DATA_PATH \u003d String.join(File.separator, projectRoot, \"data\", \"Alfred.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"  // functional attributes","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"  ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"  Alfred() {","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"    this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"  private void saveToFile() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"    System.out.println(new File(\".\").getCanonicalPath());","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"    FileWriter fw;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"    try {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"      fw \u003d new FileWriter(Alfred.DATA_PATH);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"      String newList \u003d this.listToString();","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"      fw.write(newList);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"      fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"    } catch (FileNotFoundException fe) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"      System.out.println(\"Alfred.txt not created. Will create at: \" + Alfred.DATA_PATH);","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"      try {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"        // create the file","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"        File output \u003d new File(Alfred.DATA_PATH);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"        output.createNewFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"        fw \u003d new FileWriter(output);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"        String newList \u003d this.listToString();","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"        fw.write(newList);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"        fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"tanyjnaaman"},"content":"        // write to it","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"tanyjnaaman"},"content":"      } catch (IOException ioe) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"tanyjnaaman"},"content":"        throw ioe;","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"tanyjnaaman"},"content":"  private static String line() {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"tanyjnaaman"},"content":"    String out \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"tanyjnaaman"},"content":"    for (int i \u003d 0; i \u003c Alfred.BREAK_CHAR_LENGTH; i++) {","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"tanyjnaaman"},"content":"      out +\u003d \"-\";","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d \"\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"tanyjnaaman"},"content":"    return out;","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"tanyjnaaman"},"content":"  private void sandwichAndPrint(String text) {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"tanyjnaaman"},"content":"    String out \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d Alfred.BREAK_LINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d text + \"\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":68,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d Alfred.BREAK_LINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"tanyjnaaman"},"content":"    System.out.println(out);","lastModifiedDate":"2022-01-15"},{"lineNumber":70,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"tanyjnaaman"},"content":"  private void greeting() {","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"tanyjnaaman"},"content":"    this.sandwichAndPrint(Alfred.GREETING);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"tanyjnaaman"},"content":"  private void bye() {","lastModifiedDate":"2022-01-15"},{"lineNumber":77,"author":{"gitId":"tanyjnaaman"},"content":"    this.sandwichAndPrint(Alfred.BYE);","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":79,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":80,"author":{"gitId":"tanyjnaaman"},"content":"  private void addTask(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"tanyjnaaman"},"content":"    this.taskList.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"tanyjnaaman"},"content":"    String text \u003d \"Yes sir, I\u0027ve added this task.\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":83,"author":{"gitId":"tanyjnaaman"},"content":"    text +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":84,"author":{"gitId":"tanyjnaaman"},"content":"    text +\u003d this.summarizeList();","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"tanyjnaaman"},"content":"    this.sandwichAndPrint(text);","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":87,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":88,"author":{"gitId":"tanyjnaaman"},"content":"  private void addTodo(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"tanyjnaaman"},"content":"    Task task \u003d new ToDo(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":90,"author":{"gitId":"tanyjnaaman"},"content":"    this.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":92,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":93,"author":{"gitId":"tanyjnaaman"},"content":"  private void addDeadline(String description, String deadline) {","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"tanyjnaaman"},"content":"    Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-01-15"},{"lineNumber":95,"author":{"gitId":"tanyjnaaman"},"content":"    this.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":97,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":98,"author":{"gitId":"tanyjnaaman"},"content":"  private void addEvent(String description, String dateAndTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"tanyjnaaman"},"content":"    Task task \u003d new Event(description, dateAndTime);","lastModifiedDate":"2022-01-15"},{"lineNumber":100,"author":{"gitId":"tanyjnaaman"},"content":"    this.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":102,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":103,"author":{"gitId":"tanyjnaaman"},"content":"  private String summarizeList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"tanyjnaaman"},"content":"    return \"Now you have \" + this.taskList.size() + \" task(s) in the your list.\";","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":106,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":107,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":108,"author":{"gitId":"tanyjnaaman"},"content":"  private void listTasks() {","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"tanyjnaaman"},"content":"    String out \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":110,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d Alfred.BREAK_LINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d \"Sir, here are the things you need to do:\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":112,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d this.listToString();","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"tanyjnaaman"},"content":"    out +\u003d Alfred.BREAK_LINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"tanyjnaaman"},"content":"    System.out.println(out);","lastModifiedDate":"2022-01-15"},{"lineNumber":115,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":116,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":117,"author":{"gitId":"tanyjnaaman"},"content":"  private String listToString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"tanyjnaaman"},"content":"    String out \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"tanyjnaaman"},"content":"    for (int i \u003d 1; i \u003c this.taskList.size() + 1; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"tanyjnaaman"},"content":"      out +\u003d i + \". \" + this.taskList.get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"tanyjnaaman"},"content":"    return out;","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"tanyjnaaman"},"content":"  private void markTask(int taskId) {","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"tanyjnaaman"},"content":"    // update data state","lastModifiedDate":"2022-01-15"},{"lineNumber":127,"author":{"gitId":"tanyjnaaman"},"content":"    this.taskList.get(taskId).markComplete();","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":129,"author":{"gitId":"tanyjnaaman"},"content":"    // return representation","lastModifiedDate":"2022-01-15"},{"lineNumber":130,"author":{"gitId":"tanyjnaaman"},"content":"    String text \u003d \"Good job sir. I\u0027ve marked this as complete.\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":131,"author":{"gitId":"tanyjnaaman"},"content":"    text +\u003d this.taskList.get(taskId).toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"tanyjnaaman"},"content":"    this.sandwichAndPrint(text);","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":134,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":135,"author":{"gitId":"tanyjnaaman"},"content":"  private void unmarkTask(int taskId) {","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"tanyjnaaman"},"content":"    // update data state","lastModifiedDate":"2022-01-15"},{"lineNumber":137,"author":{"gitId":"tanyjnaaman"},"content":"    this.taskList.get(taskId).markIncomplete();","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":139,"author":{"gitId":"tanyjnaaman"},"content":"    // return representation","lastModifiedDate":"2022-01-15"},{"lineNumber":140,"author":{"gitId":"tanyjnaaman"},"content":"    String text \u003d \"I see, no worries sir. I\u0027ve marked this as to-be-done.\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":141,"author":{"gitId":"tanyjnaaman"},"content":"    text +\u003d this.taskList.get(taskId).toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"tanyjnaaman"},"content":"    this.sandwichAndPrint(text);","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":144,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":145,"author":{"gitId":"tanyjnaaman"},"content":"  private void deleteTask(int taskId) {","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"tanyjnaaman"},"content":"    // update data state","lastModifiedDate":"2022-01-16"},{"lineNumber":147,"author":{"gitId":"tanyjnaaman"},"content":"    Task task \u003d this.taskList.remove(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":149,"author":{"gitId":"tanyjnaaman"},"content":"    // return representation","lastModifiedDate":"2022-01-16"},{"lineNumber":150,"author":{"gitId":"tanyjnaaman"},"content":"    String text \u003d \"Noted sir. I\u0027ve removed the following task:\\n\";","lastModifiedDate":"2022-01-16"},{"lineNumber":151,"author":{"gitId":"tanyjnaaman"},"content":"    text +\u003d task.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":152,"author":{"gitId":"tanyjnaaman"},"content":"    this.sandwichAndPrint(text);","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-16"},{"lineNumber":154,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":155,"author":{"gitId":"tanyjnaaman"},"content":"  private void callCommand(String command, String[] arguments) throws InvalidCommandException {","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"tanyjnaaman"},"content":"    int taskId;","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"tanyjnaaman"},"content":"    switch (command) {","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"tanyjnaaman"},"content":"      case \"list\":","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"tanyjnaaman"},"content":"        this.listTasks();","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"tanyjnaaman"},"content":"        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"tanyjnaaman"},"content":"      case \"mark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"tanyjnaaman"},"content":"        taskId \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"tanyjnaaman"},"content":"        this.markTask(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"tanyjnaaman"},"content":"        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"tanyjnaaman"},"content":"      case \"unmark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"tanyjnaaman"},"content":"        taskId \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"tanyjnaaman"},"content":"        this.unmarkTask(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"tanyjnaaman"},"content":"        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"tanyjnaaman"},"content":"      case \"delete\":","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"tanyjnaaman"},"content":"        taskId \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"tanyjnaaman"},"content":"        this.deleteTask(taskId);","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"tanyjnaaman"},"content":"        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"tanyjnaaman"},"content":"      case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"tanyjnaaman"},"content":"        this.addTodo(arguments[0]);","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"tanyjnaaman"},"content":"        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"tanyjnaaman"},"content":"      case \"event\":","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"tanyjnaaman"},"content":"        this.addEvent(arguments[0], arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"tanyjnaaman"},"content":"        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"tanyjnaaman"},"content":"      case \"deadline\":","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"tanyjnaaman"},"content":"        this.addDeadline(arguments[0], arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"tanyjnaaman"},"content":"        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":182,"author":{"gitId":"tanyjnaaman"},"content":"      default:","lastModifiedDate":"2022-01-23"},{"lineNumber":183,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":185,"author":{"gitId":"tanyjnaaman"},"content":"    try {","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"tanyjnaaman"},"content":"      this.saveToFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"tanyjnaaman"},"content":"    } catch (IOException ioe) {","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"tanyjnaaman"},"content":"      System.out.println(\"Something went wrong trying to save the file: \" + ioe.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"tanyjnaaman"},"content":"  private void readInput(String input)","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"tanyjnaaman"},"content":"      throws InvalidCommandException, InvalidInputException, InvalidIndexException,","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"tanyjnaaman"},"content":"      MissingInputException, InvalidDateTimeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"tanyjnaaman"},"content":"    // read in arguments","lastModifiedDate":"2022-01-16"},{"lineNumber":196,"author":{"gitId":"tanyjnaaman"},"content":"    String[] arguments \u003d input.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":197,"author":{"gitId":"tanyjnaaman"},"content":"    String command \u003d arguments[0];","lastModifiedDate":"2022-01-16"},{"lineNumber":198,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":199,"author":{"gitId":"tanyjnaaman"},"content":"    // case by case, check for valid input","lastModifiedDate":"2022-01-23"},{"lineNumber":200,"author":{"gitId":"tanyjnaaman"},"content":"    // LIST","lastModifiedDate":"2022-01-16"},{"lineNumber":201,"author":{"gitId":"tanyjnaaman"},"content":"    if ((command.equals(\"list\")) \u0026\u0026 (arguments.length \u003d\u003d 1)) {","lastModifiedDate":"2022-01-16"},{"lineNumber":202,"author":{"gitId":"tanyjnaaman"},"content":"      // do nothing","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":204,"author":{"gitId":"tanyjnaaman"},"content":"      // (UN)MARK and DELETE","lastModifiedDate":"2022-01-16"},{"lineNumber":205,"author":{"gitId":"tanyjnaaman"},"content":"    } else if (command.equals(\"mark\") || command.equals(\"unmark\")","lastModifiedDate":"2022-01-23"},{"lineNumber":206,"author":{"gitId":"tanyjnaaman"},"content":"        || command.equals(\"delete\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":207,"author":{"gitId":"tanyjnaaman"},"content":"      if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-16"},{"lineNumber":208,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidInputException();","lastModifiedDate":"2022-01-18"},{"lineNumber":209,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-16"},{"lineNumber":210,"author":{"gitId":"tanyjnaaman"},"content":"      int taskId;","lastModifiedDate":"2022-01-23"},{"lineNumber":211,"author":{"gitId":"tanyjnaaman"},"content":"      try {","lastModifiedDate":"2022-01-16"},{"lineNumber":212,"author":{"gitId":"tanyjnaaman"},"content":"        taskId \u003d Integer.valueOf(arguments[1]) - 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":213,"author":{"gitId":"tanyjnaaman"},"content":"      } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-16"},{"lineNumber":214,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":215,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-16"},{"lineNumber":216,"author":{"gitId":"tanyjnaaman"},"content":"      if (taskId \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":217,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidIndexException();","lastModifiedDate":"2022-01-16"},{"lineNumber":218,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-16"},{"lineNumber":219,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":220,"author":{"gitId":"tanyjnaaman"},"content":"      // DEADLINE","lastModifiedDate":"2022-01-16"},{"lineNumber":221,"author":{"gitId":"tanyjnaaman"},"content":"    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":222,"author":{"gitId":"tanyjnaaman"},"content":"      String s \u003d input.substring(8); // select those after keyword","lastModifiedDate":"2022-01-16"},{"lineNumber":223,"author":{"gitId":"tanyjnaaman"},"content":"      arguments \u003d s.split(\" /by \");","lastModifiedDate":"2022-01-23"},{"lineNumber":224,"author":{"gitId":"tanyjnaaman"},"content":"      arguments \u003d Arrays.stream(arguments).filter(in -\u003e !in.isEmpty())","lastModifiedDate":"2022-01-23"},{"lineNumber":225,"author":{"gitId":"tanyjnaaman"},"content":"          .toArray(String[]::new); // filter away empty strings","lastModifiedDate":"2022-01-23"},{"lineNumber":226,"author":{"gitId":"tanyjnaaman"},"content":"      if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":227,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":228,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-16"},{"lineNumber":229,"author":{"gitId":"tanyjnaaman"},"content":"      try {","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"tanyjnaaman"},"content":"        LocalDateTime.parse(arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"tanyjnaaman"},"content":"      } catch (DateTimeParseException dte) {","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidDateTimeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":235,"author":{"gitId":"tanyjnaaman"},"content":"      // T0D0","lastModifiedDate":"2022-01-23"},{"lineNumber":236,"author":{"gitId":"tanyjnaaman"},"content":"    } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":237,"author":{"gitId":"tanyjnaaman"},"content":"      String description \u003d input.substring(4);","lastModifiedDate":"2022-01-23"},{"lineNumber":238,"author":{"gitId":"tanyjnaaman"},"content":"      if ((description.length() \u003c 1) || description.split(\" \").length \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":239,"author":{"gitId":"tanyjnaaman"},"content":"        throw new MissingInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":240,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-16"},{"lineNumber":241,"author":{"gitId":"tanyjnaaman"},"content":"      arguments \u003d new String[] {description}; // wrap","lastModifiedDate":"2022-01-23"},{"lineNumber":242,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":243,"author":{"gitId":"tanyjnaaman"},"content":"      // EVENT","lastModifiedDate":"2022-01-23"},{"lineNumber":244,"author":{"gitId":"tanyjnaaman"},"content":"    } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":245,"author":{"gitId":"tanyjnaaman"},"content":"      String s \u003d input.substring(5);","lastModifiedDate":"2022-01-15"},{"lineNumber":246,"author":{"gitId":"tanyjnaaman"},"content":"      arguments \u003d s.split(\" /at \");","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"tanyjnaaman"},"content":"      arguments \u003d Arrays.stream(arguments).filter(in -\u003e !in.isEmpty())","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"tanyjnaaman"},"content":"          .toArray(String[]::new); // filter away empty strings","lastModifiedDate":"2022-01-23"},{"lineNumber":249,"author":{"gitId":"tanyjnaaman"},"content":"      if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":250,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidInputException();","lastModifiedDate":"2022-01-16"},{"lineNumber":251,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-16"},{"lineNumber":252,"author":{"gitId":"tanyjnaaman"},"content":"      try {","lastModifiedDate":"2022-01-23"},{"lineNumber":253,"author":{"gitId":"tanyjnaaman"},"content":"        LocalDateTime.parse(arguments[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":254,"author":{"gitId":"tanyjnaaman"},"content":"      } catch (DateTimeParseException dte) {","lastModifiedDate":"2022-01-23"},{"lineNumber":255,"author":{"gitId":"tanyjnaaman"},"content":"        throw new InvalidDateTimeException();","lastModifiedDate":"2022-01-23"},{"lineNumber":256,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-23"},{"lineNumber":257,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":258,"author":{"gitId":"tanyjnaaman"},"content":"    this.callCommand(command, arguments);","lastModifiedDate":"2022-01-23"},{"lineNumber":259,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":260,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":261,"author":{"gitId":"tanyjnaaman"},"content":"  private void handleAlfredException(AlfredException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":262,"author":{"gitId":"tanyjnaaman"},"content":"    this.sandwichAndPrint(e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":263,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-16"},{"lineNumber":264,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":265,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":266,"author":{"gitId":"tanyjnaaman"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2022-01-15"},{"lineNumber":267,"author":{"gitId":"tanyjnaaman"},"content":"    // initialize","lastModifiedDate":"2022-01-15"},{"lineNumber":268,"author":{"gitId":"tanyjnaaman"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-15"},{"lineNumber":269,"author":{"gitId":"tanyjnaaman"},"content":"    Alfred bot \u003d new Alfred();","lastModifiedDate":"2022-01-15"},{"lineNumber":270,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":271,"author":{"gitId":"tanyjnaaman"},"content":"    // greet","lastModifiedDate":"2022-01-15"},{"lineNumber":272,"author":{"gitId":"tanyjnaaman"},"content":"    bot.greeting();","lastModifiedDate":"2022-01-15"},{"lineNumber":273,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":274,"author":{"gitId":"tanyjnaaman"},"content":"    // input","lastModifiedDate":"2022-01-15"},{"lineNumber":275,"author":{"gitId":"tanyjnaaman"},"content":"    String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":276,"author":{"gitId":"tanyjnaaman"},"content":"    while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":277,"author":{"gitId":"tanyjnaaman"},"content":"      try {","lastModifiedDate":"2022-01-16"},{"lineNumber":278,"author":{"gitId":"tanyjnaaman"},"content":"        bot.readInput(input);","lastModifiedDate":"2022-01-23"},{"lineNumber":279,"author":{"gitId":"tanyjnaaman"},"content":"      } catch (AlfredException e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":280,"author":{"gitId":"tanyjnaaman"},"content":"        bot.handleAlfredException(e);","lastModifiedDate":"2022-01-23"},{"lineNumber":281,"author":{"gitId":"tanyjnaaman"},"content":"      }","lastModifiedDate":"2022-01-16"},{"lineNumber":282,"author":{"gitId":"tanyjnaaman"},"content":"      input \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":283,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":284,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":285,"author":{"gitId":"tanyjnaaman"},"content":"    // close","lastModifiedDate":"2022-01-15"},{"lineNumber":286,"author":{"gitId":"tanyjnaaman"},"content":"    bot.bye();","lastModifiedDate":"2022-01-15"},{"lineNumber":287,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":288,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":289,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":289}},{"path":"src/main/java/AlfredException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class AlfredException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    public AlfredException(String errorMessage) {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"  private String type \u003d \"D\";","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"  private LocalDateTime dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"  Deadline(String description, String dateAndTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"    this.dateTime \u003d LocalDateTime.parse(dateAndTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"  @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"  public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"    return \"[\" + this.type + \"]\" + super.toString() + \" (by: \" + super.localDateTimeToString(this.dateTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"  String type \u003d \"E\";","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"  LocalDateTime dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"  Event(String description, String dateAndTime) {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    this.dateTime \u003d LocalDateTime.parse(dateAndTime);;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"  @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"  public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"    return \"[\" + this.type + \"]\" + super.toString() + \" (at: \" + super.localDateTimeToString(this.dateTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":16}},{"path":"src/main/java/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class IncompleteInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Missing argument! /by or /at argument missing for deadline or event.\\nProper formatting: deadline \u003ctask\u003e /by \u003cdate\u003e, analogous for event.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    IncompleteInputException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(IncompleteInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidCommandException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Invalid command, sir. I\u0027m not sure what you want me to do.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    InvalidCommandException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidCommandException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":7}},{"path":"src/main/java/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidDateTimeException extends AlfredException {","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"  static String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"      \"Invalid date time format, sir. Check that it follows ISO local format, of \u003cYYYY\u003e-\u003cMM\u003e-\u003cDD\u003eT\u003cHH\u003e:\u003cMINMIN\u003e:\u003cSS\u003e\";","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"  InvalidDateTimeException() {","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"    super(InvalidDateTimeException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":8}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidIndexException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Invalid input, sir. Likely due to an invalid list item.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    InvalidIndexException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidIndexException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class InvalidInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Sorry sir, that\u0027s a valid command but invalid input. Likely due to wrong format after \u0027(un)mark\u0027, \u0027delete\u0027, \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    InvalidInputException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(InvalidInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class MissingInputException extends AlfredException {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    static String ERROR_MESSAGE \u003d \"Missing input, sir. No valid input found after keyword arguments \u0027(un)mark\u0027, \u0027todo\u0027, \u0027event\u0027 or \u0027deadline\u0027.\";","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"    MissingInputException() {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"        super(MissingInputException.ERROR_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"  // class constants","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"  private static final String COMPLETION_MARK \u003d \"X\";","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"  private static final String INCOMPLETE_MARK \u003d \" \";","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"  private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofLocalizedDateTime(","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"      FormatStyle.MEDIUM, FormatStyle.MEDIUM);","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"  // instance attributes","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"  private final String description;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"  private boolean completed;","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"  Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"    this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"    this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"  private String markIfComplete() {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"    if (this.completed) {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"      return Task.COMPLETION_MARK;","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"    } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"      return Task.INCOMPLETE_MARK;","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"tanyjnaaman"},"content":"  protected void markComplete() {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"tanyjnaaman"},"content":"    this.completed \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"tanyjnaaman"},"content":"  protected void markIncomplete() {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"tanyjnaaman"},"content":"    this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"tanyjnaaman"},"content":"  protected static String localDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"tanyjnaaman"},"content":"    return dateTime.format(Task.dateTimeFormatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"tanyjnaaman"},"content":"  @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"tanyjnaaman"},"content":"  public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"tanyjnaaman"},"content":"    return \"[\" + this.markIfComplete() + \"] \" + this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"tanyjnaaman"},"content":"  }","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":47}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"    String type \u003d \"T\";","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"    ToDo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"        return \"[\" + this.type + \"]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tanyjnaaman":13}},{"path":"text-ui-test/data/Alfred.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"1. [D][ ]  return book (by: Jan 2, 2021, 10:00:00 AM)","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"2. [E][ ]  project meeting (at: Nov 3, 2022, 10:00:00 PM)","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"3. [T][X]  join sports club","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"4. [T][ ]  borrow book","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"5. [D][ ]  return book (by: May 28, 2021, 9:01:00 AM)","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"6. [E][ ]  project meeting (at: May 3, 2023, 12:43:00 PM)","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyjnaaman"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tanyjnaaman"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by wrongDateformat","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by 2021-01-02T10:00:00","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at 2022-11-03T22:00:00","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"tanyjnaaman"},"content":"todo join sports club","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tanyjnaaman"},"content":"mark 4","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tanyjnaaman"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tanyjnaaman"},"content":"deadline return book /by 2021-05-28T09:01:00","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"tanyjnaaman"},"content":"deadline /by withoutname","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at wrongdateformat","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"tanyjnaaman"},"content":"event project meeting /at 2023-05-03T12:43:00","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"tanyjnaaman"},"content":"event /at withoutname","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"tanyjnaaman"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"tanyjnaaman"},"content":"todo","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tanyjnaaman"},"content":"todo ","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tanyjnaaman"},"content":"event without at","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"tanyjnaaman"},"content":"deadline without by","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tanyjnaaman"},"content":"invalidrandomcommand","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"tanyjnaaman"},"content":"mark","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"tanyjnaaman"},"content":"unmark","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"tanyjnaaman"},"content":"mark invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"unmark invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"tanyjnaaman"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"tanyjnaaman"},"content":"delete invalidnum","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"tanyjnaaman"},"content":"delete","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"tanyjnaaman"},"content":"","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"tanyjnaaman":27}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tanyjnaaman"},"content":"java -classpath ../bin Alfred \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanyjnaaman":1,"-":37}}]
