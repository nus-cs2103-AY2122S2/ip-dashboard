[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":16,"-":45}},{"path":"data/duke.Duke/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"E---false--- eat ---2222 1900-01-01 1100","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"D---false--- daaa ---Jan 01 2000 11:00 AM","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"D---true--- aa ---2021-22-01 2100","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"D---true--- bac ---Jan 22 2021 09:00 PM","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"T---false--- die---","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"T---false--- 1---","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"T---true--- 2---","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"T---true--- 3---","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"T---true--- 4---","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"D---false--- aaa ---Apr 04 1998 02:00 PM","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"D---false--- eat dinner ---2022-1-27 2400","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"D---false--- eat dinner ---Jan 28 2022 12:00 AM","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"D---true--- eat some fish ---Oct 10 1998 10:00 AM","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"D---false--- eat dinner ---Jan 28 2022 12:00 AM","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"E---false--- have cake for supper ---1998-25-03 1200","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"E---true--- have cat for supper ---Mar 25 1998 12:00 PM","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"T---false--- BAC deposit /at 2000-01-01 1100---","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"E---false--- eat cake ---1200","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"D---false--- BACK deposit ---Jan 01 2000 11:00 AM","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"D---false--- eat cake ---tmr","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"D---false--- eat cake NOW ---Jan 01 2022 11:00 AM","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"E---false--- eat bread now ---Jul 07 2001 10:00 PM","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"D---false--- eat cat ---Jan 01 2021 07:00 PM","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"D---false--- eat water ---Jan 01 2020 07:00 PM","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tzhan98":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"### Feature-Add","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to add 3 types of tasks: duke.ToDo, duke.Event and duke.Deadline.","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"### Feature-Mark/Unmark","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to mark and unmark tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"### Feature-list","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to list out all currently tracked tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"### Feature-Bye","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to exit.","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"##Keywords","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"### `duke.ToDo` - Adds tasks of type: todo","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027todo\u0027 with following input as task name.","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    `todo borrow book`","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"       [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"### `duke.Deadline` - Adds tasks of type: deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027deadline\u0027 with following input as task name and input after /by as deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    `deadline return book /by Sunday`","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"       [D][ ] return book (by: Sunday)","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     Now you have 6 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"### `duke.Event` - Adds tasks of type: event","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027event\u0027 with following input as task name and input after /at as deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    `event project meeting /at Mon 2-4pm`","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"       [E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"### \u0027mark\u0027 - Marks tasks as done","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"Expects \u003cmark int\u003e where int is the task number to be marked as done.","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    \u0027mark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"     Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"       [X] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"### \u0027unmark\u0027 - Marks tasks as not done","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"Expects \u003cunmark int\u003e where int is the task number to be marked as not done.","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    \u0027unmark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"       [ ] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"### \u0027list\u0027 - List all current tasks","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"List all current tasks","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    \u0027list\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"     1.[X] read book","lastModifiedDate":"2022-01-16"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     2.[ ] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"     3.[ ] buy bread","lastModifiedDate":"2022-01-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":81,"-":25}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of duke.Task: deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     * Constructor of deadline.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * Have to strip/process the input first and remove \u0027deadline\u0027","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * @param number task number","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @param deadline deadline to complete task","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    public Deadline(String input, int number, String deadline, boolean isReading) {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        super(input, number, deadline, \"D\", isReading);","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [D][%s] %s (by: %s)\\n\", number + 1, getStatus(), name, time);","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is the main duke.Duke program that will be able to process a duke.Task of 3 types: todo, deadline and task","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" * duke.Duke is able to list, delete and mark/unmark tasks as done/undone.","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" * @author Toh Zhan Qing","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    static TaskList tasklist;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    public Duke() {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"        tasklist \u003d storage.tasklist;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public String getResponse(String input){","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        return Parser.parseIsBye(input, tasklist);","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":23,"-":1}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * Placeholder Exception","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"public class DukeExceptions extends Exception{","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" * Exception to be thrown if descriptor is empty","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"class EmptyDescriptorExceptions extends Exception{","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    public EmptyDescriptorExceptions(){","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        super(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of duke.Task: duke.Event","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     * Constructor of event.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * Have to strip/process the input first and remove \u0027event\u0027","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * @param number task number","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @param time duration of event","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    public Event(String input, int number, String time, boolean isReading) {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        super(input, number, time, \"E\", isReading);","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%d. [E][%s] %s (at: %s)\\n\", number + 1, getStatus(), name, this.time);","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import gui.Output;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" * This is the class that parses through inputs","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"public class Parser {","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    public Parser(){","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        Storage.parser \u003d this;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"     * Checks if input is \u0027bye\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"     * @param input input entered by user into Duke","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     * @return true if input is bye, false otherwise","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    public static String parseIsBye(String input, TaskList tasklist){","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        if (input.equals(\"bye\")){","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"            return Output.printBye();","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"            return parseInput(input, tasklist);","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"     * Checks and processes user input (provided that it is not \u0027bye\u0027)","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"     * @param input user input into Duke (after making sure it is not \u0027bye\u0027)","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"     * @param taskList current tasklist","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    public static String parseInput(String input, TaskList taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        String s;","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"            s \u003d Output.printAllTasks(taskList);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"            s \u003d  taskList.deleteTask(Integer.parseInt(input.substring(7)));","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"mark\") || input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"            s \u003d taskList.markTask(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"event\") || input.startsWith(\"todo\") || input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            Task task \u003d parseCreateNewTask(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"                taskList.tasklist.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"                s \u003d task.printFirstAddition;","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"                s \u003d Output.printEmptyDescriptionException();","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"find \")){","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"            s \u003d taskList.findTask(input.substring(6));","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"            s \u003d Output.printWhatDoesThatMean();","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     * Parse through input and create a new task","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"     * @param input user input into Duke","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"     * @return task based on input parameters","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    public static Task parseCreateNewTask(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"            if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"                task \u003d new ToDo(input.substring(4), Task.totalTask, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"            } else if (input.startsWith(\"deadline\")){","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"                String[] inputArr \u003d input.split(\"/by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"                    throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"                task \u003d new Deadline(inputArr[0].substring(8), Task.totalTask, inputArr[1], false);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"                String[] inputArr \u003d input.split(\"/at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"                if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"                    throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"                task \u003d new Event(inputArr[0].substring(5), Task.totalTask, inputArr[1], false);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        } catch (EmptyDescriptorExceptions e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"            Output.printEmptyDescriptionException();","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"        return task;","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"     * Parse data in file data","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"     * @param input one line of file data in the form of (Task_Type---Task_status---Task_name---date)","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * @return task based on file data information provided","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    public static Task parseFileData(String input) {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"        if (input \u003d\u003d null || input \u003d\u003d \"\"){","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"            return null;","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"        String[] stringArr \u003d input.split(\"---\");","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"        Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"        if (stringArr[0].equals(\"T\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"            task \u003d new ToDo(stringArr[2], Task.totalTask, true);","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        } else if (stringArr[0].equals(\"D\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"            task \u003d new Deadline(stringArr[2],Task.totalTask, stringArr[3], true);","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"            task \u003d new Event(stringArr[2],Task.totalTask, stringArr[3], true);","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"        if (stringArr[1].equals(\"true\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"            task.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"        return task;","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":114}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" * Class responsible for writing to and reading from disk","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    static File saveData;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    static Parser parser;","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    TaskList tasklist \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public Storage(){","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        tasklist \u003d load();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * Write all current information in Tasklist to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     * @param taskList tasklist to write all data to file to","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public static void writeAllToFile(TaskList taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"            FileWriter fw \u003d new FileWriter(saveData);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            for (int i \u003d 0; i \u003c Task.totalTask; i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"                fw.write(taskList.tasklist.get(i).getDataRepresentation());","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"     * append a line of task information to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     * @param line Task information to write to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"     * @throws IOException if there is an error writing to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    public static void addLineToFile(String line) throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        FileWriter fw \u003d new FileWriter(saveData, true); // create a FileWriter in append mode","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        fw.write(line);","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"     * Finds previous save data if exists. If not found, creates new save data","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"     * If found, calls readSavedData","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    public static TaskList load() {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        TaskList tasklist\u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"            String currDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            java.nio.file.Path pathDir \u003d java.nio.file.Paths.get(currDir, \"data\", \"duke.Duke\");","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"            Path pathToFile \u003d java.nio.file.Paths.get(currDir, \"data\", \"duke.Duke\", \"tasks.txt\");","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            boolean directoryExists \u003d java.nio.file.Files.exists(pathToFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"            if (!directoryExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Unable to find existing data. Creating new file(s)...\");","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"                new File(pathDir.toString()).mkdirs();","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"                pathToFile.toFile().createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Successfully created \" + pathToFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Resuming previous saved state.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"            saveData \u003d pathToFile.toFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"            readSavedData(tasklist);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        return tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"     * reads information from disk to taskList","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"     * @param taskList tasklist to read save data from","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"     * @throws FileNotFoundException when file is not found","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"    public static void readSavedData(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"        Scanner s \u003d new Scanner(saveData);","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"            taskList.tasklist.add(parser.parseFileData(s.nextLine()));","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":93}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import gui.Output;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" * Class task that duke.Duke creates","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public String time \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public String name;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public String type;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    int number;","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public static int totalTask \u003d 0;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    boolean isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    boolean isCorrectDateFormat;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    String printFirstAddition \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     * Constructor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     * @param name Descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"     * @param number Number associated with task","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     * @param time time associated with task","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     * @param type type of task. \u0027E\u0027 for duke.Event, \u0027T\u0027 for Todo and \u0027D\u0027 for duke.Deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    public Task(String name, int number, String time, String type, boolean isReading) {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            if (name.equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"                throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"            this.number \u003d number;","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"            this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"            isCorrectDateFormat \u003d setDate(time, isReading);","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"            if (!isCorrectDateFormat) {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"                printFirstAddition +\u003d Output.WRONG_DATE_FORMAT;","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"            this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            if (!isReading) {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"                printFirstAddition +\u003d Output.printAddThisTask(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"                Storage.addLineToFile(this.getDataRepresentation());","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"                totalTask++;","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"                printFirstAddition +\u003d Output.printTotalTasks();","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"            else {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"                totalTask++;","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        catch (EmptyDescriptorExceptions e){","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"            Ui.printEmptyDescriptionException();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of how task will be formatted into disk","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of how task will be formatted into disk","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    public String getDataRepresentation() {","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%s---%s---%s---%s\\n\", this.type, this.isDone, this.name, this.time);","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"    private boolean setDate(String input, boolean isReading) {","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"            if ((this.type.equals(\"D\") || this.type.equals(\"E\")) \u0026\u0026 input !\u003d null) {","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"                input \u003d input.replaceAll(\"/\", \"-\");","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HHmm\");","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"                LocalDateTime lt \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"                DateTimeFormatter out \u003d DateTimeFormatter.ofPattern(\"MMM dd uuuu hh:mm a\");","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"                this.time \u003d lt.format(out);","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"            return true;","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        catch (DateTimeParseException e){","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"            if (!isReading)","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Note that dates should be in \u003c\u003cYYYY-MM-DD HHMM\u003e\u003e format\");","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"            this.time \u003d input;","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"     * Marks tasks as done.","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    public void mark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"     * Unmarks tasks as not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"    public void unmark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"     * Gets status of tasks based on if task is done/not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"     * @return X if task is done and empty string if task is not done","lastModifiedDate":"2022-01-19"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-15"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"        if (this.isDone){","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"            return \"X\";","lastModifiedDate":"2022-01-15"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"            return \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"     * Decrements number associated with the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"    public void decrementNum(){","lastModifiedDate":"2022-01-16"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"        this.number--;","lastModifiedDate":"2022-01-16"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [%s] %s\\n\", number + 1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":138,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":138}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import gui.Output;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" * This is the class that stores the task in a list format","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":" * and provide methods to modify the list","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        tasklist \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    //Depreciated","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public void markTaskNum(int taskNum, String isTrue) {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        if (isTrue.equals(\"true\") \u0026\u0026 (taskNum \u003e 0)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"            this.tasklist.get(taskNum).mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     * Deletes a specified index (starts from 1) from the input ArrayList and shifts","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     * all subsequent task numbers accordingly by +1.","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     * @param num index (starts from 1) to delete","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    public String deleteTask(int num) {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d Task.totalTask) {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            num--;","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"            String s \u003d Output.printRemovedThisTask(num, this);","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            this.tasklist.remove(num);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            Task.totalTask--;","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            for(int i \u003d num; i \u003cTask.totalTask; i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"                this.tasklist.get(i).decrementNum();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"            s +\u003d Output.printTotalTasks();","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"            Storage.writeAllToFile(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"            return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"            return \"☹ OOPS!!! There is no such task found.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     * Marks/Unmarks tasks as done/undone. Marking tasks that are already marked will have no change;","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     * same with unmarking unmarked tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"     * @param input Original input string that was entered","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    public String markTask(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        int taskNum \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        Task curr \u003d tasklist.get(taskNum);","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            curr.mark();","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"            s +\u003d Output.printMarkTaskDone(curr);","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"            curr.unmark();","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            s +\u003d Output.printMarkTaskNotDone(curr);","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        Storage.writeAllToFile(this);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"    public String addTask(String name, String time, String type, boolean isReading) {","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"        if (type.equals(\"D\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"            task \u003d new Deadline(name, Task.totalTask, time, isReading);","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"            task \u003d new Event(name, Task.totalTask, time, isReading);","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"            task \u003d new ToDo(name, Task.totalTask, isReading);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        tasklist.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        return task.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"        TaskList matchTasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"        for(int i \u003d 0; i \u003c Task.totalTask; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"            if (this.tasklist.get(i).name.contains(keyword) || this.tasklist.get(i).time.contains(keyword)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"                matchTasks.tasklist.add(tasklist.get(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"        return Output.printMatchTasks(matchTasks.tasklist);","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":93}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of duke.Task: todo","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"     * Constructor of Todo.","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     * @param number task number","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public ToDo(String input, int number, boolean isReading){","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        super(input, number, null, \"T\", isReading);","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [T][%s] %s\\n\", number + 1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" * Class that is responsible for input and output of Duke program","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"public class Ui {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public Ui() {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        startup();","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"//    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"//     * Loops user input until a \"bye\" is received. This is the main program that Dukes runs on.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"//     */","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"//    public void loop(TaskList tasklist) {","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"//        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"//        boolean isBye \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"//        while (!isBye) {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"//            String input \u003d sc.nextLine();","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"//            isBye \u003d Parser.parseIsBye(input, tasklist);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"//        }","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"//        printBye();","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"//    }","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     * Prints startup logo","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    public static void startup() {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"What can i do for you?\");","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     * prints output when user enters bye","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    public static void printBye() {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"Bye. I hope to see you sometime soon! :)\");","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     * prints when user enters input not recognised by Duke","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    public static void printWhatDoesThatMean() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what does that mean :-(\");","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"     * prints when user leaves description of task empty","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"    public static void printEmptyDescriptionException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"     * prints all task currently found in the Tasklist","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"     * @param tasklist tasklist to print from","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    public static void printAllTasks(TaskList tasklist) {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"        System.out.print(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"        for (int i \u003d 0; i \u003c Task.totalTask; i++){","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"            System.out.print(tasklist.tasklist.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"__________________________________________________________________\");","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"    public static void printMatchTasks(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"Here are the match tasks in your list:\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++){","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"            System.out.print(tasklist.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"__________________________________________________________________\");","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"     * prints the task that got removed","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"     * @param num index of task to remove (zero indexed)","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"     * @param taskList tasklist to remove task from","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"    public static void printRemovedThisTask(int num, TaskList taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"  [%s][%s] %s\\n\",taskList.tasklist.get(num).type,","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"                taskList.tasklist.get(num).getStatus(), taskList.tasklist.get(num).name);","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"     * prints when task is marked as done","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"     * @param curr task to be marked as done","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"    public static void printMarkTaskDone(Task curr) {","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"     * print when task is marked as not done","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"     * @param curr task to be marked as not done","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"    public static void printMarkTaskNotDone(Task curr) {","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"     * print number of tasks left inside Tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"    public static void printTotalTasks() {","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"Now you have %d task on the list.\\n\", Task.totalTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"     * print when user adds Task","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"     * @param task task to add into TaskList","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"    public static void printAddThisTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-22"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"        if (task.type.equals(\"D\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\" [D][%s] %s (by: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-01-22"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"        } else if (task.type.equals(\"T\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\" [T][%s] %s\\n\", task.getStatus(), task.name);","lastModifiedDate":"2022-01-22"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\" [E][%s] %s (on: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":136}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":61}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":32}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":52}},{"path":"src/main/java/gui/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import duke.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import duke.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"public class Output {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    static public String WRONG_DATE_FORMAT \u003d \"Note that dates should be in \u003c\u003cYYYY-MM-DD HHMM\u003e\u003e format\";","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public static String startup() {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        String s;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        s \u003d \"Hello from\\n\" + logo;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        s +\u003d \"\\nWhat can i do for you?\";","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     * prints output when user enters bye","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public static String printBye() {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        return \"Bye. I hope to see you sometime soon! :)\";","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"     * prints when user enters input not recognised by Duke","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"    public static String printWhatDoesThatMean() {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        return \" OOPS!!! I\u0027m sorry, but I don\u0027t know what does that mean :-(\";","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"     * prints when user leaves description of task empty","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"    public static String printEmptyDescriptionException() {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        return \" OOPS!!! The description of a task cannot be empty.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"     * prints all task currently found in the Tasklist","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"     * @param tasklist tasklist to print from","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    public static String printAllTasks(TaskList tasklist) {","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        for (int i \u003d 0; i \u003c Task.totalTask; i++){","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"            s +\u003d tasklist.tasklist.get(i).toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        s +\u003d \"__________________________________________________________________\";","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"    public static String printMatchTasks(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"Here are the match tasks in your list:\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++){","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"           s +\u003d tasklist.get(i).toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        s +\u003d \"__________________________________________________________________\";","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"     * prints the task that got removed","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"     * @param num index of task to remove (zero indexed)","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"     * @param taskList tasklist to remove task from","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"    public static String printRemovedThisTask(int num, TaskList taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \" Noted. I\u0027ve removed this task: \";","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        s +\u003d String.format(\"  [%s][%s] %s\\n\",taskList.tasklist.get(num).type,","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"                taskList.tasklist.get(num).getStatus(), taskList.tasklist.get(num).name);","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"     * prints when task is marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"     * @param curr task to be marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"    public static String printMarkTaskDone(Task curr) {","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"       String s \u003d \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"       s +\u003d String.format(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"       return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"     * print when task is marked as not done","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * @param curr task to be marked as not done","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    public static String printMarkTaskNotDone(Task curr) {","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"OK, I\u0027ve marked this task as not done yet: \";","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"        s +\u003d String.format(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"     * print number of tasks left inside Tasklist","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"    public static String printTotalTasks() {","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"Now you have %d task on the list.\\n\", Task.totalTask);","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"     * print when user adds Task","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"     * @param task task to add into TaskList","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"    public static String printAddThisTask(Task task) {","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"        String s;","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"        s \u003d \"Got it. I\u0027ve added this task: \";","lastModifiedDate":"2022-02-03"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"        if (task.type.equals(\"D\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"            s +\u003d String.format(\" [D][%s] %s (by: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-02-03"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"        } else if (task.type.equals(\"T\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"            s +\u003d String.format(\" [T][%s] %s\\n\", task.getStatus(), task.name);","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"            s +\u003d String.format(\" [E][%s] %s (on: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":125}},{"path":"src/main/resources/view/Backup/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tzhan98":16}},{"path":"src/main/resources/view/Backup/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tzhan98":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    public void toStringTest_deadlineTask_success(){","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        Deadline deadline \u003d new Deadline(\"eat dinner\", 0, \"2022-01-27 2400\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        String comp \u003d \"1. [D][ ] eat dinner (by: Jan 28 2022 12:00 AM)\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"        assertEquals(comp, deadline.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tzhan98":15}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        assertEquals(2,2);","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public void parseIsByeTest_success(){","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        assertEquals(false, Parser.parseIsBye(\"Bye\", null));","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public void parseFileDataTest_success(){","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        Deadline expectedDeadline \u003d new Deadline(\"eat\", 1, \"tmr\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        Deadline actualDeadline \u003d (Deadline) Parser.parseFileData(\"D---false---eat---tmr\");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        assertEquals(expectedDeadline.toString().substring(3), actualDeadline.toString().substring(3));","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"tzhan98":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"mark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"todo borrow book1","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"todo borrow book2","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"todo borrow book3","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"todo borrow book4","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"todo borrow book5","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"todo borrow book6","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"delete 5","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"list","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":2,"-":19}}]
