[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"# walle.Walle project template","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"3. After that, locate the `src/main/java/walle.Walle.java` file, right-click it, and choose `Run walle.Walle.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    //mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    //archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    archiveBaseName \u003d \"gui\"","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":19,"-":44}},{"path":"data/walle.Walle/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"E---true--- borrow book ---17 Feb 2022 07:00 PM","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"D---false--- return book ---20 Feb 2022 07:00 PM","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"T---true--- have dinner with eva---","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"D---false--- submit homework ---end of this year","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"E---false--- attend roadshow ---changi on Aug","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"T---false--- lunch with mom---","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"tzhan98":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"# Walle User Guide","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003e Waaaaaaaaaaaaaaaaaaaaaaaaaaall-E - Wall e","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"Walle is a simple application that can record and keep track of the tasks you want to do","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"~~Also, it\u0027s Walle so who woudn\u0027t like it?!~~ :robot:","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"![Screenshot of Walle](Ui.png)","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"### Check out the awesome stuff that Walle can do","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"[x] Add tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"[x] Mark/Unmark tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"[x] List all tracked tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"[x] Detect duplicates","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"[x] Delete tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"[x] Find tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"## Usage of Walle","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"### Add tasks - add task to Walle","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"There are 3 types of tasks you can add","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"- todo","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"- deadline","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"- event","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"Example of usage: ","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"    todo \u003cname of task\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    `todo borrow book`","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"       [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    deadline \u003cname of task\u003e /by \u003cdate to complete task\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    `deadline return math book /by Sunday`","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    you can also use \u0027DD-MM-YYYY HHMM\u0027 format for \u003cdate to complete task\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    \u0027deadline return sci book /by 17-02-2022 1900\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"       [D][ ] return math book (by: Sunday)","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"     Now you have 6 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"     ","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"       [D][ ] return sci book (by: 17 Feb 2022 07:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"    event \u003cname of task\u003e /at \u003ctime of event\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    `event project meeting /at Mon 2-4pm`","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"    you can also use \u0027DD-MM-YYYY HHMM\u0027 format for \u003ctime of event\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    \u0027event lunch with mom /at 17-02-2022 1900\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"       [E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"       [E][ ] return sci book (at: 17 Feb 2022 07:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"     Now you have 8 tasks in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"### Mark/Unmark tasks - Mark or unmark selected task","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    mark \u003ctask number\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"    \u0027mark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"       [X] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    unmark \u003ctask number\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"    \u0027unmark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-01-16"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"       [ ] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"### list - List all current tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"    \u0027list\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"     1. [T][X] read book","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"     2. [D][ ] return book (by: 20 Feb 2022 08:00 PM)","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"     3. [T][ ] buy bread","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"### Detect duplicates - Walle will detect duplicate entries and reject input","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"    \u0027todo have dinner\u0027 when there exists a todo with the task name \u0027have dinner\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"    BEEP! Error! There is a duplicate task (task Number 6)","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"### Delete task - Delete specified task","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"tzhan98"},"content":"    delete \u003ctask number\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"tzhan98"},"content":"    \u0027delete 3\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"tzhan98"},"content":"    BEEP. I\u0027ve removed this task: [T][X] have dinner ","lastModifiedDate":"2022-02-16"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"    Now you have 5 task on the list.  ","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":150,"author":{"gitId":"tzhan98"},"content":"### Find task - search for task with keyword","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"tzhan98"},"content":"    find \u003ctask number\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"    \u0027find dinner\u0027","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"    Here are the matched tasks in your list:","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"    3. [T][X] have dinner with eva","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"tzhan98"},"content":"    5. [T][ ] have dinner with mom","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":139,"-":25}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":61}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import walle.Walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":" * A GUI for Walle using FXML.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    private Walle walle \u003d new Walle();","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"            stage.setTitle(\"Walle\");","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(walle);","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":34}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import walle.Walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    private Walle walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/captain.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    private Image walleImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/walle.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        if (firstBootUp()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"            showWelcome();","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    public void setDuke(Walle d) {","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        walle \u003d d;","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    public boolean firstBootUp() {","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        if (!walle.hasJustBooted) {","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        walle.hasJustBooted \u003d false;","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        return true;","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"                DialogBox.getDukeDialog(Ui.printStartup(), walleImage)","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        );","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Walle\u0027s reply and then appends them to","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        String response \u003d walle.getResponse(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"                DialogBox.getDukeDialog(response, walleImage)","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":70}},{"path":"src/main/java/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import walle.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import walle.TaskList;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"public class Ui {","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    static public String WRONG_DATE_FORMAT \u003d \"Note that dates should be in \u003c\u003cYYYY-MM-DD HHMM\u003e\u003e format\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public static String printStartup() {","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"Beep Boop. This is Walle \\n\";","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        s +\u003d \"Welcome Captain B. McCrea \\n\";","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        s +\u003d \"\\nWhat can i do for you?\";","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     * prints output when user enters bye","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     * @return string output during exit","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public static String printBye() {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        return \"Bye. I hope to see you sometime soon! :)\";","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     * prints when user enters input not recognised by Walle","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     * @return string output when unrecognised input is entered","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    public static String printWhatDoesThatMean() {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        return \"BEEP BOOP ERROR!!! I\u0027m sorry, but I don\u0027t know what does that mean :-(\";","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"     * prints when user leaves description of task empty","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"     * @return string output of empty descriptor","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    public static String printEmptyDescriptionException() {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        return \"BEEP BOOP ERROR!!! The description of a task cannot be empty.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"     * prints all task currently found in the Tasklist","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     * @param tasklist tasklist to print from","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of all tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    public static String printAllTasks(TaskList tasklist) {","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        for (int i \u003d 0; i \u003c tasklist.get().size(); i++){","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"            s +\u003d tasklist.get().get(i).toString();","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     * prints task that matches keyword","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"     * @param tasklist list of tasks that contains keyword","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of task that matches keyword","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"    public static String printMatchTasks(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"Here are the match tasks in your list:\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++){","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"           s +\u003d tasklist.get(i).toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"     * prints the task that got removed","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"     * @param num index of task to remove (zero indexed)","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"     * @param taskList tasklist to remove task from","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of task that have been removed","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"    public static String printRemovedThisTask(int num, TaskList taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"BEEP. I\u0027ve removed this task: \";","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"        s +\u003d String.format(\"  [%s][%s] %s\\n\",taskList.tasklist.get(num).type,","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"                taskList.tasklist.get(num).getStatus(), taskList.tasklist.get(num).name);","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"     * prints when task is marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"     * @param curr task to be marked as done","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of task that have been marked","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    public static String printMarkTaskDone(Task curr) {","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"       String s \u003d \"BEEP! I\u0027ve marked this task as done: \";","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"       s +\u003d String.format(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"       return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"     * print when task is marked as not done","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     * @param curr task to be marked as not done","lastModifiedDate":"2022-02-03"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of task that have been unmarked","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"    public static String printMarkTaskNotDone(Task curr) {","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"        String s \u003d \"OK, I\u0027ve marked this task as not done yet: \";","lastModifiedDate":"2022-02-03"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"        s +\u003d String.format(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"     * print number of tasks left inside Tasklist","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of total tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"    public static String printTotalTasks(int size) {","lastModifiedDate":"2022-02-08"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"Now you have %d task on the list.\\n\", size + 1);","lastModifiedDate":"2022-02-08"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"     * print when user adds Task","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"     * @param task task to add into TaskList","lastModifiedDate":"2022-02-03"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of printed task","lastModifiedDate":"2022-02-05"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"    public static String printAddThisTask(Task task) {","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"        String s;","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"        s \u003d \"Got it. I\u0027ve added this task: \";","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"        if (task.type.equals(\"D\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"            s +\u003d String.format(\" [D][%s] %s (by: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-02-03"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"        } else if (task.type.equals(\"T\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"            s +\u003d String.format(\" [T][%s] %s\\n\", task.getStatus(), task.name);","lastModifiedDate":"2022-02-03"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"            s +\u003d String.format(\" [E][%s] %s (on: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-02-03"},{"lineNumber":138,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":139,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":141,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":142,"author":{"gitId":"tzhan98"},"content":"    public static String printNoSuchTask() {","lastModifiedDate":"2022-02-07"},{"lineNumber":143,"author":{"gitId":"tzhan98"},"content":"        return \"BEEP! There exists no such task.\\n\";","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"tzhan98"},"content":"    public static String printDuplicateTask(int i){","lastModifiedDate":"2022-02-08"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"BEEP! Error! There is a duplicate task (taskNumber %d)\\n\", i);","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":149}},{"path":"src/main/java/walle/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of Task: deadline","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     * Constructor of deadline.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * Have to strip/process the input first and remove \u0027deadline\u0027","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * @param deadline deadline to complete task","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public Deadline(String input, String deadline, int taskNum, boolean isReading) {","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        super(input, taskNum, deadline, \"D\", isReading);","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        assert (name !\u003d \"\" || name !\u003d null) : \"Invalid: Deadline has no name\";","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        assert (time !\u003d \"\" || time !\u003d null) : \"Invalid: Deadline has no time\";","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [D][%s] %s (by: %s)\\n\", number + 1, getStatus(), name, time);","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":33}},{"path":"src/main/java/walle/EmptyDescriptorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * Exception to be thrown if descriptor is empty","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"class EmptyDescriptorException extends Exception {","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    public EmptyDescriptorException(){","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"        super(\" OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"tzhan98":10}},{"path":"src/main/java/walle/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of Task: duke.Event","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     * Constructor of event.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * Have to strip/process the input first and remove \u0027event\u0027","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * @param time duration of event","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public Event(String input, String time, int taskNum, boolean isReading) {","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        super(input, taskNum, time, \"E\", isReading);","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        assert (name !\u003d \"\" || name !\u003d null) : \"Invalid: Event has no name\";","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        assert (time !\u003d \"\" || time !\u003d null) : \"Invalid: Event has no time\";","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%d. [E][%s] %s (at: %s)\\n\", number + 1, getStatus(), name, this.time);","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":32}},{"path":"src/main/java/walle/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import gui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" * This is the class that parses through inputs","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"public class Parser {","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public Parser() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        Storage.parser \u003d this;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"     * Checks if input is \u0027bye\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"     * @param input input entered by user into Walle","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"     * @return String to output to gui","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    public static String parseIsBye(String input, TaskList taskList) {","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        if (input.equals(\"bye\")){","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"            return Ui.printBye();","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"            return parseInput(input, taskList);","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     * Checks and processes user input (provided that it is not \u0027bye\u0027)","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"     * @param input user input into Walle (after making sure it is not \u0027bye\u0027)","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"     * @param taskList current tasklist","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"     * @return String to output","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    public static String parseInput(String input, TaskList taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        String s;","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        assert taskList.tasklist !\u003d null : \"Invalid: Tasklist is null!\";","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"            s \u003d Ui.printAllTasks(taskList);","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"            s \u003d  parseDelete(input, taskList);","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"mark\") || input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"            s \u003d parseMarkTask(input, taskList);","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"event\") || input.startsWith(\"todo\") || input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"            s \u003d parseTask(input, taskList);","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        } else if (input.startsWith(\"find \")){","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            s \u003d parseFind(input, taskList);","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"            s \u003d Ui.printWhatDoesThatMean();","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"    public static String parseMarkTask(String input, TaskList taskList) {","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        int taskNum \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        if (taskNum \u003c 0 || taskNum \u003e taskList.get().size()){","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"            return Ui.printNoSuchTask();","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            return taskList.markTask(taskNum, false);","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        return taskList.markTask(taskNum, true);","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    public static String parseFind(String input, TaskList taskList) {","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"        int firstIndexOfFindInput \u003d 6;","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"        String keyword \u003d input.substring(firstIndexOfFindInput);","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        return taskList.findTask(keyword);","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"    public static String parseDelete(String input, TaskList taskList) {","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"        int firstIndexOfNumericalInput \u003d 7;","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        int numericalInput \u003d Integer.parseInt(input.substring(firstIndexOfNumericalInput));","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        return taskList.deleteTask(numericalInput, taskList);","lastModifiedDate":"2022-02-08"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    public static String parseTask(String input, TaskList taskList) {","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        Task task \u003d parseCreateNewTask(input, taskList);","lastModifiedDate":"2022-02-08"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"            return Ui.printEmptyDescriptionException();","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"        int duplicateEntry \u003d taskList.addTaskToList(task);","lastModifiedDate":"2022-02-08"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"        if (duplicateEntry !\u003d -1) {","lastModifiedDate":"2022-02-08"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"            return Ui.printDuplicateTask(duplicateEntry);","lastModifiedDate":"2022-02-08"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        return task.printFirstAddition;","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * Parse through input and create a new task","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     * @param input user input into Walle","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"     * @return task based on input parameters","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    public static Task parseCreateNewTask(String input, TaskList taskList) {","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"            if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"                task \u003d parseToDo(input, taskList);","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"            } else if (input.startsWith(\"deadline\")){","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"                task \u003d parseDeadline(input, taskList);","lastModifiedDate":"2022-02-08"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"                task \u003d parseEvent(input, taskList);","lastModifiedDate":"2022-02-08"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"        } catch (EmptyDescriptorException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"            Ui.printEmptyDescriptionException();","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"        return task;","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"    public static ToDo parseToDo(String input, TaskList list) throws EmptyDescriptorException {","lastModifiedDate":"2022-02-08"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-02-07"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"            throw new EmptyDescriptorException();","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"        String nameOfTask \u003d input.substring(4);","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"        return new ToDo(nameOfTask, list.getSize(), false);","lastModifiedDate":"2022-02-08"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"    public static Deadline parseDeadline(String input, TaskList list) throws EmptyDescriptorException {","lastModifiedDate":"2022-02-08"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"        String[] inputArr \u003d input.split(\"/by \");","lastModifiedDate":"2022-02-07"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"            throw new EmptyDescriptorException();","lastModifiedDate":"2022-02-07"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"        String nameOfDeadline \u003d inputArr[0].substring(8);","lastModifiedDate":"2022-02-07"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"        String timeOfDeadline \u003d inputArr[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"        return new Deadline(nameOfDeadline, timeOfDeadline, list.getSize(), false);","lastModifiedDate":"2022-02-08"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"    public static Event parseEvent(String input, TaskList list) throws EmptyDescriptorException {","lastModifiedDate":"2022-02-08"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"        String[] inputArr \u003d input.split(\"/at \");","lastModifiedDate":"2022-02-07"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"            throw new EmptyDescriptorException();","lastModifiedDate":"2022-02-07"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":138,"author":{"gitId":"tzhan98"},"content":"        String nameOfEvent \u003d inputArr[0].substring(5);","lastModifiedDate":"2022-02-07"},{"lineNumber":139,"author":{"gitId":"tzhan98"},"content":"        String timeOfEvent \u003d inputArr[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":140,"author":{"gitId":"tzhan98"},"content":"        return new Event(nameOfEvent, timeOfEvent, list.getSize(),false);","lastModifiedDate":"2022-02-08"},{"lineNumber":141,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":142,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"tzhan98"},"content":"     * Parse data in file data","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"tzhan98"},"content":"     * @param input one line of file data in the form of (Task_Type---Task_status---Task_name---date)","lastModifiedDate":"2022-01-29"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"     * @return task based on file data information provided","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"    public static Task parseFileData(String input, TaskList list) {","lastModifiedDate":"2022-02-08"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"        if (input \u003d\u003d null || input \u003d\u003d \"\"){","lastModifiedDate":"2022-01-22"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"            return null;","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":151,"author":{"gitId":"tzhan98"},"content":"        String[] stringArr \u003d input.split(\"---\");","lastModifiedDate":"2022-01-22"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"        Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"        String typeOfTask \u003d stringArr[0];","lastModifiedDate":"2022-02-07"},{"lineNumber":154,"author":{"gitId":"tzhan98"},"content":"        String isMarked \u003d stringArr[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"        String nameOfTask \u003d stringArr[2];","lastModifiedDate":"2022-02-07"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"        if (typeOfTask.equals(\"D\") || typeOfTask.equals(\"E\")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":158,"author":{"gitId":"tzhan98"},"content":"            String time \u003d stringArr[3];","lastModifiedDate":"2022-02-07"},{"lineNumber":159,"author":{"gitId":"tzhan98"},"content":"            if (typeOfTask.equals(\"D\")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"                task \u003d new Deadline(nameOfTask, time, list.getSize(), true);","lastModifiedDate":"2022-02-08"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":162,"author":{"gitId":"tzhan98"},"content":"                task \u003d new Event(nameOfTask, time, list.getSize(), true);","lastModifiedDate":"2022-02-08"},{"lineNumber":163,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":165,"author":{"gitId":"tzhan98"},"content":"            task \u003d new ToDo(nameOfTask, list.getSize(), true);","lastModifiedDate":"2022-02-08"},{"lineNumber":166,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":168,"author":{"gitId":"tzhan98"},"content":"        if (isMarked.equals(\"true\")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":169,"author":{"gitId":"tzhan98"},"content":"            task.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":171,"author":{"gitId":"tzhan98"},"content":"        return task;","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":173,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":174}},{"path":"src/main/java/walle/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" * Class responsible for writing to and reading from disk","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    static File saveData;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    static Parser parser;","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    TaskList tasklist \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public Storage(){","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        tasklist \u003d load();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * Write all current information in Tasklist to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     * @param taskList tasklist to write all data to file to","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public static void writeAllToFile(TaskList taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        assert taskList.tasklist !\u003d null : \"Invalid: tasklist is null! (function called - writeAllToFile())\";","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            FileWriter fw \u003d new FileWriter(saveData);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            for (int i \u003d 0; i \u003c taskList.get().size(); i++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"                fw.write(taskList.get().get(i).getDataRepresentation());","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"            fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"     * append a line of task information to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"     * @param line Task information to write to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"     * @throws IOException if there is an error writing to disk","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    public static void addLineToFile(String line) throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        FileWriter fw \u003d new FileWriter(saveData, true); // create a FileWriter in append mode","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        fw.write(line);","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"     * Finds previous save data if exists. If not found, creates new save data","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"     * If found, calls readSavedData","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    public static TaskList load() {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        TaskList tasklist\u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            String currDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"            java.nio.file.Path pathDir \u003d java.nio.file.Paths.get(currDir, \"data\", \"walle.Walle\");","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            Path pathToFile \u003d java.nio.file.Paths.get(currDir, \"data\", \"walle.Walle\", \"tasks.txt\");","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"            boolean directoryExists \u003d java.nio.file.Files.exists(pathToFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            if (!directoryExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Unable to find existing data. Creating new file(s)...\");","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"                new File(pathDir.toString()).mkdirs();","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"                pathToFile.toFile().createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Successfully created \" + pathToFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Resuming previous saved state.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"            saveData \u003d pathToFile.toFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"            readSavedData(tasklist);","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        return tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"     * reads information from disk to taskList","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"     * @param taskList tasklist to read save data from","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"     * @throws FileNotFoundException when file is not found","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    public static void readSavedData(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        Scanner s \u003d new Scanner(saveData);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"            taskList.addTaskToList(parser.parseFileData(s.nextLine(), taskList));","lastModifiedDate":"2022-02-08"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":94}},{"path":"src/main/java/walle/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import gui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" * Class task that duke.Walle creates","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public String time \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public String name;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public String type;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    int number;","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    boolean isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    boolean isCorrectDateFormat;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    String printFirstAddition \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * Constructor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     * @param name Descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     * @param number Number associated with task","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"     * @param time time associated with task","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     * @param type type of task. \u0027E\u0027 for duke.Event, \u0027T\u0027 for Todo and \u0027D\u0027 for duke.Deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    public Task(String name, int number, String time, String type, boolean isReading) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"            if (name.equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"                throw new EmptyDescriptorException();","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"            this.number \u003d number;","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"            this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"            this.isCorrectDateFormat \u003d setDate(time, isReading);","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"            if (!isCorrectDateFormat) {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"                printFirstAddition +\u003d Ui.WRONG_DATE_FORMAT;","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"            if (!isReading) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"                printFirstAddition +\u003d Ui.printAddThisTask(this);","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"                Storage.addLineToFile(this.getDataRepresentation());","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"                printFirstAddition +\u003d Ui.printTotalTasks(number);","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        catch (EmptyDescriptorException e){","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"            Ui.printEmptyDescriptionException();","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of how task will be formatted into disk","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"     * @return string representation of how task will be formatted into disk","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    public String getDataRepresentation() {","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%s---%s---%s---%s\\n\", this.type, this.isDone, this.name, this.time);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    private boolean setDate(String input, boolean isReading) {","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"            if ((this.type.equals(\"D\") || this.type.equals(\"E\")) \u0026\u0026 input !\u003d null) {","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                input \u003d input.replaceAll(\"/\", \"-\");","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HHmm\");","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"                LocalDateTime lt \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"                DateTimeFormatter out \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu hh:mm a\");","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"                this.time \u003d lt.format(out);","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"            return true;","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        catch (DateTimeParseException e){","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"            if (!isReading) {","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Note that dates should be in \u003c\u003cDD-MM-YYYY HHMM\u003e\u003e format\");","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"            this.time \u003d input;","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"     * Marks tasks as done.","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"    public void mark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"     * Unmarks tasks as not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    public void unmark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"     * Gets status of tasks based on if task is done/not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"     * @return X if task is done and empty string if task is not done","lastModifiedDate":"2022-01-19"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-15"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"        if (this.isDone){","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"            return \"X\";","lastModifiedDate":"2022-01-15"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"            return \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"     * Decrements number associated with the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"    public void decrementNum() {","lastModifiedDate":"2022-01-16"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"        this.number--;","lastModifiedDate":"2022-01-16"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"        assert this.number \u003e\u003d 0 : \"Invalid: Task has Negative number! (function called - decrementNum())\";","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [%s] %s\\n\", number + 1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":134}},{"path":"src/main/java/walle/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import gui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" * This is the class that stores the task in a list format","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":" * and provide methods to modify the list","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        tasklist \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    public int getSize() {","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        return tasklist.size();","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    public ArrayList\u003cTask\u003e get() {","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        return this.tasklist;","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     * Deletes a specified index (starts from 1) from the input ArrayList and shifts","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"     * all subsequent task numbers accordingly by +1.","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     * @param num index (starts from 1) to delete","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     * @return String output of deleted Task","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    public String deleteTask(int num, TaskList taskList) {","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasklist.size()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            num--;","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            String s \u003d Ui.printRemovedThisTask(num, this);","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            this.tasklist.remove(num);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"            for(int i \u003d num; i \u003ctasklist.size(); i++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"                this.tasklist.get(i).decrementNum();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"            s +\u003d Ui.printTotalTasks(this.tasklist.size()-1);","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"            Storage.writeAllToFile(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"            return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            return \"OOPS!!! There is no such task found.\";","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     * Marks/Unmarks tasks as done/undone. Marking tasks that are already marked will have no change;","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"     * same with unmarking unmarked tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"     * @param taskNum taskNumber to mark/unmark","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"     * @param isMark flag to check if task is to be marked or unmarked","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"     * @return String output of marked task","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    public String markTask(int taskNum, boolean isMark) {","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        String s;","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        Task curr \u003d tasklist.get(taskNum);","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        if (isMark) {","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"            curr.mark();","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            s \u003d Ui.printMarkTaskDone(curr);","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            curr.unmark();","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"            s \u003d Ui.printMarkTaskNotDone(curr);","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        Storage.writeAllToFile(this);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"     * Finds tasks based on keyword provided","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"     * @param keyword matching word to search for in Tasklist","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"     * @return String output of tasks containing keyword provided","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        TaskList matchTasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        for(int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"            if (this.tasklist.get(i).name.contains(keyword) || this.tasklist.get(i).time.contains(keyword)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"                matchTasks.tasklist.add(tasklist.get(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"        return Ui.printMatchTasks(matchTasks.tasklist);","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    public int findDuplicateTask(String keyword) {","lastModifiedDate":"2022-02-08"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        assert tasklist !\u003d null : \"Invalid: TaskList is not initialised!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        for (int i\u003d0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"            if (this.tasklist.get(i).name.equals(keyword)) {","lastModifiedDate":"2022-02-08"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"                return i;","lastModifiedDate":"2022-02-08"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"        return -1;","lastModifiedDate":"2022-02-08"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    public int addTaskToList(Task task) {","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"        assert task.name !\u003d null : \"Invalid: TaskName is null!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"        int dupTaskNum \u003d findDuplicateTask(task.name);","lastModifiedDate":"2022-02-08"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"        if (dupTaskNum !\u003d -1) {","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"            return dupTaskNum + 1;","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        tasklist.add(task);","lastModifiedDate":"2022-02-08"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"        return -1;","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":107}},{"path":"src/main/java/walle/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of Task: todo","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"     * Constructor of Todo.","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     * @param isReading flag to check if input is being read from file data","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public ToDo(String input,int taskNum, boolean isReading){","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        super(input, taskNum, null, \"T\", isReading);","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        assert (name !\u003d \"\" || name !\u003d null) : \"Invalid: Deadline has no name\";","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [T][%s] %s\\n\", number + 1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":29}},{"path":"src/main/java/walle/Walle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is the main duke.Walle program that will be able to process a duke.Task of 3 types: todo, deadline and task","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" * duke.Walle is able to list, delete and mark/unmark tasks as done/undone.","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" * @author Toh Zhan Qing","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"public class Walle {","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    static TaskList tasklist;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public static boolean hasJustBooted \u003d true;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public Walle() {","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        initialise();","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    public String getResponse(String input){","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        return Parser.parseIsBye(input, tasklist);","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    public void initialise() {","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        tasklist \u003d storage.tasklist;","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":28}},{"path":"src/main/resources/view/Backup/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tzhan98":16}},{"path":"src/main/resources/view/Backup/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"tzhan98":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #8181F7; -fx-background-radius: 5; -fx-border-width: 3; -fx-border-color: #1C1C1C; -fx-border-radius: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"            \u003cFont name\u003d\"Agency FB Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type something here!\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" AnchorPane.topAnchor\u003d\"557.4\" /\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send!\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tzhan98":23}},{"path":"src/test/java/walle/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    public void toStringTest_deadlineTask_success(){","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        Deadline deadline \u003d new Deadline(\"eat dinner\", \"2022-01-27 2400\",0, true);","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        String comp \u003d \"1. [D][ ] eat dinner (by: Jan 28 2022 12:00 AM)\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"        assertEquals(comp, deadline.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tzhan98":15}},{"path":"src/test/java/walle/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package walle;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import gui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        assertEquals(2,2);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public void parseIsByeTest_success(){","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        assertEquals(Ui.printWhatDoesThatMean(), Parser.parseIsBye(\"Bye\", new TaskList()));","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public void parseFileDataTest_success(){","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        Deadline expectedDeadline \u003d new Deadline(\"eat\", \"tmr\",1, true);","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        Deadline actualDeadline \u003d (Deadline) Parser.parseFileData(\"D---false---eat---tmr\", new TaskList());","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        assertEquals(expectedDeadline.toString().substring(3), actualDeadline.toString().substring(3));","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"tzhan98":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"mark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"todo borrow book1","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"todo borrow book2","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"todo borrow book3","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"todo borrow book4","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"todo borrow book5","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"todo borrow book6","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"delete 5","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"list","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"java -classpath ..\\bin walle.Walle \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":2,"-":19}}]
