[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"### Feature-Add","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"Duke is able to add 3 types of tasks: ToDo, Event and Deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"### Feature-Mark/Unmark","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"Duke is able to mark and unmark tasks.","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"### Feature-list","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"Duke is able to list out all currently tracked tasks.","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"### Feature-Bye","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"Duke is able to exit.","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"##Keywords","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"### `ToDo` - Adds tasks of type: todo","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027todo\u0027 with following input as task name.","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    `todo borrow book`","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"       [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"### `Deadline` - Adds tasks of type: deadline","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027deadline\u0027 with following input as task name and input after /by as deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    `deadline return book /by Sunday`","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"       [D][ ] return book (by: Sunday)","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     Now you have 6 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"### `Event` - Adds tasks of type: event","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027event\u0027 with following input as task name and input after /at as deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    `event project meeting /at Mon 2-4pm`","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"       [E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"### \u0027mark\u0027 - Marks tasks as done","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"Expects \u003cmark int\u003e where int is the task number to be marked as done.","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    \u0027mark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"     Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"       [X] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"### \u0027unmark\u0027 - Marks tasks as not done","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"Expects \u003cunmark int\u003e where int is the task number to be marked as not done.","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    \u0027unmark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"       [ ] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"### \u0027list\u0027 - List all current tasks","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"List all current tasks","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    \u0027list\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"     1.[X] read book","lastModifiedDate":"2022-01-16"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     2.[ ] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"     3.[ ] buy bread","lastModifiedDate":"2022-01-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":81,"-":25}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"    public Deadline(String input, int number, String deadline) {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"        super(input, number, deadline, \"D\");","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [D][%s] %s (by: %s)\\n\", number+1, getStatus(), name, deadline);","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":11}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"import java.util.*;","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"What can i do for you?\");","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        while(!isBye) {","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"            try {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"                    System.out.println(\"Bye. I don\u0027t want to see you anytime soon! :)\");","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"                    isBye \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"                    listAllTask(taskList, Task.totalTask);","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"                } else if (input.startsWith(\"mark\") || input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"                    markTask(input, taskList);","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"                    taskList.add(new ToDo(input, Task.totalTask));","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"                } else if (input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"                    if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"                        String[] inputArr \u003d input.split(\"/by \");","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"                        if (inputArr.length \u003d\u003d 1){","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"                            throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"                        }","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"                        taskList.add(new Deadline(inputArr[0].substring(8, inputArr[0].length()), Task.totalTask, inputArr[1]));","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"                    } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"                        String[] inputArr \u003d input.split(\"/at \");","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"                        if (inputArr.length \u003d\u003d 1){","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"                            throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"                        }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"                        taskList.add(new Event(inputArr[0].substring(5, inputArr[0].length()), Task.totalTask, inputArr[1]));","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"                    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"                } else if (input.startsWith(\"delete\")){","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"                    deleter(taskList, Integer.parseInt(input.substring(7, input.length())));","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"                } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            catch (EmptyDescriptorExceptions e){","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    public static void deleter(ArrayList\u003cTask\u003e taskList, int num){","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c Task.totalTask){","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"            num--;","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\" Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"  [%s][%s] %s\\n\",taskList.get(num).type, taskList.get(num).getStatus(), taskList.get(num).name);","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"            taskList.remove(num);","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            Task.totalTask--;","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"            for(int i \u003d num; i \u003cTask.totalTask; i++){","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"                taskList.get(i).decrementNum();","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", Task.totalTask);","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"☹ OOPS!!! There is no such task found.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    public static void markTask(String input, ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        int taskNum \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"        Task curr \u003d taskList.get(taskNum);","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"        if (input.startsWith(\"mark\")){","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"            curr.mark();","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"           curr.unmark();","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-01-15"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    public static void listAllTask(ArrayList\u003cTask\u003e taskList, int taskNum){","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-15"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        for(int i\u003d0; i\u003ctaskNum; i++){","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"            System.out.print(taskList.get(i).toString());","lastModifiedDate":"2022-01-16"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"__________________________________________________________________\");","lastModifiedDate":"2022-01-15"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":81,"-":11}},{"path":"src/main/java/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"public class DukeExceptions extends Exception{","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"class EmptyDescriptorExceptions extends Exception{","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"    public EmptyDescriptorExceptions(){","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"        super(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"    public Event(String input, int number, String deadline) {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"        super(input, number, deadline, \"E\");","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [E][%s] %s (at: %s)\\n\", number+1, getStatus(), name, deadline);","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"    String deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"    String name;","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"    String type;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"    int number;","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"    static int totalTask \u003d 0;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    boolean done \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    public Task(String name, int number, String deadline, String type){","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"            if (name.equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"                throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"            this.number \u003d number;","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"            this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"            if (type.equals(\"D\")){","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"                System.out.printf(\" [D][%s] %s (by: %s) \\n\", this.getStatus(),  this.name, this.deadline);","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"            } else if (type.equals(\"T\")){","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"                System.out.printf(\" [T][%s] %s\\n\", this.getStatus(),  this.name);","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"                System.out.printf(\" [E][%s] %s (on: %s) \\n\", this.getStatus(),  this.name, this.deadline);","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"            totalTask++;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"Now you have %d task on the list.\\n\", Task.totalTask);","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        catch (EmptyDescriptorExceptions e){","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    public void mark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    public void unmark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"    public String getStatus(){","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        if (this.done){","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"            return \"X\";","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            return \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    public void decrementNum(){","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        this.number--;","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [%s] %s\\n\", number+1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":58}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"    public ToDo(String input, int number){","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"        super(input.substring(4,input.length()), number, null, \"T\");","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [T][%s] %s\\n\", number+1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"mark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"todo borrow book1","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"todo borrow book2","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"todo borrow book3","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"todo borrow book4","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"todo borrow book5","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"todo borrow book6","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"delete 5","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"list","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":1,"-":20}}]
