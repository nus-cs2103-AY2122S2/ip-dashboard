[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":2,"-":22}},{"path":"data/duke.Duke/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"T---false--- eat---null ","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"D---false--- return book ---Sunday           ","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"D---false--- return book ---Sunday           ","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"E---true--- project meeting ---Mon 2-4pm           ","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"E---false--- project meeting ---Mon 2-4pm           ","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"E---true--- project meeting ---Mon 2-4pm           ","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"D---false--- return book ---Dec 19 2019 06:00 PM           ","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"E---true--- dododod ---2035-05-8 1200          ","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"E---false--- dododod ---May 08 2035 12:00 PM          ","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"E---false--- dododod ---2035-05-98 1200          ","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"E---false--- dododod ---Nov 01 2035 12:00 PM          ","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"D---true--- sleep ---Dec 12 2020 07:00 PM          ","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"E---false--- haha ---Dec 12 2020 12:00 AM         ","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"D---false--- ssss ---Dec 12 2020 12:00 AM     ","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"T---false--- sleep---null ","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"E---false--- aaaaaaaaaaa ---2020-1-1 1100  ","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"E---false--- fly to Singapore---Jan 01 2020 11:00 AM  ","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"T---false--- die---null ","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"### Feature-Add","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to add 3 types of tasks: duke.ToDo, duke.Event and duke.Deadline.","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"### Feature-Mark/Unmark","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to mark and unmark tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"### Feature-list","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to list out all currently tracked tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"### Feature-Bye","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"duke.Duke is able to exit.","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"##Keywords","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"### `duke.ToDo` - Adds tasks of type: todo","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027todo\u0027 with following input as task name.","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    `todo borrow book`","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"       [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"### `duke.Deadline` - Adds tasks of type: deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027deadline\u0027 with following input as task name and input after /by as deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    `deadline return book /by Sunday`","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"       [D][ ] return book (by: Sunday)","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     Now you have 6 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"### `duke.Event` - Adds tasks of type: event","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"Adds one task of type \u0027event\u0027 with following input as task name and input after /at as deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    `event project meeting /at Mon 2-4pm`","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"       [E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"### \u0027mark\u0027 - Marks tasks as done","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"Expects \u003cmark int\u003e where int is the task number to be marked as done.","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    \u0027mark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"     Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"       [X] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"### \u0027unmark\u0027 - Marks tasks as not done","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"Expects \u003cunmark int\u003e where int is the task number to be marked as not done.","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"Example of usage:","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    \u0027unmark 2\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"Expected outcome:","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"       [ ] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"### \u0027list\u0027 - List all current tasks","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"List all current tasks","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    \u0027list\u0027","lastModifiedDate":"2022-01-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"     1.[X] read book","lastModifiedDate":"2022-01-16"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     2.[ ] return book","lastModifiedDate":"2022-01-16"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"     3.[ ] buy bread","lastModifiedDate":"2022-01-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":81,"-":25}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of duke.Task: deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     * Constructor of deadline.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * Have to strip/process the input first and remove \u0027deadline\u0027","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * @param number task number","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @param deadline deadline to complete task","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public Deadline(String input, int number, String deadline, boolean reading) {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        super(input, number, deadline, \"D\", reading);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [D][%s] %s (by: %s)\\n\", number+1, getStatus(), name, time);","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" * This is the main duke.Duke program that will be able to process a duke.Task of 3 types: todo, deadline and task","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" * duke.Duke is able to list, delete and mark/unmark tasks as done/undone.","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":" * @author Toh Zhan Qing","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args){","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        storage.load();","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        Storage.parser \u003d parser;","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        while(!isBye) {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"            try {","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"                isBye \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"            catch (EmptyDescriptorExceptions e){","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":33,"-":2}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * Placeholder Exception","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"public class DukeExceptions extends Exception{","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" * Exception to be thrown if descriptor is empty","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"class EmptyDescriptorExceptions extends Exception{","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    public EmptyDescriptorExceptions(){","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        super(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of duke.Task: duke.Event","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     * Constructor of event.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * Have to strip/process the input first and remove \u0027event\u0027","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * @param number task number","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @param time duration of event","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public Event(String input, int number, String time, boolean reading) {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        super(input, number, time, \"E\", reading);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%d. [E][%s] %s (at: %s)\\n\", number+1, getStatus(), name, this.time);","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"public class Parser {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"    public static boolean parseInput(String input) throws EmptyDescriptorExceptions{","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"Bye. I hope to see you sometime soon! :)\");","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"            return true;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"                TaskList.listAllTask();","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"            } else if (input.startsWith(\"mark\") || input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"                TaskList.markTask(input);","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"                TaskList.addTask(input.substring(4,input.length()), null, \"T\", false);","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"            } else if (input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"                if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"                    String[] inputArr \u003d input.split(\"/by \");","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"                    if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"                        throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"                    TaskList.addTask(inputArr[0].substring(8, inputArr[0].length()), inputArr[1], \"D\", false);","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"                } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"                    String[] inputArr \u003d input.split(\"/at \");","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"                    if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"                        throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"                    TaskList.addTask(inputArr[0].substring(5, inputArr[0].length()), inputArr[1], \"E\", false);","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"                TaskList.deleter(Integer.parseInt(input.substring(7, input.length())));","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what does that mean :-(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    public static void parseFileData(String input){","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        if (input \u003d\u003d null || input \u003d\u003d \"\"){","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"            return;","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        String[] stringArr \u003d input.split(\"---\");","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        int taskNum \u003d Task.totalTask;","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        if (stringArr[0].equals(\"T\")){","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"            TaskList.addTask(stringArr[2], null, \"T\", true);","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"            TaskList.markTaskNum(taskNum, stringArr[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        } else if (stringArr[0].equals(\"D\")){","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"            TaskList.addTask(stringArr[2], stringArr[3], \"D\", true);","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"            TaskList.markTaskNum(taskNum, stringArr[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"            TaskList.addTask(stringArr[2], stringArr[3], \"E\", true);","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"            TaskList.markTaskNum(taskNum, stringArr[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":56}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    static File savedata;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    static Parser parser;","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public static void writeAllToFile() {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"            FileWriter fw \u003d new FileWriter(savedata);","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"            for (int i \u003d 0; i \u003c Task.totalTask; i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"                fw.write(TaskList.tasklist.get(i).getDataRepresentation());","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"            fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public static void addLineToFile(String line) throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        FileWriter fw \u003d new FileWriter(savedata, true); // create a FileWriter in append mode","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        fw.write(line);","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"    public static void load(){","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            String currDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            java.nio.file.Path pathDir \u003d java.nio.file.Paths.get(currDir, \"data\", \"duke.Duke\");","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"            Path pathToFile \u003d java.nio.file.Paths.get(currDir, \"data\", \"duke.Duke\", \"tasks.txt\");","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"            boolean directoryExists \u003d java.nio.file.Files.exists(pathToFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"            if (!directoryExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Unable to find existing data. Creating new file(s)...\");","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"                new File(pathDir.toString()).mkdirs();","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"                pathToFile.toFile().createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Successfully created \" + pathToFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Resuming previous saved state.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            savedata \u003d pathToFile.toFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"            readSavedData();","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    public static void readSavedData() throws FileNotFoundException {","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        Scanner s \u003d new Scanner(savedata);","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        while(s.hasNext()){","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            parser.parseFileData(s.nextLine());","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":64}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" * Class task that duke.Duke creates","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    String time;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    String name;","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    String type;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    int number;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    static int totalTask \u003d 0;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    boolean isdone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     * Constructor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * @param name Descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     * @param number Number associated with task","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     * @param time time associated with task","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     * @param type type of task. \u0027E\u0027 for duke.Event, \u0027T\u0027 for Todo and \u0027D\u0027 for duke.Deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    public Task(String name, int number, String time, String type, boolean isReading){","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            if (name.equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"                throw new EmptyDescriptorExceptions();","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            this.number \u003d number;","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            setDate(time, isReading);","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"            this.type \u003d type;","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"            if (!isReading) {","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"                Ui.printAddingTasks(this);","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"                Storage.addLineToFile(this.getDataRepresentation());","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"                totalTask++;","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"                Ui.printTotalTasks();","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            else {","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"                totalTask++;","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        catch (EmptyDescriptorExceptions e){","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"    public String getDataRepresentation(){","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%s---%s---%s---%s \\n\", this.type, this.isdone, this.name, this.time);","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"    private void setDate(String input, boolean isReading){","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            if ((this.type.equals(\"D\") || this.type.equals(\"E\")) \u0026\u0026 input !\u003d null) {","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"                input \u003d input.replaceAll(\"/\", \"-\");","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HHmm\");","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"                LocalDateTime lt \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"                DateTimeFormatter out \u003d DateTimeFormatter.ofPattern(\"MMM dd uuuu hh:mm a\");","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"                this.time \u003d lt.format(out);","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"        catch(DateTimeParseException e){","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"            if (!isReading)","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"                System.out.println(\"Note that dates should be in \u003c\u003cYYYY-MM-DD HHMM\u003e\u003e format\");","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"            this.time \u003d input;","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"     * Marks tasks as done.","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"    public void mark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        this.isdone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"     * Unmarks tasks as not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"    public void unmark(){","lastModifiedDate":"2022-01-15"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"        this.isdone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     * Gets status of tasks based on if task is done/not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"     * @return X if task is done and empty string if task is not done","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"    public String getStatus(){","lastModifiedDate":"2022-01-15"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"        if (this.isdone){","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"            return \"X\";","lastModifiedDate":"2022-01-15"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"            return \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"     * Decrements number associated with the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"    public void decrementNum(){","lastModifiedDate":"2022-01-16"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"        this.number--;","lastModifiedDate":"2022-01-16"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [%s] %s\\n\", number+1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":123}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"    static ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    public TaskList(){","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"        tasklist \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public ArrayList\u003cTask\u003e get(){","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        return this.tasklist;","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public static void markTaskNum(int taskNum, String check){","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"        if (check.equals(\"true\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"            tasklist.get(taskNum).mark();","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"     * Deletes a specified index (starts from 1) from the input ArrayList and shifts","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * all subsequent task numbers accordingly by +1.","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     * @param num index (starts from 1) to delete","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public static void deleter(int num){","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        if (num \u003e 0 \u0026\u0026 num \u003c\u003d Task.totalTask){","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            num--;","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\" Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"  [%s][%s] %s\\n\",tasklist.get(num).type, tasklist.get(num).getStatus(), tasklist.get(num).name);","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            tasklist.remove(num);","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"            Task.totalTask--;","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"            for(int i \u003d num; i \u003cTask.totalTask; i++){","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"                tasklist.get(i).decrementNum();","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", Task.totalTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"☹ OOPS!!! There is no such task found.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        Storage.writeAllToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"     * Marks/Unmarks tasks as done/undone. Marking tasks that are already marked will have no change;","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"     * same with unmarking unmarked tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     * @param input Original input string that was entered","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    public static void markTask(String input){","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        int taskNum \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        Task curr \u003d tasklist.get(taskNum);","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        if (input.startsWith(\"mark\")){","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"            curr.mark();","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            curr.unmark();","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\"  [%s][%s] %s\\n\", curr.type, curr.getStatus(), curr.name);","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        Storage.writeAllToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"     * Lists all tasks in tasklist. (in input order)","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    public static void listAllTask(){","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"        for(int i\u003d0; i\u003cTask.totalTask; i++){","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"            System.out.print(tasklist.get(i).toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"__________________________________________________________________\");","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    public static void addTask(String name, String time, String type, boolean isReading){","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        if (type.equals(\"D\")){","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"            tasklist.add(new Deadline(name, Task.totalTask, time, isReading));","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"        } else if (type.equals(\"E\")){","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"            tasklist.add(new Event(name, Task.totalTask, time, isReading));","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"            tasklist.add(new ToDo(name, Task.totalTask, isReading));","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":88}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":" * This is a type of duke.Task: todo","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"     * Constructor of Todo.","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"     * @param input descriptor of task","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"     * @param number task number","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public ToDo(String input, int number, boolean reading){","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        super(input, number, null, \"T\", reading);","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"     * Gets string representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        String s \u003d String.format(\"%d. [T][%s] %s\\n\", number+1, getStatus(), name);","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        return s;","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"tzhan98":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"public class Ui {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"    public Ui(){","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"        startup();","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    public static void startup(){","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"What can i do for you?\");","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public static void printTotalTasks(){","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        System.out.printf(\"Now you have %d task on the list.\\n\", Task.totalTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    public static void printAddingTasks(Task task){","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        if (task.type.equals(\"D\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\" [D][%s] %s (by: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        } else if (task.type.equals(\"T\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\" [T][%s] %s\\n\", task.getStatus(), task.name);","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            System.out.printf(\" [E][%s] %s (on: %s) \\n\", task.getStatus(), task.name, task.time);","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"tzhan98":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"mark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"todo borrow book1","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"todo borrow book2","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"todo borrow book3","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"todo borrow book4","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"todo borrow book5","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"todo borrow book6","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"delete 5","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"list","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"tzhan98":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzhan98":2,"-":19}}]
