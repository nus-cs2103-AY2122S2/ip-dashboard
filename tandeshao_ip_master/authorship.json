[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"# Project Description","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"This is a greenfield Java project for CS2103T Software Engineering. ","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"\u003e  ‚ÄúAny fool can write code that a computer can understand. ","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"\u003e Good programmers write code that humans can understand.‚Äù","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"\u003e -Martin Fowler.","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"## What is Duke?","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"Duke is a basic Todo List with a built-in interface for users to interact with. ","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"**Features include:**","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"- [x] ~~Adding new Tasks~~ **IMPROVED! Able to add specific tasks such as: Todo, Deadlines and Events!**","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"- [x] Deleting Tasks.","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"- [x] Mark and Unmark tasks.","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"- [x] List the task in an interface.","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"- [ ] ~~Help Menu~~.Dropped due to the lack of time.","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"## Instructions","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"##Commands and their purpose","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"1. ``list`` shows the list of tasks that has yet to be done.","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"2. ``mark \u003cinteger\u003e`` marks the task as completed.  ","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"3. ``unmark \u003cinteger\u003e`` un-marks the task as not completed.","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"4. ``todo \u003ctask\u003e`` creates a new task that user has to do.","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"5. ``deadline \u003ctask\u003e /by \u003cdate\u003e`` creates a new deadline and a date in which the task has to be completed by.","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"6. ``event \u003ctask\u003e /at \u003cdate\u003e`` creates a new event and a date in which the event is held at.","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"7. ``find \u003cdescription\u003e`` finds tasks that matches the description.","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"8. ``delete \u003cinteger\u003e`` deletes the specific task from the list.","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"note: `\u003cinteger\u003e` represents the order of the specific task in the list","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"**All you need to do is**","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"1. Download the .jar file from [here](https://github.com/tandeshao/ip/releases/tag/shadowJar).","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"2. Open the command prompt/terminal.","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"3. Navigate to the directory of the .jar file.","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"4. Ensure that you have jdk set up in your local environment.","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"5. Run ``java -jar Launcher.jar``.","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"6. Let it manage your tasks for you üòÉ","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"If you are interested. Here\u0027s the ``Launcher`` class:","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"```java","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"public class Launcher {","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":5,"tandeshao":46}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"sourceSets {","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"    test {","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        java.srcDirs \u003d [\u0027src/test/tasks\u0027]","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"    archiveBaseName \u003d \"Launcher\"","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"-":46,"tandeshao":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"# Project Description","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"This is a greenfield Java project for CS2103T Software Engineering.","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"\u003e  ‚ÄúAny fool can write code that a computer can understand.","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"\u003e Good programmers write code that humans can understand.‚Äù","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"\u003e -Martin Fowler.","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"## What is Duke?","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"Duke is a basic Todo List with a built-in interface for users to interact with.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"**Features include:**","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"- [x] ~~Adding new Tasks~~ **IMPROVED! Able to add specific tasks such as: Todo, Deadlines and Events!**","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"- [x] Deleting Tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"- [x] Mark and Unmark tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"- [x] List the task in an interface.","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"- [ ] ~~Help Menu~~.Dropped due to the lack of time.","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"## Instructions","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"##Commands and their purpose","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"1. ``list`` shows the list of tasks that has yet to be done.","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"2. ``mark \u003cinteger\u003e`` marks the task as completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"3. ``unmark \u003cinteger\u003e`` un-marks the task as not completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"4. ``todo \u003ctask\u003e`` creates a new task that user has to do.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"5. ``deadline \u003ctask\u003e /by \u003cdate\u003e`` creates a new deadline and a date in which the task has to be completed by.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"6. ``event \u003ctask\u003e /at \u003cdate\u003e`` creates a new event and a date in which the event is held at.","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"7. ``find \u003cdescription\u003e`` finds tasks that matches the description.","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"8. ``delete \u003cinteger\u003e`` deletes the specific task from the list.","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"note: `\u003cinteger\u003e` represents the order of the specific task in the list","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"**All you need to do is**","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"1. Download the .jar file from [here](https://github.com/tandeshao/ip/releases/tag/shadowJar).","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"2. Open the command prompt/terminal.","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"3. Navigate to the directory of the .jar file.","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"4. Ensure that you have jdk set up in your local environment.","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"5. Run ``java -jar Launcher.jar``.","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"6. Let it manage your tasks for you üòÉ","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"***","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"If you are interested. Here\u0027s the ``Launcher`` class:","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"```java","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"public class Launcher {","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":1,"tandeshao":50}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     * Creates the dialog box in the interface.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        //logic for flipping the dialog box in Duke interface.","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"     * Gets the user dialog.","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"     * @param text Text that is written by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"     * @param img Image of user.","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"     * @return User dialog.","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"     * Gets Duke dialog.","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"     * @param text Text that is replied by Duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"     * @param img Image of Duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"     * @return Duke dialog.","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tandeshao":77}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"import component.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"import component.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import component.Ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" *  A class that encapsulates the logic of Duke - A todo list program","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":" *  that helps user keep track of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * Default path name to retrieve the data from previous instance of duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    private static final String DEFAULT_STORAGE_PATH_NAME \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"     * {@link Storage}","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     * {@link TaskList}","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     * {@link Ui}","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    private final Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     * Constructs Duke","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    public Duke() {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        this.storage \u003d new Storage(DEFAULT_STORAGE_PATH_NAME);","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     * Initialises the Duke Ui.","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    public String initUi() {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        return ui.initUi();","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"     * Gets the response from duke with the userInput.","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"     * @param userInput User input in the form of a string.","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"     * @return String showing the user input.","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        //runs the ui to retrieve the output based on userInput.","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        return ui.generateDukeReply(tasks, storage, userInput);","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"tandeshao":50}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"     * Runs entire application.","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"     * @param args Command line argument for main.","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"        //Launches the duke application with a GUI.","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tandeshao":15}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"     * Starts the interface.","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * @param stage Stage to be set onto the interface.","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"            stage.setTitle(\"Dodo\");","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"            // Set the scene of the interface.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"            // Set duke into the interface.","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"            // show the interface onto user\u0027s screen.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"            err.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tandeshao":40}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    private final Image userImage;","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    private final Image dukeImage;","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     * Constructs MainWindow.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    public MainWindow() {","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        InputStream daUserPath \u003d this.getClass().getResourceAsStream(\"/images/DaUser.png\");","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        InputStream daDukePath \u003d this.getClass().getResourceAsStream(\"/images/DaDuke.png\");","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        //Checks if both userPath and dukePath is not null using assertions.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        assert daUserPath !\u003d null : \"daUser path not suppose to be null!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        assert daDukePath !\u003d null : \"daDuke path not suppose to be null!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        // Creates image based on the path provided.","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        userImage \u003d new Image(daUserPath);","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        dukeImage \u003d new Image(daDukePath);","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"     * Initializes height for FXML window.","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"     * Sets the duke instance in the dialog container.","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"     * @param d duke instance.","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"                DialogBox.getDukeDialog(d.initUi(), dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"        //handle user input and places userImage and dukeImage in the scene.","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"        //crude implementation of bye","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tandeshao":82}},{"path":"src/main/java/component/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package component;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import tasks.DeadLines;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import tasks.Events;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import tasks.Tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import tasks.ToDos;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the DukeComponent Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the possible user commands from Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"public class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    private final String userInput;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"     * {@link component.TaskList}","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"     * Constructs Command class.","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"     * @param userInput User input as a type String.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"     * @param t Provides access to TaskList for some manipulation in the Duke program.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    public Command(String userInput, TaskList t) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"     * Runs command to return duke reply.","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    public String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        String[] wordSplit \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        String action \u003d wordSplit[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        String[] split \u003d userInput.split(\"/\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        int start \u003d userInput.indexOf(\" \") + 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        int end \u003d userInput.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        String task \u003d end \u003d\u003d -1 ? \"\" : userInput.substring(start, end - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        String details \u003d split.length \u003e 1 ? split[1].substring(3) : \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        switch (action) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        case \"help\":","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"            // Shows the commands that are available in duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"            return printCommandsAvailable();","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        case \"list\":","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"            return printList();","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"            return mark(Integer.parseInt(wordSplit[1]) - 1);","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"            return unmark(Integer.parseInt(wordSplit[1]) - 1);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"            return addTask(new ToDos(userInput.substring(start), false));","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"            return addTask(new DeadLines(task, false, details));","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        case \"event\":","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"            return addTask(new Events(task, false, details));","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"            return deleteTask(Integer.parseInt(wordSplit[1]) - 1);","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"        case \"find\":","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"            return find(userInput.substring(5));","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        default:","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"            return sayBye();","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"     * Prints commands that are available n Duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"    private String printCommandsAvailable() {","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"        String openingStatement \u003d \"Here are some of the available commands in Duke: \\n\";","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        String commands \u003d \"1. list\\n2. mark\"","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"                + \"\\n3. unmark\\n4. todo\\n 5.deadline\\n 6. event\\n \"","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"                + \"7. event\\n 8. delete\\n 9. find\\n 10. bye\";","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"        return openingStatement + commands;","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"     * Finds Task that matches that description from the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"     * @param description Description to be used for matching.","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"    private String find(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"        String dukeReply \u003d \"Here are the matching task in your list: \";","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"        String resultOfFind \u003d tasks.findDescription(description);","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"        return dukeReply + \"\\n\" + resultOfFind;","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"     * Deletes the task in the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"     * @param index 0-based index for deletion of Task in the TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"    private String deleteTask(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"        String dukeReply \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + tasks.remove(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"        String additionalStatement \u003d String.format(\"Now you have %d tasks in the list.\", tasks.listSize());","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"tandeshao"},"content":"        return dukeReply + \"\\n\" + additionalStatement;","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"tandeshao"},"content":"     * Marks the task in the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"tandeshao"},"content":"     * @param index 0-based index for users to mark the Task in the TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"    private String mark(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"        String dukeReply \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-02-12"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"        Tasks retrievedTask \u003d tasks.getTask(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"        retrievedTask.setMarked();","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"tandeshao"},"content":"        return dukeReply + \"\\n\" + retrievedTask;","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"tandeshao"},"content":"     * Un-marks the task in the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"tandeshao"},"content":"     * @param index  0-based index for users to unmark the task in the TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"tandeshao"},"content":"    private String unmark(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"tandeshao"},"content":"        String dukeReply \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"tandeshao"},"content":"        Tasks retrievedTask \u003d tasks.getTask(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"tandeshao"},"content":"        retrievedTask.setUnmarked();","lastModifiedDate":"2022-02-12"},{"lineNumber":124,"author":{"gitId":"tandeshao"},"content":"        return dukeReply + \"\\n\" + retrievedTask;","lastModifiedDate":"2022-02-12"},{"lineNumber":125,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"tandeshao"},"content":"     * Adds task to the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"tandeshao"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2022-02-12"},{"lineNumber":130,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":131,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"tandeshao"},"content":"    private String addTask(Tasks newTask) {","lastModifiedDate":"2022-02-12"},{"lineNumber":133,"author":{"gitId":"tandeshao"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2022-02-12"},{"lineNumber":134,"author":{"gitId":"tandeshao"},"content":"        String dukeReply \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + \" \" + newTask;","lastModifiedDate":"2022-02-12"},{"lineNumber":135,"author":{"gitId":"tandeshao"},"content":"        String amountOfTaskInList \u003d String.format(\"Now you have %d tasks in the list.\", tasks.listSize());","lastModifiedDate":"2022-02-12"},{"lineNumber":136,"author":{"gitId":"tandeshao"},"content":"        return dukeReply + \"\\n\" + amountOfTaskInList;","lastModifiedDate":"2022-02-12"},{"lineNumber":137,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"tandeshao"},"content":"     * Prints the TaskList in the Ui.","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":142,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"tandeshao"},"content":"    private String printList() {","lastModifiedDate":"2022-02-03"},{"lineNumber":144,"author":{"gitId":"tandeshao"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"tandeshao"},"content":"        for (int i \u003d 0; i \u003c tasks.listSize(); i++) {","lastModifiedDate":"2022-02-12"},{"lineNumber":146,"author":{"gitId":"tandeshao"},"content":"            String num \u003d String.format(\"%d. \", i + 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"tandeshao"},"content":"            String res \u003d num + tasks.getTask(i).toString();","lastModifiedDate":"2022-02-12"},{"lineNumber":148,"author":{"gitId":"tandeshao"},"content":"            result.append(\"\\n\").append(res);","lastModifiedDate":"2022-02-03"},{"lineNumber":149,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"tandeshao"},"content":"        return result.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"tandeshao"},"content":"     * Prints the bye Ui for the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"tandeshao"},"content":"     * @return A string representing what Duke replied.","lastModifiedDate":"2022-02-12"},{"lineNumber":156,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"tandeshao"},"content":"    private String sayBye() {","lastModifiedDate":"2022-02-03"},{"lineNumber":158,"author":{"gitId":"tandeshao"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-03"},{"lineNumber":159,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":161}},{"path":"src/main/java/component/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package component;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import exceptions.DeadlineException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import exceptions.EventException;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import exceptions.IncorrectInputException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import exceptions.TaskException;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import exceptions.ToDosException;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import exceptions.WrongInputException;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the DukeComponent Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the Parser logic from users in Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    private final String input;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * Constructs Parser.","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     * @param userInput  User input as a type String.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     * @throws TaskException Throws a TaskException when user input","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"     *                       is in an incorrect format.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    public Parser(String userInput) throws TaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        checkUserInput(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     * Executes the command for tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     * @param tasks Pass the TaskList into {@link component.Command} class for manipulation.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    public String executeCommand(TaskList tasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        Command c \u003d new Command(input, tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        return c.runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"     * Checks user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     * @param userInput User input in a String.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"     * @throws exceptions.TaskException Throws a TaskException if the user input is invalid.","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    private void checkUserInput(String userInput) throws TaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        String[] wordsSplitByEmptySpace \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        String firstWord \u003d wordsSplitByEmptySpace[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        if (firstWord.equals(\"mark\") || firstWord.equals(\"unmark\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"            checkForWrongInputException(wordsSplitByEmptySpace);","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        if (notCommand(firstWord)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"            throw new IncorrectInputException();","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        if (incorrectLength(wordsSplitByEmptySpace)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"            checkForTaskException(wordsSplitByEmptySpace);","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"     * Checks if user input is of incorrect length.","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"     * @param wordsSplitByEmptySpace String array representing the user input split by empty space.","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     * @return Boolean value representing if user input has an incorrect length.","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"    private boolean incorrectLength(String[] wordsSplitByEmptySpace) {","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"        String firstWord \u003d wordsSplitByEmptySpace[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"        return wordsSplitByEmptySpace.length \u003d\u003d 1","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 !firstWord.equals(\"list\") \u0026\u0026 !firstWord.equals(\"bye\") \u0026\u0026 !firstWord.equals(\"help\");","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"     * Checks if user input has the wrong format.","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     * @param wordsSplitByEmptySpace String array representing the user input split by empty space.","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"     * @throws WrongInputException Throws {@link exceptions.WrongInputException} if there is wrong input format.","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"    private void checkForWrongInputException(String[] wordsSplitByEmptySpace) throws WrongInputException {","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"            Integer.parseInt(wordsSplitByEmptySpace[1]);","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"            throw new WrongInputException();","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"     * Checks if user input violates any task commands\u0027 format.","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     * @param wordsSplitByEmptySpace String array representing the user input split by empty space.","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     * @throws ToDosException Throws {@link exceptions.ToDosException} if ToDos command has the wrong format.","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"     * @throws DeadlineException Throws {@link  exceptions.DeadlineException} if Deadline command has the wrong format.","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"     * @throws EventException Throws {@link  exceptions.EventException} if Event command has the wrong format.","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"    private void checkForTaskException(String[] wordsSplitByEmptySpace) throws ToDosException,","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"            DeadlineException, EventException {","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"        String command \u003d wordsSplitByEmptySpace[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"        switch (command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"            throw new ToDosException();","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"            throw new DeadlineException();","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"        default: //case \"event\":","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"            throw new EventException();","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"tandeshao"},"content":"     * Helps to check if {@link #checkUserInput(String)} is incorrect.","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"tandeshao"},"content":"     * @param command Checks if user input is a command.","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"tandeshao"},"content":"     * @return True if input is not a command and false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"    private static boolean notCommand(String command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"        return (!command.equals(\"bye\") \u0026\u0026 !command.equals(\"list\")","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 !command.equals(\"delete\") \u0026\u0026 !command.equals(\"mark\")","lastModifiedDate":"2022-02-12"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 !command.equals(\"unmark\") \u0026\u0026 !command.equals(\"todo\")","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 !command.equals(\"deadline\") \u0026\u0026 !command.equals(\"event\")","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"tandeshao"},"content":"                \u0026\u0026 !command.equals(\"find\") \u0026\u0026 !command.equals(\"help\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":115}},{"path":"src/main/java/component/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package component;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"import tasks.DeadLines;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"import tasks.Events;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"import tasks.Tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"import tasks.ToDos;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the DukeComponent Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":" * This class deals with loading tasks from a pre-constructed file and saving tasks to the file","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":" * from the Duke program.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    private final String storageLocation;","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"     * Constructs Storage.","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     * @param pathName Relative path to the file.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    public Storage(String pathName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        this.storageLocation \u003d Paths.get(System.getProperty(\"user.dir\"), pathName).toString();","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * Loads the content of the file to a TaskList so that it could be passed to Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * @return TaskList that is updated with contents from the previous Duke instances.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    public ArrayList\u003cTasks\u003e load() {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        ArrayList\u003cTasks\u003e list \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        File storageFile \u003d new File(storageLocation);","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"            Scanner storageContent \u003d new Scanner(storageFile);","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"            modifyList(list, storageContent);","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"            storageContent.close();","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"            System.out.println(\"There is no cache, \"","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"                    + \"duke will be initialised as per normal.\");","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        return list;","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"     * Modifies the TaskList","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"     * @param list TaskList to be modified.","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"     * @param storageContent TaskList to be stored.","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"    private void modifyList(ArrayList\u003cTasks\u003e list, Scanner storageContent) {","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"        while (storageContent.hasNext()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"            String nextLineOfContent \u003d storageContent.nextLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"            String[] splitNextLineByEmptySpaces \u003d nextLineOfContent.split(\"|\");","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"            String commandType \u003d splitNextLineByEmptySpaces[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"            boolean isMarked \u003d splitNextLineByEmptySpaces[2].equals(\"1\");","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"            int startingIndexOfDescription \u003d nextLineOfContent.lastIndexOf(\"|\") + 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"            String description \u003d nextLineOfContent.substring(startingIndexOfDescription);","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"            switch (commandType) {","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"                list.add(new DeadLines(","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"                        nextLineOfContent.substring(4, startingIndexOfDescription - 1),","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"                        isMarked, description));","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"            case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"                list.add(new Events(nextLineOfContent.substring(4, startingIndexOfDescription - 1),","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"                        isMarked, description));","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"            default: //case \"T\":","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"                list.add(new ToDos(description, isMarked));","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"     * Writes the Tasks into the file for storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"     * @param arr TaskList containing all the Tasks required for storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"    public void addTask(TaskList arr) {","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"            File f \u003d new File(storageLocation);","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"            FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"            for (Tasks t : arr) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"                fw.write(t.cacheString() + System.lineSeparator());","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"            System.out.println(\"Something went wrong \" + e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":98}},{"path":"src/main/java/component/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package component;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"import tasks.Tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to DukeComponent Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the logic of Task List in Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"public class TaskList implements Iterable\u003cTasks\u003e {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    private final ArrayList\u003cTasks\u003e list;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"     * Constructs TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"     * @param list Arraylist that contains the Tasks in Duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    public TaskList(ArrayList\u003cTasks\u003e list) {","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     * Gets TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"     * @param index 0-based index for users to get the task from the TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     * @return Task from the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    public Tasks getTask(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        return list.get(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * Adds the task into the TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * @param task task that is added to the TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    public void addTask(Tasks task) {","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        list.add(task);","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"     * Removes the Task at index index from the TaskList","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     * @param index 0-based index indicating position of Task in the TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     * @return Task that is removed.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"    public Tasks remove(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        return list.remove(index);","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     * Returns the size of TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"     * @return Integer representing size of TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"    public int listSize() {","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"        return list.size();","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"     * Prints out a list of Task in that TaskList that matches the description.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"     * @param description  Description of the Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"    public String findDescription(String description) {","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"        StringBuilder dukeReply \u003d createDukeReply(description, count);","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"        return dukeReply.toString();","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"     * Creates Duke reply.","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"     * @param description Description of the task to find.","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"     * @param count The number of tasks that matches the description.","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"     * @return Duke reply to find command.","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"    private StringBuilder createDukeReply(String description, int count) {","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        StringBuilder dukeReply \u003d new StringBuilder();","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"        for (Tasks task : list) {","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"            if (task.getTask().contains(description)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"                dukeReply.append(count).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"                count++;","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"        return dukeReply;","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"tandeshao"},"content":"     * Iterates TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"tandeshao"},"content":"     * @return An iterator for Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"tandeshao"},"content":"    public Iterator\u003cTasks\u003e iterator() {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"tandeshao"},"content":"        return new Iterator\u003c\u003e() {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"tandeshao"},"content":"            private int currentIndex \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"tandeshao"},"content":"            private final int currentSize \u003d list.size();","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"tandeshao"},"content":"            @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"tandeshao"},"content":"            public boolean hasNext() {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"tandeshao"},"content":"                return currentIndex \u003c currentSize \u0026\u0026 list.get(currentIndex) !\u003d null;","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"tandeshao"},"content":"            @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"tandeshao"},"content":"            public Tasks next() {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"tandeshao"},"content":"                return list.get(currentIndex++);","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"tandeshao"},"content":"            @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"tandeshao"},"content":"            public void remove() {","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"tandeshao"},"content":"                throw new UnsupportedOperationException();","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"tandeshao"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"tandeshao"},"content":"        };","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":111}},{"path":"src/main/java/component/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package component;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import exceptions.TaskException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the DukeComponent Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     * Generates Duke reply.","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"     * @param tasks TaskList that is manipulated by the {@link component.Command} class.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"     * @param storage Storage that is manipulated by the {@link component.Command} class.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"     * @param userInput input that is given by the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    public String generateDukeReply(TaskList tasks, Storage storage, String userInput) {","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"            return createDukeReply(tasks, storage, userInput);","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        } catch (TaskException exception) {","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"            return exception.getMessage();","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"     * Creates duke reply and check for exception.","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     * @param tasks TaskList that is manipulated by the {@link component.Command} class.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     * @param storage Storage that is manipulated by the {@link component.Command} class.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     * @param userInput input that is given by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     * @return Duke reply.","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"     * @throws TaskException Exception that is thrown if user input is in incorrect format.","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    private String createDukeReply(TaskList tasks, Storage storage, String userInput) throws TaskException {","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        String dukeReply \u003d parser.executeCommand(tasks);","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        storage.addTask(tasks);","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        return dukeReply;","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     * Initializes the Duke Ui.","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    public String initUi() {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        //Statement to be printed when duke is initialised.","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        return \"Hello! I\u0027m Dodo\" + \"\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":49}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"T|0|homework","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"D|1|submit homework| 2020-10-09","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"E|0|interview| monday","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"tandeshao":3}},{"path":"src/main/java/exceptions/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package exceptions;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Exceptions Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the message that should be displayed when users parsed an invalid input","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" * for the {@link tasks.DeadLines} class.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"public class DeadlineException extends TaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * Constructs DeadLineException.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    public DeadlineException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"        super();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed when a DeadLineException happens.","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     * @return Message as a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        return super.getMessage() + \"The description of a deadline cannot be empty.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":25}},{"path":"src/main/java/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package exceptions;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Exceptions Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the message that should be displayed when users parsed an invalid input","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" * for the {@link tasks.Events} class.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"public class EventException extends TaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * Constructs EventException.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    public EventException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"        super();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed when an EventException happens.","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     * @return Message as a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        return super.getMessage() + \"The description of an event cannot be empty.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":25}},{"path":"src/main/java/exceptions/IncorrectInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package exceptions;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Exceptions Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the message that should be displayed when users parsed an invalid input.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"public class IncorrectInputException extends TaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"     * Constructs IncorrectInputException.","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"    public IncorrectInputException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"        super();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed when a IncorrectInputException happens.","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * @return Message as a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        return super.getMessage() + \" I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":24}},{"path":"src/main/java/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package exceptions;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Exceptions Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the message that should be displayed when users parsed an invalid input","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" * for the {@link tasks.Tasks} class.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * Constructs TaskException.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    public TaskException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"        super(\"OOPS!!!\");","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":16}},{"path":"src/main/java/exceptions/ToDosException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package exceptions;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Exceptions Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the message that should be displayed when users parsed an invalid input","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" * for the {@link tasks.ToDos} class.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"public class ToDosException extends TaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * Constructs TodosException","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    public ToDosException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"        super();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed when a TodosException happens.","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     * @return Message as a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        return super.getMessage() + \"The description of a todo cannot be empty.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":25}},{"path":"src/main/java/exceptions/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package exceptions;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Exceptions Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the message that should be displayed when users parsed a wrong input for the","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" * commands in {@link component.Command} class.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"public class WrongInputException extends TaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"    public WrongInputException() {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"        super();","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed when a WrongInputException happens.","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"     * @return Message as a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        return super.getMessage() + \"The input is wrong.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":21}},{"path":"src/main/java/tasks/DeadLines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Tasks Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the logic of how DeadLines should be represented in Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"public class DeadLines extends Tasks {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"    private final String date;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * Constructs DeadLines.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     * @param task Task that should be recorded.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"     * @param marked Boolean flag for whether a task is completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"     * @param date Date for task to be done by.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    public DeadLines(String task, Boolean marked, String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        super(task, marked);","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"     * Constructs a string representation of DeadLine.","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of DeadLine for caching into a pre-constructed file.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    public String cacheString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        String s \u003d getIsMarked() ? \"1\" : \"0\";","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        return \"D\" + \"|\" + s + \"|\" + this.getTask() + \"|\" + returnDate(this.date);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed for DeadLine.","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of DeadLine.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        if (this.getIsMarked()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"            return \"[D]\" + \"[X\" + \"] \" + this.getTask() + \" (by: \" + returnDate(this.date) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"            return \"[D]\" + \"[ \" + \"] \" + this.getTask() + \" (by: \" + returnDate(this.date) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tandeshao":43}},{"path":"src/main/java/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Tasks Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the logic of how Events should be represented in Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"public class Events extends Tasks {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"    private final String date;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * Constructs Events.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     * @param task Task that should be recorded.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"     * @param marked Boolean flag for whether a task is completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"     * @param date The date where the event will happen.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    public Events(String task, Boolean marked, String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        super(task, marked);","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"     * Constructs a string representation of an Event.","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of Event for caching into a pre-constructed file.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    public String cacheString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        String s \u003d getIsMarked() ? \"1\" : \"0\";","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        return \"E\" + \"|\" + s + \"|\" + this.getTask() + \"|\" + returnDate(this.date);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed for Event.","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of an Event.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        if (this.getIsMarked()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"            return \"[E]\" + \"[X\" + \"] \" + this.getTask() + \" (at: \" + returnDate(this.date) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"            return \"[E]\" + \"[ \" + \"] \" + this.getTask() + \" (at: \" + returnDate(this.date) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tandeshao":43}},{"path":"src/main/java/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Tasks Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the logic of how Tasks should be represented in Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"public abstract class Tasks {","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    private final String task;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    private Boolean isMarked;","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"     * Constructs Tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"     * @param task Task that should be recorded.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     * @param marked Boolean flag for whether a task is completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"    public Tasks(String task, Boolean marked) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        this.isMarked \u003d marked;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"     * Sets {@link #isMarked} to true.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"    public void setMarked() {","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * Sets {@link #isMarked} to false.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    public void setUnmarked() {","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"     * Gets {@link #task}","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"     * @return {@link #task}.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        return this.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"     * Gets {@link #isMarked}.","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"     * @return {@link #isMarked}.","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        return this.isMarked;","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"tandeshao"},"content":"     * Creates a String representation of Task should be cached into","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"tandeshao"},"content":"     * a file.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"tandeshao"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"tandeshao"},"content":"    public abstract String cacheString();","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"tandeshao"},"content":"     * Converts a date of format \"yyyy-MM-dd\" to \"MMM dd yyyy\".","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"tandeshao"},"content":"     * @param s String representation of a date.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tandeshao"},"content":"     * @return Date that follows the format if applicable.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"tandeshao"},"content":"    public static String returnDate(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"tandeshao"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"tandeshao"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"tandeshao"},"content":"            LocalDate dateTime \u003d LocalDate.parse(s, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"tandeshao"},"content":"            return dateTime.format(formatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"tandeshao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"tandeshao"},"content":"            return s;","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"tandeshao"},"content":"     * Converts Tasks to a String representation.","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"tandeshao"},"content":"     * @return Task as a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tandeshao"},"content":"    public abstract String toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":84}},{"path":"src/main/java/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":" * A class that belongs to the Tasks Package.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":" * This class encapsulates the logic of how ToDos should be represented in Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"public class ToDos extends Tasks {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"     * Constructs Todos.","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"     * @param task Task that should be recorded.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"     * @param marked Boolean flag for whether a task is completed","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    public ToDos(String task, Boolean marked) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"        super(task, marked);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"     * Constructs a string representation of ToDos.","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of ToDos for caching into a pre-constructed file.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"    public String cacheString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        String s \u003d getIsMarked() ? \"1\" : \"0\";","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        return \"T\" + \"|\" + s + \"|\" + this.getTask();","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     * Creates message to be displayed for ToDos.","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"     * @return String representation of ToDos.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        if (this.getIsMarked()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"            return \"[T]\" + \"[X\" + \"] \" + this.getTask();","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"            return \"[T]\" + \"[ \" + \"] \" + this.getTask();","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tandeshao":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"tandeshao":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #f9f9ef;\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"tandeshao":19}},{"path":"src/test/tasks/DeadLinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":" * Test class for DeadLines.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"class DeadLinesTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"     * Tests cacheString in DeadLines class.","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    void testCacheString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        //testcase 1","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        DeadLines d1 \u003d new DeadLines(\"hello\", true, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"D|1|hello|Sunday\", d1.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        //testcase 2","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        DeadLines d2 \u003d new DeadLines(\"hello\", false, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"D|0|hello|Sunday\", d2.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        //testcase 3","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        DeadLines d3 \u003d new DeadLines(\"hello\", false, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"D|0|hello|Oct 17 2020\", d3.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        //testcase 4","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        DeadLines d4 \u003d new DeadLines(\"home work\", true, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"D|1|home work|Oct 17 2020\", d4.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * Tests toString in DeadLines class.","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    void testToString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        //testcase 1","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        DeadLines d1 \u003d new DeadLines(\"hello\", true, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[D][X] hello (by: Sunday)\", d1.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        //testcase 2","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        DeadLines d2 \u003d new DeadLines(\"hello\", false, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[D][ ] hello (by: Sunday)\", d2.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        //testcase 3","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        DeadLines d3 \u003d new DeadLines(\"hello\", false, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[D][ ] hello (by: Oct 17 2020)\", d3.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        //testcase 4","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        DeadLines d4 \u003d new DeadLines(\"home work\", true, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[D][X] home work (by: Oct 17 2020)\", d4.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":55}},{"path":"src/test/tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":" * Test class for Events.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"class EventsTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"     * Tests cacheString in Events class.","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    void cacheString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        //testcase 1","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        Events e1 \u003d new Events(\"hello\", true, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"E|1|hello|Sunday\", e1.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        //testcase 2","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        Events e2 \u003d new Events(\"hello\", false, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"E|0|hello|Sunday\", e2.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        //testcase 3","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        Events e3 \u003d new Events(\"hello\", false, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"E|0|hello|Oct 17 2020\", e3.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        //testcase 4","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        Events e4 \u003d new Events(\"home work\", true, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"E|1|home work|Oct 17 2020\", e4.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     * Tests toString in Events class.","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    void testToString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        //testcase 1","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        Events e1 \u003d new Events(\"hello\", true, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[E][X] hello (at: Sunday)\", e1.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        //testcase 2","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        Events e2 \u003d new Events(\"hello\", false, \"Sunday\");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[E][ ] hello (at: Sunday)\", e2.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        //testcase 3","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        Events e3 \u003d new Events(\"hello\", false, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[E][ ] hello (at: Oct 17 2020)\", e3.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        //testcase 4","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        Events e4 \u003d new Events(\"home work\", true, \"2020-10-17\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[E][X] home work (at: Oct 17 2020)\", e4.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":55}},{"path":"src/test/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":" * Test class for Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"class TaskTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"     * Tests setMarked in Tasks class.","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"    void testSetMarked() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"        Tasks t \u003d new ToDos(\"hello\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        assertFalse(t.getIsMarked());","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        t.setMarked();","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        assertTrue(t.getIsMarked());","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"        t.setUnmarked();","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        assertFalse(t.getIsMarked());","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"     * Tests getTask in Tasks class.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    void testGetTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"        Tasks t1 \u003d new ToDos(\"hello world\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"hello world\", t1.getTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"        Tasks t2 \u003d new ToDos(\"hello world #1e2d*asd\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"hello world #1e2d*asd\", t2.getTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"     * Tests returnDate in Tasks class.","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"    void testReturnDate() {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"12312312312412412\", Tasks.returnDate(\"12312312312412412\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"13-2020-15\", Tasks.returnDate(\"13-2020-15\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"Oct-2020-15\", Tasks.returnDate(\"Oct-2020-15\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"Jan 20 2015\", Tasks.returnDate(\"2015-01-20\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"Dec 10 1990\", Tasks.returnDate(\"Dec 10 1990\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":49}},{"path":"src/test/tasks/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"package tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tandeshao"},"content":" * Test class for ToDos.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tandeshao"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tandeshao"},"content":"class ToDosTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tandeshao"},"content":"     * Tests cacheString in ToDos class.","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tandeshao"},"content":"    void testCacheString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tandeshao"},"content":"        ToDos t1 \u003d new ToDos(\"hello\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"T|1|hello\", t1.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tandeshao"},"content":"        //testcase 2","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tandeshao"},"content":"        ToDos t2 \u003d new ToDos(\"hello\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"T|0|hello\", t2.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tandeshao"},"content":"        //testcase 3","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tandeshao"},"content":"        ToDos t3 \u003d new ToDos(\"hello\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"T|0|hello\", t3.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tandeshao"},"content":"        //testcase 4","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tandeshao"},"content":"        ToDos t4 \u003d new ToDos(\"home work\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"T|1|home work\", t4.cacheString());","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tandeshao"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tandeshao"},"content":"     * Tests toString in ToDos class.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"tandeshao"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tandeshao"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tandeshao"},"content":"    void testToString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tandeshao"},"content":"        //testcase 1","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tandeshao"},"content":"        ToDos t1 \u003d new ToDos(\"hello\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[T][X] hello\", t1.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tandeshao"},"content":"        //testcase 2","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tandeshao"},"content":"        ToDos t2 \u003d new ToDos(\"hello\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[T][ ] hello\", t2.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tandeshao"},"content":"        //testcase 3","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tandeshao"},"content":"        ToDos t3 \u003d new ToDos(\"hello\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[T][ ] hello\", t3.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tandeshao"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tandeshao"},"content":"        //testcase 4","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"tandeshao"},"content":"        ToDos t4 \u003d new ToDos(\"home work\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tandeshao"},"content":"        assertEquals(\"[T][X] home work\", t4.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tandeshao"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tandeshao"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tandeshao":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tandeshao"},"content":"todo read book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"tandeshao"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"tandeshao"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"tandeshao"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"tandeshao"},"content":"todo join sports club","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"tandeshao"},"content":"mark 4","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"tandeshao"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tandeshao":7}}]
