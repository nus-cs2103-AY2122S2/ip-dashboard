[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"# duke.main.Duke project template","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cwq2326":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"checkstyle {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cwq2326":4,"-":46}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":" * Represents the main class that Ekud will run on.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    public Duke(String filePath) throws DukeException, IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"            tasks \u003d new TaskList(storage.loadFileContents());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"            ui.showLoadFileMessage(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"            ui.showLoadingErrorMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"     * Run the Ekud programme.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    public void run() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"                System.err.println(err);","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"        ui.closeScanner();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"        new Duke(\"data/ekud.txt\").run();","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cwq2326":52,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.command.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":" * Contains method to check validity of user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"     * Checks the validity of the user input. If the user input is valid,","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"     * returns a Command which is then executed to perform its respective function.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"     * @param input User input.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"     * @return Command which is then executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"     * @throws DukeException If input is not valid.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        // If user did not input anything","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"☹ OOPS!!! Please input a command\");","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"            String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"            // Check if the first word in the input is a valid command","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"            if (!DukeCommands.isDukeCommand(splitInput[0])) {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"                throw new DukeException(\"I\u0027m so very sorry,\"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"                        + \" please make sure you enter a valid Ekud command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"                // Check if the command requires a description","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"            } else if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"                if (DukeCommands.isDukeCommand(splitInput[0])","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"                        \u0026\u0026 DukeCommands.isDukeDescriptionCommand(splitInput[0])) {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"I\u0027m so very sorry, the description of a \"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"                            + splitInput[0] + \" cannot be empty.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"                // Check correct usage of keywords for adding of event task","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"            } else if (splitInput[0].equals(\"event\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"                if (!input.contains(\" /at \")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"I\u0027m so very sorry, \"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"                            + \"please use the /at command for an event input\");","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"                if (input.split(\"event \")[1]","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"                        .split(\" \", 2)[0].equals(\"/at\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"I\u0027m so very sorry, the description of a \"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"                            + splitInput[0] + \" cannot be empty.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"                try {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"                    String event_date \u003d input.split(\"event \", 2)[1]","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"                            .split(\"/at \")[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"                    LocalDate.parse(event_date, Task.getInputDateFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"                } catch (DateTimeParseException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"Please enter a valid date! [dd/mm/yyyy]\");","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"                // Check correct usage of keywords for adding of deadline task","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"            } else if (splitInput[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"                if (!input.contains(\" /by \")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"I\u0027m so very sorry,\"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"                            + \" please use the /by command for an event input\");","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"                if (input.split(\"deadline \")[1]","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"                        .split(\" \", 2)[0].equals(\"/by\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"I\u0027m so very sorry, the description of a \"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"                            + splitInput[0] + \" cannot be empty.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"                try {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"                    String deadline_date \u003d input.split(\"deadline \", 2)[1]","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"                            .split(\"/by \")[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"                    LocalDate.parse(deadline_date, Task.getInputDateFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"                } catch (DateTimeParseException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"Please enter a valid date! [dd/mm/yyyy]\");","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"                // Check if the index of task specified for task exist","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"            } else if (splitInput[0].equals(\"mark\")","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"                    || splitInput[0].equals(\"unmark\")","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"                    || splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"                if (splitInput.length \u003e 2) {","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"I\u0027m so very sorry, \"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"                            + \"please make sure there is only \"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"                            + \"one number following the \"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"                            + splitInput[0] + \" command\");","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"                try {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"                    Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"                } catch (NumberFormatException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"cwq2326"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please make sure to input \"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"                            + \"only one integer following the \"","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"                            + splitInput[0] + \" command\");","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"        // Get the respective command type and return its corresponding type","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"        HashMap\u003cString, String\u003e commandTypeMap \u003d DukeCommands.getTaskTypeMap();","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"        String type \u003d commandTypeMap.get(input.split(\" \", 2)[0]);","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"        switch (type) {","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"cwq2326"},"content":"        case \"ADD_COMMAND\":","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"cwq2326"},"content":"            return new AddCommand(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"cwq2326"},"content":"        case \"DELETE_COMMAND\":","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"cwq2326"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"cwq2326"},"content":"        case \"MARK_COMMAND\":","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"cwq2326"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"cwq2326"},"content":"        case \"UNMARK_COMMAND\":","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"cwq2326"},"content":"            return new UnMarkCommand(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"cwq2326"},"content":"        case \"OUTPUT_COMMAND\":","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"cwq2326"},"content":"            return new OutputCommand(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"cwq2326"},"content":"        case \"EXIT_COMMAND\":","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"cwq2326"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"cwq2326"},"content":"        case \"FIND_COMMAND\":","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"cwq2326"},"content":"            return new FindCommand(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"cwq2326"},"content":"        case \"CLEAR_COMMAND\":","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"cwq2326"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"cwq2326"},"content":"        default:","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"cwq2326"},"content":"            return null;","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":119}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":" * A class that interacts with the directory of the file. A file in this context","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":" * refers to the text file that stores the content of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    private String filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     * Creates a folder in a directory and then a file in it.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException If directory cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    public static void createNewFolderAndTextFile() throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"        directory.mkdir();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"        File file \u003d new File(directory, \"ekud.txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"        file.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"     * Appends new task to the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"     * @param textToAdd Information of the task to be added to the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException If the directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"    public void appendToFile(String textToAdd) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"        fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"     * Overwrites the content of a specific task index in the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"     * Used for command such as mark and unmark.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"     * @param lineNumber The index of the task to be modified.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"     * @param data       The content of the task in the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException If directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"    public void setInFile(int lineNumber, String data) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"        lines.set(lineNumber - 1, data);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"        Files.write(path, lines, StandardCharsets.UTF_8);","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"     * Overwrites the entire content of the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"     * Used for command such as delete.","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"     * @param taskList The task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException If directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"    public void writeToFile(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"            stringBuilder.append(task.taskDescriptionForFile()","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"        fw.write(stringBuilder.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"        fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"     * Load the contents of the file and store it as a list of strings.","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"cwq2326"},"content":"     * @return List of type String.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"     * @throws DukeException If there is an error reading the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException   If there is an error reading the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"    public List\u003cString\u003e loadFileContents() throws DukeException, IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"        boolean gotError \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"cwq2326"},"content":"            Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"cwq2326"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"cwq2326"},"content":"            gotError \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"Error loading file!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"cwq2326"},"content":"        } finally {","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"cwq2326"},"content":"            if (!gotError) {","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"cwq2326"},"content":"                Path path \u003d Paths.get(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"cwq2326"},"content":"                List\u003cString\u003e data \u003d Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"cwq2326"},"content":"                return data;","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"cwq2326"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"cwq2326"},"content":"                return null;","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":111}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"    public Ui() {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"Ello, my name is Ekud, \"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"                + \"your personal task tracking bot.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    public void showEmptyDescriptionMessage(String taskName) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"I\u0027m so very sorry, the description of a \"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"                + taskName + \" cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    public void showLoadingErrorMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"Oh no, looks like I have some trouble finding your task list.\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"                + \"Fred not, Ekud has created the file for you!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"How can Ekud help you with?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        return command;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"    public void closeScanner() {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"        scanner.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    public void showLoadFileMessage(TaskList tasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"duke.task.Task list successfully loaded\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"                + \"You currently have \" + tasks.getTaskSize()","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"                + \" task(s) in your list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"Goodbye, feel free to use Ekud anytime!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"    public void showAddTaskMessage(TaskList taskList, Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"                + task.toString() + \"\\nNow you have \"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"                + taskList.getTaskSize() + \" tasks in the list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"    public void showMarkMessage(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"                + task.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"    public void showUnMarkMessage(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"                + task.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"    public void showDeleteMessage(Task task, int taskSize) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"                + task.toString() + \"\\nNow you have \"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"                + taskSize + \" tasks in the list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"    public void showEmptyListMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"You do not have any tasks in your list!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"    public void showListMessage(TaskList tasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskSize(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"            System.out.println(i + 1 + \".\" + tasks.getTask(i + 1).toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"    public void showClearListConfirmationMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"        System.out.println(\"Are you sure you want Ekud to clear your task list?\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"                + \"Enter \\\"y\\\" if you would like to clear your task list, enter any other \"","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"                + \"characters if you would like to cancel this command\");","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"cwq2326"},"content":"    public void showClearListMessage(String response) {","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"        if (response.equals(\"y\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"            System.out.println(\"Got it, Ekud has cleared your task list\");","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"        } else","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"            System.out.println(\"Very well\");","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":96}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.task.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":" * Represents commands which add task to the task list. An AddCommand","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":" * object corresponds a valid Ekud command, which can then be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    private String taskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    public AddCommand(String fullCommand) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        this.taskType \u003d fullCommand.split(\" \",2)[0];","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"     * Executes a valid Ekud command that add a task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"     * Supports the addition of \u0027todo\u0027, \u0027event and \u0027deadline\u0027 task.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException If directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"            String todo \u003d fullCommand.split(\"todo \", 2)[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"            ToDo toDoTask \u003d new ToDo(todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"            tasks.addToList(toDoTask, ui, storage);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"            String deadline \u003d fullCommand.split(\"deadline \",","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"                    2)[1].split(\"/by \")[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"            String by \u003d fullCommand.split(\"deadline \",","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"                    2)[1].split(\"/by \")[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(by,","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"                    Task.getInputDateFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"            Deadline deadlineTask \u003d new Deadline(deadline, deadlineDate);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"            tasks.addToList(deadlineTask, ui, storage);","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"        case \"event\":","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"            String event \u003d fullCommand.split(\"event \",","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"                    2)[1].split(\"/at \")[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"            String at \u003d fullCommand.split(\"event \",","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"                    2)[1].split(\"/at \")[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"            LocalDate eventDate \u003d LocalDate.parse(at,","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"                    Task.getInputDateFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"            Event eventTask \u003d new Event(event, eventDate);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"            tasks.addToList(eventTask, ui, storage);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"     * Returns a boolean value that tells the programme to exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"     * @return Boolean value false.","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":70}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"public class ClearCommand implements Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"            ui.showClearListConfirmationMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"            String response \u003d scanner.next();","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"            if (response.equals(\"y\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"                tasks.clearTaskList(tasks, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"            ui.showClearListMessage(response);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"OOPS, Ekud could not locate the file!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":" * Represents an abstract class for the various commands that Ekud supports.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"public interface Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"     * Execute the function of the command.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"     * @param tasks   Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"     * @param ui      Ui object.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"     * @throws Exception If directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    public abstract void execute(TaskList tasks, Storage storage, Ui ui) throws Exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"     * Provides the boolean value whether to exit the programme.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"     * @return Boolean value to exit programme.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":" * Represents commands which deletes task to the task list. DeleteCommand","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":" * object corresponds a valid Ekud command, which can then be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    private String[] splitFullCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    private int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        this.splitFullCommand \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        this.index \u003d Integer.parseInt(splitFullCommand[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     * Executes a valid Ekud command that delete a task from the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * The position of which the task is supplied by the user, of which","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     * if the postion is \u003c 1 or more than the number of tasks in the task list,","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"     * a DukeException would be thrown.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"     * @param tasks   Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"     * @param ui      Ui object.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"     * @throws DukeException If position \u003c 1 or more than number of tasks in task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException   If directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage,","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"                        Ui ui) throws DukeException, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"        if (index \u003c 0 || index \u003e tasks.getTaskSize()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"Task do not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"            tasks.removeTask(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"            storage.writeToFile(tasks.getTaskList());","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"            ui.showDeleteMessage(task, tasks.getTaskSize());","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"     * Returns a boolean value that tells the programme to exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"     * @return Boolean value false.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":61}},{"path":"src/main/java/duke/command/DukeCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":" * Represents valid Ekud commands. Ekud commands are categorised into","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":" * those needing a description and those without. A DukeCommands object","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":" * will provide method necessarily to check if a user input is a valid command.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"public class DukeCommands {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    public enum DUKE_COMMANDS {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, LIST, BYE, FIND, CLEAR","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    public enum DUKE_DESCRIPTIVE_COMMANDS {","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"     * Checks if the supplied string is a valid Ekud command.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"     * @param string Command supplied.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"     * @return True if the command is a valid Ekud command, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    public static boolean isDukeCommand(String string) {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"        return Arrays.stream(DUKE_COMMANDS.values())","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"                .anyMatch((command) -\u003e command.name()","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"                        .equalsIgnoreCase(string));","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"     * Checks if the supplied string is a valid Ekud command that","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"     * requires a description.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"     * @param string Command supplied.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"     * @return True if the command is a valid Ekud command","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"     * needing a description, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"    public static boolean isDukeDescriptionCommand(String string) {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"        return Arrays.stream(DUKE_DESCRIPTIVE_COMMANDS.values()).","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"                anyMatch((command) -\u003e command.name().","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"                        equalsIgnoreCase(string));","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"     * A method that returns a hash map that has value of the type of command","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"     * corresponding to its key.","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"     * @return Hashmap of type \u003cString, String\u003e with key-value pair of \u003cEkud command, Command type\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"    public static HashMap\u003cString, String\u003e getTaskTypeMap() {","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"        HashMap\u003cString, String\u003e h \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"        h.put(\"list\", \"OUTPUT_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"        h.put(\"todo\", \"ADD_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"        h.put(\"event\", \"ADD_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        h.put(\"deadline\", \"ADD_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"        h.put(\"mark\", \"MARK_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"        h.put(\"unmark\", \"UNMARK_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"        h.put(\"delete\", \"DELETE_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"        h.put(\"bye\", \"EXIT_COMMAND\");","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"        h.put(\"find\", \"FIND_COMMAND\");","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"        h.put(\"clear\", \"CLEAR_COMMAND\");","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"        return h;","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cwq2326":68}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":" * Represents commands which tells the main programme to exit. An ExitCommand","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":" * object corresponds a valid Ekud command, which can then be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"     * Output an exit message to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"     * @param tasks   Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"     * @param ui      Ui object.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        ui.showExitMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     * Returns a boolean value that tells the programme to exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * @return Boolean value true.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import java.util.List;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":" * Represents commands which find tasks in the task list. A FindCommand","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":" * object corresponds a valid Ekud command, which can then be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    private String[] splitFullCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"    private String taskType;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        this.splitFullCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        this.taskType \u003d splitFullCommand[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"        String find \u003d splitFullCommand[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        List\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"            if (t.toString().contains(find)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"                l.add(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"        if (l.isEmpty()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"            System.out.println(\"No match found!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"            for (int i \u003d 0; i \u003c l.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"                System.out.println(i + 1 + \".\" + l.get(i).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"cwq2326":52}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":" * Represents commands which mark a task in the task list. A MarkCommand","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":" * object corresponds a valid Ekud command, which can then be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    private String[] splicedFullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    private int position;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        this.splicedFullCommand \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        this.position \u003d Integer.parseInt(splicedFullCommand[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     * Executes a valid Ekud command that marks a task in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     * The position of which the task is supplied by the user, of which","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * if the postion is \u003c 1 or more than the number of tasks in the task list,","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     * a DukeException is thrown.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"     * @param tasks   Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"     * @param ui      Ui object.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"     * @throws DukeException If position \u003c 1 or more than number of tasks in task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException   If directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException, IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"        if (position \u003c 1 || position \u003e tasks.getTaskSize()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"Task do not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"            Task task \u003d tasks.getTask(position);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"            if (task.isDone()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"                throw new DukeException(\"duke.task.Task is already marked as done!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"                task.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"                storage.setInFile(position, task.taskDescriptionForFile());","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"                ui.showMarkMessage(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"     * Returns a boolean value that tells the programme to exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"     * @return Boolean value false.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":63}},{"path":"src/main/java/duke/command/OutputCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":" * Represents commands which outputs to the user. A MarkCommand","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":" * object corresponds a valid Ekud command, which can then be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"public class OutputCommand implements Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    private String[] splitFullCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    private String taskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    public OutputCommand(String fullCommand) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        this.splitFullCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        this.taskType \u003d splitFullCommand[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"     * Executes a valid Ekud command that prints all the tasks in the","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"     * task list. If task list is empty, a message will be shown to inform","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"     * the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     * @param tasks   Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     * @param ui      Ui object.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        if (tasks.getTaskSize() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"            ui.showEmptyListMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"            ui.showListMessage(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"     * Returns a boolean value that tells the programme to exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"     * @return Boolean value false.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":50}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":" * Represents commands which unmark a task in the task list. A MarkCommand","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":" * object corresponds a valid Ekud command, which can then be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"public class UnMarkCommand implements Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    private String[] splitFullCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    private int position;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"    public UnMarkCommand(String fullCommand) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        this.splitFullCommand \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        this.position \u003d Integer.parseInt(splitFullCommand[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"     * Executes a valid Ekud command that marks a task in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"     * The position of which the task is supplied by the user, of which","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"     * if the postion is \u003c 1 or more than the number of tasks in the task list,","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"     * a DukeException is thrown.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"     * @param tasks   Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"     * @param ui      Ui object.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"     * @throws DukeException If position \u003c 1 or more than number of tasks in task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"     * @throws IOException   If directory or file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    public void execute(TaskList tasks, Storage storage,","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"                        Ui ui) throws DukeException, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"        if (position \u003c 1 || position \u003e tasks.getTaskSize()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"Task do not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"            Task task \u003d tasks.getTask(position);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"                throw new DukeException(","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"                        \"duke.task.Task is already marked as not done!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"                task.unmark();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"                storage.setInFile(position, task.taskDescriptionForFile());","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"                ui.showUnMarkMessage(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"     * Returns a boolean value that tells the programme to exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"     * @return Boolean value false.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":65}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":" * Represents an exception which is thrown by Ekud.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cwq2326":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":" * Represents a task which is of type deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"     * Task description that is formatted to be written into the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"     * @return Task description format for file input.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    public String taskDescriptionForFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        return \"D , 0 , \"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"                + this.description.trim() + \" , \" + this.by;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"                + \" (by: \" + by.format(super.outputDateFormat) + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cwq2326":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":" * Represents a task which is of type event.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"     * Task description that is formatted to be written into the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"     * @return Task description format for file input.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    public String taskDescriptionForFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        int i \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        return \"E , \" + i + \" , \"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"                + this.description.trim() + \" , \" + this.at;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"                + \" (at: \" + at.format(super.outputDateFormat) + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cwq2326":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":" * Represents a task object which can be added to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"    protected DateTimeFormatter outputDateFormat \u003d","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"    protected static DateTimeFormatter inputDateFormat \u003d","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"            DateTimeFormatter.ofPattern(\"d/M/uuuu\");","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    public static DateTimeFormatter getInputDateFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        return inputDateFormat;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"     * Mark the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"    public void mark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"     * Unmark the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"     * Task description that is formatted to be written into the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"     * @return Task description format for file input.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"    public String taskDescriptionForFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"        return null;","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cwq2326":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    // Constructor for making new file","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    public TaskList() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"            Storage.createNewFolderAndTextFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"Could not create file for you!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"    // Constructor for loading existing file","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"    public TaskList(List\u003cString\u003e data) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"        if (data \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"            throw new DukeException(\"Oops Ekud could not find the file\");","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"            for (String d : data) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"                String[] splitData \u003d d.split(\" , \");","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"                switch (splitData[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"                case \"T\":","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"                    ToDo toDo \u003d new ToDo(splitData[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"                    if (splitData[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"                        toDo.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"cwq2326"},"content":"                    this.taskList.add(toDo);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"cwq2326"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"cwq2326"},"content":"                case \"D\":","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"cwq2326"},"content":"                    Deadline deadline \u003d new Deadline(splitData[2],","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cwq2326"},"content":"                            LocalDate.parse(splitData[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cwq2326"},"content":"                    if (splitData[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"cwq2326"},"content":"                        deadline.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"cwq2326"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"cwq2326"},"content":"                    this.taskList.add(deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"cwq2326"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"cwq2326"},"content":"                case \"E\":","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"cwq2326"},"content":"                    Event event \u003d new Event(splitData[2],","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"cwq2326"},"content":"                            LocalDate.parse(splitData[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cwq2326"},"content":"                    if (splitData[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cwq2326"},"content":"                        event.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"cwq2326"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"cwq2326"},"content":"                    this.taskList.add(event);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"cwq2326"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"cwq2326"},"content":"                default:","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"cwq2326"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"cwq2326"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"cwq2326"},"content":"    public void clearTaskList(TaskList tasks, Storage storage) throws IOException {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"cwq2326"},"content":"        tasks.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"cwq2326"},"content":"        storage.writeToFile(tasks.taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"cwq2326"},"content":"    public int getTaskSize() {","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"cwq2326"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"cwq2326"},"content":"    public Task getTask(int position) {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"cwq2326"},"content":"        return this.taskList.get(position - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"cwq2326"},"content":"    public void removeTask(int position) {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"cwq2326"},"content":"        this.taskList.remove(position - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"cwq2326"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"cwq2326"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"cwq2326"},"content":"    public void addToList(Task task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"cwq2326"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"cwq2326"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"cwq2326"},"content":"        stringBuilder.append(task.taskDescriptionForFile()","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"cwq2326"},"content":"                + System.lineSeparator());","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"cwq2326"},"content":"        storage.appendToFile(stringBuilder.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"cwq2326"},"content":"        ui.showAddTaskMessage(this, task);","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":95}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":" * Represents a task which is of type todo.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"     * Task description that is formatted to be written into the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"     * @return Task description format for file input.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"    public String taskDescriptionForFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        int i \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        return \"T , \" + i + \" , \" + this.description.trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cwq2326":27}},{"path":"src/test/java/command/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"import duke.command.DukeCommands;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"public class CommandsTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"    public void testCommandTypeMapping() {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"        HashMap\u003cString, String\u003e h \u003d DukeCommands.getTaskTypeMap();","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"        assertEquals(\"ADD_COMMAND\", h.get(\"todo\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"        assertEquals(\"ADD_COMMAND\", h.get(\"event\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"        assertEquals(\"ADD_COMMAND\", h.get(\"deadline\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"        assertEquals(\"DELETE_COMMAND\",h.get(\"delete\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        assertEquals(\"MARK_COMMAND\",h.get(\"mark\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"        assertEquals(\"UNMARK_COMMAND\",h.get(\"unmark\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"        assertEquals(\"OUTPUT_COMMAND\",h.get(\"list\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"cwq2326"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"cwq2326"},"content":"    public void testInvalidInput() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"cwq2326"},"content":"            Parser.parse(\"invalid input\");","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"cwq2326"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"cwq2326"},"content":"            assertEquals(\"I\u0027m so very sorry, \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"cwq2326"},"content":"                            \"please make sure you enter a valid Ekud command\",","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"cwq2326"},"content":"                    err.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"cwq2326"},"content":"    public void testEmptyInPut() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"cwq2326"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"cwq2326"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"cwq2326"},"content":"            assertEquals(\"☹ OOPS!!! Please input a command\",","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"cwq2326"},"content":"                    err.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"cwq2326"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"cwq2326"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"cwq2326"},"content":"    public void testEmptyDescription() {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"cwq2326"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"cwq2326"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"cwq2326"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"cwq2326"},"content":"            assertEquals(\"I\u0027m so very sorry, the description of a todo cannot be empty.\",","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"cwq2326"},"content":"                    err.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"cwq2326"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"cwq2326"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"cwq2326"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cwq2326"},"content":"todo join sports club","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"cwq2326"},"content":"event wedding /at 12/12/2022","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"cwq2326"},"content":"deadline assignment2 /by 1/3/1997","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"cwq2326"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"cwq2326"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"cwq2326"},"content":"unmark 3","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"cwq2326"},"content":"delete 1","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"cwq2326":7}}]
