[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clement0010":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"repositories {","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"    mavenCentral()","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"dependencies {","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clement0010":22,"-":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    private void flip() {","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        db.flip();","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"        return db;","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"clement0010":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    public static final String DEFAULT_FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"     * Creates a Duke instance with a filename.","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     * @param fileName The filename for save file.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"            storage \u003d new Storage(fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"            tasks \u003d new TaskList(storage.loadAllTasks());","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    public Duke() {","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"        this(DEFAULT_FILE_NAME);","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"     * Retrieves the response after a user input.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     * @param fullCommand The user input command.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    protected String getResponse(String fullCommand) {","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"clement0010":43,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":" * An exception class that handles all exceptions thrown by Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"clement0010":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":" * A class to launch the Duke GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"public class Launcher {","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"clement0010":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"            stage.show();","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":27}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"        String welcomeMessage \u003d TextUi.showWelcome();","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        );","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"        );","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"            delay.play();","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"clement0010":68}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":" * A class that adds deadline object into a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    private final String title;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    private final LocalDateTime dueBy;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     *  Creates a AddDeadlineCommand instance with a title and due date.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"     * @param title The title of a task with deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"     * @param dueBy The due date of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    public AddDeadlineCommand(String title, LocalDateTime dueBy) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * Adds the deadline object to into the task list and show the execution message on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        Task task \u003d new Deadline(title, dueBy);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        return TextUi.showExecutionMessage(Messages.MESSAGE_ADD_DEADLINE, task.toString(), tasks.getSize());","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":45}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":" * A class that adds event object into a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    private final String title;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    private final LocalDateTime eventAt;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     * Creates a AddEventCommand instance with a title and event date.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"     * @param title The title of the event.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"     * @param eventAt The date of the event.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    public AddEventCommand(String title, LocalDateTime eventAt) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"        this.eventAt \u003d eventAt;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * Adds the event object to into the task list and show the execution message on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        Task task \u003d new Event(title, eventAt);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        return TextUi.showExecutionMessage(Messages.MESSAGE_ADD_EVENT, task.toString(), tasks.getSize());","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":45}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" * A class that adds todo object into a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    private final String title;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * Creates a AddTodoCommand instance with a title.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     * @param title The title of the todo.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    public AddTodoCommand(String title) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     * Adds the todo object to into the task list and show the execution message on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        Task task \u003d new Todo(title);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        return TextUi.showExecutionMessage(Messages.MESSAGE_ADD_TODO, task.toString(), tasks.getSize());","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":" * An abstract class that adds task object into a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    private final boolean isExit;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * Adds the task object to into the task list and show the execution message on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" * A class that delete task object from a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    private final int taskId;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     * Creates a DeleteCommand instance with a task id.","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     * @param taskId The id of the targeted task.","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     * Deletes a task object from the task list and","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     * show the execution message on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"            tasks.deleteTask(taskId);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"            return TextUi.showExecutionMessage(Messages.MESSAGE_DELETE);","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"            return TextUi.showError(e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":43}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" * A class that exit the Duke programme.","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     * Creates a ExitCommand instance.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"     * Exit Duke and show the execution message on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the storage fail to save all tasks,","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     * it will throw a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        storage.saveAllTasks(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"        return TextUi.showExecutionMessage(Messages.MESSAGE_GOOD_BYE);","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":36}},{"path":"src/main/java/duke/command/FilterTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"public class FilterTaskCommand extends Command {","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"     * Creates a FilterTaskCommand instance with a task type for filtering.","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     * @param taskType The task type used for filtering.","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    public FilterTaskCommand(TaskType taskType) {","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"     * Filters the task object from the task list based on task type","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"     * and show the filtered task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     * @return All the filtered tasks objects formatted for the GUI message.","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"            TaskList filteredTasks \u003d tasks.filterTasks(taskType);","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"            return TextUi.showTasks(filteredTasks);","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"            return TextUi.showError(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"clement0010":41}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":" * A class that find tasks object from a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private final String keywords;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     * Creates a FindTaskCommand instance with a search keyword.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * @param keyword The search keyword.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"        this.keywords \u003d keyword;","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"     * Searches the task object from the task list and show the filtered task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     * @return All the filtered tasks objects formatted for the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"            TaskList filteredTasks \u003d tasks.filterTasks(keywords);","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"            return TextUi.showTasks(filteredTasks);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"            return TextUi.showError(e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":" * A class that list all task objects in a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"     * Creates a ListCommand instance.","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     * Lists all task objects and show the tasks on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"     * @return All the tasks objects formatted for the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"            return TextUi.showTasks(tasks);","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"            return TextUi.showError(e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":36}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" * A class that mark task object in a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    private final int taskId;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * Creates a MarkTaskCommand instance with a title.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     * @param taskId The id of the targeted task.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     * @param isDone The mark action of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    public MarkTaskCommand(int taskId, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     * Updates the mark status of a task object in the task list and","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     * show the execution message on the GUI.","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @return The string of the GUI message.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"            tasks.markTask(taskId, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"            String message;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"            if (isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"                message \u003d Messages.MESSAGE_MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"                message \u003d Messages.MESSAGE_UNMARKED;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"            return TextUi.showExecutionMessage(message);","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"            return TextUi.showError(e.getMessage());","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":52}},{"path":"src/main/java/duke/command/SortTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.command;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" * A class that find tasks object from a task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"public class SortTaskCommand extends Command {","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     * Creates a SortTaskCommand instance with a task type for sorting.","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     * @param taskType The task type used for sorting.","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    public SortTaskCommand(TaskType taskType) {","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"        super(IS_EXIT);","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     * Sorts the task object from the task list based on task type","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     * and show the sorted task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     * @param storage The current storage of Duke.","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"     * @return All the filtered sortable tasks objects formatted for the GUI message.","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"            TaskList filteredTasks \u003d tasks.sortTasks(taskType);","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"            return TextUi.showTasks(filteredTasks);","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"            return TextUi.showError(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"clement0010":43}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.common;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"public class Messages {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_WELCOME \u003d \"HELLO! WELCOME!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_GOOD_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_PROMPT \u003d \"What can I do for you\";","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_MARK \u003d \"Nice! I\u0027ve marked this task as done.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_UNMARKED \u003d \"OK, I\u0027ve marked this task as not done yet.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_FIND \u003d \"Here are the matching tasks in your list.\";","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ADD_TODO \u003d \"Got it. I\u0027ve added this todo.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ADD_DEADLINE \u003d \"Got it. I\u0027ve added this deadline.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ADD_EVENT \u003d \"Got it. I\u0027ve added this event.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ERROR_INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what.\"","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"           + \" that means :-(\";","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ERROR_EMPTY_TITLE \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ERROR_INVALID_DATETIME_FORMAT \u003d \"Invalid date time format.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ERROR_INVALID_TASK_TYPE \u003d \"Invalid task type. Please add only todo, \"","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"            + \"event or deadline.\";","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ERROR_INVALID_SORT_TYPE \u003d \"Invalid sort type. Please sort either event or \"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"            + \"deadline.\";","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_ERROR_INVALID_FILTER_TYPE \u003d \"Invalid filter type. Please filter either todo, \"","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"            + \"event or deadline.\";","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":24}},{"path":"src/main/java/duke/common/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.common;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"public enum TaskType {","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"    TASK, EVENT, DEADLINE, TODO, INVALID;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"     * Parses user input to a sort type.","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"     * @param userInput The user input.","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"     * @return A sort type enum.","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    public static TaskType parseTaskType(String userInput) {","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"        switch (userInput) {","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"        case \"event\":","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"            return EVENT;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"            return DEADLINE;","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"            return TODO;","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"        case \"task\":","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"            return TASK;","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        default:","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"            return INVALID;","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    public String getTaskTypeSymbol() throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"        switch (this) {","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"        case TODO:","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"            return \"T\";","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        case EVENT:","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"            return \"E\";","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"            return \"D\";","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        default:","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"clement0010":41}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"import duke.command.FilterTaskCommand;","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"import duke.command.FindTaskCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"import duke.command.MarkTaskCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"import duke.command.SortTaskCommand;","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    private static final String DEFAULT_DATE_FORMAT \u003d \"d/MM/yyyy HHmm\";","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     * Parses user input for command.","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     * @param userInput The user input.","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     * @return The command to be executed based on the user input.","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the user input is invalid, it throws","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"     * a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"        String[] userInputArr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        switch (userInputArr[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"            return new MarkTaskCommand(Integer.parseInt(userInputArr[1]) - 1, true);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"            return new MarkTaskCommand(Integer.parseInt(userInputArr[1]) - 1, false);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"            return new DeleteCommand(Integer.parseInt(userInputArr[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"            userInput \u003d String.join(\" \",","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"                    Arrays.copyOfRange(userInputArr, 1, userInputArr.length));","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"            return new FindTaskCommand(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        case \"sort\":","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"            String sortType \u003d userInputArr.length \u003c 2 ? \"\" : userInputArr[1];","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"            return prepareSortTasksCommand(sortType);","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        case \"filter\":","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"            String filterType \u003d userInputArr.length \u003c 2 ? \"\" : userInputArr[1];","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"            return prepareFilterTasksCommand(filterType);","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"        case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"            return prepareAddTodoCommand(userInputArr[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"        case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"            userInput \u003d String.join(\" \",","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"                    Arrays.copyOfRange(userInputArr, 1, userInputArr.length));","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"            return prepareAddEventCommand(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"            userInput \u003d String.join(\" \",","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"                    Arrays.copyOfRange(userInputArr, 1, userInputArr.length));","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"            return prepareAddDeadlineCommand(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"     * Parses the datetime string of an event or deadline based on the","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"     * default date format.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"     * @param dateTime datetime string of the event or deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"     * @return LocalDateTime format of the given datetime.","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException if datetime string is invalid format.","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"clement0010"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"            return LocalDateTime.parse(dateTime, format);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"clement0010"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_DATETIME_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"     * Parses the task word as singular or plural noun.","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"     * @param size the size of the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"     * @return task word in singular or plural.","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"    public static String parseTaskSize(int size) {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"        return size \u003e 1 ? \"s\" : \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"    private static Command prepareAddTodoCommand(String title) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"clement0010"},"content":"        if (title.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_EMPTY_TITLE);","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":"        return new AddTodoCommand(title);","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"    private static Command prepareAddEventCommand(String userInput) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"        String[] taskArr \u003d userInput.split(\" /at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":"        if (!validateCommandInput(taskArr)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"clement0010"},"content":"        String title \u003d taskArr[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"clement0010"},"content":"        String eventAt \u003d taskArr[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"clement0010"},"content":"        return new AddEventCommand(title, parseDateTime(eventAt));","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"clement0010"},"content":"    private static Command prepareAddDeadlineCommand(String userInput) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"        String[] taskArr \u003d userInput.split(\" /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"        if (!validateCommandInput(taskArr)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"        String title \u003d taskArr[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"clement0010"},"content":"        String dueBy \u003d taskArr[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"clement0010"},"content":"        return new AddDeadlineCommand(title, parseDateTime(dueBy));","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"clement0010"},"content":"    private static Command prepareSortTasksCommand(String userInput) throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"clement0010"},"content":"        TaskType taskType \u003d TaskType.parseTaskType(userInput);","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"clement0010"},"content":"        if (taskType \u003d\u003d TaskType.TASK || taskType \u003d\u003d TaskType.TODO || taskType \u003d\u003d TaskType.INVALID) {","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_SORT_TYPE);","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"clement0010"},"content":"        return new SortTaskCommand(taskType);","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"clement0010"},"content":"    private static Command prepareFilterTasksCommand(String userInput) throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"clement0010"},"content":"        TaskType taskType \u003d TaskType.parseTaskType(userInput);","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"clement0010"},"content":"        if (taskType \u003d\u003d TaskType.TASK || taskType \u003d\u003d TaskType.INVALID) {","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_FILTER_TYPE);","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"clement0010"},"content":"        return new FilterTaskCommand(taskType);","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"clement0010"},"content":"    private static boolean validateCommandInput(String[] inputWithDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"clement0010"},"content":"        return inputWithDate.length \u003d\u003d 2 \u0026\u0026 !inputWithDate[0].isEmpty() \u0026\u0026 !inputWithDate[1].isEmpty();","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":147}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    public static final String DEFAULT_STORAGE_DIRECTORY \u003d \"./data/\";","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d DEFAULT_STORAGE_DIRECTORY + \"tasks.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    public final Path path;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     * Creates a Storage instance with a filename.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     * @param fileName The filename of the saved file.","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the path is invalid, it throws","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"     * a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    public Storage(String fileName) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        path \u003d Paths.get(DEFAULT_STORAGE_DIRECTORY + fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        if (isValidPath(path)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(\"duke.storage.Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"     * Loads all tasks to Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"     * @return An array list of task.","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If BufferedReader failed, it throws","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"     * a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"    public ArrayList\u003cTask\u003e loadAllTasks() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"        if (isValidPath(path)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"            return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(path.toString()))) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"            String strCurrentLine;","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"            Task currentTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"            while ((strCurrentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"                String[] taskInput \u003d strCurrentLine.split(\" \\\\| \");","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"                switch (taskInput[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"                case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"                    currentTask \u003d new Todo(taskInput[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"                case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"                    currentTask \u003d new Deadline(taskInput[2], Parser.parseDateTime(taskInput[3]));","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"                case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"                    currentTask \u003d new Event(taskInput[2], Parser.parseDateTime(taskInput[3]));","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"                default:","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"                    throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"                if (Integer.parseInt(taskInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"                    currentTask.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"                taskList.add(currentTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":"            reader.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"            return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(\"No file in storage.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(\"Error writing to file: \" + path);","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":"     * Saves all tasks as a file.","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"     * @param tasks The tasks for saving.","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the tasks failed to save, it throws","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"     * a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":"    public void saveAllTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"                Files.createDirectories(Paths.get(DEFAULT_STORAGE_DIRECTORY));","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"                Files.createFile(path);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"clement0010"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(path.toString()));","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"clement0010"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"clement0010"},"content":"                writer.append(tasks.getTask(i).getSaveFormat());","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"                writer.append(\u0027\\n\u0027);","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"clement0010"},"content":"            writer.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(\"Error writing to file: \" + path);","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"clement0010"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"clement0010"},"content":"        return !filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"clement0010":126}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" * A class that represents a task with deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"public class Deadline extends Task implements Sortable {","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private static final String DEFAULT_DATE_FORMAT \u003d \"dd MMMM yyyy HHmm\";","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    private static final String SAVE_FILE_DATE_FORMAT \u003d \"d/MM/yyyy HHmm\";","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    private final LocalDateTime dueBy;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * Creates a Deadline instance with a title and due date.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     * @param title The title of the deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     * @param dueBy The due date of the deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    public Deadline(String title, LocalDateTime dueBy) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        super(title, TaskType.DEADLINE);","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"        return this.dueBy;","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * Retrieves and parses the save format for deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @return The save format for deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the class return an invalid class type,","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"     * it will throw a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    public String getSaveFormat() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(SAVE_FILE_DATE_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        return String.format(\"%s | %s\", super.getSaveFormat(), this.dueBy.format(format));","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueBy.format(format));","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"clement0010":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":" * A class that represents an event with date.","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"public class Event extends Task implements Sortable {","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private static final String DEFAULT_DATE_FORMAT \u003d \"dd MMMM yyyy HHmm\";","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    private static final String SAVE_FILE_DATE_FORMAT \u003d \"d/MM/yyyy HHmm\";","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    private final LocalDateTime eventAt;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * Creates an Event instance with a title and event date.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     * @param title The title of the event.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     * @param eventAt The date of the event.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    public Event(String title, LocalDateTime eventAt) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        super(title, TaskType.EVENT);","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"        this.eventAt \u003d eventAt;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"        return this.eventAt;","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * Retrieves and parses the save format for event.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @return The save format for event","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the class return an invalid class type,","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"     * it will throw a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    public String getSaveFormat() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(SAVE_FILE_DATE_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        return String.format(\"%s | %s\", super.getSaveFormat(), this.eventAt.format(format));","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.eventAt.format(format));","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"clement0010":50}},{"path":"src/main/java/duke/task/Sortable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.task;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"public interface Sortable {","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"    public LocalDateTime getLocalDateTime();","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"clement0010":7}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":" * A class that represents a task.","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    private final String title;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     * Creates a Task instance with a title.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * @param title The title of the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public Task(String title, TaskType taskType) {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * Retrieves and parses the save format for task.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"     * @return The save format for event","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the class return an invalid class type,","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"     * it will throw a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"    public String getSaveFormat() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        String isDoneSymbol \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        return String.format(\"%s | %s | %s\", getClassSymbol(), isDoneSymbol, title);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"     * Retrieves the task class type and return the respective class symbol.","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"     * @return The respective subclasses symbol.","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the class return an invalid class type,","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"     * it will throw a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"    public String getClassSymbol() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"        assert this.taskType !\u003d TaskType.TASK : \"TaskType of Task should not appear here.\";","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"        case TODO:","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"            return \"T\";","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        case EVENT:","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"            return \"E\";","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"            return \"D\";","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"        default:","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(Messages.MESSAGE_ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"    public boolean hasKeywords(String keywords) {","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"        return this.title.contains(keywords);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"    public boolean hasSameTaskType(TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"        return this.getClassSymbol().equals(taskType.getTaskTypeSymbol());","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"        String stateIcon \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"        return String.format(\"[%s] %s\", stateIcon, this.title);","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"clement0010":80}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":" * A class that represents a task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"     * Marks a task in the task list as done or undone.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"     * @param taskId The id of the targeted task.","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"     * @param isDone The mark status of the targeted task.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the task id is out of the index bound,","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     * it throws a DukeException.","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    public void markTask(int taskId, boolean isDone) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        assert taskId \u003e 0 : \"Task id should be greater than 0\";","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"            if (isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"                tasks.get(taskId).markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"                tasks.get(taskId).markAsNotDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"     * Adds task into task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"     * @param task The given task.","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"        assert task !\u003d null : \"Cannot add empty task to task list\";","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"     * Filters task list based on the supplied keywords.","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"     * @param keyword The keywords to search for in the task list","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"     * @return A filtered task list based on the supplied keywords.","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"    public TaskList filterTasks(String keyword) {","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"        return new TaskList(this.tasks.stream().filter(task -\u003e task.hasKeywords(keyword))","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"                .collect(Collectors.toCollection(ArrayList::new)));","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"     * Filters task list based on the task type.","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"     * @param taskType The task type to be filtered.","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"     * @return A filtered and sortable task list based on the supplied task type.","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"    public TaskList filterTasks(TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"        ArrayList\u003cTask\u003e filteredTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"            if (task.hasSameTaskType(taskType)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"                // Only sortable task will make it through this block","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"                filteredTask.add(task);","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"        return new TaskList(filteredTask);","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"clement0010"},"content":"     * Filters sortable task list based on the task type.","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":"     * @param taskType The sortable task type to be filtered.","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"clement0010"},"content":"     * @return A filtered and sortable task list based on the supplied task type.","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"    public ArrayList\u003c? extends Sortable\u003e filterSortableTasks(TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"        ArrayList\u003cSortable\u003e filteredTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"            if (task.hasSameTaskType(taskType)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"                // Only sortable task will make it through this block","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"                filteredTask.add((Sortable) task);","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":"        return filteredTask;","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"     * Deletes a task object from the task list based on the id supplied.","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":"     * @param taskId The id of the targeted task.","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If the task id is out of the task list index range,","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"     * it throws a DukeException.","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"    public void deleteTask(int taskId) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"clement0010"},"content":"            assert taskId \u003e 0 : \"Task id should be greater than 0\";","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"            tasks.remove(taskId);","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"clement0010"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"clement0010"},"content":"    public Task getTask(int taskId) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"            assert taskId \u003e 0 : \"Task id should be greater than 0\";","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"            return this.tasks.get(taskId);","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"clement0010"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"clement0010"},"content":"     * Filters task list based on the task type.","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"clement0010"},"content":"     * @param taskType The class type in the task list","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"clement0010"},"content":"     * @return A filtered task list based on the supplied task type.","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"clement0010"},"content":"    public TaskList sortTasks(TaskType taskType) throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"clement0010"},"content":"        ArrayList\u003c? extends Sortable\u003e filteredTasks \u003d this.filterSortableTasks(taskType);","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"clement0010"},"content":"        if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"clement0010"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"clement0010"},"content":"            ArrayList\u003cDeadline\u003e deadlineTasks \u003d (ArrayList\u003cDeadline\u003e) filteredTasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"clement0010"},"content":"            return new TaskList(deadlineTasks.stream()","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"clement0010"},"content":"                .sorted(Comparator.comparing(Deadline :: getLocalDateTime))","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"clement0010"},"content":"                .collect(Collectors.toCollection(ArrayList::new)));","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"clement0010"},"content":"        if (taskType \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"clement0010"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"clement0010"},"content":"            ArrayList\u003cEvent\u003e eventTasks \u003d (ArrayList\u003cEvent\u003e) filteredTasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"clement0010"},"content":"            return new TaskList(eventTasks.stream()","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"clement0010"},"content":"                .sorted(Comparator.comparing(Event :: getLocalDateTime))","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"clement0010"},"content":"                .collect(Collectors.toCollection(ArrayList::new)));","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"clement0010"},"content":"        return new TaskList();","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"clement0010"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"clement0010"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":155}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.common.TaskType;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":" * A class that represents a todo.","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"     * Creates an Todo instance with a title.","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"     * @param title The title of the todo.","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    public Todo(String title) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"        super(title, TaskType.TODO);","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"clement0010":22}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package duke.ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import duke.common.Messages;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"public class TextUi {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     * Displays the welcome message.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * @return The welcome message of Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public static String showWelcome() {","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"        return showToUser(","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"                LOGO,","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"                Messages.MESSAGE_WELCOME,","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"                Messages.MESSAGE_PROMPT);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    public static String showExecutionMessage(String message) {","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"        return showToUser(message);","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"     * Displays the execution message.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     * @param message The execution message.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @param taskString The task object formatted in string.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"     * @return The formatted execution message.","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    public static String showExecutionMessage(String message, String taskString, int size) {","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"        String displaySize \u003d String.format(\"Now you have %s task%s in the list.\\n\", size, Parser.parseTaskSize(size));","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        return showToUser(message, taskString, displaySize);","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    public static String showError(String message) {","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"        return showToUser(message);","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"     * Displays the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"     * @return The formatted task list as a string message.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"     * @throws DukeException If tasks does not exist, it","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"     * throws a DukeExceptions.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"    public static String showTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        str.append(Messages.MESSAGE_FIND).append(\"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"            str.append(i + 1).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"        return str.toString();","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"     * Displays the input message to user.","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"     * @param messages The messages after command execution.","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"     * @return The formatted messages.","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"    public static String showToUser(String... messages) {","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"        for (String m : messages) {","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"            str.append(m);","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"        return str.toString();","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"clement0010":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"clement0010":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    public void testTaskSizeParser_emptyString() {","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"        assertEquals(\"\", Parser.parseTaskSize(1));","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    public void testTaskFileFormat() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"        Task task \u003d new Todo(\"Todo Test\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"        assertEquals(\"T | 0 | Todo Test\", task.getSaveFormat());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"clement0010":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"event project meeting /at 2/12/2019 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"delete 3","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"clement0010":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clement0010":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clement0010":1,"-":37}}]
