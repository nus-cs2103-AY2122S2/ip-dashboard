[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the duke.output:","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":1,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"expected duke.output","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"teominghuang":1,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.command.Commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":" * Represents the main program of a bot named DockerHawker. The main program is represented","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":" * by a \u003ccode\u003eUi\u003c/code\u003e object, a \u003ccode\u003eTaskList\u003c/code\u003e object, and a \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" * These objects serve to facilitate, parse, and execute valid inputs provided by the user","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"public class Duke {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * Constructor for the creation of a Duke class instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * @param databasePath Contains a String containing the path to the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    public Duke(String databasePath) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        storage \u003d new Storage(databasePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"            ui.showsLoadingError();","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * This method forms the bulk of the program, facilitating and directing the","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * program into different directories. It starts off by welcoming the user,","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * then receiving valid inputs from them via the CLI. These inputs are then","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     * parsed, converted into commands, executed, and whose end results are then","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     * evaluated. If the user passes \u0027bye\u0027 into the terminal, the program terminates.","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public void run() {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        ui.welcomeUser();","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"\");","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"                // System.out.println(\"1\");","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"                // System.out.println(\"2\");","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"                // System.out.println(\"3\");","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"                Commands c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"                // System.out.println(\"4\");","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"                // System.out.println(\"5\");","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"                // System.out.println(\"6\");","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"            } catch (NoSuchElementException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"                ui.showError(\"Run Error \" + err.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"            } finally {","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"                ui.showLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"        ui.closePrinter();","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"     * Initiate the main program, which facilitates and brings DockerHawker to life.","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"     * @param args Arguments received from the user through the CLI terminal.","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"        //new Duke(\"./src/main/java/duke/data/DukeDatabase.txt\").run();","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"        new Duke(\"C:/Users/benny/Desktop/Y2S2/CS2103T_Software_Engineer/\"","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"                + \"Individual_Project/src/main/java/duke/data/DukeDatabase.txt\").run();","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"teominghuang":81,"-":1}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.task.Events;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" * Represents a command generalised for the addition of tasks. A \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":" * a command represented by the input command and the arguments by the user e.g., \u003ccode\u003etodos, Eat a cake.\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"public class AddCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"            \"    \u0027Add\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    private final String commandWord;","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    private final String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * @param commandWord","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @param arguments","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    public AddCommand(String commandWord, String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"     * Executes the creation of a \u003ccode\u003eTasks\u003c/code\u003e object to add into the","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"     * database. If the creation is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"     * a success message is returned, else one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e createdTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"            switch (commandWord) {","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"                createdTaskList.add(new Todos(arguments));","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"                createdTaskList.add(new Events(arguments.split(\" /at \", 2)[0],","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"                        arguments.split(\" /at \", 2)[1]));","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"                createdTaskList.add(new Deadlines(arguments.split(\" /by \", 2)[0],","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"                        arguments.split(\" /by \", 2)[1]));","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"            default:","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"            if (createdTaskList.size() \u003e 0) {","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"                if (tasks.addsTask(createdTaskList.get(0), storage)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"                    return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"            System.out","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"                    .println(\"    Addition of tasks unsuccessful, \"","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"                            + \"ensure that you are writing in the correct format.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"            System.out","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"                    .println(","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"                            \"    Addition of tasks unsuccessful, ensure that the date is valid, \"","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"                                    + \"and goes by the format of (YYYY-MM-DD).\");","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":103}},{"path":"src/main/java/duke/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents the completion status of the \u003ccode\u003eCommands\u003c/code\u003e. A \u003ccode\u003eCommandResult\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * corresponds to a result represented by a string e.g., \u003ccode\u003e\"Command successful!\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"public class CommandResult {","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"    private final String commandResult;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    public CommandResult(String commandResult) {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"        this.commandResult \u003d commandResult;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"     * Returns the result after execution of the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"     * @return result executing the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        return commandResult;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":22}},{"path":"src/main/java/duke/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a general blueprint for a Command. A \u003ccode\u003eCommands\u003c/code\u003e is a command","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * blueprint for creation of future commands.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"public class Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     * Acts as a blueprint method meant to be overrode by future sub-classes that dictates purpose of the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * If the command is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message is returned, else","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     * one containing a failure message will be returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        throw new UnsupportedOperationException(\"    This method is to be implemented by child classes\");","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":39}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command used for the deletion of tasks. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * a command and is represented by the input arguments from the user e.g., \u003ccode\u003e\"1\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"public class DeleteCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"delete\";","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027Delete\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * Executes the deletion of a \u003ccode\u003eTasks\u003c/code\u003e object to remove from the","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * database. If the creation is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * a success message is returned, else one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"            String trimmedArgument \u003d arguments.trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            tasks.deletesTask((Integer.parseInt(trimmedArgument) - 1), storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Deleting of tasks unsuccessful due to: \" + err);","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to end the program. An \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * a command that exits the program.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"public class ExitCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"bye\";","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027Bye\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        System.out.println(\"    Hope to see you again soon :(\");","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        System.out.println(\"    Let\u0027s play video game the next time!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * Executes the ending of the program. If the program termination is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * containing a success message is returned. In this case, a success_message is always returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":43}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" *","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"public class FindCommand extends Commands {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"find\";","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027Find\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private final String arguments;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * Executes the querying of a \u003ccode\u003eTasks\u003c/code\u003e object that contains a specific keyword.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * If the creation is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * is returned, else one containing a failrue message will be returned.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        System.out.println(tasks.queryTasks(arguments));","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":48}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command that prompt user to enter a valid command. A \u003ccode\u003eHelpCommand\u003c/code\u003e object","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * corresponds to a command that prompts and educate the user valid commands of the bot.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"public class HelpCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"help\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027Help\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     * Executes a \u003cCode\u003eHelpCommand\u003c/Code\u003e. When the command is executed, the user is prompted","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * to type a valid command, and introduce them to valid commands of the bot.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        System.out.println(\"    Did you accidentally write an incorrect duke.command.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":43}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to list \u003ccode\u003eTasks\u003c/code\u003e within the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to a command that returns","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * tasks registered by the user during their previous use.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class ListCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"list\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027List\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * Executes the printing of all the \u003ccode\u003eTasks\u003c/code\u003e registered by the users during their","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * previous use. If the command is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * a success message is returned, else one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        if (tasks.printFileContent() \u003d\u003d Boolean.TRUE) {","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Failed to print database content\");","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":49}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to mark the completion of a \u003ccode\u003eTasks\u003c/code\u003e object.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eMarkCommand\u003c/code\u003e object corresponds to a command represented by the","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * input arguments from the user e.g., \u003ccode\u003e\"1\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class MarkCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"mark\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027Mark\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private final String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * Executes the completion of a \u003ccode\u003eTasks\u003c/code\u003e object. If the edit is successful,","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message is returned, else","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"            String trimmedArgument \u003d arguments.trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            if (tasks.marksTask(storage, (Integer.parseInt(trimmedArgument) - 1), true)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"                return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Marking of tasks unsuccessful due to: \" + err);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":57}},{"path":"src/main/java/duke/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"public class SearchCommand {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":5}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to un-complete a \u003ccode\u003eTasks\u003c/code\u003e object. A \u003ccode\u003eUnmarkCommand\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * object corresponds to a command represented by the input arguments from the","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * user e.g., \u003ccode\u003e\"1\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class UnmarkCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"unmark\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027Unmark\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private final String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * Edit and un-complete a \u003ccode\u003eTasks\u003c/code\u003e object. If the edit is successful,","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message is returned, else","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"            String trimmedArgument \u003d arguments.trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            if (tasks.marksTask(storage, (","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"                    Integer.parseInt(trimmedArgument) - 1), false)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"                return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Unmarking of tasks unsuccessful due to: \"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"                    + err);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":59}},{"path":"src/main/java/duke/data/DukeDatabase.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T |   | Eat a burger during lunch","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"D |   | Finish Tennis training | 2020-06-03","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"E | X | Go for Thriftbusu\u0027s new exhibit | 10 February 2022, 8pm","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"E | X | run a marathon | 2020-06-03","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"D |   | run a marathon2 | 2020-06-03","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"teominghuang":5}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":7}},{"path":"src/main/java/duke/output/output.txt/production/Individual_Project/data/DukeDatabase.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T | X | hello my name is ben","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"E |   | hello you are so cool | 2012-03-03","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":2}},{"path":"src/main/java/duke/output/output.txt/production/main/duke/data/DukeDatabase.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T |   | hello my name is ben","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"E | X | hello you are so cool | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T |   | hello my name is ben","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/main/java/duke/output/output.txt/test/test/duke/data/DukeDatabaseStub.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/main/java/duke/output/output.txt/test/test/duke/data/PrintDatabaseStub.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"E |   | Event over | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"D |   | Deadline over | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T | X | Database loaded successfullyT","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.command.Commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":" * Represents a parser that makes sense of the command provided by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eParserTest\u003c/code\u003e corresponds to a parsing tool whose method can be","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":" * used universally to make sense of a user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"public class Parser {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     * Returns the command based on the input of the user. If the command is","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     * not valid, it returns a \u003ccode\u003eHelpCommand\u003c/code\u003e, else it returns one","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     * that has specific execution instructions that prompt and guide the bot","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * towards specific execution, actions, and behaviours..","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * @param fullCommand The input provided by the user using the CLI.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     * @return the specific command generated by the user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    public static Commands parse(String fullCommand) {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        StringBuilder arguments \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        fullCommand \u003d fullCommand.trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        String commandWord \u003d fullCommand.split(\" \", 2)[0].trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        if (fullCommand.split(\" \", 2).length \u003e 1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"            arguments.append(fullCommand.split(\" \", 2)[1].trim());","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        case AddCommand.COMMAND_TODO:","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"        case AddCommand.COMMAND_EVENT:","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        case AddCommand.COMMAND_DEADLINE:","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"            return new AddCommand(commandWord,","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"                    arguments.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        case ExitCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        case ListCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"        case MarkCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"            return new MarkCommand(arguments.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        case UnmarkCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"            return new UnmarkCommand(arguments.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"        case DeleteCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"            return new DeleteCommand(arguments.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"        case FindCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"            return new FindCommand(arguments.toString().split(\" \")[0]);","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"        default:","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":78}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.File;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.task.Events;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":" * Represents a storage tool in-charge of reading, writing and appendign to the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e is further represented by the databasePath that allows and","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":" * facilitate connection to the database file e.g., \u003ccode\u003e\"./src/database.txt\"\u003c/code\u003e.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"public class Storage {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    private final String databasePath;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    public Storage(String databasePath) {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"        this.databasePath \u003d databasePath;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * Returns a boolean based on whether the database was successfully re-written.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     * If the method executed successfully, it returns true, else it returns false.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * @param textToAdd Text that will re-write the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * @return a boolean value indicating the success of writing to the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @throws FileNotFoundException If database file can not be found.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    public boolean writesToDatabase(String textToAdd) throws FileNotFoundException {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"            FileWriter fw \u003d new FileWriter(this.databasePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"            fw.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"            return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    An unexpected error writing to the database.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"     * Returns a boolean based on whether the database was successfully appended.","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     * If the method executed successfully, it returns true, else it returns false.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"     * @param textToAppend Text that will re-write the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"     * @return a boolean value indicating the success of writing to the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"     * @throws FileNotFoundException If database file can not be found.","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"     * @throws IOException If writing to the database was unsuccessful.","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    public boolean appendsToDatabase(String textToAppend) throws IOException {","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"            FileWriter fw \u003d new FileWriter(databasePath, true); // Append instead of rewriting over","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"            fw.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"            return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    An unexpected error appending to the database file.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"     * Returns an arraylist of all the \u003ccode\u003eTasks\u003c/code\u003e stored within the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     * If the method is successful, it will return an arraylist with \u003ccode\u003eTasks\u003c/code\u003e,","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"     * else it returns one that is empty.","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"     * @return an arraylist with all the Tasks stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"     * @throws FileNotFoundException if database file cannot be found.","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"    ArrayList\u003cTasks\u003e returnsAllTasks() throws FileNotFoundException {","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e taskList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"            File f \u003d new File(databasePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"                String taskData \u003d sc.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"                String[] taskDataSplit \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"                switch (taskDataSplit[0]) {","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"                case \"T\":","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"                    taskList.add(new Todos(taskDataSplit[2],","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"                            taskDataSplit[1].equals(\"X\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"                    break;","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"                case \"E\":","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"                    taskList.add(new Events(taskDataSplit[2],","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"                            taskDataSplit[1].equals(\"X\"),","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"                                    taskDataSplit[3]));","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"                    break;","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"                case \"D\":","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"                    taskList.add(new Deadlines(taskDataSplit[2],","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"                            taskDataSplit[1].equals(\"X\"),","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"                                    taskDataSplit[3]));","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"                    break;","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"teominghuang"},"content":"                default:","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"teominghuang"},"content":"                    break;","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"teominghuang"},"content":"                }","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"            sc.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    The database got corrupted by unrecognisable file formats.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"teominghuang"},"content":"        return taskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"teominghuang"},"content":"     * Load all the \u003ccode\u003eTasks\u003c/code\u003e from the database using other methods.","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"teominghuang"},"content":"     * Returns an arraylist of all the \u003ccode\u003eTasks\u003c/code\u003e stored within the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"     * If the method is successful, it will return an arraylist with \u003ccode\u003eTasks\u003c/code\u003e,","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"teominghuang"},"content":"     * else it returns one that is empty.","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"teominghuang"},"content":"     * @return an arraylist with all the Tasks stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"teominghuang"},"content":"     * @throws FileNotFoundException if database file cannot be found.","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"teominghuang"},"content":"    public ArrayList\u003cTasks\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-02-04"},{"lineNumber":125,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e taskList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"teominghuang"},"content":"            taskList.addAll(returnsAllTasks());","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException error) {","lastModifiedDate":"2022-02-04"},{"lineNumber":129,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Database loading failed.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"teominghuang"},"content":"        return taskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":132,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"teominghuang"},"content":"    public String getDatabasePath() {","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"teominghuang"},"content":"        return databasePath;","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":137}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" * Represents a deadline created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eDeadlines\u003c/code\u003e inherits from \u003ccode\u003eTasks\u003c/code\u003e and is represented by its","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * name, completion status, and the deadline of the event e.g.,","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * \u003ccode\u003e\"Eat lunch\", true, \"2012-06-03\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class Deadlines extends Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    private final LocalDate deadline; // Deadline to complete deadline duke.task","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"     * @param deadline","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    public Deadlines(String taskName, String deadline) throws DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"        super(taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     * @param completion","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     * @param deadline","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    public Deadlines(String taskName, boolean completion, String deadline) throws DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        super(taskName, completion);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    // Get deadline of duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        return \"(by: \" + deadline + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"    public Deadlines completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        return new Deadlines(super.getName(), true,","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"                deadline.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"    public Deadlines uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"        return new Deadlines(super.getName(), false,","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"                deadline.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"    // Save to database format","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"        return \"D | \" + (this.getCompletion() ? \"X\" : \" \") + \" | \"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"                + super.getName() + \" | \" + deadline + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"    // toString returning duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"        return \"[D][\" + (this.getCompletion() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"                + super.getName() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":87}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents an event created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * An \u003ccode\u003eEvents\u003c/code\u003e inherits from \u003ccode\u003eTasks\u003c/code\u003e and is represented by its","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" * name, completion status, and timing of the event e.g.,","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" * \u003ccode\u003e\"Eat lunch\", true, \"9am\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"public class Events extends Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    private final String timing; // Timing of event","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"     * @param timing","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    public Events(String taskName, String timing) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"        super(taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * @param completion","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * @param timing","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    public Events(String taskName, boolean completion, String timing) {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        super(taskName, completion);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    // Get timing of event","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        return \"(at: \" + timing + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    public Events completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        return new Events(super.getName(), true, timing);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    public Events uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        return new Events(super.getName(), false, timing);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    // Format of saving to database","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"        return \"E | \" + (this.getCompletion() ? \"X\" : \" \")","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"                + \" | \" + super.getName() + \" | \" + timing + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    // toString returning event","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"        return \"[E][\" + (this.getCompletion() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"                + super.getName() + \" (at: \" + timing + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":77}},{"path":"src/main/java/duke/task/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents a task created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eTasks\u003c/code\u003e is represented by its name and completion status e.g.,","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" * \u003ccode\u003e\"Eat breakfast by 9am\", true\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"public class Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    private final String name; // Name of duke.task","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    private boolean hasCompleted; // Completion of duke.task","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    // Constructor for Task","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    public Tasks(String taskName) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"        this.name \u003d taskName;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * @param completion","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    public Tasks(String taskName, boolean completion) {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        this.name \u003d taskName;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d completion;","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    public Tasks completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        return new Tasks(name, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public Tasks uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        return new Tasks(name, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"    // Get timing of duke.task - overriden in todos and events","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    // Get timing of duke.task - overriden in todos and events","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"    // Get name of duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"    public String getName() {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        return this.name;","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"    // Get completion status of the duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    Boolean getCompletion() {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"        return this.hasCompleted;","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"    // toString return tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":78}},{"path":"src/main/java/duke/task/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents a Todo task created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e inherits from \u003ccode\u003eTasks\u003c/code\u003e and is represented by its","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" * name, and completion status e.g.,\u003ccode\u003e\"Eat dinner\", true\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"public class Todos extends Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    // Constructor of Todos","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    public Todos(String taskName) {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"        super(taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public Todos(String taskName, boolean completion) {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"        super(taskName, completion);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    public Todos completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        return new Todos(super.getName(), true);","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    public Todos uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        return new Todos(super.getName(), false);","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        return \"T | \" + (super.getCompletion() ? \"X\" : \" \")","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"                + \" | \" + super.getName() + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        return \"[T][\" + (this.getCompletion() ? \"X\" : \" \")","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"                + \"] \" + super.getName();","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":56}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.tasklist;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.task.Events;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":" *","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"public class TaskList {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private ArrayList\u003cTasks\u003e taskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     * @param taskList","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    public TaskList(ArrayList\u003cTasks\u003e taskList) {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"        this.taskList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        this.taskList.addAll(taskList);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        this.taskList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    // Maybe can abstract out the printing portion","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * @param query","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    public String queryTasks(String query) {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e unfilteredTasks \u003d new ArrayList\u003cTasks\u003e(taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e filteredTasks \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        StringBuilder sb1 \u003d new StringBuilder(\"    Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"            for (int i \u003d 0; i \u003c unfilteredTasks.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"                String taskName \u003d unfilteredTasks.get(i).getName();","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"                String[] taskNameSplit \u003d taskName.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"                for (int j \u003d 0; j \u003c taskNameSplit.length; j++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"                    if (taskNameSplit[j].equals(query)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"                        filteredTasks.add(unfilteredTasks.get(i));","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"                        break;","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"                sb1.append(\"      \").append(i + 1).append(\". \")","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"                        .append(filteredTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"            sb1.append(\"\\n    Congratulations! We found \").append(filteredTasks.size())","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"                            .append(\" results that may interest you! :)\");","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Don\u0027t access a task \"","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"                    + \"beyond the numeral boundary.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"        return sb1.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"    // Delete duke.task -\u003e returns duke.task deleted, then returns string to append","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"     * Initiate the main bulk of adding a task from the user input into the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"     * If this is successful, it will return a boolean value of True.","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"     * @param task Task to be added to the database","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"     * @param storage Storage that facilitate writing of Task into the database","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"     * @return returns a boolean value of the success of adding a task","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"    public Boolean addsTask(Tasks task, Storage storage) {","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"            if (storage.appendsToDatabase(task.toDatabaseString())) {","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"                this.taskList.add(task);","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"    Task has been successfully added:\");","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"       \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"    There are \"","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"                        + fileContentCounter() + \" tasks in the list.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"                return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Addition of tasks unsuccessful due to: \" + err);","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"     * This method helps to facilitate the marking of a task as completed. If this is","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"     * success in marking the task, a boolean value of true will be returned. Else,","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"     * it returns false.","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"     * @param storage Storage that facilitate writing of Task into the database","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"     * @param taskIndexToMark Index of task to be marked in the database","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"     * @param taskCompletion A boolean value indicating whether to mark it as completed or not","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"     * @return returns a boolean value indicative of the success of marking a task","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"teominghuang"},"content":"    public Boolean marksTask(Storage storage, int taskIndexToMark, boolean taskCompletion) {","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e newList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"teominghuang"},"content":"        StringBuilder sb1 \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"teominghuang"},"content":"            newList.addAll(this.taskList);","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"            Tasks editTask \u003d newList.get(taskIndexToMark);","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"            if (taskCompletion) {","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"teominghuang"},"content":"                newList.set(taskIndexToMark, editTask.completeTask());","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"teominghuang"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"teominghuang"},"content":"                newList.set(taskIndexToMark, editTask.uncompleteTask());","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":117,"author":{"gitId":"teominghuang"},"content":"            for (int i \u003d 0; i \u003c newList.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"                sb1.append(newList.get(i).toDatabaseString());","lastModifiedDate":"2022-02-04"},{"lineNumber":119,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":120,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":121,"author":{"gitId":"teominghuang"},"content":"            if (storage.writesToDatabase(sb1.toString())) {","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"teominghuang"},"content":"                this.taskList.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":123,"author":{"gitId":"teominghuang"},"content":"                this.taskList.addAll(newList);","lastModifiedDate":"2022-02-04"},{"lineNumber":124,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"     Nice! I\u0027ve \" + (taskCompletion","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"teominghuang"},"content":"                        ? \"marked this duke.task as completed\"","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"teominghuang"},"content":"                        : \"unmarked this duke.task as uncompleted\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":127,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"     \" + (taskCompletion","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"teominghuang"},"content":"                        ? editTask.completeTask().toString()","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"teominghuang"},"content":"                        : editTask.uncompleteTask().toString()));","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"teominghuang"},"content":"                return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":132,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Task index out of bound while marking duke.task.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":134,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Marking of tasks unsuccessful due to: \" + err);","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":137,"author":{"gitId":"teominghuang"},"content":"        return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":138,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":140,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":141,"author":{"gitId":"teominghuang"},"content":"     * This method helps to facilitate the deletion of a task. If this is","lastModifiedDate":"2022-02-07"},{"lineNumber":142,"author":{"gitId":"teominghuang"},"content":"     * successful in deleting the task, a boolean value of true will be returned. Else,","lastModifiedDate":"2022-02-07"},{"lineNumber":143,"author":{"gitId":"teominghuang"},"content":"     * false is returned.","lastModifiedDate":"2022-02-07"},{"lineNumber":144,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":145,"author":{"gitId":"teominghuang"},"content":"     * @param taskIndexToDelete Index of task to be deleted in the database","lastModifiedDate":"2022-02-07"},{"lineNumber":146,"author":{"gitId":"teominghuang"},"content":"     * @param storage Storage that facilitate writing of Task into the database","lastModifiedDate":"2022-02-07"},{"lineNumber":147,"author":{"gitId":"teominghuang"},"content":"     * @return a boolean value indicative of the success of marking a task","lastModifiedDate":"2022-02-07"},{"lineNumber":148,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":149,"author":{"gitId":"teominghuang"},"content":"    public ArrayList\u003cTasks\u003e deletesTask(int taskIndexToDelete, Storage storage) {","lastModifiedDate":"2022-02-07"},{"lineNumber":150,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e newList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":151,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e returnInfo \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":152,"author":{"gitId":"teominghuang"},"content":"        StringBuilder sb1 \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":153,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":154,"author":{"gitId":"teominghuang"},"content":"            newList.addAll(this.taskList);","lastModifiedDate":"2022-02-04"},{"lineNumber":155,"author":{"gitId":"teominghuang"},"content":"            Tasks deletedTask \u003d newList.get(taskIndexToDelete);","lastModifiedDate":"2022-02-04"},{"lineNumber":156,"author":{"gitId":"teominghuang"},"content":"            newList.remove(taskIndexToDelete);","lastModifiedDate":"2022-02-04"},{"lineNumber":157,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":158,"author":{"gitId":"teominghuang"},"content":"            for (int i \u003d 0; i \u003c newList.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":159,"author":{"gitId":"teominghuang"},"content":"                sb1.append(newList.get(i).toDatabaseString());","lastModifiedDate":"2022-02-04"},{"lineNumber":160,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":161,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":162,"author":{"gitId":"teominghuang"},"content":"            if (storage.writesToDatabase(sb1.toString())) {","lastModifiedDate":"2022-02-04"},{"lineNumber":163,"author":{"gitId":"teominghuang"},"content":"                returnInfo.add(this.taskList.get(taskIndexToDelete));","lastModifiedDate":"2022-02-04"},{"lineNumber":164,"author":{"gitId":"teominghuang"},"content":"                this.taskList.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":165,"author":{"gitId":"teominghuang"},"content":"                this.taskList.addAll(newList);","lastModifiedDate":"2022-02-04"},{"lineNumber":166,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"    I have successfully removed \"","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"teominghuang"},"content":"                        + \"the duke.task from the system:\");","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"teominghuang"},"content":"                System.out.println(\"       \" + deletedTask.toString() + \"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":169,"author":{"gitId":"teominghuang"},"content":"                System.out.println(","lastModifiedDate":"2022-02-04"},{"lineNumber":170,"author":{"gitId":"teominghuang"},"content":"                        String.format(\"    You have \"","lastModifiedDate":"2022-02-07"},{"lineNumber":171,"author":{"gitId":"teominghuang"},"content":"                                + \"%s tasks left in your list. :)\", fileContentCounter()));","lastModifiedDate":"2022-02-07"},{"lineNumber":172,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":173,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":174,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Task index out of bound \"","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"teominghuang"},"content":"                    + \"while deleting duke.task.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":177,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    Deleting of tasks unsuccessful due to: \" + err);","lastModifiedDate":"2022-02-04"},{"lineNumber":178,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":179,"author":{"gitId":"teominghuang"},"content":"        return returnInfo;","lastModifiedDate":"2022-02-04"},{"lineNumber":180,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":181,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":182,"author":{"gitId":"teominghuang"},"content":"    // Print file content method","lastModifiedDate":"2022-02-04"},{"lineNumber":183,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":184,"author":{"gitId":"teominghuang"},"content":"     * This method returns the number of tasks in the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":185,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":186,"author":{"gitId":"teominghuang"},"content":"     * @return Number of Tasks in the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":187,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":188,"author":{"gitId":"teominghuang"},"content":"    public int fileContentCounter() {","lastModifiedDate":"2022-02-04"},{"lineNumber":189,"author":{"gitId":"teominghuang"},"content":"        return taskList.size();","lastModifiedDate":"2022-02-04"},{"lineNumber":190,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":191,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":192,"author":{"gitId":"teominghuang"},"content":"    // Print file content method","lastModifiedDate":"2022-02-04"},{"lineNumber":193,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":194,"author":{"gitId":"teominghuang"},"content":"     * This methods help to faciltiate the printing of all the Tasks within the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":195,"author":{"gitId":"teominghuang"},"content":"     * If this method is successful, it will return a boolean value of true, else false is returned.","lastModifiedDate":"2022-02-07"},{"lineNumber":196,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":197,"author":{"gitId":"teominghuang"},"content":"     * @return a boolean value indicative of the success of marking a task","lastModifiedDate":"2022-02-07"},{"lineNumber":198,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":199,"author":{"gitId":"teominghuang"},"content":"    public Boolean printFileContent() {","lastModifiedDate":"2022-02-04"},{"lineNumber":200,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":201,"author":{"gitId":"teominghuang"},"content":"            StringBuilder sb1 \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":202,"author":{"gitId":"teominghuang"},"content":"            sb1.append(\"    Here are the tasks in your list:\" + \"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":203,"author":{"gitId":"teominghuang"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":204,"author":{"gitId":"teominghuang"},"content":"                sb1.append(\"       \" + (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":205,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":206,"author":{"gitId":"teominghuang"},"content":"            sb1.append(String.format(\"\\n    You have \"","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"teominghuang"},"content":"                    + \"%s tasks in your list! :)\", fileContentCounter()));","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"teominghuang"},"content":"            System.out.println(sb1.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":209,"author":{"gitId":"teominghuang"},"content":"            return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":210,"author":{"gitId":"teominghuang"},"content":"        } catch (OutOfMemoryError err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":211,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"Out of Memory Error printing file content: \" + err);","lastModifiedDate":"2022-02-04"},{"lineNumber":212,"author":{"gitId":"teominghuang"},"content":"            return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":213,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":214,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":215,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":216,"author":{"gitId":"teominghuang"},"content":"    // Print file content method - accept only T, E, and D for tasks","lastModifiedDate":"2022-02-04"},{"lineNumber":217,"author":{"gitId":"teominghuang"},"content":"    ArrayList\u003cTasks\u003e filterTasks(String taskType) {","lastModifiedDate":"2022-02-04"},{"lineNumber":218,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e filteredList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":219,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":220,"author":{"gitId":"teominghuang"},"content":"            Tasks currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-02-04"},{"lineNumber":221,"author":{"gitId":"teominghuang"},"content":"            if (taskType.equals(\"T\") \u0026\u0026 currentTask instanceof Todos) {","lastModifiedDate":"2022-02-04"},{"lineNumber":222,"author":{"gitId":"teominghuang"},"content":"                filteredList.add(currentTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":223,"author":{"gitId":"teominghuang"},"content":"            } else if (taskType.equals(\"E\") \u0026\u0026 currentTask instanceof Events) {","lastModifiedDate":"2022-02-04"},{"lineNumber":224,"author":{"gitId":"teominghuang"},"content":"                filteredList.add(currentTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":225,"author":{"gitId":"teominghuang"},"content":"            } else if (taskType.equals(\"D\") \u0026\u0026 currentTask instanceof Deadlines) {","lastModifiedDate":"2022-02-04"},{"lineNumber":226,"author":{"gitId":"teominghuang"},"content":"                filteredList.add(currentTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":227,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":228,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":229,"author":{"gitId":"teominghuang"},"content":"        return filteredList;","lastModifiedDate":"2022-02-04"},{"lineNumber":230,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":231,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":231}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"public class Ui {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"    private static final String HYPHENATE \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    public Ui() {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    // BASIC COMMANDS","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public String returnBorderSpace() {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"        return \"    \";","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public String returnUserSpace() {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        return \"       \";","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * @param message","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        System.out.println(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    public void showLine() {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        System.out.println(returnBorderSpace()","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    public String wrapsBorder(String toWrap) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        return HYPHENATE + toWrap + HYPHENATE;","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public void welcomeUser() {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        showLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"        System.out.println(returnBorderSpace()","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"                + \"Hello! I\u0027m DockerHawker\\n    I am your personal assistant! what can I do for you?\");","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        showLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"    public String readCommand() {","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        String command \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"        System.out.println(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"        if (sc.hasNextLine()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"            command \u003d sc.nextLine().trim();","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        return command;","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"    public void closePrinter() {","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"        sc.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"    public void showsLoadingError() {","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"        System.out.println(returnUserSpace()","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"                + \"There seems to be an error loading your duke.task\");","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":80}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"// Format of testing -\u003e WhatIsTested_descriptionOfTestInputs_ExpectedOutcome","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"// Testing .assertEquals(Expected, actual)","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"public class DukeTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    void dummyTest() {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":15}},{"path":"src/test/java/duke/data/DukeDatabaseStub.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/test/java/duke/data/PrintDatabaseStub.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"E |   | Event over | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"D |   | Deadline over | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T | X | Database loaded successfullyT","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.parser;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    void parse_normalInput_writtenCorrectly() {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        String inputString \u003d \"todo Eat my breakfast\";","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof AddCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"event Eat my lunch /at 2012-06-03\";","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof AddCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"todo Eat my dinner /by 2012-06-03\";","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof AddCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"bye\";","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof ExitCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"list\";","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof ListCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"mark 1\";","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof MarkCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"unmark 1\";","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof UnmarkCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"delete 1\";","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof DeleteCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"ist a new day\";","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof HelpCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    void parse_emptyInput_helpCommandInitiated() {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        String inputString \u003d \" \";","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof HelpCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":52}},{"path":"src/test/java/duke/storage/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.task.Events;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     * @param databasePath","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    public StorageStub(String databasePath) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        super(\"C:/Users/benny/Desktop/Y2S2/CS2103T_Software_Engineer/\"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"                + \"Individual_Project/src/test/java/duke/data/DukeDatabaseStub.txt\");","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    public StorageStub() {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"        super(\"C:/Users/benny/Desktop/Y2S2/CS2103T_Software_Engineer/\"","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"                + \"Individual_Project/src/test/java/duke/data/DukeDatabaseStub.txt\");","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    public ArrayList\u003cTasks\u003e preloadTaskList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Todos(\"Todo over\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Events(\"Events over\", \"2012-03-03\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Deadlines(\"Deadlines over\", \"2012-03-03\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Todos(\"Testing\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        return taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    // Erase and rewrite to file method","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public boolean writesToDatabase(String textToAdd) {","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            FileWriter fw \u003d new FileWriter(super.getDatabasePath());","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"            fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"            return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    An unexpected error writing to the database.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    // Append to file method","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"    public boolean appendsToDatabase(String textToAppend) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"            FileWriter fw \u003d new FileWriter(super.getDatabasePath(), true); // Append instead of rewriting over","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"            fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"            return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"            System.out.println(\"    An unexpected error appending to the database file.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":71}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.tasklist;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import duke.storage.StorageStub;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"// Format of testing -\u003e WhatIsTested_descriptionOfTestInputs_ExpectedOutcome","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"// Testing .assertEquals(Expected, actual)","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"public class TaskListTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    void addsTask_writtenCorrectly_success () {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"            Storage crudDatabase \u003d new StorageStub(","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"                    \"./data/DukeDatabaseStub.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"            ArrayList\u003cTasks\u003e oldStorageList \u003d crudDatabase.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"            int oldStorageListSize \u003d oldStorageList.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"            TaskList addTaskList \u003d new TaskList(oldStorageList);","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"            Tasks addTask \u003d new Todos(\"Testing Addition\");","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"            addTaskList.addsTask(addTask, crudDatabase);","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"            ArrayList\u003cTasks\u003e newStorageList \u003d crudDatabase.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"            assertEquals(oldStorageListSize + 1, newStorageList.size());","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"            fail(\"Database loading failed. Test failed testing addTask.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    void deletesTask_writtenCorrectly_success() {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"            Storage crudDatabase \u003d new StorageStub(","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"                    \"./src/test/java/duke/data/DukeDatabaseStub.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"            ArrayList\u003cTasks\u003e oldStorageList \u003d crudDatabase.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"            if (oldStorageList.size() \u003e 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"                TaskList addTaskList \u003d new TaskList(oldStorageList);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"                Tasks addTask \u003d new Todos(\"Testing Addition\");","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"                addTaskList.deletesTask(0, crudDatabase);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"                ArrayList\u003cTasks\u003e newStorageList \u003d crudDatabase.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"                assertEquals(oldStorageList.size() - 1, newStorageList.size());","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"                TaskList addTaskList \u003d new TaskList(oldStorageList);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"                Tasks addTask \u003d new Todos(\"Testing Addition\");","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                addTaskList.addsTask(addTask, crudDatabase);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"                deletesTask_writtenCorrectly_success();","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"            fail(\"Database loading failed. Test failed testing deletesTask.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"    void fileContentCounter_writtenCorrectly_success () {","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"        TaskList printTaskList \u003d new TaskList(new StorageStub().preloadTaskList());","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"        assertEquals (4 , printTaskList.fileContentCounter());","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    void printFileContent_writtenCorrectly_success () {","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"        TaskList printTaskList \u003d new TaskList(new StorageStub().preloadTaskList());","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"        assertEquals(true, printTaskList.printFileContent());","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"todo read book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"todo join sports club","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"mark 4","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"blah","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"todo","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"teominghuang":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"REM delete duke.output from previous run","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"REM run the program, feed commands from input.txt file and redirect the duke.output to the ACTUAL.TXT","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"REM compare the duke.output to the expected duke.output","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":3,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"# delete duke.output from previous run","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"# run the program, feed commands from input.txt file and redirect the duke.output to the ACTUAL.TXT","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"# compare the duke.output to the expected duke.output","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":3,"-":35}}]
