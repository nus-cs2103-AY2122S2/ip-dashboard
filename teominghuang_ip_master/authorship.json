[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the duke.output:","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"javafx {","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    version \u003d \"17\"","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    modules \u003d [ \u0027javafx.controls\u0027,","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"                \u0027javafx.graphics\u0027,","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"                \u0027javafx.fxml\u0027]","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    mainClassName \u003d \"duke.Main\"","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":24,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"expected duke.output","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"teominghuang":1,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.controller.DialogBox;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"import duke.command.Commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":" * Represents the main program of a bot named DockerHawker. The main program is represented","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":" * by a \u003ccode\u003eUi\u003c/code\u003e object, a \u003ccode\u003eTaskList\u003c/code\u003e object, and a \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":" * These objects serve to facilitate, parse, and execute valid inputs provided by the user","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"public class Duke {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    public Duke() {","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    public String getResponse(String inputCommand) {","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        Commands c \u003d Parser.parse(inputCommand);","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        return c.execute(tasks, ui, storage).toString();","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"teominghuang":43,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"public class Launcher {","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"teominghuang":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"            stage.show();","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"teominghuang":33}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.task.Events;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" * Represents a command generalised for the addition of tasks. A \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":" * a command represented by the input command and the arguments by the user e.g., \u003ccode\u003etodos, Eat a cake.\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"public class AddCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    private final String commandWord;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    private final String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     * @param commandWord","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * @param arguments","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    public AddCommand(String commandWord, String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"     * Executes the creation of a \u003ccode\u003eTasks\u003c/code\u003e object to add into the","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"     * database. If the creation is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"     * a success message is returned, else one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e createdTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"            switch (commandWord) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"                createdTaskList.add(new Todos(arguments));","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"                createdTaskList.add(new Events(arguments.split(\" /at \", 2)[0],","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"                        arguments.split(\" /at \", 2)[1]));","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"                createdTaskList.add(new Deadlines(arguments.split(\" /by \", 2)[0],","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"                        arguments.split(\" /by \", 2)[1]));","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"            default:","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"            if (createdTaskList.size() \u003e 0) {","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"                return new CommandResult(tasks.addsTask(createdTaskList.get(0), storage));","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(\"    Addition of tasks unsuccessful, \"","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"                    + \"ensure that you are writing in the correct format.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"                    \"    Addition of tasks unsuccessful, ensure that the date is valid, \"","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"                            + \"and goes by the format of (YYYY-MM-DD).\");","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":97}},{"path":"src/main/java/duke/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents the completion status of the \u003ccode\u003eCommands\u003c/code\u003e. A \u003ccode\u003eCommandResult\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * corresponds to a result represented by a string e.g., \u003ccode\u003e\"Command successful!\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"public class CommandResult {","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"    private final String commandResult;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    public CommandResult(String commandResult) {","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"        this.commandResult \u003d commandResult;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"     * Returns the result after execution of the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"     * @return result executing the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        return commandResult;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":22}},{"path":"src/main/java/duke/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a general blueprint for a Command. A \u003ccode\u003eCommands\u003c/code\u003e is a command","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * blueprint for creation of future commands.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"public class Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     * Acts as a blueprint method meant to be overrode by future sub-classes that dictates purpose of the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * If the command is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message is returned, else","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     * one containing a failure message will be returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(\"    This method is to be implemented by child classes\");","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":39}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * Represents a command used for the deletion of tasks. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * a command and is represented by the input arguments from the user e.g., \u003ccode\u003e\"1\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class DeleteCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"delete\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    private final String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * Executes the deletion of a \u003ccode\u003eTasks\u003c/code\u003e object to remove from the","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * database. If the creation is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * a success message is returned, else one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            String trimmedArgument \u003d Parser.trim(arguments);","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(tasks.deleteTaskHandler(Parser.massConvertBases","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"                    (Parser.parseToIntArray(trimmedArgument.split(\",\"))), storage));","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(\"Pika, deleting the PokeTask was unsuccessful...\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                    + err);","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":56}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to end the program. An \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * a command that exits the program.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"public class ExitCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"bye\";","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Hope to see you again soon :(\\n\" + \"    Let\u0027s play video game the next time!\";","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"                                                        ;","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027Bye\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     * Executes the ending of the program. If the program termination is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * containing a success message is returned. In this case, a success_message is always returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":42}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" *","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"public class FindCommand extends Commands {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"find\";","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private final String arguments;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * Executes the querying of a \u003ccode\u003eTasks\u003c/code\u003e object that contains a specific keyword.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * If the creation is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * is returned, else one containing a failrue message will be returned.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(tasks.queryTasks(arguments));","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":47}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command that prompt user to enter a valid command. A \u003ccode\u003eHelpCommand\u003c/code\u003e object","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * corresponds to a command that prompts and educate the user valid commands of the bot.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"public class HelpCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"help\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"Pika? Check if you have typed in the wrong command pikapika!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     * Executes a \u003cCode\u003eHelpCommand\u003c/Code\u003e. When the command is executed, the user is prompted","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * to type a valid command, and introduce them to valid commands of the bot.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        return new CommandResult(SUCCESS_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to list \u003ccode\u003eTasks\u003c/code\u003e within the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to a command that returns","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * tasks registered by the user during their previous use.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class ListCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"list\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"    Command Executed Successfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"    \u0027List\u0027 Command Executed Unsuccessfully\";","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * Executes the printing of all the \u003ccode\u003eTasks\u003c/code\u003e registered by the users during their","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     * previous use. If the command is successful, a \u003ccode\u003eCommandResult\u003c/code\u003e containing","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * a success message is returned, else one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(tasks.listsTask());","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        } catch (Exception err) {","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(FAILURE_MESSAGE);","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"teominghuang":48}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to mark the completion of a \u003ccode\u003eTasks\u003c/code\u003e object.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eMarkCommand\u003c/code\u003e object corresponds to a command represented by the","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" * input arguments from the user e.g., \u003ccode\u003e\"1\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"public class MarkCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"mark\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    private final String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * Executes the completion of a \u003ccode\u003eTasks\u003c/code\u003e object. If the edit is successful,","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message is returned, else","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            String trimmedArgument \u003d Parser.trim(arguments);","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(tasks.marksTask(storage, Parser.convertBases(","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"                    Parser.parseToInt(trimmedArgument)), true));","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(\"Pika, marking the PokeTask was unsuccessful...\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                    + err);","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":56}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.command;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * Represents a command used to un-complete a \u003ccode\u003eTasks\u003c/code\u003e object. A \u003ccode\u003eUnmarkCommand\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * object corresponds to a command represented by the input arguments from the","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" * user e.g., \u003ccode\u003e\"1\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"public class UnmarkCommand extends Commands {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String COMMAND_WORDS \u003d \"unmark\";","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    public static final String FAILURE_MESSAGE \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    private static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    private final String arguments; // In the form of user duke.command","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * Returns the apt exit instruction after the command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     * If the program ends after this is executed, true is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * @return the apt exit instruction.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        return IS_EXIT;","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * Edit and un-complete a \u003ccode\u003eTasks\u003c/code\u003e object. If the edit is successful,","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     * a \u003ccode\u003eCommandResult\u003c/code\u003e containing a success message is returned, else","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * one containing a failure message is returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param tasks An arraylist of tasks reflective of the current state in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @param ui A class that controls the user-interface of the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * @param storage A class that is in-charge of writing, appending, and reading the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     * @return A command result with a string reflective of the task\u0027s success.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            String trimmedArgument \u003d Parser.trim(arguments);","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(tasks.marksTask(storage,","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"                        Parser.convertBases(Parser.parseToInt(trimmedArgument)), false));","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"            return new CommandResult(    \"Pika, unmarking the PokeTask was unsuccessful...\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                    + err);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":56}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.controller;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    private void flip() {","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        db.flip();","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"        return db;","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"teominghuang":61}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.controller;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.controller.DialogBox;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PokeTrainer.png\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PokeJournalBot.png\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"                DialogBox.getDukeDialog(Ui.welcomeUser(), dukeImage)","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        );","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    @FXML","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    public void handleUserInput() {","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        );","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"teominghuang":57}},{"path":"src/main/java/duke/data/DukeDatabase.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T |   | alkdmaldkm","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"T |   | alsdkmalskdm","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"teominghuang":2}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.exception;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":7}},{"path":"src/main/java/duke/output/output.txt/production/Individual_Project/data/DukeDatabase.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T | X | hello my name is ben","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"E |   | hello you are so cool | 2012-03-03","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":2}},{"path":"src/main/java/duke/output/output.txt/production/main/duke/data/DukeDatabase.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T |   | hello my name is ben","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"E | X | hello you are so cool | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T |   | hello my name is ben","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/main/java/duke/output/output.txt/test/test/duke/data/DukeDatabaseStub.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T |   | Testing Addition","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/main/java/duke/output/output.txt/test/test/duke/data/PrintDatabaseStub.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"E |   | Event over | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"D |   | Deadline over | 2012-03-03","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"T | X | Database loaded successfullyT","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":3}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import duke.command.Commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":" * Represents a parser that makes sense of the command provided by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eParserTest\u003c/code\u003e corresponds to a parsing tool whose method can be","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":" * used universally to make sense of a user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"public class Parser {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public static String trim(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        return input.trim();","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    public static Integer parseToInt(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        return Integer.parseInt(input);","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    public static int[] parseToIntArray(String[] input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        int[] parsedArray \u003d new int[input.length];","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        if (parsedArray.length \u003c 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"            return parsedArray;","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"            parsedArray[i] \u003d Integer.parseInt(input[i].trim());","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        return parsedArray;","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    public static Integer convertBases(Integer input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        return input - 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    public static int[] massConvertBases(int[] input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        int[] newBaseArray \u003d new int[input.length];","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        if (input.length \u003c 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"            return newBaseArray;","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"            newBaseArray[i] \u003d input[i] - 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        return newBaseArray;","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    public static String[] splitString(String input, String condition, Integer limit) {","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        return input.split(condition, limit);","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"     * Returns the command based on the input of the user. If the command is","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"     * not valid, it returns a \u003ccode\u003eHelpCommand\u003c/code\u003e, else it returns one","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"     * that has specific execution instructions that prompt and guide the bot","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"     * towards specific execution, actions, and behaviours..","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"     * @param fullCommand The input provided by the user using the CLI.","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"     * @return the specific command generated by the user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    public static Commands parse(String fullCommand) {","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"        StringBuilder arguments \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"        String trimmedCommand \u003d trim(fullCommand);","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"        String commandWord \u003d trim(splitString(trimmedCommand, \" \", 2)[0]);","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"        if (splitString(trimmedCommand, \" \", 2).length \u003e 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"            arguments.append(trim(splitString(trimmedCommand, \" \", 2)[1]));","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"        case AddCommand.COMMAND_TODO:","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"        case AddCommand.COMMAND_EVENT:","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"        case AddCommand.COMMAND_DEADLINE:","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"            return new AddCommand(commandWord,","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"                    arguments.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"        case ExitCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"        case ListCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"        case MarkCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"            return new MarkCommand(arguments.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"        case UnmarkCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"            return new UnmarkCommand(arguments.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"teominghuang"},"content":"        //Fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"teominghuang"},"content":"        case DeleteCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"teominghuang"},"content":"            return new DeleteCommand(arguments.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"        case FindCommand.COMMAND_WORDS:","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"teominghuang"},"content":"            return new FindCommand(arguments.toString().split(\" \")[0]);","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"        default:","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"teominghuang"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-02-04"},{"lineNumber":113,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":116}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.File;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"import duke.task.Events;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":" * Represents a storage tool in-charge of reading, writing and appendign to the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e is further represented by the databasePath that allows and","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":" * facilitate connection to the database file e.g., \u003ccode\u003e\"./src/database.txt\"\u003c/code\u003e.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"public class Storage {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    private final String databasePath;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    public Storage() {","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        Path dataFolderAbsPath \u003d Paths.get(\"src/main/java/duke/data\");","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        boolean hasDirectoryExist \u003d Files.exists(dataFolderAbsPath);","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        if (!hasDirectoryExist) {","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"            new File(dataFolderAbsPath.toAbsolutePath().toString()).mkdir();","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        Path dataAbsPath \u003d Paths.get(\"src/main/java/duke/data/DukeDatabase.txt\");","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        boolean hasDataFileExist \u003d Files.exists(dataAbsPath);","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"        if(!hasDataFileExist) {","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"            new File(dataAbsPath.toAbsolutePath().toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        this.databasePath \u003d dataAbsPath.toAbsolutePath().toString();","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        //this.databasePath \u003d \"C:/Users/benny/Desktop/Y2S2/CS2103T_Software_Engineer/\"+ \"Individual_Project/src/main/java/duke/data/DukeDatabase.txt\";","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    public void createDatabaseFile() {","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        Path dataFolderAbsPath \u003d Paths.get(\"src/main/java/duke/data/\");","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        boolean hasDirectoryExist \u003d Files.exists(dataFolderAbsPath);","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        if (!hasDirectoryExist) {","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            new File(dataFolderAbsPath.toString()).mkdir();","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        Path dataAbsPath \u003d Paths.get(\"src/main/java/duke/data/DukeDatabase.txt\");","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        boolean hasDataFileExist \u003d Files.exists(dataAbsPath);","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        if(!hasDataFileExist) {","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"            new File(dataAbsPath.toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    public void writeToDatabase(String textToAppend, boolean isAppendOrWrite) throws IOException {","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"        FileWriter fw \u003d new FileWriter(databasePath, isAppendOrWrite); // Append instead of rewriting over","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"        fw.close();","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"     * Returns a boolean based on whether the database was successfully re-written.","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"     * If the method executed successfully, it returns true, else it returns false.","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"     * @param textToAdd Text that will re-write the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"     * @return a boolean value indicating the success of writing to the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"    public boolean hasWriteToDatabase(String textToAdd) {","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"        assert !databasePath.equals(\"\"):\"The database file could not be found. Try PokeJournal again later\";","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"            writeToDatabase(textToAdd, false);","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"            createDatabaseFile();","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"            Ui.showErrorMessage(err, \"writesToDatabase\");","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"            return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"        return true;","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"     * Returns a boolean based on whether the database was successfully appended.","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"     * If the method executed successfully, it returns true, else it returns false.","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"     * @param textToAppend Text that will re-write the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"     * @return a boolean value indicating the success of writing to the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"    public boolean hasAppendToDatabase(String textToAppend) {","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"    assert !databasePath.equals(\"\"):\"The database file could not be found. Try PokeJournal again later\";","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"            writeToDatabase(textToAppend, true);","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"            createDatabaseFile();","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"            Ui.showErrorMessage(err, \"textToAppend\");","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"            return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"        return true;","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"     * Returns an arraylist of all the \u003ccode\u003eTasks\u003c/code\u003e stored within the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"teominghuang"},"content":"     * If the method is successful, it will return an arraylist with \u003ccode\u003eTasks\u003c/code\u003e,","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"teominghuang"},"content":"     * else it returns one that is empty.","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"teominghuang"},"content":"     * @return an arraylist with all the Tasks stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"teominghuang"},"content":"    ArrayList\u003cTasks\u003e returnsAllTasks() throws FileNotFoundException {","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e taskList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"        File databaseFile \u003d new File(databasePath);","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"teominghuang"},"content":"        Scanner sc \u003d new Scanner(databaseFile);","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"teominghuang"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"teominghuang"},"content":"            String taskData \u003d sc.nextLine();","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"teominghuang"},"content":"            String[] taskDataSplit \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"teominghuang"},"content":"            switch (taskDataSplit[0]) {","lastModifiedDate":"2022-02-04"},{"lineNumber":117,"author":{"gitId":"teominghuang"},"content":"            case \"T\":","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"                taskList.add(new Todos(taskDataSplit[2],","lastModifiedDate":"2022-02-04"},{"lineNumber":119,"author":{"gitId":"teominghuang"},"content":"                        taskDataSplit[1].equals(\"X\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":121,"author":{"gitId":"teominghuang"},"content":"            case \"E\":","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"teominghuang"},"content":"                taskList.add(new Events(taskDataSplit[2],","lastModifiedDate":"2022-02-04"},{"lineNumber":123,"author":{"gitId":"teominghuang"},"content":"                        taskDataSplit[1].equals(\"X\"),","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"teominghuang"},"content":"                        taskDataSplit[3]));","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"teominghuang"},"content":"            case \"D\":","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"teominghuang"},"content":"                taskList.add(new Deadlines(taskDataSplit[2],","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"teominghuang"},"content":"                        taskDataSplit[1].equals(\"X\"),","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"teominghuang"},"content":"                        taskDataSplit[3]));","lastModifiedDate":"2022-02-04"},{"lineNumber":130,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-04"},{"lineNumber":131,"author":{"gitId":"teominghuang"},"content":"            default:","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"teominghuang"},"content":"                break;","lastModifiedDate":"2022-02-07"},{"lineNumber":133,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":134,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"teominghuang"},"content":"        sc.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"teominghuang"},"content":"        return taskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":137,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":138,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":139,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"teominghuang"},"content":"     * Load all the \u003ccode\u003eTasks\u003c/code\u003e from the database using other methods.","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"teominghuang"},"content":"     * Returns an arraylist of all the \u003ccode\u003eTasks\u003c/code\u003e stored within the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"teominghuang"},"content":"     * If the method is successful, it will return an arraylist with \u003ccode\u003eTasks\u003c/code\u003e,","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"teominghuang"},"content":"     * else it returns one that is empty.","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"teominghuang"},"content":"     * @return an arraylist with all the Tasks stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"teominghuang"},"content":"    public ArrayList\u003cTasks\u003e load() {","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"teominghuang"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":149,"author":{"gitId":"teominghuang"},"content":"            return new ArrayList\u003cTasks\u003e(returnsAllTasks());","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"teominghuang"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"teominghuang"},"content":"            Ui.showErrorMessage(err, \"load\");","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"teominghuang"},"content":"            return new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":154,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":155,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"teominghuang"},"content":"    public String getDatabasePath() {","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"teominghuang"},"content":"        return databasePath;","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":159}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" * Represents a deadline created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eDeadlines\u003c/code\u003e inherits from \u003ccode\u003eTasks\u003c/code\u003e and is represented by its","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":" * name, completion status, and the deadline of the event e.g.,","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" * \u003ccode\u003e\"Eat lunch\", true, \"2012-06-03\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class Deadlines extends Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    //Printing Format Constants","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public static final String DATAFORMAT_DEADLINE \u003d \"D |\";","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String DATA_COMPLETEDTASK \u003d \" X | \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    public static final String DATA_INCOMPLETEDTASK \u003d \"   | \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    //Database Format Constants","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINTFORMAT_DEADLINE \u003d \"[D]\";","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINT_COMPLETEDTASK \u003d \"[X] \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINT_INCOMPLETEDTASK \u003d \"[ ] \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"    private final LocalDate deadline; // Deadline to complete deadline duke.task","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     * @param deadline","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    public Deadlines(String taskName, String deadline) throws DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        super(taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * @param completion","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     * @param deadline","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    public Deadlines(String taskName, boolean completion, String deadline) throws DateTimeParseException {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        super(taskName, completion);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    // Get deadline of duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        return \"(by: \" + deadline + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    public Deadlines completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"        return new Deadlines(super.getName(), true,","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"                deadline.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"    public Deadlines uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"        return new Deadlines(super.getName(), false,","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"                deadline.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"    // Save to database format","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"        return DATAFORMAT_DEADLINE + (this.getCompletion() ?","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"                DATA_COMPLETEDTASK : DATA_INCOMPLETEDTASK) + super.getName()","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"                + \" | \" + deadline;","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"    // toString returning duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"        return PRINTFORMAT_DEADLINE + (this.getCompletion() ?","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"                PRINT_COMPLETEDTASK : PRINT_INCOMPLETEDTASK) + super.getName()","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"                + \" (By: \" + deadline + \")\" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":99}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents an event created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * An \u003ccode\u003eEvents\u003c/code\u003e inherits from \u003ccode\u003eTasks\u003c/code\u003e and is represented by its","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" * name, completion status, and timing of the event e.g.,","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" * \u003ccode\u003e\"Eat lunch\", true, \"9am\"\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"public class Events extends Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    //Printing Format Constants","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    public static final String DATAFORMAT_EVENTS \u003d \"E |\";","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String DATACOMPLETED_TASK \u003d \" X | \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    public static final String DATAINCOMPLETED_TASK \u003d \"   | \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    //Database Format Constants","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINTFORMAT_EVENTS \u003d \"[E]\";","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINT_COMPLETEDTASK \u003d \"[X] \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINT_INCOMPLETEDTASK \u003d \"[ ] \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    private final String timing; // Timing of event","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * @param timing","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    public Events(String taskName, String timing) {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        super(taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @param completion","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     * @param timing","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    public Events(String taskName, boolean completion, String timing) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        super(taskName, completion);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    // Get timing of event","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        return \"(at: \" + timing + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    public Events completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"        return new Events(super.getName(), true, timing);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"    public Events uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"        return new Events(super.getName(), false, timing);","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    // Format of saving to database","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"        return DATAFORMAT_EVENTS + (this.getCompletion() ?","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"                DATACOMPLETED_TASK : DATAINCOMPLETED_TASK) + super.getName()","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"                + \" | \" + timing;","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"    // toString returning event","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"        return PRINTFORMAT_EVENTS + (super.getCompletion() ?","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"                PRINT_COMPLETEDTASK : PRINT_INCOMPLETEDTASK) + super.getName()","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"                + \" (At: \" + timing + \") \"+ \"\" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":89}},{"path":"src/main/java/duke/task/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents a task created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eTasks\u003c/code\u003e is represented by its name and completion status e.g.,","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" * \u003ccode\u003e\"Eat breakfast by 9am\", true\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"public class Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    private final String name; // Name of duke.task","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    private final boolean hasCompleted; // Completion of duke.task","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    // Constructor for Task","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    public Tasks(String taskName) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"        this.name \u003d taskName;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"     * @param taskName","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"     * @param completion","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    public Tasks(String taskName, boolean completion) {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        this.name \u003d taskName;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        this.hasCompleted \u003d completion;","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"    public Tasks completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        return new Tasks(name, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    public Tasks uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"        return new Tasks(name, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"    // Get timing of duke.task - overriden in todos and events","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    // Get timing of duke.task - overriden in todos and events","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"    // Get name of duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"    public String getName() {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        return this.name;","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"    // Get completion status of the duke.task","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    Boolean getCompletion() {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"        return this.hasCompleted;","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"    // toString return tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"        return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":78}},{"path":"src/main/java/duke/task/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.task;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":" * Represents a Todo task created by the user that are/will be stored in the database.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e inherits from \u003ccode\u003eTasks\u003c/code\u003e and is represented by its","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":" * name, and completion status e.g.,\u003ccode\u003e\"Eat dinner\", true\u003c/code\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"public class Todos extends Tasks {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    //Printing Format Constants","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    public static final String DATAFORMAT_TODO \u003d \"T |\";","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    public static final String DATA_COMPLETEDTASK \u003d \" X | \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    public static final String DATA_INCOMPLETEDTASK \u003d \"   | \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    //Database Format Constants","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINTFORMAT_TODO \u003d \"[T]\";","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINT_COMPLETEDTASK \u003d \"[X] \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    public static final String PRINT_INCOMPLETEDTASK \u003d \"[ ] \" ;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"    // Constructor of Todos","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    public Todos(String taskName) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        super(taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    public Todos(String taskName, boolean completion) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        super(taskName, completion);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"     * Returns a new completed instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    public Todos completeTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        return new Todos(super.getName(), true);","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"     * Returns a new uncompleted instance of the task.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"     * @return a new instance of the task that has not been completed.","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"    public Todos uncompleteTask() {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        return new Todos(super.getName(), false);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"        return DATAFORMAT_TODO + (this.getCompletion() ?","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"                DATA_COMPLETEDTASK : DATA_INCOMPLETEDTASK) + super.getName();","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        return PRINTFORMAT_TODO + (super.getCompletion() ?","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"                PRINT_COMPLETEDTASK : PRINT_INCOMPLETEDTASK) + super.getName() ;","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"teominghuang":65}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.tasklist;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":" *","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class TaskList {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    private static final int ONE_BASEDINDEX\u003d 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    private static final int ZERO_BASEDINDEX\u003d 1;","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    private final ArrayList\u003cTasks\u003e taskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"     * @param taskList","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    public TaskList(ArrayList\u003cTasks\u003e taskList) {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        this.taskList \u003d new ArrayList\u003cTasks\u003e(taskList);","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        this.taskList \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"    private boolean filterDataKeyword(String query, String[] taskNameSplit) {","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        for (int j \u003d 0; j \u003c taskNameSplit.length; j++) {","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"            if (taskNameSplit[j].equals(query)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"                return true;","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"        return false;","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"    private ArrayList\u003cTasks\u003e filterDataSet(String query) {","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e unfilteredTasks \u003d new ArrayList\u003cTasks\u003e(taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e filteredTasks \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d 0; i \u003c unfilteredTasks.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"            String taskName \u003d unfilteredTasks.get(i).getName();","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"            String[] taskNameSplit \u003d taskName.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"            if (filterDataKeyword(query, taskNameSplit)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"                filteredTasks.add(unfilteredTasks.get(i));","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"        return filteredTasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"    // Maybe can abstract out the printing portion","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"     * @param query","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"     * @return","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"    public String queryTasks (String query) {","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e filteredData \u003d filterDataSet(query);","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        return Ui.returnQueriedTaskRes(listInPrintFormat(filteredData));","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"    // Delete duke.task -\u003e returns duke.task deleted, then returns string to append","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"teominghuang"},"content":"     * Initiate the main bulk of adding a task from the user input into the database.","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"teominghuang"},"content":"     * If this is successful, it will return a boolean value of True.","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"teominghuang"},"content":"     * @param task Task to be added to the database","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"teominghuang"},"content":"     * @param storage Storage that facilitate writing of Task into the database","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"teominghuang"},"content":"     * @return returns a boolean value of the success of adding a task","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"teominghuang"},"content":"    public String addsTask(Tasks task, Storage storage) {","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"teominghuang"},"content":"        if (storage.hasAppendToDatabase(task.toDatabaseString() + \"\\n\")){","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"teominghuang"},"content":"            return Ui.returnAddTaskRes(task.toString(), Boolean.TRUE);","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"teominghuang"},"content":"        return Ui.returnAddTaskRes(task.toString(), Boolean.FALSE);","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"teominghuang"},"content":"    private String listInDataFormat(ArrayList\u003cTasks\u003e edittedTasksList){","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"teominghuang"},"content":"        StringBuilder tasksToDataFormat \u003d new StringBuilder();","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d 0; i \u003c edittedTasksList.size(); i++) {","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"teominghuang"},"content":"            tasksToDataFormat.append(edittedTasksList.get(i).toDatabaseString()).append(\"\\n\");","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"teominghuang"},"content":"        return tasksToDataFormat.toString();","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"teominghuang"},"content":"    private String listInPrintFormat(ArrayList\u003cTasks\u003e edittedTasksList){","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"teominghuang"},"content":"        StringBuilder tasksToDataFormat \u003d new StringBuilder();","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d 0; i \u003c edittedTasksList.size(); i++) {","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"teominghuang"},"content":"            tasksToDataFormat.append(\"   \").append(i+ONE_BASEDINDEX).append(\". \")","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"teominghuang"},"content":"                    .append(edittedTasksList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"teominghuang"},"content":"        return tasksToDataFormat.toString();","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"teominghuang"},"content":"     * This method helps to facilitate the marking of a task as completed. If this is","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"teominghuang"},"content":"     * success in marking the task, a boolean value of true will be returned. Else,","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"teominghuang"},"content":"     * it returns false.","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"teominghuang"},"content":"     * @param storage Storage that facilitate writing of Task into the database","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"teominghuang"},"content":"     * @param taskIndexToMark Index of task to be marked in the database","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"teominghuang"},"content":"     * @param taskCompletion A boolean value indicating whether to mark it as completed or not","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"teominghuang"},"content":"     * @return returns a boolean value indicative of the success of marking a task","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"teominghuang"},"content":"    public String marksTask(Storage storage, int taskIndexToMark, boolean taskCompletion) {","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"teominghuang"},"content":"        boolean isIndexOutOfBound \u003d taskIndexToMark \u003e fileContentCounterZeroed();","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"teominghuang"},"content":"        if (isIndexOutOfBound) {","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"teominghuang"},"content":"            return Ui.returnIndexErrorRes();","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e newList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"teominghuang"},"content":"        Tasks editTask \u003d newList.get(taskIndexToMark);","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"teominghuang"},"content":"        if (taskCompletion) {","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"teominghuang"},"content":"            newList.set(taskIndexToMark, editTask.completeTask());","lastModifiedDate":"2022-02-04"},{"lineNumber":117,"author":{"gitId":"teominghuang"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"teominghuang"},"content":"            newList.set(taskIndexToMark, editTask.uncompleteTask());","lastModifiedDate":"2022-02-04"},{"lineNumber":119,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":120,"author":{"gitId":"teominghuang"},"content":"        System.out.println(listInPrintFormat(newList));","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"teominghuang"},"content":"        System.out.println(listInDataFormat(newList));","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"teominghuang"},"content":"        if (storage.hasWriteToDatabase(listInDataFormat(newList))) {","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"teominghuang"},"content":"            return Ui.returnEditTaskRes(newList.get(taskIndexToMark).toString(), Boolean.TRUE);","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":125,"author":{"gitId":"teominghuang"},"content":"        return Ui.returnEditTaskRes(\"\", Boolean.FALSE);","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"teominghuang"},"content":"    private ArrayList\u003cTasks\u003e removeTaskFromList(ArrayList\u003cTasks\u003e taskListToEdit, int taskIndex) {","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e duplicateList \u003d new ArrayList\u003c\u003e(taskListToEdit);","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"teominghuang"},"content":"        duplicateList.remove(taskIndex);","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"teominghuang"},"content":"        return duplicateList;","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"teominghuang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":134,"author":{"gitId":"teominghuang"},"content":"     * This method helps to facilitate the deletion of a task. If this is","lastModifiedDate":"2022-02-07"},{"lineNumber":135,"author":{"gitId":"teominghuang"},"content":"     * successful in deleting the task, a boolean value of true will be returned. Else,","lastModifiedDate":"2022-02-07"},{"lineNumber":136,"author":{"gitId":"teominghuang"},"content":"     * false is returned.","lastModifiedDate":"2022-02-07"},{"lineNumber":137,"author":{"gitId":"teominghuang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":138,"author":{"gitId":"teominghuang"},"content":"     * @param taskIndexToDelete Index of task to be deleted in the database","lastModifiedDate":"2022-02-07"},{"lineNumber":139,"author":{"gitId":"teominghuang"},"content":"     * @param storage Storage that facilitate writing of Task into the database","lastModifiedDate":"2022-02-07"},{"lineNumber":140,"author":{"gitId":"teominghuang"},"content":"     * @return a boolean value indicative of the success of marking a task","lastModifiedDate":"2022-02-07"},{"lineNumber":141,"author":{"gitId":"teominghuang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":142,"author":{"gitId":"teominghuang"},"content":"    private String deletesTask(int taskIndexToDelete, ArrayList\u003cTasks\u003e taskListToEdit, Storage storage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"teominghuang"},"content":"        boolean isIndexOutOfBound \u003d taskIndexToDelete \u003e fileContentCounterZeroed();","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"teominghuang"},"content":"        if (isIndexOutOfBound) {","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"teominghuang"},"content":"            return Ui.returnDeleteTaskError(taskIndexToDelete);","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e duplicateList \u003d new ArrayList\u003c\u003e(taskListToEdit);","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"teominghuang"},"content":"        Tasks deletedTask \u003d duplicateList.get(taskIndexToDelete);","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e edittedTaskList \u003d removeTaskFromList(duplicateList, taskIndexToDelete);","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":152,"author":{"gitId":"teominghuang"},"content":"        if (storage.hasWriteToDatabase(listInDataFormat(edittedTaskList))) {","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"teominghuang"},"content":"            return Ui.returnDeleteTaskRes(deletedTask.toString(), Boolean.TRUE);","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":155,"author":{"gitId":"teominghuang"},"content":"        return Ui.returnDeleteTaskRes(\"\", Boolean.FALSE);","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":157,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"teominghuang"},"content":"    public String deleteTaskHandler(int[] taskIndicesToDelete, Storage storage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"teominghuang"},"content":"        if (arrayCounter(taskIndicesToDelete) \u003c\u003d 0) {","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"teominghuang"},"content":"            return Ui.returnNoTaskRes();","lastModifiedDate":"2022-02-18"},{"lineNumber":161,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":162,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":163,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e duplicateTaskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2022-02-18"},{"lineNumber":164,"author":{"gitId":"teominghuang"},"content":"        Arrays.sort(taskIndicesToDelete);","lastModifiedDate":"2022-02-18"},{"lineNumber":165,"author":{"gitId":"teominghuang"},"content":"        String collatedStatus \u003d \"\";","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"teominghuang"},"content":"        if (arrayCounter(taskIndicesToDelete) \u003d\u003d 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":167,"author":{"gitId":"teominghuang"},"content":"            collatedStatus +\u003d deletesTask(taskIndicesToDelete[0], duplicateTaskList, storage);","lastModifiedDate":"2022-02-18"},{"lineNumber":168,"author":{"gitId":"teominghuang"},"content":"            return Ui.returnDeleteHandlerRes(collatedStatus);","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":170,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":171,"author":{"gitId":"teominghuang"},"content":"        for (int i \u003d arrayCounter(taskIndicesToDelete) - ONE_BASEDINDEX; i\u003e\u003d0; i--) {","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"teominghuang"},"content":"            collatedStatus +\u003d deletesTask(taskIndicesToDelete[i], duplicateTaskList, storage);","lastModifiedDate":"2022-02-18"},{"lineNumber":173,"author":{"gitId":"teominghuang"},"content":"            duplicateTaskList \u003d storage.load();","lastModifiedDate":"2022-02-18"},{"lineNumber":174,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":175,"author":{"gitId":"teominghuang"},"content":"        return Ui.returnDeleteHandlerRes(collatedStatus);","lastModifiedDate":"2022-02-18"},{"lineNumber":176,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":177,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":178,"author":{"gitId":"teominghuang"},"content":"    public String listsTask() {","lastModifiedDate":"2022-02-18"},{"lineNumber":179,"author":{"gitId":"teominghuang"},"content":"        return Ui.returnListTaskRes(listInPrintFormat(taskList));","lastModifiedDate":"2022-02-18"},{"lineNumber":180,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":181,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":182,"author":{"gitId":"teominghuang"},"content":"    int arrayCounter(int[] array) {","lastModifiedDate":"2022-02-18"},{"lineNumber":183,"author":{"gitId":"teominghuang"},"content":"        return array.length;","lastModifiedDate":"2022-02-18"},{"lineNumber":184,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":185,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":186,"author":{"gitId":"teominghuang"},"content":"    int fileContentCounterZeroed() {","lastModifiedDate":"2022-02-18"},{"lineNumber":187,"author":{"gitId":"teominghuang"},"content":"        return taskList.size() - ZERO_BASEDINDEX;","lastModifiedDate":"2022-02-18"},{"lineNumber":188,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":189,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":189}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"public class Ui {","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"    public static String welcomeUser() {","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"        return \"Hello! I want to be the best sentient PokePlanner! \\nCome plan your day with me! \\nType \u0027help\u0027 to access the commands!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    public static String farewellUser() {","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"        return \"Pika! \\nSee you again later, poke-trainer!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    public static String returnAddTaskRes(String input, Boolean success) {","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"        if (success) {","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"            return \"Pika, the PokeTask has been successfully registered!\\n   \" + input + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        return \"Pika, we failed to register the PokeTask. \\nTry the command again in a while? \\nPikapika!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"    public static String returnEditTaskRes(String input, Boolean success) {","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        if (success) {","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"            return \"Pika, the PokeTask has been successfully editted!\\n   \" + input + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        return \"Pika, we failed to edit your task. \\nTry again in a while pikaaaa?\";","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"    public static String returnDeleteTaskRes(String input, Boolean success) {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"        if (success) {","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"            return \"     \" + input + \" - Success\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"        return \"     \" +input + \" - Failed\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"    public static String returnNoTaskRes() {","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        return \"Pikaaa, there is no PokeTask to delete\";","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"    public static String returnDeleteHandlerRes(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        return \"Pika, status of the tasks deleted:\\n\" + input + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"        //return \"Pika, we failed to delete any PokeTasks. \\nTry the command again in a while? \\nPikapika!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    public static String returnDeleteTaskError(int input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"        return \"     PokeTask \" + (input+1) + \" does not exist.\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"    public static String returnQueriedTaskRes(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        return \"PIKA! Fetching your lovely tasks: \\n\" + input + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"teominghuang"},"content":"    public static String returnListTaskRes(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"teominghuang"},"content":"        return \"PIKA! Fetching your lovely tasks: \\n\" + input + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"teominghuang"},"content":"    public static String returnIndexErrorRes() {","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"teominghuang"},"content":"        return \"Pika, the task you wanted to edit does not exist. \\nWe failed to edit the PokeTask! \\nBika\";","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"teominghuang"},"content":"    public static void showErrorMessage(Exception err, String methodName) {","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"teominghuang"},"content":"        System.out.println(\"Pika, there\u0027s an error in \" +  methodName + \"\\n Error: \" + err);","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"teominghuang":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"teominghuang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"teominghuang":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"// Format of testing -\u003e WhatIsTested_descriptionOfTestInputs_ExpectedOutcome","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"// Testing .assertEquals(Expected, actual)","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"public class DukeTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"    void dummyTest() {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":15}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.parser;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    void parse_normalInput_writtenCorrectly() {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        String inputString \u003d \"todo Eat my breakfast\";","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof AddCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"event Eat my lunch /at 2012-06-03\";","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof AddCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"todo Eat my dinner /by 2012-06-03\";","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof AddCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"bye\";","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof ExitCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"list\";","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof ListCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"mark 1\";","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof MarkCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"unmark 1\";","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof UnmarkCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"delete 1\";","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof DeleteCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"teominghuang"},"content":"        inputString \u003d \"ist a new day\";","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof HelpCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"teominghuang"},"content":"    void parse_emptyInput_helpCommandInitiated() {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"teominghuang"},"content":"        String inputString \u003d \" \";","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"teominghuang"},"content":"        assertTrue(Parser.parse(inputString) instanceof HelpCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":52}},{"path":"src/test/java/duke/storage/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"import duke.task.Events;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"    public StorageStub() {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"        super();","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"    public ArrayList\u003cTasks\u003e preloadTaskList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"        ArrayList\u003cTasks\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Todos(\"Todo over\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Events(\"Events over\", \"2012-03-03\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Deadlines(\"Deadlines over\", \"2012-03-03\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        taskList.add(new Todos(\"Testing\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"        return taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":26}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"package duke.tasklist;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"import duke.storage.StorageStub;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"import duke.task.Tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"import duke.task.Todos;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"// Format of testing -\u003e WhatIsTested_descriptionOfTestInputs_ExpectedOutcome","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"// Testing .assertEquals(Expected, actual)","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"teominghuang"},"content":"public class TaskListTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"teominghuang"},"content":"    void fileContentCounter_writtenCorrectly_success () {","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"        TaskList printTaskList \u003d new TaskList(new StorageStub().preloadTaskList());","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"teominghuang"},"content":"        assertEquals (3 , printTaskList.fileContentCounterZeroed());","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"teominghuang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"teominghuang"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"teominghuang"},"content":"    void arrayCounter_writtenCorrectly_success () {","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"teominghuang"},"content":"        TaskList printTaskList \u003d new TaskList(new StorageStub().preloadTaskList());","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"        assertEquals(6, printTaskList.arrayCounter(new int[]{5, 6, 7, 8, 9, 10}));","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"teominghuang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"teominghuang"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"teominghuang":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teominghuang"},"content":"todo read book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"teominghuang"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"teominghuang"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"teominghuang"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"teominghuang"},"content":"todo join sports club","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"mark 4","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"teominghuang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"teominghuang"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"teominghuang"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"teominghuang"},"content":"blah","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"teominghuang"},"content":"todo","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"teominghuang"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"teominghuang"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"teominghuang"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"teominghuang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"teominghuang":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"teominghuang"},"content":"REM delete duke.output from previous run","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"teominghuang"},"content":"REM run the program, feed commands from input.txt file and redirect the duke.output to the ACTUAL.TXT","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"teominghuang"},"content":"REM compare the duke.output to the expected duke.output","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":3,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"teominghuang"},"content":"# delete duke.output from previous run","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"teominghuang"},"content":"# run the program, feed commands from input.txt file and redirect the duke.output to the ACTUAL.TXT","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"teominghuang"},"content":"# compare the duke.output to the expected duke.output","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teominghuang":3,"-":35}}]
