[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"    String time;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"    public Deadline(String des, String time) {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"        super(des, TaskType.DEADLINE);","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"justinyjt"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"justinyjt"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"justinyjt"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"justinyjt"},"content":"            return  \"[D][X] \" + description + \" (by: \" + time + \")\";","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"justinyjt"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"justinyjt"},"content":"            return \"[D][ ] \" + description + \" (by: \" + time + \")\";","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"justinyjt":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"    String time;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"    public Event(String des, String time) {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"        super(des, TaskType.EVENT);","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"justinyjt"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"justinyjt"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"justinyjt"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"justinyjt"},"content":"            return  \"[E][X] \" + description + \" (at: \" + time + \")\";","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"justinyjt"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"justinyjt"},"content":"            return \"[E][ ] \" + description + \" (at: \" + time + \")\";","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"justinyjt":16}},{"path":"src/main/java/Lister.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"public class Lister {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"justinyjt"},"content":"    public Lister() {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"justinyjt"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"justinyjt"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"justinyjt"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"    Fine I\u0027ll add this task in:\\n      \" + task);","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"justinyjt"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Now you have 1 task in the list. \u003d.\u003d\");","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"justinyjt"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list. \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"justinyjt"},"content":"    public void list() {","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"justinyjt"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Nothing to look at here... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"justinyjt"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"justinyjt"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"justinyjt"},"content":"            if (task.isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"justinyjt"},"content":"                System.out.println(\"    \" + Integer.toString(i + 1) + \".\" + task);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"justinyjt"},"content":"            } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"justinyjt"},"content":"                System.out.println(\"    \" + Integer.toString(i + 1) + \".\" + task);","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"justinyjt"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"justinyjt"},"content":"    public void mark(int i) {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"justinyjt"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"justinyjt"},"content":"        if (i \u003c 0 || i \u003e tasks.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Invalid entry number entered! \u003d.\u003d\");","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"justinyjt"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"justinyjt"},"content":"            task.markDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    You\u0027ve finished this task. Good for you... \u003d.\u003d\\n      \" + task);","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"justinyjt"},"content":"    public void unmark(int i) {","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"justinyjt"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"justinyjt"},"content":"        if (i \u003c 0 || i \u003e tasks.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Invalid entry number entered! \u003d.\u003d\");","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"justinyjt"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"justinyjt"},"content":"            task.markUndone();","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Marked undone. Stop slacking off... \u003d.\u003d\\n      \" + task);","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"justinyjt"},"content":"    public void delete(int i) {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"justinyjt"},"content":"        if (i \u003c 0 || i \u003e tasks.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Invalid entry number entered! \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"justinyjt"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"justinyjt"},"content":"            String des \u003d tasks.get(i - 1).toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"justinyjt"},"content":"            tasks.remove(i - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"    Fine. I\u0027ve removed this task:\\n      \" + des);","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"justinyjt"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"justinyjt"},"content":"                System.out.println(\"    Now you have 1 task in the list. \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"justinyjt"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"justinyjt"},"content":"                System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list. \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"justinyjt"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":77,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":78,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"justinyjt":79}},{"path":"src/main/java/PaggroBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"import java.util.*;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"public class PaggroBot {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"    public static void main(String[] args) throws PaggroException {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"        Lister paggro \u003d new Lister();","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"justinyjt"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"    Hi I\u0027m PaggroBot \u003d.\u003d\\n    What do you want? \u003d.\u003d\");","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"justinyjt"},"content":"//        String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"justinyjt"},"content":"//        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"justinyjt"},"content":"//        String command \u003d arr[0];","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"justinyjt"},"content":"//        String parameters \u003d arr[1];","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"justinyjt"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"justinyjt"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"justinyjt"},"content":"        String command \u003d inputArr[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"justinyjt"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"justinyjt"},"content":"            try {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"justinyjt"},"content":"                if (command.equals(\"list\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"justinyjt"},"content":"                    paggro.list();","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"justinyjt"},"content":"                } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"justinyjt"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"justinyjt"},"content":"                        String parameters \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"justinyjt"},"content":"                        int i \u003d Integer.parseInt(parameters);","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"justinyjt"},"content":"                        paggro.mark(i);","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"justinyjt"},"content":"                    } catch (NumberFormatException e) { // parameter was not a number","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"    Really? Can you input an actual number this time... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? Can you input an actual number this time... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"justinyjt"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) { // no parameter given","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? mark has to be used with a number... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"justinyjt"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"justinyjt"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"justinyjt"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"justinyjt"},"content":"                        String parameters \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"justinyjt"},"content":"                        int i \u003d Integer.parseInt(parameters);","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"justinyjt"},"content":"                        paggro.unmark(i);","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"justinyjt"},"content":"                    } catch (NumberFormatException e) { // parameter was not a number","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? Can you input an actual number this time... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"justinyjt"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) { // no parameter given","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? unmark has to be used with a number... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"justinyjt"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"justinyjt"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"justinyjt"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"justinyjt"},"content":"                        String parameters \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"justinyjt"},"content":"                        paggro.add(new ToDo(parameters));","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"justinyjt"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) { // no description given","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"justinyjt"},"content":"                        //                        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? The description of a todo cannot be empty... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"justinyjt"},"content":"                        //                        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"justinyjt"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"justinyjt"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"justinyjt"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"justinyjt"},"content":"                        String parameters \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"justinyjt"},"content":"                        String[] desArr \u003d parameters.split(\" /\", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"justinyjt"},"content":"                        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"justinyjt"},"content":"                            String des \u003d desArr[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"justinyjt"},"content":"                            String time \u003d desArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"justinyjt"},"content":"                            paggro.add(new Deadline(des, time));","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"justinyjt"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) { // date not given or wrongly formatted","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"justinyjt"},"content":"                            //                            System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"justinyjt"},"content":"                            throw new PaggroException(\"    Really? \u003d.\u003d The use of the deadline command must be as follows:\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"justinyjt"},"content":"                                    \"      deadline \u003cDESCRIPTION\u003e /\u003cDATE AND/OR TIME\u003e\");","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"justinyjt"},"content":"                            //                            System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"justinyjt"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"justinyjt"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) { // no description given","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"justinyjt"},"content":"                        //                        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? The description of a deadline cannot be empty... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"justinyjt"},"content":"                        //                        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"justinyjt"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"justinyjt"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"justinyjt"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"justinyjt"},"content":"                        String parameters \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"justinyjt"},"content":"                        String[] desArr \u003d parameters.split(\" /\", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"justinyjt"},"content":"                        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"justinyjt"},"content":"                            String des \u003d desArr[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"justinyjt"},"content":"                            String time \u003d desArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"justinyjt"},"content":"                            paggro.add(new Event(des, time));","lastModifiedDate":"2022-01-17"},{"lineNumber":86,"author":{"gitId":"justinyjt"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) { // date not given or wrongly formatted","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"justinyjt"},"content":"                            //                            System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"justinyjt"},"content":"                            throw new PaggroException(\"    Really? \u003d.\u003d The use of the event command must be as follows:\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"justinyjt"},"content":"                                    \"      event \u003cDESCRIPTION\u003e /\u003cDATE AND/OR TIME\u003e\");","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"justinyjt"},"content":"                            //                            System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"justinyjt"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"justinyjt"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) { // no description given","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"justinyjt"},"content":"                        //                        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? The description of an event cannot be empty... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"justinyjt"},"content":"                        //                        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"justinyjt"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"justinyjt"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"justinyjt"},"content":"                    try {","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"justinyjt"},"content":"                        String parameters \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"justinyjt"},"content":"                        int i \u003d Integer.parseInt(parameters);","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"justinyjt"},"content":"                        paggro.delete(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"justinyjt"},"content":"                    } catch (NumberFormatException e) { // parameter was not a number","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? Can you input an actual number this time... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"justinyjt"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) { // no parameter given","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"justinyjt"},"content":"                        throw new PaggroException(\"    Really? delete has to be used with a number... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"justinyjt"},"content":"                        //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"justinyjt"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"justinyjt"},"content":"                } else { // command not recognised","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"justinyjt"},"content":"                    //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"justinyjt"},"content":"                    throw new PaggroException(\"    Come on... You don\u0027t actually expect me to understand that right... \u003d.\u003d\");","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"justinyjt"},"content":"                    //                    System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"justinyjt"},"content":"                }","lastModifiedDate":"2022-01-17"},{"lineNumber":116,"author":{"gitId":"justinyjt"},"content":"        } catch(PaggroException e){","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"justinyjt"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"justinyjt"},"content":"            System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"justinyjt"},"content":"        } finally{","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"justinyjt"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"justinyjt"},"content":"            inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"justinyjt"},"content":"            command \u003d inputArr[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":125,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":127,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"    Oh finally. Please don\u0027t come back anytime soon. \u003d.\u003d\");","lastModifiedDate":"2022-01-17"},{"lineNumber":128,"author":{"gitId":"justinyjt"},"content":"        System.out.println(\"   ________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":129,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":130,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"justinyjt":130}},{"path":"src/main/java/PaggroException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"public class PaggroException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"    public PaggroException(String msg) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"        super(msg);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"justinyjt":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"    public enum TaskType {","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"        TODO,","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"        DEADLINE,","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"        EVENT","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"justinyjt"},"content":"    TaskType type;","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"justinyjt"},"content":"    String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"justinyjt"},"content":"    boolean isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"justinyjt"},"content":"    public Task(String des, TaskType type) {","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"justinyjt"},"content":"        description \u003d des;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"justinyjt"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"justinyjt"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"justinyjt"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"justinyjt"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"justinyjt"},"content":"    public void markUndone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"justinyjt"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"justinyjt"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"justinyjt"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"justinyjt"},"content":"        return description;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"justinyjt":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"    public ToDo(String des) {","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"        super(des, TaskType.TODO);","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"justinyjt"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"justinyjt"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"justinyjt"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"justinyjt"},"content":"            return  \"[T][X] \" + description;","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"justinyjt"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"justinyjt"},"content":"            return \"[T][ ] \" + description;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"justinyjt"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"justinyjt"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"justinyjt"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"justinyjt":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justinyjt"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"justinyjt"},"content":"event go for class /Mon 2-3pm","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"justinyjt"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"justinyjt"},"content":"deadline finish homework /Tues 2pm","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"justinyjt"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"justinyjt"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"justinyjt"},"content":"unmark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"justinyjt"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"justinyjt"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"justinyjt":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"justinyjt"},"content":"if ! javac -cp ../src/main/java/PaggroBot.java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"justinyjt"},"content":"java -classpath ../bin PaggroBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"justinyjt"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justinyjt":3,"-":31}}]
