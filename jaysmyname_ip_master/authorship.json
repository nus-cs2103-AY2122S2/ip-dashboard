[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"# ConnorBot User Guide","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"**ConnorBot v1.1.0** is a desktop application that manages your tasks and keeps track of them for you. It comes with a Graphical User Interface (GUI) that looks beautiful and organised, making your task management efficient and easy to do. ","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"## Features ","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"### Listing all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"* [`list`](#list---lists-all-tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"### Adding a task","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"* [`todo`](#todo---adds-a-todo-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"* [`deadline`](#deadline---adds-a-deadline-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"* [`event`](#event---adds-an-event-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"### Deleting a task","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"* [`delete`](#delete---deletes-a-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"### Clearing all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"* [`clear`](#clear---clears-all-tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"### Marking/Unmarking a task","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"* [`mark`](#mark---marks-a-task-as-completed)","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"* [`unmark`](#unmark---unmarks-a-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"### Finding a task","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"* [`find`](#find---finds-a-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"### Sorting tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"* [`sort`](#sort---sorts-tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"### Exiting the program","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"* [`exit`](#exit---exits-the-program)","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"## Usage","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"Shows a list of all current tasks recorded in ConnorBot.","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"Example of usage: ","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"`list`","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"Here are your current tasks:","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"    1. [T][ ] Call Mom","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"    2. [E][ ] Wedding Party (At: Mar 14 2022 8:30PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"### `todo` - Adds a ToDo task","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"Adds a ToDo task into the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"`todo {task}`","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"`todo Call Mom`","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve added a new task:","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"    [T][ ] Laundry","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"You have 3 tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"### `deadline` - Adds a Deadline task","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"Adds a Deadline task into the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"`deadline {task} /by {DD-MM-YYYY HH:MM}`","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"`deadline Assignment /by 15-05-2022 15:30`","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve added a new task:","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"    [D][ ] Assignment (By: May 15 2022 3:00PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"You have 4 tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"### `event` - Adds an Event task","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"Adds a Event task into the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"`event {task} /at {DD-MM-YYYY HH:MM}`","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"`event Birthday Party /at 13-04-2022 10:00`","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve added a new task:","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"    [E][ ] Birthday Party (At: Apr 13 2022 10:00AM)","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"You have 5 tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"Deletes a task using its index from the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"jaysmyname"},"content":"`delete {index}`","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"jaysmyname"},"content":"`delete 1`","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":133,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":134,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":135,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve deleted the task:","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"jaysmyname"},"content":"    [T][ ] Call Mom","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"jaysmyname"},"content":"### `clear` - Clears all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"jaysmyname"},"content":"Clears all tasks from the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":142,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":143,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":144,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":145,"author":{"gitId":"jaysmyname"},"content":"`clear`","lastModifiedDate":"2022-02-15"},{"lineNumber":146,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":149,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"jaysmyname"},"content":"Poof! All your tasks are cleared!","lastModifiedDate":"2022-02-15"},{"lineNumber":151,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":153,"author":{"gitId":"jaysmyname"},"content":"### `mark` - Marks a task as completed","lastModifiedDate":"2022-02-15"},{"lineNumber":154,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":155,"author":{"gitId":"jaysmyname"},"content":"Marks a task as completed using its index in the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":156,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":157,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":159,"author":{"gitId":"jaysmyname"},"content":"`mark {index}`","lastModifiedDate":"2022-02-15"},{"lineNumber":160,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":161,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":162,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"jaysmyname"},"content":"`mark 3`","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":167,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":168,"author":{"gitId":"jaysmyname"},"content":"Good job! I\u0027ve marked the following task as completed:","lastModifiedDate":"2022-02-15"},{"lineNumber":169,"author":{"gitId":"jaysmyname"},"content":"    [D][X] Assignment (By: May 15 2022 3:00PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":170,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":171,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":172,"author":{"gitId":"jaysmyname"},"content":"### `unmark` - Unmarks a task","lastModifiedDate":"2022-02-15"},{"lineNumber":173,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":174,"author":{"gitId":"jaysmyname"},"content":"Unmarks a task as uncompleted using its index in the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":176,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"jaysmyname"},"content":"`unmark {index}`","lastModifiedDate":"2022-02-15"},{"lineNumber":179,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":180,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":181,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":182,"author":{"gitId":"jaysmyname"},"content":"`unmark 3`","lastModifiedDate":"2022-02-15"},{"lineNumber":183,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":184,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":185,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":186,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":187,"author":{"gitId":"jaysmyname"},"content":"Understood. I\u0027ve unmarked the following task:","lastModifiedDate":"2022-02-15"},{"lineNumber":188,"author":{"gitId":"jaysmyname"},"content":"    [D][ ] Assignment (By: May 15 2022 3:00PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":189,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":190,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":191,"author":{"gitId":"jaysmyname"},"content":"### `find` - Finds a task","lastModifiedDate":"2022-02-15"},{"lineNumber":192,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":193,"author":{"gitId":"jaysmyname"},"content":"Finds a task name in the task list by a keyword. All tasks that contain the keyword will be shown. The keyword can be more than one word or part of a word. The search is case-insensitive.","lastModifiedDate":"2022-02-15"},{"lineNumber":194,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":195,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":196,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":197,"author":{"gitId":"jaysmyname"},"content":"`find {keyword}`","lastModifiedDate":"2022-02-15"},{"lineNumber":198,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":199,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":200,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":201,"author":{"gitId":"jaysmyname"},"content":"`find party`","lastModifiedDate":"2022-02-15"},{"lineNumber":202,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":203,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":204,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":205,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":206,"author":{"gitId":"jaysmyname"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-15"},{"lineNumber":207,"author":{"gitId":"jaysmyname"},"content":"    [E][ ] Wedding Party (At: Mar 14 2022 8:30PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":208,"author":{"gitId":"jaysmyname"},"content":"    [E][ ] Birthday Party (At: Apr 13 2022 10:00AM)","lastModifiedDate":"2022-02-15"},{"lineNumber":209,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":210,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":211,"author":{"gitId":"jaysmyname"},"content":"### `sort` - Sorts tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":212,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":213,"author":{"gitId":"jaysmyname"},"content":"Sorts tasks by the given argument. Currenetly there are two ways to sort:","lastModifiedDate":"2022-02-15"},{"lineNumber":214,"author":{"gitId":"jaysmyname"},"content":"* `type` sorts tasks by their type, ToDos, Deadlines and Events in that order.","lastModifiedDate":"2022-02-15"},{"lineNumber":215,"author":{"gitId":"jaysmyname"},"content":"* `time` sorts tasks by chronological order. Todos are put at the end since they do not have a specified time.","lastModifiedDate":"2022-02-15"},{"lineNumber":216,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":217,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":218,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":219,"author":{"gitId":"jaysmyname"},"content":"`sort type`","lastModifiedDate":"2022-02-15"},{"lineNumber":220,"author":{"gitId":"jaysmyname"},"content":"`sort time`","lastModifiedDate":"2022-02-15"},{"lineNumber":221,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":222,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":223,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":224,"author":{"gitId":"jaysmyname"},"content":"`sort time`","lastModifiedDate":"2022-02-15"},{"lineNumber":225,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":226,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":227,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":228,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":229,"author":{"gitId":"jaysmyname"},"content":"Sorting tasks chronologically...","lastModifiedDate":"2022-02-15"},{"lineNumber":230,"author":{"gitId":"jaysmyname"},"content":"Here are your current tasks:","lastModifiedDate":"2022-02-15"},{"lineNumber":231,"author":{"gitId":"jaysmyname"},"content":"    1. [E][ ] Wedding Party (At: Mar 14 2022 8:30PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":232,"author":{"gitId":"jaysmyname"},"content":"    2. [E][ ] Birthday Party (At: Apr 13 2022 10:00AM)","lastModifiedDate":"2022-02-15"},{"lineNumber":233,"author":{"gitId":"jaysmyname"},"content":"    3. [D][ ] Assignment (By: May 15 2022 3:00PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":234,"author":{"gitId":"jaysmyname"},"content":"    4. [T][ ] Laundry\t","lastModifiedDate":"2022-02-15"},{"lineNumber":235,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":236,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":237,"author":{"gitId":"jaysmyname"},"content":"### `exit` - Exits the program","lastModifiedDate":"2022-02-15"},{"lineNumber":238,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":239,"author":{"gitId":"jaysmyname"},"content":"Disables any further input, bids farewell to the user, and closes itself after 2 seconds.","lastModifiedDate":"2022-02-15"},{"lineNumber":240,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":241,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":242,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":243,"author":{"gitId":"jaysmyname"},"content":"`exit`","lastModifiedDate":"2022-02-15"},{"lineNumber":244,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":245,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":248,"author":{"gitId":"jaysmyname"},"content":"Farewell. See you next time!","lastModifiedDate":"2022-02-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jaysmyname":243,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"plugins {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"repositories {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"dependencies {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"test {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    testLogging {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"        showExceptions true","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"        showCauses true","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"application {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"    mainClassName \u003d \"connor.Launcher\"","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"shadowJar {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"    archiveBaseName \u003d \"connor\"","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"checkstyle {","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"run{","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"jaysmyname":62}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"# ConnorBot User Guide","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"**ConnorBot v1.1.0** is a desktop application that manages your tasks and keeps track of them for you. It comes with a Graphical User Interface (GUI) that looks beautiful and organised, making your task management efficient and easy to do. ","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"### Listing all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"* [`list`](#list---lists-all-tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"### Adding a task","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"* [`todo`](#todo---adds-a-todo-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"* [`deadline`](#deadline---adds-a-deadline-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"* [`event`](#event---adds-an-event-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"### Deleting a task","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"* [`delete`](#delete---deletes-a-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"### Clearing all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"* [`clear`](#clear---clears-all-tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"### Marking/Unmarking a task","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"* [`mark`](#mark---marks-a-task-as-completed)","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"* [`unmark`](#unmark---unmarks-a-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"### Finding a task","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"* [`find`](#find---finds-a-task)","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"### Sorting tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"* [`sort`](#sort---sorts-tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"### Exiting the program","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"* [`exit`](#exit---exits-the-program)","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"Shows a list of all current tasks recorded in ConnorBot.","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"`list`","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"Here are your current tasks:","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"    1. [T][ ] Call Mom","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"    2. [E][ ] Wedding Party (At: Mar 14 2022 8:30PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"### `todo` - Adds a ToDo task","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"Adds a ToDo task into the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"`todo {task}`","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"`todo Call Mom`","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve added a new task:","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"    [T][ ] Call Mom","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"You have 3 tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"### `deadline` - Adds a Deadline task","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"Adds a Deadline task into the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"`deadline {task} /by {DD-MM-YYYY HH:MM}`","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"`deadline Assignment /by 15-05-2022 15:30`","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve added a new task:","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"    [D][ ] Assignment (By: May 15 2022 3:30PM)","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"You have 4 tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"### `event` - Adds an Event task","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"Adds a Event task into the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"`event {task} /at {DD-MM-YYYY HH:MM}`","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"`event Birthday Party /at 13-04-2022 10:00`","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve added a new task:","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"    [E][ ] Birthday Party (At: Apr 13 2022 10:00AM)","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"You have 5 tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"Deletes a task using its index from the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"jaysmyname"},"content":"`delete {index}`","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"jaysmyname"},"content":"`delete 1`","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":133,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":134,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":135,"author":{"gitId":"jaysmyname"},"content":"Alright, I\u0027ve deleted the task:","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"jaysmyname"},"content":"    [T][ ] Call Mom","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"jaysmyname"},"content":"### `clear` - Clears all tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"jaysmyname"},"content":"Clears all tasks from the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":142,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":143,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":144,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":145,"author":{"gitId":"jaysmyname"},"content":"`clear`","lastModifiedDate":"2022-02-15"},{"lineNumber":146,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":149,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":150,"author":{"gitId":"jaysmyname"},"content":"Poof! All your tasks are cleared!","lastModifiedDate":"2022-02-15"},{"lineNumber":151,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":153,"author":{"gitId":"jaysmyname"},"content":"### `mark` - Marks a task as completed","lastModifiedDate":"2022-02-15"},{"lineNumber":154,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":155,"author":{"gitId":"jaysmyname"},"content":"Marks a task as completed using its index in the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":156,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":157,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":158,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":159,"author":{"gitId":"jaysmyname"},"content":"`mark {index}`","lastModifiedDate":"2022-02-15"},{"lineNumber":160,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":161,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":162,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":163,"author":{"gitId":"jaysmyname"},"content":"`mark 3`","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":167,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":168,"author":{"gitId":"jaysmyname"},"content":"Good job! I\u0027ve marked the following task as completed:","lastModifiedDate":"2022-02-15"},{"lineNumber":169,"author":{"gitId":"jaysmyname"},"content":"    [D][X] Assignment (By: May 15 2022 3:30PM)","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":171,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":172,"author":{"gitId":"jaysmyname"},"content":"### `unmark` - Unmarks a task","lastModifiedDate":"2022-02-15"},{"lineNumber":173,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":174,"author":{"gitId":"jaysmyname"},"content":"Unmarks a task as uncompleted using its index in the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":176,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"jaysmyname"},"content":"`unmark {index}`","lastModifiedDate":"2022-02-15"},{"lineNumber":179,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":180,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":181,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":182,"author":{"gitId":"jaysmyname"},"content":"`unmark 3`","lastModifiedDate":"2022-02-15"},{"lineNumber":183,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":184,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":185,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":186,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":187,"author":{"gitId":"jaysmyname"},"content":"Understood. I\u0027ve unmarked the following task:","lastModifiedDate":"2022-02-15"},{"lineNumber":188,"author":{"gitId":"jaysmyname"},"content":"    [D][ ] Assignment (By: May 15 2022 3:30PM)","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":190,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":191,"author":{"gitId":"jaysmyname"},"content":"### `find` - Finds a task","lastModifiedDate":"2022-02-15"},{"lineNumber":192,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":193,"author":{"gitId":"jaysmyname"},"content":"Finds a task name in the task list by a keyword. All tasks that contain the keyword will be shown. The keyword can be more than one word or part of a word. The search is case-insensitive.","lastModifiedDate":"2022-02-15"},{"lineNumber":194,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":195,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":196,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":197,"author":{"gitId":"jaysmyname"},"content":"`find {keyword}`","lastModifiedDate":"2022-02-15"},{"lineNumber":198,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":199,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":200,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":201,"author":{"gitId":"jaysmyname"},"content":"`find party`","lastModifiedDate":"2022-02-15"},{"lineNumber":202,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":203,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":204,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":205,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":206,"author":{"gitId":"jaysmyname"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-15"},{"lineNumber":207,"author":{"gitId":"jaysmyname"},"content":"    [E][ ] Wedding Party (At: Mar 14 2022 8:30PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":208,"author":{"gitId":"jaysmyname"},"content":"    [E][ ] Birthday Party (At: Apr 13 2022 10:00AM)","lastModifiedDate":"2022-02-15"},{"lineNumber":209,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":210,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":211,"author":{"gitId":"jaysmyname"},"content":"### `sort` - Sorts tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":212,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":213,"author":{"gitId":"jaysmyname"},"content":"Sorts tasks by the given argument. Currenetly there are two ways to sort:","lastModifiedDate":"2022-02-15"},{"lineNumber":214,"author":{"gitId":"jaysmyname"},"content":"* `type` sorts tasks by their type, ToDos, Deadlines and Events in that order.","lastModifiedDate":"2022-02-15"},{"lineNumber":215,"author":{"gitId":"jaysmyname"},"content":"* `time` sorts tasks by chronological order. Todos are put at the end since they do not have a specified time.","lastModifiedDate":"2022-02-15"},{"lineNumber":216,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":217,"author":{"gitId":"jaysmyname"},"content":"Format:","lastModifiedDate":"2022-02-15"},{"lineNumber":218,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":219,"author":{"gitId":"jaysmyname"},"content":"`sort type`","lastModifiedDate":"2022-02-15"},{"lineNumber":220,"author":{"gitId":"jaysmyname"},"content":"`sort time`","lastModifiedDate":"2022-02-15"},{"lineNumber":221,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":222,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":223,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":224,"author":{"gitId":"jaysmyname"},"content":"`sort time`","lastModifiedDate":"2022-02-15"},{"lineNumber":225,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":226,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":227,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":228,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":229,"author":{"gitId":"jaysmyname"},"content":"Sorting tasks chronologically...","lastModifiedDate":"2022-02-15"},{"lineNumber":230,"author":{"gitId":"jaysmyname"},"content":"Here are your current tasks:","lastModifiedDate":"2022-02-15"},{"lineNumber":231,"author":{"gitId":"jaysmyname"},"content":"    1. [E][ ] Wedding Party (At: Mar 14 2022 8:30PM)","lastModifiedDate":"2022-02-15"},{"lineNumber":232,"author":{"gitId":"jaysmyname"},"content":"    2. [E][ ] Birthday Party (At: Apr 13 2022 10:00AM)","lastModifiedDate":"2022-02-15"},{"lineNumber":233,"author":{"gitId":"jaysmyname"},"content":"    3. [D][ ] Assignment (By: May 15 2022 3:30PM)","lastModifiedDate":"2022-03-12"},{"lineNumber":234,"author":{"gitId":"jaysmyname"},"content":"    4. [T][ ] Laundry\t","lastModifiedDate":"2022-02-15"},{"lineNumber":235,"author":{"gitId":"jaysmyname"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":236,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":237,"author":{"gitId":"jaysmyname"},"content":"### `exit` - Exits the program","lastModifiedDate":"2022-02-15"},{"lineNumber":238,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":239,"author":{"gitId":"jaysmyname"},"content":"Disables any further input, bids farewell to the user, and closes itself after 2 seconds.","lastModifiedDate":"2022-02-15"},{"lineNumber":240,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":241,"author":{"gitId":"jaysmyname"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":242,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":243,"author":{"gitId":"jaysmyname"},"content":"`exit`","lastModifiedDate":"2022-02-15"},{"lineNumber":244,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":245,"author":{"gitId":"jaysmyname"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":247,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":248,"author":{"gitId":"jaysmyname"},"content":"Farewell. See you next time!","lastModifiedDate":"2022-02-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"jaysmyname":227,"-":22}},{"path":"duke/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"# Duke project template","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"## Setting up in Intellij","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"   ```","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"   Hello from","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    ____        _        ","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"   ```","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"jaysmyname":24}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":":init","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":":win9xME_args","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":":execute","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":":end","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":":fail","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"exit /b 1","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":":mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":":omega","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"jaysmyname":103}},{"path":"src/main/java/connor/Connor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import connor.command.ByeCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.InvalidTaskFileException;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":" * Main class for Connor program to start running.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":" * @author jaysmyname","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":" * @version 1.1.0","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"public class Connor {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    public static final String CURRENT_VERSION \u003d \"Version 1.1.0\";","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    public static final String LINE \u003d \"_\".repeat(66);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"    public static final String INDENT \u003d \" \".repeat(4);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    public static final String INPUT_HERE \u003d \"\u003e\u003e\u003e \";","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    private static final String TASK_FILEPATH \u003d \"data/connor.txt\";","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    private static final String GOODBYE \u003d \"Farewell. See you next time!\";","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_FILE_NOT_FOUND \u003d \"Error! Task file not found!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_FIX_TASK_FILE_START \u003d \"ERROR: \";","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_FIX_TASK_FILE_END \u003d \"Please fix the appropriate typo \"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"            + \"in the task file or clear it completely.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"    private static boolean isActive \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code Connor} class.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"     * @param filePath File path to store text file of task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"    public Connor(String filePath) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"     * Runs the Connor program. Greets the user first, shows their current tasks,","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"     * and finally asks for the user\u0027s input.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"     * Once the user has inputted their command,","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"     * the program attempts to parse and activate the input if the input is valid,","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"     * before asking for another input. This process loops indefinitely until the user exits.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"    public void run() {","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"        ui.greetings();","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"        loadTasks();","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"        TaskList.viewTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"        print(LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"        while (isActive) {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"            System.out.print(INPUT_HERE);","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"            print(input);","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"            print(LINE);","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"            Parser p \u003d new Parser(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"            p.parse();","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"            print(LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"            storage.updateFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"        sc.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"     * Loads the tasks into storage.","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"    private void loadTasks() {","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"            storage.loadTasks();","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_FILE_NOT_FOUND);","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"        } catch (IndexOutOfBoundsException | InvalidTaskFileException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_FIX_TASK_FILE_START + e.getMessage());","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_FIX_TASK_FILE_END);","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"     * Runs the Connor Program in a GUI. Greets the user first, shows their current tasks,","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"     * and finally asks for the user\u0027s input.","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"     * Once the user has inputted their command,","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"     * the program attempts to parse and activate the input if the input is valid,","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"     * before asking for another input. This process loops indefinitely until the user exits.","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} message that greets the user followed by either an error","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"     * or a list of their tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"    public String runGui() {","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder sb \u003d new StringBuilder(ui.greetings());","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"            storage.loadTasks();","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"            sb.append(ERROR_FILE_NOT_FOUND);","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"            return sb.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"        } catch (IndexOutOfBoundsException | InvalidTaskFileException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"            sb.append(ERROR_FIX_TASK_FILE_START + e.getMessage() + \"\\n\" + ERROR_FIX_TASK_FILE_END);","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"            return sb.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"        sb.append(TaskList.viewTasks());","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"     * Gets a {@code String} of Connor\u0027s response to the given input.","lastModifiedDate":"2022-02-03"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"     * @param input","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"     * @return {@code String} of Connor\u0027s response to the given input.","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"        Parser p \u003d new Parser(input);","lastModifiedDate":"2022-02-02"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"        String response \u003d p.parse();","lastModifiedDate":"2022-02-02"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"        storage.updateFile();","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"jaysmyname"},"content":"        return response;","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":128,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"jaysmyname"},"content":"    public static String getGoodbye() {","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"jaysmyname"},"content":"        return GOODBYE;","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"jaysmyname"},"content":"     * Prints the given string to the console.","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"jaysmyname"},"content":"     * @param s String to be printed to console.","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"jaysmyname"},"content":"    private static void print(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":139,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":140,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":141,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":142,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"jaysmyname"},"content":"     * Sets isActive. Currently, only used by {@code ByeCommand} to exit the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"jaysmyname"},"content":"     * @param isActive","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"jaysmyname"},"content":"     * @see ByeCommand#activate()","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"jaysmyname"},"content":"    public static void setActive(boolean isActive) {","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"jaysmyname"},"content":"        Connor.isActive \u003d isActive;","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"jaysmyname"},"content":"     * Returns a {@code String} of the task file path.","lastModifiedDate":"2022-02-02"},{"lineNumber":154,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":155,"author":{"gitId":"jaysmyname"},"content":"     * @return String of the task file path.","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"jaysmyname"},"content":"    public static String getFilePath() {","lastModifiedDate":"2022-02-02"},{"lineNumber":158,"author":{"gitId":"jaysmyname"},"content":"        return TASK_FILEPATH;","lastModifiedDate":"2022-02-02"},{"lineNumber":159,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":161,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"jaysmyname"},"content":"     * Creates a new Connor object with the constant file path name and runs the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"jaysmyname"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"jaysmyname"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-16"},{"lineNumber":167,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":168,"author":{"gitId":"jaysmyname"},"content":"            new Connor(TASK_FILEPATH).run();","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"jaysmyname"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":170,"author":{"gitId":"jaysmyname"},"content":"            print(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":172,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":173,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":174,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":174}},{"path":"src/main/java/connor/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"public class Launcher {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jaysmyname":12}},{"path":"src/main/java/connor/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":" * Main class for GUI.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"     * Starts the GUI.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"     * @param stage The main stage of the GUI.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"            FXMLLoader loader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"            AnchorPane ap \u003d loader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"            stage.setTitle(\"ConnorBot v1.1.0\");","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"            stage.show();","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jaysmyname":36}},{"path":"src/main/java/connor/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.command.AddCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.command.ByeCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import connor.command.ChangeStatusCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import connor.command.ClearCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import connor.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import connor.command.CommandType;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import connor.command.DeleteCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import connor.command.FindCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"import connor.command.ListCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"import connor.command.SortCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"import connor.task.SortType;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskStatus;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":" * Parses the user\u0027s input and activates the correct command.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":" * @author jaysmyname","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INDEX_NOT_INTEGER \u003d \"Error! Index must be a valid integer.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_COMMAND_START \u003d \"My apologies, I don\u0027t understand what \u0027\";","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_COMMAND_END \u003d \"\u0027 means.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_SORT_TYPE \u003d \"Error! Invalid type of sort!\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"            + \"Sort commands available: \u0027time\u0027, \u0027type\u0027\";","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private CommandType commandType;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    private Command command;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    private boolean canActivate \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"    private StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code Parser} class. Parses the user\u0027s input and creates the corresponding","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"     * {@code Command} if the command is valid. If the command or description of the command is invalid,","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"     * the {@code Parser} object will register the command as invalid and set {@code canActivate}","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"     * to {@code false}.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"     * @param s User\u0027s input.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"    public Parser(String s) {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"        String[] statements \u003d s.trim().concat(\" \").split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"        String commandRaw \u003d statements[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"        String command \u003d statements[0].toLowerCase();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d statements[1].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        switch (command) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        case \"exit\":","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"        case \"bye\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"            setByeCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"        case \"list\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"            setListCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"        case \"todo\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"            setTodoCommand(desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"            setDeadlineCommand(desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"        case \"event\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"            setEventCommand(desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"        case \"delete\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"            setDeleteCommand(desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"        case \"clear\": {","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"            setClearCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"        case \"mark\": {","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"            setMarkCommand(desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"            setUnmarkCommand(desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"        case \"find\": {","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"            setFindCommand(desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"        case \"sort\": {","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"            setSortCommand(desc);","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"        default: {","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"            setUnknownCommand(commandRaw);","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"    private void setByeCommand() {","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.BYE;","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"        this.command \u003d new ByeCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"    private void setListCommand() {","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.LIST;","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"        this.command \u003d new ListCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"    private void setTodoCommand(String desc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.ADD;","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"        this.command \u003d new AddCommand(TaskType.TODO, desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"    private void setDeadlineCommand(String desc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.ADD;","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"        this.command \u003d new AddCommand(TaskType.DEADLINE, desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"    private void setEventCommand(String desc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.ADD;","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"        this.command \u003d new AddCommand(TaskType.EVENT, desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"    private void setDeleteCommand(String desc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":126,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.DELETE;","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"jaysmyname"},"content":"            int taskNo \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new DeleteCommand(taskNo);","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"jaysmyname"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"jaysmyname"},"content":"            setError(message, ERROR_INDEX_NOT_INTEGER);","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":135,"author":{"gitId":"jaysmyname"},"content":"    private void setClearCommand() {","lastModifiedDate":"2022-02-07"},{"lineNumber":136,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.CLEAR;","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"jaysmyname"},"content":"        this.command \u003d new ClearCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":140,"author":{"gitId":"jaysmyname"},"content":"    private void setMarkCommand(String desc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":141,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.CHANGE_STATUS;","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"jaysmyname"},"content":"            int taskNo \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new ChangeStatusCommand(TaskStatus.MARK, taskNo);","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"jaysmyname"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"jaysmyname"},"content":"            setError(message, ERROR_INDEX_NOT_INTEGER);","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":150,"author":{"gitId":"jaysmyname"},"content":"    private void setUnmarkCommand(String desc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":151,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.CHANGE_STATUS;","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"jaysmyname"},"content":"            int taskNo \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new ChangeStatusCommand(TaskStatus.UNMARK, taskNo);","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"jaysmyname"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"jaysmyname"},"content":"            setError(message, ERROR_INDEX_NOT_INTEGER);","lastModifiedDate":"2022-02-09"},{"lineNumber":157,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":160,"author":{"gitId":"jaysmyname"},"content":"    private void setFindCommand(String desc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":161,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.FIND;","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"jaysmyname"},"content":"        this.command \u003d new FindCommand(desc);","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":165,"author":{"gitId":"jaysmyname"},"content":"    private void setSortCommand(String desc) {","lastModifiedDate":"2022-02-09"},{"lineNumber":166,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.SORT;","lastModifiedDate":"2022-02-09"},{"lineNumber":167,"author":{"gitId":"jaysmyname"},"content":"        switch (desc.toLowerCase().trim()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"jaysmyname"},"content":"        case \"time\": {","lastModifiedDate":"2022-02-09"},{"lineNumber":169,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new SortCommand(SortType.TIME);","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":171,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":172,"author":{"gitId":"jaysmyname"},"content":"        case \"type\": {","lastModifiedDate":"2022-02-09"},{"lineNumber":173,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new SortCommand(SortType.TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":174,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"jaysmyname"},"content":"        default: {","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"jaysmyname"},"content":"            setError(message, ERROR_INVALID_SORT_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":178,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":179,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":180,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":181,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":182,"author":{"gitId":"jaysmyname"},"content":"    private void setUnknownCommand(String commandRaw) {","lastModifiedDate":"2022-02-07"},{"lineNumber":183,"author":{"gitId":"jaysmyname"},"content":"        this.commandType \u003d CommandType.UNKNOWN;","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"jaysmyname"},"content":"        setError(message, ERROR_INVALID_COMMAND_START + commandRaw + ERROR_INVALID_COMMAND_END);","lastModifiedDate":"2022-02-09"},{"lineNumber":185,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":186,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"jaysmyname"},"content":"    private void setError(StringBuilder sb, String errorMessage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":188,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-02-09"},{"lineNumber":189,"author":{"gitId":"jaysmyname"},"content":"        sb.append(errorMessage);","lastModifiedDate":"2022-02-09"},{"lineNumber":190,"author":{"gitId":"jaysmyname"},"content":"        canActivate \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":193,"author":{"gitId":"jaysmyname"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-02-07"},{"lineNumber":194,"author":{"gitId":"jaysmyname"},"content":"        return this.commandType;","lastModifiedDate":"2022-02-07"},{"lineNumber":195,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":198,"author":{"gitId":"jaysmyname"},"content":"     * Parses the command, if it is a valid command.","lastModifiedDate":"2022-01-26"},{"lineNumber":199,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"jaysmyname"},"content":"    public String parse() {","lastModifiedDate":"2022-02-02"},{"lineNumber":201,"author":{"gitId":"jaysmyname"},"content":"        if (!canActivate) {","lastModifiedDate":"2022-01-25"},{"lineNumber":202,"author":{"gitId":"jaysmyname"},"content":"            return message.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":203,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"jaysmyname"},"content":"        return command.activate();","lastModifiedDate":"2022-02-02"},{"lineNumber":205,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":207}},{"path":"src/main/java/connor/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.ConnorException;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.InvalidTaskFileException;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"import connor.task.ToDo;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":" * Stores the task list in the hard drive via a text file that can be retrieved and edited.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":" * @author jaysmyname","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_GENERAL \u003d \"An error occurred.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private String filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    private ArrayList\u003cTask\u003e copyTasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code Storage} class.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"     * @param filePath File path to store text file of task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"        makeDirectories(filePath);","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        new File(this.filePath).createNewFile();","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"        copyTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"     * Makes the corresponding directories based on the file path.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"     * @param filePath File path to the text file.","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"    private void makeDirectories(String filePath) {","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cFile\u003e filePathDirectories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"        File currentFilePath \u003d new File(filePath);","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        while (currentFilePath.getParentFile() !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"            File newFilePath \u003d currentFilePath.getParentFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"            filePathDirectories.add(newFilePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"            currentFilePath \u003d newFilePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"        for (int i \u003d filePathDirectories.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"            filePathDirectories.get(i).mkdirs();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"     * Loads the tasks from the hard drive in a text file and sets it","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"     * as the current task list in {@code TaskList}","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"     * @throws FileNotFoundException If the text file cannot be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"     * @throws IndexOutOfBoundsException If the text file is an invalid task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"     * @throws InvalidTaskFileException If the text file is an invalid task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"     * @see TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"    public void loadTasks() throws FileNotFoundException, IndexOutOfBoundsException, InvalidTaskFileException {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"        Scanner s \u003d new Scanner(new File(filePath));","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"        copyTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"            copyTasks.add(stringToTask(s.nextLine()));","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"        TaskList.setTasks(copyTasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"     * Converts a {@code Task} into a {@code String} to store into the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"     * @param t {@code Task} to be converted.","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of the Task suitable for storing in the text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"    public static String taskToString(Task t) throws ConnorException {","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"        switch (t.getTaskType()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"        case TODO: {","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"            return todoToString((ToDo) t);","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"        case DEADLINE: {","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"            return deadlineToString((Deadline) t);","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"        case EVENT: {","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"            return eventToString((Event) t);","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"        default: {","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"            // Something has gone wrong","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"            throw new ConnorException(\"Unexpected Task Type!\");","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"     * Converts a {@code ToDo} into a {@code String} to store into the text file.","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"     * @param t {@code ToDo} to be converted.","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of the ToDo suitable for storing in the text file.","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"    public static String todoToString(ToDo t) {","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"        String doneStatus \u003d t.isDone() ? \"[#] \" : \"[ ] \";","lastModifiedDate":"2022-02-07"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"        String taskType \u003d \"T\";","lastModifiedDate":"2022-02-07"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"        String spacing \u003d \" | \";","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d t.getDesc();","lastModifiedDate":"2022-02-07"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder sb \u003d new StringBuilder(doneStatus + taskType + spacing + desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"     * Converts a {@code Deadline} into a {@code String} to store into the text file.","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"     * @param t {@code Deadline} to be converted.","lastModifiedDate":"2022-02-07"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of the Deadline suitable for storing in the text file.","lastModifiedDate":"2022-02-07"},{"lineNumber":126,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":127,"author":{"gitId":"jaysmyname"},"content":"    public static String deadlineToString(Deadline t) {","lastModifiedDate":"2022-02-07"},{"lineNumber":128,"author":{"gitId":"jaysmyname"},"content":"        String doneStatus \u003d t.isDone() ? \"[#] \" : \"[ ] \";","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"jaysmyname"},"content":"        String taskType \u003d \"D\";","lastModifiedDate":"2022-02-07"},{"lineNumber":130,"author":{"gitId":"jaysmyname"},"content":"        String spacing \u003d \" | \";","lastModifiedDate":"2022-02-07"},{"lineNumber":131,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d t.getDesc();","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder sb \u003d new StringBuilder(doneStatus + taskType + spacing + desc);","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"jaysmyname"},"content":"        sb.append(spacing + \"By: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"jaysmyname"},"content":"        sb.append(t.getStorageDate());","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"jaysmyname"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":136,"author":{"gitId":"jaysmyname"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":137,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":139,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":140,"author":{"gitId":"jaysmyname"},"content":"     * Converts an {@code Event} into a {@code String} to store into the text file.","lastModifiedDate":"2022-02-07"},{"lineNumber":141,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":142,"author":{"gitId":"jaysmyname"},"content":"     * @param t {@code Event} to be converted.","lastModifiedDate":"2022-02-07"},{"lineNumber":143,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of the Event suitable for storing in the text file.","lastModifiedDate":"2022-02-07"},{"lineNumber":144,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":145,"author":{"gitId":"jaysmyname"},"content":"    public static String eventToString(Event t) {","lastModifiedDate":"2022-02-07"},{"lineNumber":146,"author":{"gitId":"jaysmyname"},"content":"        String doneStatus \u003d t.isDone() ? \"[#] \" : \"[ ] \";","lastModifiedDate":"2022-02-07"},{"lineNumber":147,"author":{"gitId":"jaysmyname"},"content":"        String taskType \u003d \"E\";","lastModifiedDate":"2022-02-07"},{"lineNumber":148,"author":{"gitId":"jaysmyname"},"content":"        String spacing \u003d \" | \";","lastModifiedDate":"2022-02-07"},{"lineNumber":149,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d t.getDesc();","lastModifiedDate":"2022-02-07"},{"lineNumber":150,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder sb \u003d new StringBuilder(doneStatus + taskType + spacing + desc);","lastModifiedDate":"2022-02-07"},{"lineNumber":151,"author":{"gitId":"jaysmyname"},"content":"        sb.append(spacing + \"At: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"jaysmyname"},"content":"        sb.append(t.getStorageDate());","lastModifiedDate":"2022-02-09"},{"lineNumber":153,"author":{"gitId":"jaysmyname"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"jaysmyname"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"jaysmyname"},"content":"     * Converts a {@code String} representation of a Task into its {@code Task} form.","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"jaysmyname"},"content":"     * @param s {@code String} to be converted.","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code Task} that the {@code String} represents.","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"jaysmyname"},"content":"     * @throws IndexOutOfBoundsException If the {@code String} has an invalid {@code Task} form.","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"jaysmyname"},"content":"     * @throws InvalidTaskFileException If the {@code String} has an invalid {@code Task} form.","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"jaysmyname"},"content":"    public static Task stringToTask(String s) throws IndexOutOfBoundsException, InvalidTaskFileException {","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"jaysmyname"},"content":"        char taskType \u003d s.charAt(4);","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"jaysmyname"},"content":"        char doneStatus \u003d s.charAt(1);","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"jaysmyname"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"jaysmyname"},"content":"        case \u0027T\u0027: {","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"jaysmyname"},"content":"            return stringToTodo(s, doneStatus);","lastModifiedDate":"2022-02-07"},{"lineNumber":171,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":172,"author":{"gitId":"jaysmyname"},"content":"        case \u0027D\u0027: {","lastModifiedDate":"2022-02-07"},{"lineNumber":173,"author":{"gitId":"jaysmyname"},"content":"            return stringToDeadline(s, doneStatus);","lastModifiedDate":"2022-02-07"},{"lineNumber":174,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":175,"author":{"gitId":"jaysmyname"},"content":"        case \u0027E\u0027: {","lastModifiedDate":"2022-02-07"},{"lineNumber":176,"author":{"gitId":"jaysmyname"},"content":"            return stringToEvent(s, doneStatus);","lastModifiedDate":"2022-02-07"},{"lineNumber":177,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":178,"author":{"gitId":"jaysmyname"},"content":"        default: {","lastModifiedDate":"2022-02-07"},{"lineNumber":179,"author":{"gitId":"jaysmyname"},"content":"            throw new InvalidTaskFileException(\"This task file is invalid!\");","lastModifiedDate":"2022-02-07"},{"lineNumber":180,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":181,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":182,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":183,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":184,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":185,"author":{"gitId":"jaysmyname"},"content":"     * Converts a {@code String} representation of a ToDo into its {@code Task} form.","lastModifiedDate":"2022-02-07"},{"lineNumber":186,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":187,"author":{"gitId":"jaysmyname"},"content":"     * @param s {@code String} to be converted.","lastModifiedDate":"2022-02-07"},{"lineNumber":188,"author":{"gitId":"jaysmyname"},"content":"     * @param doneStatus The character representing the ToDo\u0027s status.","lastModifiedDate":"2022-02-07"},{"lineNumber":189,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code ToDo} that the {@code String} represents.","lastModifiedDate":"2022-02-07"},{"lineNumber":190,"author":{"gitId":"jaysmyname"},"content":"     * @throws IndexOutOfBoundsException If the {@code String} has an invalid {@code ToDo} form.","lastModifiedDate":"2022-02-07"},{"lineNumber":191,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":192,"author":{"gitId":"jaysmyname"},"content":"    private static ToDo stringToTodo(String s, char doneStatus) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-02-07"},{"lineNumber":193,"author":{"gitId":"jaysmyname"},"content":"        String[] parts \u003d s.split(\" \\\\| \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d parts[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"jaysmyname"},"content":"        ToDo todo \u003d new ToDo(desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"jaysmyname"},"content":"        if (doneStatus \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"jaysmyname"},"content":"            todo.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"jaysmyname"},"content":"        return todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":200,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":201,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":202,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":203,"author":{"gitId":"jaysmyname"},"content":"     * Converts a {@code String} representation of a Deadline into its {@code Task} form.","lastModifiedDate":"2022-02-07"},{"lineNumber":204,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":205,"author":{"gitId":"jaysmyname"},"content":"     * @param s {@code String} to be converted.","lastModifiedDate":"2022-02-07"},{"lineNumber":206,"author":{"gitId":"jaysmyname"},"content":"     * @param doneStatus The character representing the Deadline\u0027s status.","lastModifiedDate":"2022-02-07"},{"lineNumber":207,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code Deadline} that the {@code String} represents.","lastModifiedDate":"2022-02-07"},{"lineNumber":208,"author":{"gitId":"jaysmyname"},"content":"     * @throws IndexOutOfBoundsException If the {@code String} has an invalid {@code Deadline} form.","lastModifiedDate":"2022-02-07"},{"lineNumber":209,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":210,"author":{"gitId":"jaysmyname"},"content":"    private static Deadline stringToDeadline(String s, char doneStatus) throws","lastModifiedDate":"2022-02-09"},{"lineNumber":211,"author":{"gitId":"jaysmyname"},"content":"            IndexOutOfBoundsException, InvalidTaskFileException {","lastModifiedDate":"2022-02-09"},{"lineNumber":212,"author":{"gitId":"jaysmyname"},"content":"        String[] parts \u003d s.split(\" \\\\| \", 3);","lastModifiedDate":"2022-01-25"},{"lineNumber":213,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d parts[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":214,"author":{"gitId":"jaysmyname"},"content":"        String when \u003d parts[2].replaceFirst(\"By: \", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"jaysmyname"},"content":"        Deadline deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":216,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"jaysmyname"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-02-09"},{"lineNumber":218,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(when, formatter);","lastModifiedDate":"2022-02-09"},{"lineNumber":219,"author":{"gitId":"jaysmyname"},"content":"            deadline \u003d new Deadline(desc, dateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":220,"author":{"gitId":"jaysmyname"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":221,"author":{"gitId":"jaysmyname"},"content":"            throw new InvalidTaskFileException(\"A deadline has an invalid date time format!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":222,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":223,"author":{"gitId":"jaysmyname"},"content":"        if (doneStatus \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":224,"author":{"gitId":"jaysmyname"},"content":"            deadline.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":225,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":226,"author":{"gitId":"jaysmyname"},"content":"        return deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":227,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":228,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":229,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":230,"author":{"gitId":"jaysmyname"},"content":"     * Converts a {@code String} representation of an Event into its {@code Task} form.","lastModifiedDate":"2022-02-07"},{"lineNumber":231,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":232,"author":{"gitId":"jaysmyname"},"content":"     * @param s {@code String} to be converted.","lastModifiedDate":"2022-02-07"},{"lineNumber":233,"author":{"gitId":"jaysmyname"},"content":"     * @param doneStatus The character representing the Event\u0027s status.","lastModifiedDate":"2022-02-07"},{"lineNumber":234,"author":{"gitId":"jaysmyname"},"content":"     * @return An {@code Event} that the {@code String} represents.","lastModifiedDate":"2022-02-07"},{"lineNumber":235,"author":{"gitId":"jaysmyname"},"content":"     * @throws IndexOutOfBoundsException If the {@code String} has an invalid {@code Event} form.","lastModifiedDate":"2022-02-07"},{"lineNumber":236,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":237,"author":{"gitId":"jaysmyname"},"content":"    private static Event stringToEvent(String s, char doneStatus) throws","lastModifiedDate":"2022-02-09"},{"lineNumber":238,"author":{"gitId":"jaysmyname"},"content":"            IndexOutOfBoundsException, InvalidTaskFileException {","lastModifiedDate":"2022-02-09"},{"lineNumber":239,"author":{"gitId":"jaysmyname"},"content":"        String[] parts \u003d s.split(\" \\\\| \", 3);","lastModifiedDate":"2022-01-25"},{"lineNumber":240,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d parts[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":241,"author":{"gitId":"jaysmyname"},"content":"        String when \u003d parts[2].replaceFirst(\"At: \", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":242,"author":{"gitId":"jaysmyname"},"content":"        Event event;","lastModifiedDate":"2022-01-25"},{"lineNumber":243,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":244,"author":{"gitId":"jaysmyname"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-02-09"},{"lineNumber":245,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(when, formatter);","lastModifiedDate":"2022-02-09"},{"lineNumber":246,"author":{"gitId":"jaysmyname"},"content":"            event \u003d new Event(desc, dateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":247,"author":{"gitId":"jaysmyname"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":248,"author":{"gitId":"jaysmyname"},"content":"            throw new InvalidTaskFileException(\"An event has an invalid date time format!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":249,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":250,"author":{"gitId":"jaysmyname"},"content":"        if (doneStatus \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":251,"author":{"gitId":"jaysmyname"},"content":"            event.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":252,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":253,"author":{"gitId":"jaysmyname"},"content":"        return event;","lastModifiedDate":"2022-01-25"},{"lineNumber":254,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":255,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":256,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":257,"author":{"gitId":"jaysmyname"},"content":"     * Updates the text file stored in the hard drive using the task list stored in {@code TaskList}.","lastModifiedDate":"2022-01-26"},{"lineNumber":258,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":259,"author":{"gitId":"jaysmyname"},"content":"    public void updateFile() {","lastModifiedDate":"2022-01-25"},{"lineNumber":260,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":261,"author":{"gitId":"jaysmyname"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":262,"author":{"gitId":"jaysmyname"},"content":"            StringBuilder textToUpdate \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":263,"author":{"gitId":"jaysmyname"},"content":"            copyTasks \u003d TaskList.getTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":264,"author":{"gitId":"jaysmyname"},"content":"            assert copyTasks !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":265,"author":{"gitId":"jaysmyname"},"content":"            for (Task t : copyTasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":266,"author":{"gitId":"jaysmyname"},"content":"                textToUpdate.append(taskToString(t));","lastModifiedDate":"2022-01-25"},{"lineNumber":267,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":268,"author":{"gitId":"jaysmyname"},"content":"            fw.write(textToUpdate.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":269,"author":{"gitId":"jaysmyname"},"content":"            fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":270,"author":{"gitId":"jaysmyname"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":271,"author":{"gitId":"jaysmyname"},"content":"            System.out.println(ERROR_GENERAL);","lastModifiedDate":"2022-01-25"},{"lineNumber":272,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":273,"author":{"gitId":"jaysmyname"},"content":"        } catch (ConnorException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":274,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-07"},{"lineNumber":275,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":276,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":277,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":277}},{"path":"src/main/java/connor/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Prints to the console things that should not be handled by the {@code Parser}.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" * (For example, the intro loading sequence.)","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":" *","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" * @author jaysmyname","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    public Ui() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"     * Prints the Connor logo and user greeting.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public String greetings() {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        String logo \u003d \" .d8888b.\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"                + \"d88P  Y88b\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"                + \"888    888\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"                + \"888         .d88b.  88888b.  88888b.   .d88b.  888d888\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"                + \"888        d88\\\"\\\"88b 888 \\\"88b 888 \\\"88b d88\\\"\\\"88b 888P\\\"\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"                + \"888    888 888  888 888  888 888  888 888  888 888\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"                + \"Y88b  d88P Y88..88P 888  888 888  888 Y88..88P 88\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"                + \" \\\"Y8888P\\\"   \\\"Y88P\\\"  888  888 888  888  \\\"Y88P\\\"  888\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"        print(\"\\n\" + logo + \"\\n\" + Connor.CURRENT_VERSION);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"        print(Connor.LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"        print(\"Hi, my name is Connor! I\u0027m your personalised android assistant.\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"                + \"Loading your current tasks...\");","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"        print(Connor.LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"        return \"Hi, my name is Connor! I\u0027m your personalised android assistant. \";","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"     * Prints the given string to the console.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"     * @param s String to be printed to console.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    public void print(String s) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":42}},{"path":"src/main/java/connor/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskType;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" * Represents an Add {@code Command}.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    private TaskType taskType;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    private String desc;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code AddCommand} class.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"     * @param taskType Type of Task.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    public AddCommand(TaskType taskType, String desc) {","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"     * Adds a {@code Task} to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"        return TaskList.addTask(taskType, desc);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":33}},{"path":"src/main/java/connor/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.Connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":" * Represents a Bye {@code Command}.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    public ByeCommand() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"     * Sets {@code Connor} to be inactive, exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(Connor.getGoodbye());","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        Connor.setActive(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        return Connor.getGoodbye();","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":20}},{"path":"src/main/java/connor/command/ChangeStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskStatus;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" * Represents a Change Status {@code Command}.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"public class ChangeStatusCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    private TaskStatus ts;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    private int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for the ChangeStatusCommand class.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"     * @param ts Status of the task to be changed to.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"     * @param index Index of the task to be changed.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    public ChangeStatusCommand(TaskStatus ts, int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        this.ts \u003d ts;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"     * Changes the status of the {@code Task} in the task list with the given index.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"        return TaskList.markStatus(ts, index);","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":31}},{"path":"src/main/java/connor/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":" * Represents a Clear {@code Command}.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    public ClearCommand() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"     * Clears all {@code Task}s in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"        return TaskList.clearTasks();","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":18}},{"path":"src/main/java/connor/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Represents a {@code Command}.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"     * Activates the command.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    public abstract String activate();","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":11}},{"path":"src/main/java/connor/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Types of Commands that are available.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public enum CommandType {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    BYE, LIST, ADD, DELETE, CLEAR, CHANGE_STATUS, FIND, SORT, UNKNOWN;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":8}},{"path":"src/main/java/connor/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":" * Represents a Delete {@code Command}.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    private int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"     * Deletes the {@code Task} in the task list with the given index.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        return TaskList.deleteTask(index);","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":22}},{"path":"src/main/java/connor/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    private String desc;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    public FindCommand(String desc) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"        return TaskList.findTasks(desc);","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jaysmyname":16}},{"path":"src/main/java/connor/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":" * Represents a List {@code Command}.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    public ListCommand() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"     * Lists the {@code Task}s in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"        return TaskList.viewTasks();","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":19}},{"path":"src/main/java/connor/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.SortType;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" * Represents a Sort {@code Command}.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    private SortType sortType;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"    public SortCommand(SortType sortType) {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"        this.sortType \u003d sortType;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    public String activate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        return TaskList.sortTasks(sortType);","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"jaysmyname":21}},{"path":"src/main/java/connor/exception/ConnorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public class ConnorException extends Exception {","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    public ConnorException(String message) {","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"        super(message);","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"jaysmyname":7}},{"path":"src/main/java/connor/exception/InvalidTaskFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public class InvalidTaskFileException extends ConnorException {","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    public InvalidTaskFileException(String message) {","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"        super(message);","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"jaysmyname":7}},{"path":"src/main/java/connor/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":" * Represents a box of dialog with text and an image.","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    private static final String lightBlue \u003d \"#A3ECFF\";","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private static final String darkBlue \u003d \"#254791\";","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    private static final String white \u003d \"#FFFFFF\";","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private static final String black \u003d \"#000000\";","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"    private ImageView avatar;","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for a DialogBox.","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"     * @param text Text to be put in the dialog box.","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"     * @param img Image to be put in the dialog box.","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"     * @param isUser True if the dialog box is for the user, false otherwise.","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"            FXMLLoader loader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"            loader.setController(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"            loader.setRoot(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"            loader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"        avatar.setImage(img);","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"        avatar.setClip(getCircleClip());","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"        if (isUser) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"            dialog.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"            dialog.setBackground(getColorBackground(darkBlue));","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"            dialog.setTextFill(Paint.valueOf(white));","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"            dialog.setBackground(getColorBackground(lightBlue));","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"            dialog.setTextFill(Paint.valueOf(black));","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"     * Flips the dialog box.","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"    private void flip() {","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"     * Creates a {@code Background} with a single flat color given by colorString.","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"     * @param colorString A String of the hex value of the color. E.g. \"#FCC877\".","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code Background} with a single flat color given by colorString.","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"    private Background getColorBackground(String colorString) {","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"        Paint paint \u003d Paint.valueOf(colorString);","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"        BackgroundFill bf \u003d new BackgroundFill(paint, new CornerRadii(10, false), null);","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"        return new Background(bf);","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"     * Creates a {@code Circle} with radius 25.","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code Circle} with radius 25.","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"    private Circle getCircleClip() {","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"        return new Circle(25, 25, 25);","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"     * Returns a {@code DialogBox} for the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"     * @param s String of the text inputted by the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"     * @param img Image of the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code DialogBox} for the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"    public static DialogBox getUserDialog(String s, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"        return new DialogBox(s, img, true);","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"     * Returns a {@code DialogBox} for Connor.","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"     * @param s String of the text Connor responds with.","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"     * @param img Image of Connor.","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code DialogBox} for Connor.","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"    public static DialogBox getConnorDialog(String s, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"        var db \u003d new DialogBox(s, img, false);","lastModifiedDate":"2022-02-03"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"        db.flip();","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"        return db;","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jaysmyname":122}},{"path":"src/main/java/connor/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import connor.Connor;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":" * Controller for MainWindow.","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    private Pane background;","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"    private Connor connor;","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserAvatar.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"    private Image connorImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ConnorAvatar.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    private Image mountainImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Mountain.png\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"     * Initializes the main window.","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"            connor \u003d new Connor(Connor.getFilePath());","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"        String startup \u003d connor.runGui();","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"                DialogBox.getConnorDialog(startup, connorImage)","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"        );","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"        setBackgroundBackground();","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"    private void setBackgroundBackground() {","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"        double width \u003d this.getWidth();","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"        double height \u003d this.getHeight();","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"        BackgroundImage bi \u003d new BackgroundImage(","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"                mountainImage,","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"                BackgroundRepeat.NO_REPEAT,","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"                BackgroundPosition.CENTER,","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"                new BackgroundSize(width, height, false, false, true, true));","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"        background.setBackground(new Background(bi));","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"    public void setConnor(Connor c) {","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"        this.connor \u003d c;","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"     * Handles user input by parsing what they typed.","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"            return;","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"        String response \u003d connor.getResponse(input);","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"                DialogBox.getConnorDialog(response, connorImage)","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"        );","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"        if (response.equals(Connor.getGoodbye())) {","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"            exit();","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"     * Closes the program.","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"    private void exit() {","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"        this.userInput.setPromptText(\"Goodbye!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"        this.userInput.setDisable(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"        this.sendButton.setDisable(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"        PauseTransition pt \u003d new PauseTransition(new Duration(2000));","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"        pt.setOnFinished(a -\u003e javafx.application.Platform.exit());","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"        pt.play();","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jaysmyname":112}},{"path":"src/main/java/connor/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" * Represents a {@code Task} of type {@code Deadline}.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code Deadline} class.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"     * @param dateTime Deadline date and time of the task.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"     * @see LocalDateTime","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    public Deadline(String desc, LocalDateTime dateTime) {","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.DEADLINE);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"     * Formats the date in an easier to read format.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"     * @return {@code String} representation of the LocalDate stored.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private String getDate() {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    public String getStorageDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"        return dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"     * Returns a {@code String} representation of a {@code Deadline Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of a {@code Deadline Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        return getType() + super.toString() + \" (By: \" + getDate() + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"     * Compares the Deadline object with another object and returns {@code true}","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"     * if and only if their descriptions, deadlines and statuses are the same.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"     * @param o Object to compare with.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"     * @return {@code true} if and only if the two Deadlines have the same","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"     * description, deadline and status, {@code false} otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"            return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"        } else if (!(o instanceof Deadline)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"            return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"            Deadline d \u003d (Deadline) o;","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"            return this.getDesc().equals(d.getDesc())","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.isDone().equals(d.isDone())","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.getDate().equals(d.getDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":72}},{"path":"src/main/java/connor/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":" * Represents a {@code Task} of type {@code Event}.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code Event} class.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"     * @param dateTime Deadline date and time of the task.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"     * @see LocalDateTime","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    public Event(String desc, LocalDateTime dateTime) {","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.EVENT);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"     * Formats the date in an easier to read format.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"     * @return {@code String} representation of the LocalDate stored.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private String getDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    public String getStorageDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"        return dateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"     * Returns a {@code String} representation of a {@code Event Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of a {@code Event Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        return getType() + super.toString() + \" (At: \" + getDate() + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"     * Compares the Event object with another object and returns {@code true}","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"     * if and only if their descriptions, event occasions and statuses are the same.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"     * @param o Object to compare with.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"     * @return {@code true} if and only if the two Events have the same","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"     * description, event occasion and status, {@code false} otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"            return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"        } else if (!(o instanceof Event)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"            return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"            Event e \u003d (Event) o;","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"            return this.getDesc().equals(e.getDesc())","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.isDone().equals(e.isDone())","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.getDate().equals(e.getDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":72}},{"path":"src/main/java/connor/task/SortType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Types of Sorts that can be used.","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public enum SortType {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    TIME, TYPE","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"jaysmyname":8}},{"path":"src/main/java/connor/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Represents a {@code Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    protected String desc;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    protected TaskType taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code Task} class.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    public Task(String desc, TaskType taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"        return taskType;","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    public String getType() {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        case TODO:","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            return \"[T]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"            return \"[D]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"        case EVENT:","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"            return \"[E]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"        default:","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"            return null;","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    public String getLetter() {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"        case TODO:","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"            return \"T\";","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"            return \"D\";","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        case EVENT:","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            return \"E\";","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"            return null;","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"    public String getDesc() {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"        return desc;","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"    public Boolean isDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"        return isDone;","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"    public void mark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"        setDone(true);","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"        setDone(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"    private void setDone(boolean isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"     * Returns a {@code String} representation of a generic {@code Task} type.","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of a generic {@code Task} type.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"        return getStatus() + \" \" + desc;","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":86}},{"path":"src/main/java/connor/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import connor.Connor;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.ConnorException;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":" * Stores and edits the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    private static final String INDENT \u003d Connor.INDENT;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    private static final String LINE \u003d Connor.LINE;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    private static final String EMPTY_TASK_LIST \u003d \"Your task list is empty.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    private static final String SHOW_TASKS \u003d \"Here are your current tasks: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"    private static final String ADD_NEW_TASK \u003d \"Alright, I\u0027ve added a new task: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    private static final String DELETE_TASK \u003d \"Alright, I\u0027ve deleted the task: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    private static final String CLEAR_TASKS_CONFIRM \u003d \"Are you REALLY sure you want to clear all your tasks?\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"            + \"Type \u0027yes\u0027 to confirm, type anything else (or nothing) to cancel.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    private static final String CLEAR_TASKS_CONFIRMED \u003d \"Poof! All your tasks are cleared!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    private static final String CLEAR_TASKS_CANCEL \u003d \"Cancelled clearing all tasks. Phew!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    private static final String MARK_TASK \u003d \"Good job! I\u0027ve marked the following task as completed: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private static final String UNMARK_TASK \u003d \"Understood. I\u0027ve unmarked the following task: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    private static final String NO_MATCHING_TASKS \u003d \"Sorry, there are no matching tasks in your list.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    private static final String SHOW_MATCHING_TASKS \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    private static final String SORT_TASKS_TIME \u003d \"Sorting tasks chronologically...\";","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    private static final String SORT_TASKS_TYPE \u003d \"Sorting tasks by type...\";","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_INDEX \u003d \"Error! Index cannot be empty.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_TASK_DESC \u003d \"Error! Tasks cannot have an empty description.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_DL_DESC \u003d \"Error! Deadlines cannot have empty descriptions or dates.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_EVENT_DESC \u003d \"Error! Events cannot have empty descriptions or dates.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INDEX_NOT_INTEGER \u003d \"Error! Index must be a valid integer.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INDEX_OUT_OF_RANGE \u003d \"Error! Given index is out of range.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_DL_FORMAT \u003d \"Error! Wrong format for deadlines.\\n\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"            + \"Format:  deadline {task} /by DD-MM-YYYY HH:MM\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"            + \"Example: deadline Finish Project /by 25-02-2022 23:59\";","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_EVENT_FORMAT \u003d \"Error! Wrong format for events.\\n\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"            + \"Format:  event {task} /at DD-MM-YYYY HH:MM\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"            + \"Example: event Birthday Party /at 10-02-2022 12:30\";","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_TASK_TYPE \u003d \"Oh no! Incorrect Task type!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_TASK_STATUS \u003d \"Oh no! Invalid Task status!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_SORT_TYPE \u003d \"Oh no! Invalid Sort type!\";","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_MARK_EMPTY \u003d \"Error! I can\u0027t mark an empty task list!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_UNMARK_EMPTY \u003d \"Error! I can\u0027t unmark an empty task list!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"    public static void setTasks(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        tasks \u003d t;","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"        return tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"     * Prints the {@code Task}s on the console, with one {@code Task} in each line.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"     * If there are no {@code Task}s in the task list, the method will print that","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"     * there are no {@code Task}s on the console.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"     * @return A String listing all the tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"    public static String viewTasks() {","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"            print(EMPTY_TASK_LIST);","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"            return EMPTY_TASK_LIST;","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"        print(SHOW_TASKS);","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder tasksToString \u003d new StringBuilder(SHOW_TASKS + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"            tasksToString.append(INDENT + i + \". \" + tasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"        return tasksToString.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"     * Adds a {@code Task} into the task list with a description.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"     * @param taskType Type of {@code Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the task and also the occasion if the {@code Task} is a","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"     *             {@code Deadline} or an {@code Event}.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"     * @return Message containing confirmation that a task was added or an error.","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"    public static String addTask(TaskType taskType, String desc) {","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_EMPTY_TASK_DESC);","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"            return ERROR_EMPTY_TASK_DESC;","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"            switch (taskType) {","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"            case TODO:","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"                addTodo(desc, message);","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"            case DEADLINE: {","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"                addDeadline(desc, message);","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"            case EVENT: {","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"                addEvent(desc, message);","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"            default: {","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"                // Something has gone wrong","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"                return ERROR_INVALID_TASK_TYPE;","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"        } catch (ConnorException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"            print(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"        // After task is added show current number of tasks","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"        print(\"\");","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"        getNumberOfTasks();","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"        message.append(getNumberOfTasksString());","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"        return message.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"jaysmyname"},"content":"     * Adds a {@code ToDo} into the task list with a description.","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the ToDo task.","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"jaysmyname"},"content":"     * @param message Message to build upon.","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"jaysmyname"},"content":"    private static void addTodo(String desc, StringBuilder message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"jaysmyname"},"content":"        ToDo todo \u003d new ToDo(desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"jaysmyname"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"jaysmyname"},"content":"        print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"jaysmyname"},"content":"        print(INDENT + todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"jaysmyname"},"content":"        message.append(ADD_NEW_TASK + \"\\n\" + INDENT + todo + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":137,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"jaysmyname"},"content":"     * Adds a {@code Deadline} into the task list with a description and the date and time. The method splits the","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"jaysmyname"},"content":"     * description into two parts, the actual description and when the {@code Task} is due,","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"jaysmyname"},"content":"     * with the delimiter \"/by\". The deadline should be a valid date time format.","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the Deadline task and also the occasion.","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"jaysmyname"},"content":"     * @param message Message to build upon.","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"jaysmyname"},"content":"    private static void addDeadline(String desc, StringBuilder message) throws ConnorException {","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"jaysmyname"},"content":"        if (!desc.contains(\"/by\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"jaysmyname"},"content":"            throw new ConnorException(ERROR_INVALID_DL_FORMAT);","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"jaysmyname"},"content":"        String[] phrases \u003d desc.split(\"/by\", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"jaysmyname"},"content":"        String thing \u003d phrases[0].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"jaysmyname"},"content":"        String when \u003d phrases[1].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"jaysmyname"},"content":"        if (thing.isBlank() || when.isBlank()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"jaysmyname"},"content":"            throw new ConnorException(ERROR_EMPTY_DL_DESC);","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"jaysmyname"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-02-09"},{"lineNumber":159,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(when, formatter);","lastModifiedDate":"2022-02-09"},{"lineNumber":160,"author":{"gitId":"jaysmyname"},"content":"            Deadline deadline \u003d new Deadline(thing, dateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":161,"author":{"gitId":"jaysmyname"},"content":"            tasks.add(deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"jaysmyname"},"content":"            print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"jaysmyname"},"content":"            message.append(ADD_NEW_TASK + \"\\n\" + INDENT + deadline + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":165,"author":{"gitId":"jaysmyname"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"jaysmyname"},"content":"            throw new ConnorException(ERROR_INVALID_DL_FORMAT);","lastModifiedDate":"2022-02-09"},{"lineNumber":167,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":171,"author":{"gitId":"jaysmyname"},"content":"     * Adds an {@code Event} into the task list with a description and the date and time. The method splits the","lastModifiedDate":"2022-02-09"},{"lineNumber":172,"author":{"gitId":"jaysmyname"},"content":"     * description into two parts, the actual description and when the {@code Task} occurs,","lastModifiedDate":"2022-02-09"},{"lineNumber":173,"author":{"gitId":"jaysmyname"},"content":"     * with the delimiter \"/at\". The event occasion should be a valid date time format.","lastModifiedDate":"2022-02-09"},{"lineNumber":174,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the Event task and also the occasion.","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"jaysmyname"},"content":"     * @param message Message to build upon.","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":178,"author":{"gitId":"jaysmyname"},"content":"    private static void addEvent(String desc, StringBuilder message) throws ConnorException {","lastModifiedDate":"2022-02-09"},{"lineNumber":179,"author":{"gitId":"jaysmyname"},"content":"        if (!desc.contains(\"/at\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"jaysmyname"},"content":"            throw new ConnorException(ERROR_INVALID_EVENT_FORMAT);","lastModifiedDate":"2022-02-09"},{"lineNumber":181,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"jaysmyname"},"content":"        String[] phrases \u003d desc.split(\"/at\", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"jaysmyname"},"content":"        String thing \u003d phrases[0].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"jaysmyname"},"content":"        String when \u003d phrases[1].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"jaysmyname"},"content":"        if (thing.isBlank() || when.isBlank()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"jaysmyname"},"content":"            throw new ConnorException(ERROR_EMPTY_EVENT_DESC);","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"jaysmyname"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-02-09"},{"lineNumber":190,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(when, formatter);","lastModifiedDate":"2022-02-09"},{"lineNumber":191,"author":{"gitId":"jaysmyname"},"content":"            Event event \u003d new Event(thing, dateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":192,"author":{"gitId":"jaysmyname"},"content":"            tasks.add(event);","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"jaysmyname"},"content":"            print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + event);","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"jaysmyname"},"content":"            message.append(ADD_NEW_TASK + \"\\n\" + INDENT + event + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"jaysmyname"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"jaysmyname"},"content":"            throw new ConnorException(ERROR_INVALID_EVENT_FORMAT);","lastModifiedDate":"2022-02-09"},{"lineNumber":198,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":200,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":201,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":202,"author":{"gitId":"jaysmyname"},"content":"     * Deletes a {@code Task} in the task list with the given index.","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"jaysmyname"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"jaysmyname"},"content":"     * @return Message containing confirmation that a task was deleted or an error.","lastModifiedDate":"2022-02-02"},{"lineNumber":206,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"jaysmyname"},"content":"    public static String deleteTask(int index) {","lastModifiedDate":"2022-02-02"},{"lineNumber":208,"author":{"gitId":"jaysmyname"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":209,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":210,"author":{"gitId":"jaysmyname"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":211,"author":{"gitId":"jaysmyname"},"content":"            tasks.remove(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":212,"author":{"gitId":"jaysmyname"},"content":"            print(DELETE_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":213,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + t);","lastModifiedDate":"2022-01-25"},{"lineNumber":214,"author":{"gitId":"jaysmyname"},"content":"            return DELETE_TASK + \"\\n\" + INDENT + t;","lastModifiedDate":"2022-02-02"},{"lineNumber":215,"author":{"gitId":"jaysmyname"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":216,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"jaysmyname"},"content":"            return ERROR_INDEX_OUT_OF_RANGE;","lastModifiedDate":"2022-02-02"},{"lineNumber":218,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":220,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":221,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":222,"author":{"gitId":"jaysmyname"},"content":"     * Clears all {@code Task}s from the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":223,"author":{"gitId":"jaysmyname"},"content":"     * @return Message containing confirmation that all tasks were cleared.","lastModifiedDate":"2022-02-02"},{"lineNumber":224,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":225,"author":{"gitId":"jaysmyname"},"content":"    public static String clearTasks() {","lastModifiedDate":"2022-02-02"},{"lineNumber":226,"author":{"gitId":"jaysmyname"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":227,"author":{"gitId":"jaysmyname"},"content":"        tasks.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":228,"author":{"gitId":"jaysmyname"},"content":"        print(CLEAR_TASKS_CONFIRMED);","lastModifiedDate":"2022-01-25"},{"lineNumber":229,"author":{"gitId":"jaysmyname"},"content":"        return CLEAR_TASKS_CONFIRMED;","lastModifiedDate":"2022-02-02"},{"lineNumber":230,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":231,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":232,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":233,"author":{"gitId":"jaysmyname"},"content":"     * Marks/Unmarks a {@code Task} in the task list with the given index.","lastModifiedDate":"2022-01-26"},{"lineNumber":234,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":235,"author":{"gitId":"jaysmyname"},"content":"     * @param ts Status of the task to be applied.","lastModifiedDate":"2022-01-26"},{"lineNumber":236,"author":{"gitId":"jaysmyname"},"content":"     * @param index Index of the task to be marked/unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"jaysmyname"},"content":"     * @return Message containing confirmation that a task was marked/unmarked or an error.","lastModifiedDate":"2022-02-02"},{"lineNumber":238,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":239,"author":{"gitId":"jaysmyname"},"content":"    public static String markStatus(TaskStatus ts, int index) {","lastModifiedDate":"2022-02-02"},{"lineNumber":240,"author":{"gitId":"jaysmyname"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":241,"author":{"gitId":"jaysmyname"},"content":"        switch (ts) {","lastModifiedDate":"2022-01-25"},{"lineNumber":242,"author":{"gitId":"jaysmyname"},"content":"        case MARK: {","lastModifiedDate":"2022-01-25"},{"lineNumber":243,"author":{"gitId":"jaysmyname"},"content":"            return markTask(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":244,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":245,"author":{"gitId":"jaysmyname"},"content":"        case UNMARK: {","lastModifiedDate":"2022-02-07"},{"lineNumber":246,"author":{"gitId":"jaysmyname"},"content":"            return unmarkTask(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":247,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":248,"author":{"gitId":"jaysmyname"},"content":"        default: {","lastModifiedDate":"2022-02-07"},{"lineNumber":249,"author":{"gitId":"jaysmyname"},"content":"            // Something has gone wrong","lastModifiedDate":"2022-02-07"},{"lineNumber":250,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_INVALID_TASK_STATUS);","lastModifiedDate":"2022-02-07"},{"lineNumber":251,"author":{"gitId":"jaysmyname"},"content":"            return ERROR_INVALID_TASK_STATUS;","lastModifiedDate":"2022-02-07"},{"lineNumber":252,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":253,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":254,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":255,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":256,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":257,"author":{"gitId":"jaysmyname"},"content":"     * Marks a {@code Task} in the task list with the given index.","lastModifiedDate":"2022-02-07"},{"lineNumber":258,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":259,"author":{"gitId":"jaysmyname"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2022-02-07"},{"lineNumber":260,"author":{"gitId":"jaysmyname"},"content":"     * @return Message containing confirmation that a task was marked or an error.","lastModifiedDate":"2022-02-07"},{"lineNumber":261,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":262,"author":{"gitId":"jaysmyname"},"content":"    private static String markTask(int index) {","lastModifiedDate":"2022-02-07"},{"lineNumber":263,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":264,"author":{"gitId":"jaysmyname"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":265,"author":{"gitId":"jaysmyname"},"content":"            t.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":266,"author":{"gitId":"jaysmyname"},"content":"            print(MARK_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":267,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + t);","lastModifiedDate":"2022-01-25"},{"lineNumber":268,"author":{"gitId":"jaysmyname"},"content":"            return MARK_TASK + \"\\n\" + INDENT + t;","lastModifiedDate":"2022-02-02"},{"lineNumber":269,"author":{"gitId":"jaysmyname"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":270,"author":{"gitId":"jaysmyname"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":271,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_MARK_EMPTY);","lastModifiedDate":"2022-01-25"},{"lineNumber":272,"author":{"gitId":"jaysmyname"},"content":"                return ERROR_MARK_EMPTY;","lastModifiedDate":"2022-02-02"},{"lineNumber":273,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":274,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-01-25"},{"lineNumber":275,"author":{"gitId":"jaysmyname"},"content":"            getNumberOfTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":276,"author":{"gitId":"jaysmyname"},"content":"            return ERROR_INDEX_OUT_OF_RANGE + \"\\n\" + getNumberOfTasksString();","lastModifiedDate":"2022-02-02"},{"lineNumber":277,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":278,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":279,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":280,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":281,"author":{"gitId":"jaysmyname"},"content":"     * Unmarks a {@code Task} in the task list with the given index.","lastModifiedDate":"2022-02-07"},{"lineNumber":282,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":283,"author":{"gitId":"jaysmyname"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2022-02-07"},{"lineNumber":284,"author":{"gitId":"jaysmyname"},"content":"     * @return Message containing confirmation that a task was unmarked or an error.","lastModifiedDate":"2022-02-07"},{"lineNumber":285,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":286,"author":{"gitId":"jaysmyname"},"content":"    private static String unmarkTask(int index) {","lastModifiedDate":"2022-02-07"},{"lineNumber":287,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":288,"author":{"gitId":"jaysmyname"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":289,"author":{"gitId":"jaysmyname"},"content":"            t.unmark();","lastModifiedDate":"2022-01-25"},{"lineNumber":290,"author":{"gitId":"jaysmyname"},"content":"            print(UNMARK_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":291,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + t);","lastModifiedDate":"2022-01-25"},{"lineNumber":292,"author":{"gitId":"jaysmyname"},"content":"            return UNMARK_TASK + \"\\n\" + INDENT + t;","lastModifiedDate":"2022-02-02"},{"lineNumber":293,"author":{"gitId":"jaysmyname"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":294,"author":{"gitId":"jaysmyname"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":295,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_UNMARK_EMPTY);","lastModifiedDate":"2022-01-25"},{"lineNumber":296,"author":{"gitId":"jaysmyname"},"content":"                return ERROR_MARK_EMPTY;","lastModifiedDate":"2022-02-02"},{"lineNumber":297,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":298,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-01-25"},{"lineNumber":299,"author":{"gitId":"jaysmyname"},"content":"            getNumberOfTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":300,"author":{"gitId":"jaysmyname"},"content":"            return ERROR_INDEX_OUT_OF_RANGE + \"\\n\" + getNumberOfTasksString();","lastModifiedDate":"2022-02-02"},{"lineNumber":301,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":302,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":303,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":304,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":305,"author":{"gitId":"jaysmyname"},"content":"     * Finds {@code Task}s in the task list that have the keyword in their description,","lastModifiedDate":"2022-01-27"},{"lineNumber":306,"author":{"gitId":"jaysmyname"},"content":"     * prints out the matching tasks and returns an {@code ArrayList} with the matching tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":307,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":308,"author":{"gitId":"jaysmyname"},"content":"     * @param keyword Keyword used to find matching {@code Task}s.","lastModifiedDate":"2022-01-27"},{"lineNumber":309,"author":{"gitId":"jaysmyname"},"content":"     * @return A String listing all matching tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":310,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":311,"author":{"gitId":"jaysmyname"},"content":"    public static String findTasks(String keyword) {","lastModifiedDate":"2022-02-02"},{"lineNumber":312,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":313,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2022-02-02"},{"lineNumber":314,"author":{"gitId":"jaysmyname"},"content":"        for (Task t : TaskList.getTasks()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":315,"author":{"gitId":"jaysmyname"},"content":"            // Search is not case-sensitive","lastModifiedDate":"2022-01-27"},{"lineNumber":316,"author":{"gitId":"jaysmyname"},"content":"            if (t.getDesc().toLowerCase().contains(keyword.trim().toLowerCase())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":317,"author":{"gitId":"jaysmyname"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":318,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":319,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":320,"author":{"gitId":"jaysmyname"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":321,"author":{"gitId":"jaysmyname"},"content":"            print(NO_MATCHING_TASKS);","lastModifiedDate":"2022-01-27"},{"lineNumber":322,"author":{"gitId":"jaysmyname"},"content":"            return NO_MATCHING_TASKS;","lastModifiedDate":"2022-02-02"},{"lineNumber":323,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":324,"author":{"gitId":"jaysmyname"},"content":"            print(SHOW_MATCHING_TASKS);","lastModifiedDate":"2022-01-27"},{"lineNumber":325,"author":{"gitId":"jaysmyname"},"content":"            taskListString.append(SHOW_MATCHING_TASKS + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":326,"author":{"gitId":"jaysmyname"},"content":"            for (int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":327,"author":{"gitId":"jaysmyname"},"content":"                print(INDENT + i + \". \" + matchingTasks.get(i - 1));","lastModifiedDate":"2022-01-27"},{"lineNumber":328,"author":{"gitId":"jaysmyname"},"content":"                taskListString.append(INDENT + i + \". \" + matchingTasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":329,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":330,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":331,"author":{"gitId":"jaysmyname"},"content":"        return taskListString.toString();","lastModifiedDate":"2022-02-02"},{"lineNumber":332,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":333,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":334,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":335,"author":{"gitId":"jaysmyname"},"content":"     * Sorts the list of Tasks by the SortType given.","lastModifiedDate":"2022-02-09"},{"lineNumber":336,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":337,"author":{"gitId":"jaysmyname"},"content":"     * @param sortType Type of sort used to sort the tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":338,"author":{"gitId":"jaysmyname"},"content":"     * @return Message containing confirmation that a sort has been done, or an error.","lastModifiedDate":"2022-02-09"},{"lineNumber":339,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":340,"author":{"gitId":"jaysmyname"},"content":"    public static String sortTasks(SortType sortType) {","lastModifiedDate":"2022-02-09"},{"lineNumber":341,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-09"},{"lineNumber":342,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":343,"author":{"gitId":"jaysmyname"},"content":"            switch (sortType) {","lastModifiedDate":"2022-02-09"},{"lineNumber":344,"author":{"gitId":"jaysmyname"},"content":"            case TYPE: {","lastModifiedDate":"2022-02-09"},{"lineNumber":345,"author":{"gitId":"jaysmyname"},"content":"                sortTasksByType(sb);","lastModifiedDate":"2022-02-09"},{"lineNumber":346,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":347,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":348,"author":{"gitId":"jaysmyname"},"content":"            case TIME: {","lastModifiedDate":"2022-02-09"},{"lineNumber":349,"author":{"gitId":"jaysmyname"},"content":"                sortTasksByTime(sb);","lastModifiedDate":"2022-02-09"},{"lineNumber":350,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":351,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":352,"author":{"gitId":"jaysmyname"},"content":"            default: {","lastModifiedDate":"2022-02-09"},{"lineNumber":353,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INVALID_SORT_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":354,"author":{"gitId":"jaysmyname"},"content":"                sb.append(ERROR_INVALID_SORT_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":355,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":356,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":357,"author":{"gitId":"jaysmyname"},"content":"        } catch (ConnorException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":358,"author":{"gitId":"jaysmyname"},"content":"            print(e.getMessage());","lastModifiedDate":"2022-02-09"},{"lineNumber":359,"author":{"gitId":"jaysmyname"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-09"},{"lineNumber":360,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":361,"author":{"gitId":"jaysmyname"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":362,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":363,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":364,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":365,"author":{"gitId":"jaysmyname"},"content":"     * Sorts tasks by type. ToDos first, then Deadlines, then Events.","lastModifiedDate":"2022-02-09"},{"lineNumber":366,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":367,"author":{"gitId":"jaysmyname"},"content":"     * @param sb Message to append to.","lastModifiedDate":"2022-02-09"},{"lineNumber":368,"author":{"gitId":"jaysmyname"},"content":"     * @throws ConnorException If a {@code Task} in the list is not of a valid task type.","lastModifiedDate":"2022-02-09"},{"lineNumber":369,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":370,"author":{"gitId":"jaysmyname"},"content":"    private static void sortTasksByType(StringBuilder sb) throws ConnorException {","lastModifiedDate":"2022-02-09"},{"lineNumber":371,"author":{"gitId":"jaysmyname"},"content":"        print(SORT_TASKS_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":372,"author":{"gitId":"jaysmyname"},"content":"        sb.append(SORT_TASKS_TYPE + \"\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":373,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cTask\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":374,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cTask\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":375,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cTask\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":376,"author":{"gitId":"jaysmyname"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":377,"author":{"gitId":"jaysmyname"},"content":"            switch (task.getTaskType()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":378,"author":{"gitId":"jaysmyname"},"content":"            case TODO: {","lastModifiedDate":"2022-02-09"},{"lineNumber":379,"author":{"gitId":"jaysmyname"},"content":"                todos.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":380,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":381,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":382,"author":{"gitId":"jaysmyname"},"content":"            case DEADLINE: {","lastModifiedDate":"2022-02-09"},{"lineNumber":383,"author":{"gitId":"jaysmyname"},"content":"                deadlines.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":384,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":385,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":386,"author":{"gitId":"jaysmyname"},"content":"            case EVENT: {","lastModifiedDate":"2022-02-09"},{"lineNumber":387,"author":{"gitId":"jaysmyname"},"content":"                events.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":388,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":389,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":390,"author":{"gitId":"jaysmyname"},"content":"            default: {","lastModifiedDate":"2022-02-09"},{"lineNumber":391,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":392,"author":{"gitId":"jaysmyname"},"content":"                throw new ConnorException(ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":393,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":394,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":395,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":396,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":397,"author":{"gitId":"jaysmyname"},"content":"        sortedTasks.addAll(todos);","lastModifiedDate":"2022-02-09"},{"lineNumber":398,"author":{"gitId":"jaysmyname"},"content":"        sortedTasks.addAll(deadlines);","lastModifiedDate":"2022-02-09"},{"lineNumber":399,"author":{"gitId":"jaysmyname"},"content":"        sortedTasks.addAll(events);","lastModifiedDate":"2022-02-09"},{"lineNumber":400,"author":{"gitId":"jaysmyname"},"content":"        setTasks(sortedTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":401,"author":{"gitId":"jaysmyname"},"content":"        sb.append(viewTasks());","lastModifiedDate":"2022-02-09"},{"lineNumber":402,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":403,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":404,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":405,"author":{"gitId":"jaysmyname"},"content":"     * Sorts Deadlines and Events in chronological order, then ToDos are appended at the end.","lastModifiedDate":"2022-02-09"},{"lineNumber":406,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":407,"author":{"gitId":"jaysmyname"},"content":"     * @param sb Message to append to.","lastModifiedDate":"2022-02-09"},{"lineNumber":408,"author":{"gitId":"jaysmyname"},"content":"     * @throws ConnorException If a {@code Task} in the list is not of a valid task type.","lastModifiedDate":"2022-02-09"},{"lineNumber":409,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":410,"author":{"gitId":"jaysmyname"},"content":"    private static void sortTasksByTime(StringBuilder sb) throws ConnorException {","lastModifiedDate":"2022-02-09"},{"lineNumber":411,"author":{"gitId":"jaysmyname"},"content":"        print(SORT_TASKS_TIME);","lastModifiedDate":"2022-02-09"},{"lineNumber":412,"author":{"gitId":"jaysmyname"},"content":"        sb.append(SORT_TASKS_TIME + \"\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":413,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cToDo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":414,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":415,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":416,"author":{"gitId":"jaysmyname"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":417,"author":{"gitId":"jaysmyname"},"content":"            switch (task.getTaskType()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":418,"author":{"gitId":"jaysmyname"},"content":"            case TODO: {","lastModifiedDate":"2022-02-09"},{"lineNumber":419,"author":{"gitId":"jaysmyname"},"content":"                todos.add((ToDo) task);","lastModifiedDate":"2022-02-09"},{"lineNumber":420,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":421,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":422,"author":{"gitId":"jaysmyname"},"content":"            case DEADLINE: {","lastModifiedDate":"2022-02-09"},{"lineNumber":423,"author":{"gitId":"jaysmyname"},"content":"                deadlines.add((Deadline) task);","lastModifiedDate":"2022-02-09"},{"lineNumber":424,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":425,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":426,"author":{"gitId":"jaysmyname"},"content":"            case EVENT: {","lastModifiedDate":"2022-02-09"},{"lineNumber":427,"author":{"gitId":"jaysmyname"},"content":"                events.add((Event) task);","lastModifiedDate":"2022-02-09"},{"lineNumber":428,"author":{"gitId":"jaysmyname"},"content":"                break;","lastModifiedDate":"2022-02-09"},{"lineNumber":429,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":430,"author":{"gitId":"jaysmyname"},"content":"            default: {","lastModifiedDate":"2022-02-09"},{"lineNumber":431,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":432,"author":{"gitId":"jaysmyname"},"content":"                throw new ConnorException(ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-02-09"},{"lineNumber":433,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":434,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":435,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":436,"author":{"gitId":"jaysmyname"},"content":"        deadlines.sort(Comparator.comparing(Deadline::getDateTime));","lastModifiedDate":"2022-02-09"},{"lineNumber":437,"author":{"gitId":"jaysmyname"},"content":"        events.sort(Comparator.comparing(Event::getDateTime));","lastModifiedDate":"2022-02-09"},{"lineNumber":438,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":439,"author":{"gitId":"jaysmyname"},"content":"        while (!(deadlines.isEmpty() || events.isEmpty())) {","lastModifiedDate":"2022-02-09"},{"lineNumber":440,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime deadlineTime \u003d deadlines.get(0).getDateTime();","lastModifiedDate":"2022-02-09"},{"lineNumber":441,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime eventTime \u003d events.get(0).getDateTime();","lastModifiedDate":"2022-02-09"},{"lineNumber":442,"author":{"gitId":"jaysmyname"},"content":"            if (deadlineTime.isBefore(eventTime)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":443,"author":{"gitId":"jaysmyname"},"content":"                sortedTasks.add(deadlines.remove(0));","lastModifiedDate":"2022-02-09"},{"lineNumber":444,"author":{"gitId":"jaysmyname"},"content":"            } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":445,"author":{"gitId":"jaysmyname"},"content":"                sortedTasks.add(events.remove(0));","lastModifiedDate":"2022-02-09"},{"lineNumber":446,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":447,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":448,"author":{"gitId":"jaysmyname"},"content":"        if (deadlines.isEmpty()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":449,"author":{"gitId":"jaysmyname"},"content":"            sortedTasks.addAll(events);","lastModifiedDate":"2022-02-09"},{"lineNumber":450,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":451,"author":{"gitId":"jaysmyname"},"content":"        if (events.isEmpty()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":452,"author":{"gitId":"jaysmyname"},"content":"            sortedTasks.addAll(deadlines);","lastModifiedDate":"2022-02-09"},{"lineNumber":453,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":454,"author":{"gitId":"jaysmyname"},"content":"        sortedTasks.addAll(todos);","lastModifiedDate":"2022-02-09"},{"lineNumber":455,"author":{"gitId":"jaysmyname"},"content":"        setTasks(sortedTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":456,"author":{"gitId":"jaysmyname"},"content":"        sb.append(viewTasks());","lastModifiedDate":"2022-02-09"},{"lineNumber":457,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":458,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":459,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":460,"author":{"gitId":"jaysmyname"},"content":"     * Returns the number of tasks in the task list, and also prints out a message","lastModifiedDate":"2022-01-26"},{"lineNumber":461,"author":{"gitId":"jaysmyname"},"content":"     * saying the number of tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":462,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":463,"author":{"gitId":"jaysmyname"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":464,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":465,"author":{"gitId":"jaysmyname"},"content":"    public static int getNumberOfTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":466,"author":{"gitId":"jaysmyname"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":467,"author":{"gitId":"jaysmyname"},"content":"        String plurality \u003d tasks.size() \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2022-01-25"},{"lineNumber":468,"author":{"gitId":"jaysmyname"},"content":"        print(\"You have \" + tasks.size() + \" task\" + plurality + \".\");","lastModifiedDate":"2022-01-25"},{"lineNumber":469,"author":{"gitId":"jaysmyname"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":470,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":471,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":472,"author":{"gitId":"jaysmyname"},"content":"    public static String getNumberOfTasksString() {","lastModifiedDate":"2022-02-02"},{"lineNumber":473,"author":{"gitId":"jaysmyname"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":474,"author":{"gitId":"jaysmyname"},"content":"        String plurality \u003d tasks.size() \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2022-02-02"},{"lineNumber":475,"author":{"gitId":"jaysmyname"},"content":"        return \"You have \" + tasks.size() + \" task\" + plurality + \".\";","lastModifiedDate":"2022-02-02"},{"lineNumber":476,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":477,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":478,"author":{"gitId":"jaysmyname"},"content":"    private static void print(String s) {","lastModifiedDate":"2022-01-25"},{"lineNumber":479,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-25"},{"lineNumber":480,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":481,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":481}},{"path":"src/main/java/connor/task/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Statuses of Tasks that can be applied.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public enum TaskStatus {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    MARK, UNMARK","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":8}},{"path":"src/main/java/connor/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Types of Tasks that can be created.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"jaysmyname":8}},{"path":"src/main/java/connor/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":" * Represents a {@code Task} of type {@code ToDo}.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"     * Constructor for {@code ToDo} class.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.TODO);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"     * Returns a {@code String} representation of a {@code ToDo Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"     * @return A {@code String} representation of a {@code ToDo Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        return getType() + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"     * Compares the ToDo object with another object and returns {@code true}","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"     * if and only if their descriptions and statuses are the same.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"     * @param o Object to compare with.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"     * @return {@code true} if and only if the two ToDos have the same","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"     * description and status, {@code false} otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"            return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"        } else if (!(o instanceof ToDo)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"            return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"            ToDo t \u003d (ToDo) o;","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"            return this.getDesc().equals(t.getDesc())","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.isDone().equals(t.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"            \u003cFont name\u003d\"Lucida Sans Typewriter Regular\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    \u003cImageView fx:id\u003d\"avatar\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jaysmyname":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"connor.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" promptText\u003d\"Type a command...\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    \u003cPane fx:id\u003d\"background\" prefHeight\u003d\"757.0\" prefWidth\u003d\"600.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"757.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" cache\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"999.0\" prefWidth\u003d\"999.0\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"jaysmyname":25}},{"path":"src/test/java/connor/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.ConnorException;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.InvalidTaskFileException;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"import connor.task.ToDo;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"    public void testStorageStaticMethods() {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"            ToDo t \u003d new ToDo(\"Test\");","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"[ ] T | Test\\n\", Storage.taskToString(t));","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"            t.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"[#] T | Test\\n\", Storage.taskToString(t));","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(\"19-02-2022 14:30\", formatter);","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"            Deadline d \u003d new Deadline(\"Test\", dateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"[ ] D | Test | By: 19-02-2022 14:30\\n\", Storage.taskToString(d));","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"            d.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"[#] D | Test | By: 19-02-2022 14:30\\n\", Storage.taskToString(d));","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"            LocalDateTime dateTime2 \u003d LocalDateTime.parse(\"31-03-2022 23:30\", formatter);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"            Event e \u003d new Event(\"Test\", dateTime2);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"[ ] E | Test | At: 31-03-2022 23:30\\n\", Storage.taskToString(e));","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"            e.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"[#] E | Test | At: 31-03-2022 23:30\\n\", Storage.taskToString(e));","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"            ToDo t2 \u003d new ToDo(\"Things\");","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"            String s \u003d \"[ ] T | Things\";","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(t2, Storage.stringToTask(s));","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"            t2.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"            String s2 \u003d \"[#] T | Things\";","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(t2, Storage.stringToTask(s2));","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"        } catch (InvalidTaskFileException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        } catch (ConnorException err) {","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            fail();","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        String s4 \u003d \"[ ] X | Blah\";","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"\", Storage.stringToTask(s4));","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"        } catch (InvalidTaskFileException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"This task file is invalid!\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"        String s5 \u003d \"[ ] D | Invalid Number of delimiters\";","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Storage.stringToTask(s5));","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":64}},{"path":"src/test/java/connor/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskType;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    public void testTaskListMethods() {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"        TaskList.setTasks(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(new ArrayList\u003c\u003e(), TaskList.getTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(0, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.TODO, \"Things\");","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(1, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"Things /by 19-02-2022 14:30\");","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"Things /at 19-02-2022 14:30\");","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"Things /at   \");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"     /at Monday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.EVENT, \"Thing /at 19-02-2022 14:30\");","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.EVENT, \"Thing/at19-02-2022 14:30\");","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(4, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.EVENT, \"ThingMonday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(4, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"        TaskList.deleteTask(2);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"        TaskList.deleteTask(999999);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"        TaskList.deleteTask(-999999);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"        TaskList.clearTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(0, TaskList.getNumberOfTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"clear","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"todo Do Laundry","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"deadline Study /by 10-02-2022 23:59","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"event Birthday Party/at19-02-2022 10:30","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"mark asdfg","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"unmark 66","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"todo ppppppppppp","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"event Meet Friend /at Sunday 12pm","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"event Meet Friend /at 13-02-2022 12:00","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"delete 4","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"delete 99","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"delete asdf","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"find party","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"find nd","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"find xxxxxxxx","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"asdfGHJKL","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"exit","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"jaysmyname":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"javac -cp ..\\src\\main\\java\\connor -Xlint:none -d ..\\bin ..\\src\\main\\java\\connor\\*.java ..\\src\\main\\java\\connor\\command\\*.java ..\\src\\main\\java\\connor\\exception\\*.java ..\\src\\main\\java\\connor\\task\\*.java ..\\src\\main\\java\\connor\\gui\\*.java","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"\tpause","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"java -classpath ..\\bin connor.Launcher \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"pause","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"jaysmyname":4,"-":19}}]
