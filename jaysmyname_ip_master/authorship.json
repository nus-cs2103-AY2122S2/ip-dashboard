[{"path":"src/main/java/connor/Connor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.InvalidTaskFileException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"public class Connor {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    public static final String CURRENT_VERSION \u003d \"Version 1.0.0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    public static final String LINE \u003d \"_\".repeat(66);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    public static final String INDENT \u003d \" \".repeat(4);","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public static final String INPUT_HERE \u003d \"\u003e\u003e\u003e \";","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    private static final String TASK_FILEPATH \u003d \"data/connor.txt\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    private static final String TASK_DIRECTORY \u003d \"./data\";","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_FILE_NOT_FOUND \u003d \"Error! Task file not found!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    private static boolean isActive \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    public Connor(String filePath, String taskDirectory) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        this.storage \u003d new Storage(filePath, taskDirectory);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    public void run() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"        ui.greetings();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"            storage.loadTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_FILE_NOT_FOUND);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"            return;","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"        } catch (IndexOutOfBoundsException | InvalidTaskFileException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"            print(\"ERROR: \" + e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"            print(\"Please fix the appropriate typo in the task file or clear it completely.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"            return;","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        TaskList.viewTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        print(LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"        while (isActive) {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"            System.out.print(INPUT_HERE);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"            print(input);","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"            print(LINE);","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"            Parser p \u003d new Parser(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"            p.parse();","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"            print(LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"            storage.updateFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"        sc.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"        private static void print(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"    public static void setActive(boolean b) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"        isActive \u003d b;","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"            new Connor(TASK_FILEPATH, TASK_DIRECTORY).run();","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"            print(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":79}},{"path":"src/main/java/connor/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.command.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskStatus;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INDEX_NOT_INTEGER \u003d \"Error! Index must be a valid integer.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_COMMAND_START \u003d \"My apologies, I don\u0027t understand what \u0027\";","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_COMMAND_END \u003d \"\u0027 means.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"    CommandType ct;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    Command command;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    boolean canActivate \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public Parser(String s) {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        String[] statement \u003d s.trim().concat(\" \").split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        String x \u003d statement[0].toLowerCase();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d statement[1].trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        switch (x) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        case \"exit\":","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"        case \"bye\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.BYE;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new ByeCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"        case \"list\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.LIST;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new ListCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        case \"todo\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.ADD;","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new AddCommand(TaskType.TODO, desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.ADD;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new AddCommand(TaskType.DEADLINE, desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"        case \"event\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.ADD;","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new AddCommand(TaskType.EVENT, desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"        case \"delete\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.DELETE;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"                int taskNo \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"                this.command \u003d new DeleteCommand(taskNo);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"                System.out.println(ERROR_INDEX_NOT_INTEGER);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"                canActivate \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"        case \"clear\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.CLEAR;","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"            this.command \u003d new ClearCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"        case \"mark\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.CHANGE_STATUS;","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"                int taskNo \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"                this.command \u003d new ChangeStatusCommand(TaskStatus.MARK, taskNo);","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"                System.out.println(ERROR_INDEX_NOT_INTEGER);","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"                canActivate \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.CHANGE_STATUS;","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"                int taskNo \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"                this.command \u003d new ChangeStatusCommand(TaskStatus.UNMARK, taskNo);","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"                System.out.println(ERROR_INDEX_NOT_INTEGER);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"                canActivate \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"        default: {","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"            this.ct \u003d CommandType.UNKNOWN;","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"            System.out.println(ERROR_INVALID_COMMAND_START + statement[0] + ERROR_INVALID_COMMAND_END);","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"            canActivate \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"    public void parse() {","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"        if (!canActivate) {","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"            return;","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"        command.activate();","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":100}},{"path":"src/main/java/connor/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.InvalidTaskFileException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_GENERAL \u003d \"An error occurred.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    String filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    String taskDirectory;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    public Storage(String filePath, String taskDirectory) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        this.taskDirectory \u003d taskDirectory;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        new File(taskDirectory).mkdirs();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"        new File(filePath).createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    public void loadTasks() throws FileNotFoundException, IndexOutOfBoundsException, InvalidTaskFileException {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            tasks.add(stringToTask(s.nextLine()));","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"        TaskList.setTasks(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    public static String taskToString(Task t) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"        String spacing \u003d \" | \";","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"        String taskType \u003d t.getLetter();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        String doneness \u003d t.isDone() ? \"[#] \" : \"[ ] \";","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"        String desc \u003d t.getDesc();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"        StringBuilder sb \u003d new StringBuilder(doneness + taskType + spacing + desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"            sb.append(spacing + \"By: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"            sb.append(((Deadline) t).getBy());","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        if (t instanceof Event) {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"            sb.append(spacing + \"At: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            sb.append(((Event) t).getAt());","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"    public static Task stringToTask(String s) throws IndexOutOfBoundsException, InvalidTaskFileException {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"        char c \u003d s.charAt(4);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"        char d \u003d s.charAt(1);","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"        switch (c) {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"        case \u0027T\u0027: {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"            String[] parts \u003d s.split(\" \\\\| \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"            String desc \u003d parts[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"            ToDo todo \u003d new ToDo(desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"            if (d \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"                todo.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"            return todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"        case \u0027D\u0027: {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"            String[] parts \u003d s.split(\" \\\\| \", 3);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"            String desc \u003d parts[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"            String when \u003d parts[2].replaceAll(\"By: \", \"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"            Deadline deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"                // Check if \u0027when\u0027 is a valid date","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"                LocalDate ld \u003d LocalDate.parse(when);","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"                deadline \u003d new Deadline(desc, ld);","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"                // Otherwise, treat it as a normal String","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"                deadline \u003d new Deadline(desc, when);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"            if (d \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"                deadline.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"            return deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"        case \u0027E\u0027: {","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"            String[] parts \u003d s.split(\" \\\\| \", 3);","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"            String desc \u003d parts[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"            String when \u003d parts[2].replaceAll(\"At: \", \"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"            Event event;","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"                // Check if \u0027when\u0027 is a valid date","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"                LocalDate ld \u003d LocalDate.parse(when);","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"                event \u003d new Event(desc, ld);","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"                // Otherwise, treat it as a normal String","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"                event \u003d new Event(desc, when);","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"            if (d \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"                event.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"            return event;","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"        default: {","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"            throw new InvalidTaskFileException(\"This task file is invalid!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"    public void updateFile() {","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"            StringBuilder textToUpdate \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"            for (Task t : TaskList.getTasks()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"                textToUpdate.append(taskToString(t));","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"            fw.write(textToUpdate.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"            fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"            System.out.println(ERROR_GENERAL);","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":125}},{"path":"src/main/java/connor/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"    public Ui() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    public void display(String s) {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    public void greetings() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        String logo \u003d \" .d8888b.\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"                + \"d88P  Y88b\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"                + \"888    888\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"                + \"888         .d88b.  88888b.  88888b.   .d88b.  888d888\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"                + \"888        d88\\\"\\\"88b 888 \\\"88b 888 \\\"88b d88\\\"\\\"88b 888P\\\"\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"                + \"888    888 888  888 888  888 888  888 888  888 888\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"                + \"Y88b  d88P Y88..88P 888  888 888  888 Y88..88P 88\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"                + \" \\\"Y8888P\\\"   \\\"Y88P\\\"  888  888 888  888  \\\"Y88P\\\"  888\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        print(\"\\n\" + logo + \"\\n\" + Connor.CURRENT_VERSION);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        print(Connor.LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"        print(\"Hi, my name is Connor! I\u0027m your personalised android assistant.\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"                + \"Loading your current tasks...\");","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        print(Connor.LINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private void print(String s) {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":31}},{"path":"src/main/java/connor/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    TaskType tt;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    String desc;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    public AddCommand(TaskType tt, String desc) {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"        this.tt \u003d tt;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public void activate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(tt, desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":21}},{"path":"src/main/java/connor/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.Connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    public ByeCommand() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    public void activate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(\"Farewell. See you next time!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        Connor.setActive(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":14}},{"path":"src/main/java/connor/command/ChangeStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskStatus;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public class ChangeStatusCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    TaskStatus ts;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    int index;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    public ChangeStatusCommand(TaskStatus ts, int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"        this.ts \u003d ts;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public void activate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        TaskList.markStatus(ts, index);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":19}},{"path":"src/main/java/connor/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    public ClearCommand() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    public void activate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"        TaskList.clearTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":12}},{"path":"src/main/java/connor/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"    public abstract void activate();","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":7}},{"path":"src/main/java/connor/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public enum CommandType {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    BYE, LIST, ADD, DELETE, CLEAR, CHANGE_STATUS, UNKNOWN;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":5}},{"path":"src/main/java/connor/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    int index;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    public void activate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"        TaskList.deleteTask(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":16}},{"path":"src/main/java/connor/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    public ListCommand() {}","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    public void activate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"        TaskList.viewTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":13}},{"path":"src/main/java/connor/exception/ConnorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public class ConnorException extends Exception {","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    public ConnorException(String message) {","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"        super(message);","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"jaysmyname":7}},{"path":"src/main/java/connor/exception/InvalidTaskFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public class InvalidTaskFileException extends ConnorException {","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    public InvalidTaskFileException(String message) {","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"        super(message);","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"jaysmyname":7}},{"path":"src/main/java/connor/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    protected String by;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    protected boolean hasLocalDate \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    public Deadline(String desc, String by) {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.DEADLINE);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public Deadline(String desc, LocalDate date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.DEADLINE);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        this.by \u003d date.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        this.hasLocalDate \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    public String getBy() {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        return by;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    public boolean hasLocalDate() {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"        return hasLocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    private String getDate() {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        if (hasLocalDate) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            // Of the form \"June 24, 2019\"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMMM d, yyyy\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"            return by;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"        return getType() + super.toString() + \" (By: \" + getDate() + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"            return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        } else if (!(o instanceof Deadline)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"            Deadline d \u003d (Deadline) o;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"            return this.getDesc().equals(d.getDesc())","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.isDone().equals(d.isDone())","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.getDate().equals(d.getDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":58}},{"path":"src/main/java/connor/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"    protected String at;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    protected boolean hasLocalDate \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    public Event(String desc, String at) {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.EVENT);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public Event(String desc, LocalDate date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.EVENT);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        this.at \u003d date.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        this.hasLocalDate \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    public String getAt() {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        return at;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    public boolean hasLocalDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"        return hasLocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        if (hasLocalDate) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            // Of the form \"June 24, 2019\"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMMM d, yyyy\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"            return at;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"        return getType() + super.toString() + \" (At: \" + getDate() + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"            return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        } else if (!(o instanceof Event)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"            Event e \u003d (Event) o;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"            return this.getDesc().equals(e.getDesc())","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.isDone().equals(e.isDone())","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.getDate().equals(e.getDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":58}},{"path":"src/main/java/connor/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    protected String desc;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    protected TaskType taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    public Task(String desc, TaskType taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"    public String getType() {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        case TODO:","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"            return \"[T]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"            return \"[D]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        case EVENT:","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"            return \"[E]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"        default:","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"            return null;","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"    public String getLetter() {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        case TODO:","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            return \"T\";","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"            return \"D\";","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"        case EVENT:","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"            return \"E\";","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"            return null;","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"    public String getDesc() {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"        return desc;","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"    public Boolean isDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        return isDone;","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"    public void mark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"        return getStatus() + \" \" + desc;","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":64}},{"path":"src/main/java/connor/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.Connor;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    private static final String INDENT \u003d Connor.INDENT;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    private static final String LINE \u003d Connor.LINE;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"    private static final String EMPTY_TASK_LIST \u003d \"Your task list is empty.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    private static final String SHOW_TASKS \u003d \"Here are your current tasks: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    private static final String ADD_NEW_TASK \u003d \"Alright, I\u0027ve added a new task: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    private static final String DELETE_TASK \u003d \"Alright, I\u0027ve deleted the task: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    private static final String CLEAR_TASKS_CONFIRM \u003d \"Are you REALLY sure you want to clear all your tasks?\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"            + \"Type \u0027yes\u0027 to confirm, type anything else (or nothing) to cancel.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"    private static final String CLEAR_TASKS_CONFIRMED \u003d \"Poof! All your tasks are cleared!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"    private static final String CLEAR_TASKS_CANCEL \u003d \"Cancelled clearing all tasks. Phew!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"    private static final String MARK_TASK \u003d \"Good job! I\u0027ve marked the following task as completed: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"    private static final String UNMARK_TASK \u003d \"Understood. I\u0027ve unmarked the following task: \";","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_INDEX \u003d \"Error! Index cannot be empty.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_TASK_DESC \u003d \"Error! Tasks cannot have an empty description.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_DL_DESC \u003d \"Error! Deadlines cannot have empty descriptions or dates.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_EMPTY_EVENT_DESC \u003d \"Error! Events cannot have empty descriptions or dates.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INDEX_NOT_INTEGER \u003d \"Error! Index must be a valid integer.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INDEX_OUT_OF_RANGE \u003d \"Error! Given index is out of range.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_DL_FORMAT \u003d \"Error! Wrong format for deadlines.\\n\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"            + \"Deadline tasks must include \\\"by\\\" in the description.\\nExample: \\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"            + \"\u003e\u003e\u003e deadline Finish project /by Monday Morning\";","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_EVENT_FORMAT \u003d \"Error! Wrong format for events.\\n\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"            + \"Event tasks must include \\\"at\\\" in the description.\\nExample: \\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            + \"\u003e\u003e\u003e event Birthday Party at May 5th\";","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_INVALID_TASK_TYPE \u003d \"Oh no! Incorrect Task type!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_MARK_EMPTY \u003d \"Error! I can\u0027t mark an empty task list!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"    private static final String ERROR_UNMARK_EMPTY \u003d \"Error! I can\u0027t unmark an empty task list!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"    public static void setTasks(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        tasks \u003d t;","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"        return tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"    public static void viewTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            print(EMPTY_TASK_LIST);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"            return;","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        print(SHOW_TASKS);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"    public static void addTask(TaskType taskType, String desc) {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"jaysmyname"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_EMPTY_TASK_DESC);","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"jaysmyname"},"content":"            return;","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"jaysmyname"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"jaysmyname"},"content":"        case TODO:","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"jaysmyname"},"content":"            ToDo todo \u003d new ToDo(desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"jaysmyname"},"content":"            tasks.add(todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"jaysmyname"},"content":"            print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"jaysmyname"},"content":"        case DEADLINE: {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"jaysmyname"},"content":"            if (!desc.contains(\"/by\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INVALID_DL_FORMAT);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"jaysmyname"},"content":"                return;","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"jaysmyname"},"content":"            String[] phrase \u003d desc.split(\"/by\", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"jaysmyname"},"content":"            String thing \u003d phrase[0].trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"jaysmyname"},"content":"            String when  \u003d phrase[1].trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"jaysmyname"},"content":"            if (thing.isBlank() || when.isBlank()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_EMPTY_DL_DESC);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"jaysmyname"},"content":"                return;","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"jaysmyname"},"content":"                // Check if \u0027when\u0027 is a valid date","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"jaysmyname"},"content":"                LocalDate ld \u003d LocalDate.parse(when);","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"jaysmyname"},"content":"                Deadline deadline \u003d new Deadline(thing, ld);","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"jaysmyname"},"content":"                tasks.add(deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"jaysmyname"},"content":"                print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"jaysmyname"},"content":"                print(INDENT + deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"jaysmyname"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"jaysmyname"},"content":"                // Otherwise, treat it as a normal String","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"jaysmyname"},"content":"                Deadline deadline \u003d new Deadline(thing, when);","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"jaysmyname"},"content":"                tasks.add(deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"jaysmyname"},"content":"                print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"jaysmyname"},"content":"                print(INDENT + deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"jaysmyname"},"content":"        case EVENT: {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"jaysmyname"},"content":"            if (!desc.contains(\"/at\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INVALID_EVENT_FORMAT);","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"jaysmyname"},"content":"                return;","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"jaysmyname"},"content":"            String[] phrase \u003d desc.split(\"/at\", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"jaysmyname"},"content":"            String thing \u003d phrase[0].trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"jaysmyname"},"content":"            String when  \u003d phrase[1].trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"jaysmyname"},"content":"            if (thing.isBlank() || when.isBlank()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_EMPTY_EVENT_DESC);","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"jaysmyname"},"content":"                return;","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"jaysmyname"},"content":"                // Check if \u0027when\u0027 is a valid date","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"jaysmyname"},"content":"                LocalDate ld \u003d LocalDate.parse(when);","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"jaysmyname"},"content":"                Event event \u003d new Event(thing, ld);","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"jaysmyname"},"content":"                tasks.add(event);","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"jaysmyname"},"content":"                print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"jaysmyname"},"content":"                print(INDENT + event);","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"jaysmyname"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"jaysmyname"},"content":"                // Otherwise, treat it as a normal String","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"jaysmyname"},"content":"                Event event \u003d new Event(thing, when);","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"jaysmyname"},"content":"                tasks.add(event);","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"jaysmyname"},"content":"                print(ADD_NEW_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"jaysmyname"},"content":"                print(INDENT + event);","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"jaysmyname"},"content":"        default:","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"jaysmyname"},"content":"            // Something has gone wrong","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_INVALID_TASK_TYPE);","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"jaysmyname"},"content":"            return;","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"jaysmyname"},"content":"        // After task is added show current no. of tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"jaysmyname"},"content":"        print(\"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"jaysmyname"},"content":"        getNoOfTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"jaysmyname"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"jaysmyname"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"jaysmyname"},"content":"            tasks.remove(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"jaysmyname"},"content":"            print(DELETE_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"jaysmyname"},"content":"            print(INDENT + t);","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"jaysmyname"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"jaysmyname"},"content":"            print(ERROR_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"jaysmyname"},"content":"    public static void clearTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"jaysmyname"},"content":"        tasks.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"jaysmyname"},"content":"        print(CLEAR_TASKS_CONFIRMED);","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"jaysmyname"},"content":"    public static void markStatus(TaskStatus ts, int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"jaysmyname"},"content":"        switch (ts) {","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"jaysmyname"},"content":"        case MARK: {","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"jaysmyname"},"content":"                Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"jaysmyname"},"content":"                t.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"jaysmyname"},"content":"                print(MARK_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"jaysmyname"},"content":"                print(INDENT + t);","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"jaysmyname"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"jaysmyname"},"content":"                if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"jaysmyname"},"content":"                    print(ERROR_MARK_EMPTY);","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"jaysmyname"},"content":"                    return;","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"jaysmyname"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"jaysmyname"},"content":"                getNoOfTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"jaysmyname"},"content":"        case UNMARK: {","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"jaysmyname"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"jaysmyname"},"content":"                Task t \u003d tasks.get(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"jaysmyname"},"content":"                t.unmark();","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"jaysmyname"},"content":"                print(UNMARK_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"jaysmyname"},"content":"                print(INDENT + t);","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"jaysmyname"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"jaysmyname"},"content":"                if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"jaysmyname"},"content":"                    print(ERROR_UNMARK_EMPTY);","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"jaysmyname"},"content":"                    return;","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"jaysmyname"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"jaysmyname"},"content":"                print(ERROR_INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"jaysmyname"},"content":"                getNoOfTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"jaysmyname"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"jaysmyname"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"jaysmyname"},"content":"    public static int getNoOfTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"jaysmyname"},"content":"        String plurality \u003d tasks.size() \u003d\u003d 1 ? \"\" : \"s\";","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"jaysmyname"},"content":"        print(\"You have \" + tasks.size() + \" task\" + plurality + \".\");","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"jaysmyname"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"jaysmyname"},"content":"    private static void print(String s) {","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"jaysmyname"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":199}},{"path":"src/main/java/connor/task/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public enum TaskStatus {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    MARK, UNMARK","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":5}},{"path":"src/main/java/connor/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"jaysmyname":5}},{"path":"src/main/java/connor/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"package connor.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"        super(desc, TaskType.TODO);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"        return getType() + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"            return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        } else if (!(o instanceof ToDo)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"            return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"            ToDo t \u003d (ToDo) o;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"            return this.getDesc().equals(t.getDesc())","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"                    \u0026\u0026 this.isDone().equals(t.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"jaysmyname":25}},{"path":"test/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"import connor.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"import connor.exception.InvalidTaskFileException;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"import connor.task.ToDo;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import connor.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"    public void testStorageStaticMethods() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        ToDo t \u003d new ToDo(\"Test\");","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(\"[ ] T | Test\\n\", Storage.taskToString(t));","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        t.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(\"[#] T | Test\\n\", Storage.taskToString(t));","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"        Deadline d \u003d new Deadline(\"Test\", \"Monday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(\"[ ] D | Test | By: Monday\\n\", Storage.taskToString(d));","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        d.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(\"[#] D | Test | By: Monday\\n\", Storage.taskToString(d));","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"        Event e \u003d new Event(\"Test\", \"Tuesday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(\"[ ] E | Test | At: Tuesday\\n\", Storage.taskToString(e));","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"        e.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(\"[#] E | Test | At: Tuesday\\n\", Storage.taskToString(e));","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"            ToDo t2 \u003d new ToDo(\"Things\");","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"            String s \u003d \"[ ] T | Things\";","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(t2, Storage.stringToTask(s));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"            t2.mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"            String s2 \u003d \"[#] T | Things\";","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(t2, Storage.stringToTask(s2));","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"            LocalDate ld \u003d LocalDate.parse(\"2022-10-31\");","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"            Deadline d2 \u003d new Deadline(\"Stuff\", ld);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"            String s3 \u003d \"[ ] D | Stuff | By: 2022-10-31\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(s3, Storage.taskToString(d2));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"jaysmyname"},"content":"        } catch (InvalidTaskFileException err) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"jaysmyname"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"jaysmyname"},"content":"        String s4 \u003d \"[ ] X | Blah\";","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"jaysmyname"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"\", Storage.stringToTask(s4));","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"jaysmyname"},"content":"        } catch (InvalidTaskFileException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"jaysmyname"},"content":"            assertEquals(\"This task file is invalid!\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"jaysmyname"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"jaysmyname"},"content":"        String s5 \u003d \"[ ] D | Invalid Number of delimiters\";","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"jaysmyname"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Storage.stringToTask(s5));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":59}},{"path":"test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"import connor.task.TaskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"    public void testTaskListMethods() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"        TaskList.setTasks(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(new ArrayList\u003c\u003e(), TaskList.getTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(0, TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.TODO, \"Things\");","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(1,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"Things /by Monday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"Things /at Monday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"Things /at   \");","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.DEADLINE, \"     /at Monday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(2,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.EVENT, \"Thing /at Monday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.EVENT, \"Thing/atMonday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(4,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"jaysmyname"},"content":"        TaskList.addTask(TaskType.EVENT, \"ThingMonday\");","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(4,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"jaysmyname"},"content":"        TaskList.deleteTask(2);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"jaysmyname"},"content":"        TaskList.deleteTask(999999);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"jaysmyname"},"content":"        TaskList.deleteTask(-999999);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(3,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"jaysmyname"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"jaysmyname"},"content":"        TaskList.clearTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"jaysmyname"},"content":"        assertEquals(0,TaskList.getNoOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"jaysmyname"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"jaysmyname"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"jaysmyname":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaysmyname"},"content":"clear","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"jaysmyname"},"content":"todo Do Laundry","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"jaysmyname"},"content":"deadline Study /by 9pm","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"jaysmyname"},"content":"event Birthday Party/atSaturday Afternoon","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"jaysmyname"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"jaysmyname"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"jaysmyname"},"content":"mark asdfg","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"jaysmyname"},"content":"unmark 66","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"jaysmyname"},"content":"todo ppppppppppp","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"jaysmyname"},"content":"event Meet Friend /at Sunday 12pm","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"jaysmyname"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"delete 4","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"jaysmyname"},"content":"delete 99","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"jaysmyname"},"content":"delete asdf","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"jaysmyname"},"content":"asdfGHJKL","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"exit","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"jaysmyname":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jaysmyname"},"content":"javac -cp ..\\src\\main\\java\\connor -Xlint:none -d ..\\bin ..\\src\\main\\java\\connor\\*.java ..\\src\\main\\java\\connor\\command\\*.java ..\\src\\main\\java\\connor\\exception\\*.java ..\\src\\main\\java\\connor\\task\\*.java","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jaysmyname"},"content":"java -classpath ..\\bin connor.Connor \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jaysmyname"},"content":"pause","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"jaysmyname":3,"-":19}}]
