[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bloodofme":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    mainClassName \u003d \"gitChatCat\"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"    archiveBaseName \u003d \"chatcat\"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"bloodofme":2}},{"path":"src/main/java/ChatCat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasklist.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import chatcat.util.Parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import chatcat.util.UI;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"public class ChatCat {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"        ui.showWelcomeSMS();","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"        String input \u003d \" \";","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"        while (!parser.isBye(input)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"            input \u003d br.readLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"            parser.parseTaskList(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bloodofme":23,"-":2}},{"path":"src/main/java/chatcat/chatcatexception/ChatCatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.chatcatexception;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":" * Exception handling for ChatCat","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"public class ChatCatException extends Exception {","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"     * Returns a {@code ChatCatException} with the given message.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"    public ChatCatException(String str) {","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"        super(str);","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"bloodofme":14}},{"path":"src/main/java/chatcat/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.commands;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import chatcat.util.UI;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasks.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"public class Commands {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"    UI ui \u003d new UI();","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"    public void outputList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"            ui.printOutPutWithSpace(\"empty list!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"            ui.printOutPutWithoutSpace(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"                ui.printOutPutWithoutSpace((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithoutSpace(\"\");","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"    public void outputByeMessage() {","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithSpace(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    public void outputMarkMessage(Task task) {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithSpace(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"                + task);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    public void outputUnmarkMessage(Task task) {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithSpace(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"                + task);","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"    public void outputTaskMessage(Task task, int size) {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithSpace(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"                + task);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithSpace(\"Now you have \"","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"                + size + \" tasks in the list.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"    public void outputDeleteMessage(Task task, int size) {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithSpace(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"                + task);","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithSpace(\"Now you have \" + size","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"    public void outputFilterMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithoutSpace(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"            ui.printOutPutWithoutSpace((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"        ui.printOutPutWithoutSpace(\"\");","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"bloodofme":58}},{"path":"src/main/java/chatcat/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.tasklist;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasks.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasks.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasks.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasks.Todo;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import chatcat.util.WriteToFile;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import chatcat.util.DateTimeUtil;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"import chatcat.chatcatexception.ChatCatException;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import chatcat.commands.Commands;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":" * Handles writing and reading to list of tasks represented as an {@code ArrayList}.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":" * Allows clients to unmark, mark, add and delete tasks. Allows users to view task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"public class TaskList {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    ArrayList\u003cTask\u003e Tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    WriteToFile writeToFile;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    Commands commands;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"    DateTimeUtil dateTimeUtil;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"     * Creates {@code TaskList} object containing an empty Task List {@code ArrayList}.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"     * Creates {@code WriteToFile} object.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"     * Creates {@code Commands} object.","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"        writeToFile \u003d new WriteToFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"        commands \u003d new Commands();","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"     * Prints out all tasks in Task List.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"     * @see WriteToFile","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"     * @see Task","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"    public void listTasks() {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"        Tasks \u003d writeToFile.toRead();","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"        commands.outputList(Tasks);","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"     * Prints out exit message.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"    public void exitChatCat() {","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"        commands.outputByeMessage();","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"     * Marks task at specified location.","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"     * @param str containing the task to be marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"     * @see Task","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"     * @see WriteToFile","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"    public void mark(String str) {","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"        String[] input \u003d str.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"        int taskID \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"bloodofme"},"content":"        Tasks.get(taskID).setDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"bloodofme"},"content":"        writeToFile.toWrite(Tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"bloodofme"},"content":"        commands.outputMarkMessage(Tasks.get(taskID));","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"bloodofme"},"content":"     * Unmark task at specified location.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"bloodofme"},"content":"     * @param str containing the task to be marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"bloodofme"},"content":"     * @see Task","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"bloodofme"},"content":"     * @see WriteToFile","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"bloodofme"},"content":"    public void unmark(String str) {","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"bloodofme"},"content":"        String[] input \u003d str.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"bloodofme"},"content":"        int taskID \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"bloodofme"},"content":"        Tasks.get(taskID).setUnDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"bloodofme"},"content":"        writeToFile.toWrite(Tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"bloodofme"},"content":"        commands.outputUnmarkMessage(Tasks.get(taskID));","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"bloodofme"},"content":"     * Creates a todo {@code todo} object and appends the object at the end of {@code taskList}.","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"bloodofme"},"content":"     * @param str containing the task to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"bloodofme"},"content":"     * @throws ChatCatException if description of todo is empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"bloodofme"},"content":"     * @see Todo","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"bloodofme"},"content":"     * @see WriteToFile","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"bloodofme"},"content":"    public void setTodo(String str) throws ChatCatException {","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"bloodofme"},"content":"        String[] input \u003d str.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"bloodofme"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"bloodofme"},"content":"            throw new ChatCatException(","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"bloodofme"},"content":"                    \"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"bloodofme"},"content":"        Todo todo \u003d new Todo(str.substring(5));","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"bloodofme"},"content":"        Tasks.add(todo);","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"bloodofme"},"content":"        writeToFile.toWrite(Tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"bloodofme"},"content":"        commands.outputTaskMessage(todo, Tasks.size());","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"bloodofme"},"content":"     * Creates a deadline {@code Deadline} object and appends the object at the end of {@code taskList}.","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"bloodofme"},"content":"     * @param str containing the task to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"bloodofme"},"content":"     * @throws ChatCatException if description of deadline is empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"bloodofme"},"content":"     * @see Deadline","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"bloodofme"},"content":"     * @see WriteToFile","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"bloodofme"},"content":"     * @see DateTimeUtil","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"bloodofme"},"content":"    public void setDeadline(String str) throws ChatCatException {","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"bloodofme"},"content":"        String[] input \u003d str.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"bloodofme"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"bloodofme"},"content":"            throw new ChatCatException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"bloodofme"},"content":"        String[] split \u003d str.split(\"/by \");","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"bloodofme"},"content":"        dateTimeUtil \u003d new DateTimeUtil(split[1]);","lastModifiedDate":"2022-02-03"},{"lineNumber":134,"author":{"gitId":"bloodofme"},"content":"        Deadline deadline \u003d new Deadline(split[0].substring(9), dateTimeUtil.getTime());","lastModifiedDate":"2022-02-03"},{"lineNumber":135,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"bloodofme"},"content":"        Tasks.add(deadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"bloodofme"},"content":"        writeToFile.toWrite(Tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"bloodofme"},"content":"        commands.outputTaskMessage(deadline, Tasks.size());","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":143,"author":{"gitId":"bloodofme"},"content":"     * Creates a deadline {@code Event} object and appends the object at the end of {@code taskList}.","lastModifiedDate":"2022-01-31"},{"lineNumber":144,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":145,"author":{"gitId":"bloodofme"},"content":"     * @param str containing the task to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":146,"author":{"gitId":"bloodofme"},"content":"     * @throws ChatCatException if description of event is empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":147,"author":{"gitId":"bloodofme"},"content":"     * @see Event","lastModifiedDate":"2022-01-31"},{"lineNumber":148,"author":{"gitId":"bloodofme"},"content":"     * @see WriteToFile","lastModifiedDate":"2022-01-31"},{"lineNumber":149,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":150,"author":{"gitId":"bloodofme"},"content":"     * @see DateTimeUtil","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":152,"author":{"gitId":"bloodofme"},"content":"    public void setEvent(String str) throws ChatCatException {","lastModifiedDate":"2022-01-31"},{"lineNumber":153,"author":{"gitId":"bloodofme"},"content":"        String[] input \u003d str.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"bloodofme"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"bloodofme"},"content":"            throw new ChatCatException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":157,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":158,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"bloodofme"},"content":"        String[] split \u003d str.split(\"/at \");","lastModifiedDate":"2022-01-28"},{"lineNumber":160,"author":{"gitId":"bloodofme"},"content":"        dateTimeUtil \u003d new DateTimeUtil(split[1]);","lastModifiedDate":"2022-02-03"},{"lineNumber":161,"author":{"gitId":"bloodofme"},"content":"        Event event \u003d new Event(split[0].substring(6), dateTimeUtil.getTime());","lastModifiedDate":"2022-02-03"},{"lineNumber":162,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":163,"author":{"gitId":"bloodofme"},"content":"        Tasks.add(event);","lastModifiedDate":"2022-01-28"},{"lineNumber":164,"author":{"gitId":"bloodofme"},"content":"        writeToFile.toWrite(Tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":165,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":166,"author":{"gitId":"bloodofme"},"content":"        commands.outputTaskMessage(event, Tasks.size());","lastModifiedDate":"2022-02-03"},{"lineNumber":167,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":168,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":169,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":170,"author":{"gitId":"bloodofme"},"content":"     * Deletes a specified task {@code Task} in the tasklist {@code taskList}.","lastModifiedDate":"2022-01-31"},{"lineNumber":171,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":172,"author":{"gitId":"bloodofme"},"content":"     * @param str containing the task to be deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":173,"author":{"gitId":"bloodofme"},"content":"     * @see Task","lastModifiedDate":"2022-01-31"},{"lineNumber":174,"author":{"gitId":"bloodofme"},"content":"     * @see WriteToFile","lastModifiedDate":"2022-01-31"},{"lineNumber":175,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":176,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"bloodofme"},"content":"    public void delete(String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":178,"author":{"gitId":"bloodofme"},"content":"        Tasks \u003d writeToFile.toRead();","lastModifiedDate":"2022-01-29"},{"lineNumber":179,"author":{"gitId":"bloodofme"},"content":"        String[] input \u003d str.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":180,"author":{"gitId":"bloodofme"},"content":"        int toDelete \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":181,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":182,"author":{"gitId":"bloodofme"},"content":"        Task removed \u003d Tasks.remove(toDelete);","lastModifiedDate":"2022-01-28"},{"lineNumber":183,"author":{"gitId":"bloodofme"},"content":"        writeToFile.toWrite(Tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":184,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":185,"author":{"gitId":"bloodofme"},"content":"        commands.outputDeleteMessage(removed, Tasks.size());","lastModifiedDate":"2022-02-03"},{"lineNumber":186,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":187,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":188,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":189,"author":{"gitId":"bloodofme"},"content":"     * Displays the tasks {@code Task} in tasklist {@code taskList} that includes a specified keyword.","lastModifiedDate":"2022-02-03"},{"lineNumber":190,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":191,"author":{"gitId":"bloodofme"},"content":"     * @param str containing the keyword.","lastModifiedDate":"2022-02-03"},{"lineNumber":192,"author":{"gitId":"bloodofme"},"content":"     * @see Task","lastModifiedDate":"2022-02-03"},{"lineNumber":193,"author":{"gitId":"bloodofme"},"content":"     * @see Commands","lastModifiedDate":"2022-02-03"},{"lineNumber":194,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":195,"author":{"gitId":"bloodofme"},"content":"    public void filter(String str) throws ChatCatException {","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"bloodofme"},"content":"        Tasks \u003d writeToFile.toRead();","lastModifiedDate":"2022-01-31"},{"lineNumber":197,"author":{"gitId":"bloodofme"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-31"},{"lineNumber":198,"author":{"gitId":"bloodofme"},"content":"        String[] input \u003d str.split(\" \");","lastModifiedDate":"2022-01-31"},{"lineNumber":199,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":200,"author":{"gitId":"bloodofme"},"content":"        Tasks.forEach(task -\u003e {","lastModifiedDate":"2022-01-31"},{"lineNumber":201,"author":{"gitId":"bloodofme"},"content":"            if (task.containsKeyWord(input[1])) {","lastModifiedDate":"2022-01-31"},{"lineNumber":202,"author":{"gitId":"bloodofme"},"content":"                filteredList.add(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":203,"author":{"gitId":"bloodofme"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":204,"author":{"gitId":"bloodofme"},"content":"        });","lastModifiedDate":"2022-01-31"},{"lineNumber":205,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":206,"author":{"gitId":"bloodofme"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":207,"author":{"gitId":"bloodofme"},"content":"            throw new ChatCatException(\"No task with keyword: \" + \"str\");","lastModifiedDate":"2022-01-31"},{"lineNumber":208,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":209,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":210,"author":{"gitId":"bloodofme"},"content":"        commands.outputFilterMessage(filteredList);","lastModifiedDate":"2022-02-03"},{"lineNumber":211,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":212,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"bloodofme":212}},{"path":"src/main/java/chatcat/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":" * The default Deadline class inherited from {@code Task}.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":" * @see Task","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"    String deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"    String time;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"     * Creates a {@code Deadline} object using a specified description.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"     * @param deadline the description of this task.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"     * @param time the time of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"    public Deadline(String deadline, String time) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"        super(deadline);","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"     * Returns a representation in string of {@code Deadline} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"     * @return a representation in string of {@code Deadline} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + time + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bloodofme":33}},{"path":"src/main/java/chatcat/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import chatcat.util.DateTimeUtil;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":" * The default Event class inherited from {@code Task}.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":" * @see Task","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":" * @see DateTimeUtil","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    String event;","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    String time;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"     * Creates a {@code Event} object using a specified description.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"     * @param event the description of this task.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"     * @param time the time of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    public Event(String event, String time) {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        super(event);","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"     * Returns a representation in string of {@code Event} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"     * @return a representation in string of {@code Event} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + time + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"bloodofme":36}},{"path":"src/main/java/chatcat/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":" * The default Task class.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"    private final String task;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"     * Creates a {@code Task} object using a specified description.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"     * @param task the description of this task.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    public Task(String task) {","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"     * Marks a task {@code Task} as completed.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"     * Unmarks a task {@code Task} as not completed.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    public void setUnDone() {","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"     * Returns a string representing status of task {@code Task}.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"     * @return string representing status of task {@code Task}.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"     * Returns a true if task contains a keyword, else returns false.","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"     * @return true if task contains a keyword, else returns false.","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"    public boolean containsKeyWord(String str) {","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"        return task.contains(str);","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"     * Returns a representation in string of {@code Task} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"     * @return a representation in string of {@code Task} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"    public String toString() {","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"        return getStatus() + \" \" + task;","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"bloodofme":63}},{"path":"src/main/java/chatcat/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":" * The default Todo class inherited from {@code Task}.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":" * @see Task","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"     * Creates a {@code Todo} object using a specified description.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"     * @param todo the description of this task.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"    public Todo(String todo) {","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"        super(todo);","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"     * Returns a representation in string of {@code Todo} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"     * @return a representation in string of {@code Todo} task.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    public String toString() {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"bloodofme":28}},{"path":"src/main/java/chatcat/util/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.util;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"public class DateTimeUtil {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    LocalDate time;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"    DateTimeFormatterBuilder dateTimeFormatterBuilder \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"            .append(DateTimeFormatter.ofPattern(\"\"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"                    + \"[yyyy-MM-dd HH:mm:ss]\"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"                    + \"[yyyy-MM-dd]\"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"                    + \"[yyyy/MM/dd]\"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"                    + \"[yyyy-MM-dd HH:mm a]\"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"            ));","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    DateTimeFormatter dateTimeFormatter \u003d dateTimeFormatterBuilder.toFormatter();","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"    public DateTimeUtil(String time) {","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"            this.time \u003d LocalDate.parse(time, dateTimeFormatter);","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"        } catch (DateTimeException de) {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"            System.out.println(\"sorry, this is not a valid time\");","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"    public String getTime() {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"bloodofme":34}},{"path":"src/main/java/chatcat/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.util;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasklist.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import chatcat.chatcatexception.ChatCatException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"public class Parser {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"    public void parseTaskList(String input) {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"            switch(splitInput[0]) {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"                case \"list\":","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"                    taskList.listTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"                    taskList.exitChatCat();","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"                    taskList.mark(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"                    taskList.unmark(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"                    taskList.setTodo(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"                    taskList.setDeadline(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"                case \"event\":","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"                    taskList.setEvent(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"                    taskList.delete(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"                case \"find\":","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"                    taskList.filter(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"                    break;","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"                default:","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"                    throw new ChatCatException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"        } catch (ChatCatException wrf) {","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"            wrf.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"    public boolean isBye(String command) {","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"        return command.equals(\"bye\");","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"bloodofme":58}},{"path":"src/main/java/chatcat/util/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.util;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":" * Handles outputs to interact with user","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"public class UI {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"    public void showWelcomeSMS() {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"        String welcome \u003d \"Hello! I\u0027m ChatCat\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"        System.out.println(welcome);","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"    public void printOutPutWithSpace(String commandOutput) {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"        System.out.println(commandOutput + \"\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"    public void printOutPutWithoutSpace(String commandOutput) {","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"        System.out.println(commandOutput);","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"bloodofme":21}},{"path":"src/main/java/chatcat/util/WriteToFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.util;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import chatcat.tasks.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"public class WriteToFile  {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"    String home;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    File file;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    Path path;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"    ObjectOutputStream writeStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"    FileOutputStream writeData;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"    public WriteToFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"        home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"        Path currentRelativePath \u003d Paths.get(\"\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"bloodofme"},"content":"        path \u003d currentRelativePath.toAbsolutePath();","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"bloodofme"},"content":"        file \u003d new File(path + File.separator + \"tasklist.ser\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"bloodofme"},"content":"    //function is written based on reference from:","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"bloodofme"},"content":"    //https://samderlust.com/dev-blog/java/write-read-arraylist-object-file-java","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"bloodofme"},"content":"    public void toWrite(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"bloodofme"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"bloodofme"},"content":"            writeData \u003d new FileOutputStream(file);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"bloodofme"},"content":"            writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"bloodofme"},"content":"            writeStream.writeObject(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"bloodofme"},"content":"            writeStream.flush();","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"bloodofme"},"content":"            writeStream.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"bloodofme"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"bloodofme"},"content":"            System.out.println(\"An error occurred while writing to tasklist.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"bloodofme"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"bloodofme"},"content":"    //function is written based on reference from:","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"bloodofme"},"content":"    //https://samderlust.com/dev-blog/java/write-read-arraylist-object-file-java","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"bloodofme"},"content":"    public ArrayList\u003cTask\u003e toRead() {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"bloodofme"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"bloodofme"},"content":"            FileInputStream readData \u003d new FileInputStream(file);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"bloodofme"},"content":"            ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"bloodofme"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"bloodofme"},"content":"            ArrayList\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) readStream.readObject();","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"bloodofme"},"content":"            readStream.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"bloodofme"},"content":"            return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"bloodofme"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"bloodofme"},"content":"            System.out.println(\"An error occurred while reading tasklist.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"bloodofme"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"bloodofme"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"bloodofme":65}},{"path":"src/test/java/ChatCatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"public class ChatCatTest {","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"bloodofme":10}},{"path":"src/test/java/chatcat/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"    public void createTask() {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"        assertEquals(\"[ ] test\", new Task(\"test\").toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    public void done() {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"        Task task \u003d new Task(\"test\");","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"        task.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"        assertEquals(\"[X] test\", task.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    public void undone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"        Task task \u003d new Task(\"test\");","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        task.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"        task.setUnDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        assertEquals(\"[ ] test\", task.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"bloodofme":26}},{"path":"src/test/java/chatcat/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"package chatcat.tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"    public void createTodo() {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"        assertEquals(\"[T][ ] test\", new Todo(\"test\").toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"    public void done() {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"bloodofme"},"content":"        todo.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"bloodofme"},"content":"        assertEquals(\"[T][X] test\", todo.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"bloodofme"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"bloodofme"},"content":"    public void undone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"bloodofme"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"bloodofme"},"content":"        todo.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"bloodofme"},"content":"        todo.setUnDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"bloodofme"},"content":"        assertEquals(\"[T][ ] test\", todo.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"bloodofme"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"bloodofme"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"bloodofme":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bloodofme"},"content":"event do homework /at Monday","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"bloodofme"},"content":"todo cry myself to sleep","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"bloodofme"},"content":"deadline stop crying /by monday","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"bloodofme"},"content":"event shower /at Tuesday","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"bloodofme"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"bloodofme"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"bloodofme"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"bloodofme"},"content":"unmark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"bloodofme"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"bloodofme"},"content":"delete 2","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"bloodofme"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"bloodofme"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"bloodofme"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"bloodofme"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"bloodofme":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bloodofme"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"bloodofme":1}}]
