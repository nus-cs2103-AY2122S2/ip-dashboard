[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"yongler"},"content":"    mainClassName \u003d \"duke.main.Main\"","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yongler":1,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"[D] |   | return book | 2019/10/15 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"[E] |   | return book | 2019/10/15 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"[T] |   | hello","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"[D] |   | return book | 2019/10/15 1800","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"[E] |   | return book | 2019/10/15 1800","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"[T] |   | hello","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"[D] |   | return book | 2019/10/15 1800","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"[E] |   | return book | 2019/10/15 1800","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"[T] |   | yoohoo","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"yongler":9}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":7}},{"path":"src/main/java/duke/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"    public StorageException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":8}},{"path":"src/main/java/duke/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"public class TaskException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"    public static final String TASK_ERROR \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"    public static final String TODO_ERROR \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"    public static final String EVENT_ERROR \u003d \"☹ OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"    public static final String DEADLINE_ERROR \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"    private String debugMessage;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"    public TaskException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":14}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"import duke.exceptions.TaskException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"public class Duke {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"yongler"},"content":"     * Create duke object.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"yongler"},"content":"     * @param filePath Specify storage file path.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"yongler"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"yongler"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"yongler"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"yongler"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"yongler"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"yongler"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"yongler"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"yongler"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"yongler"},"content":"     * Adds a new task depending on type and append in to tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"yongler"},"content":"     * @param str       the whole input string, split.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"yongler"},"content":"     * @throws TaskException if no details when adding.","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"yongler"},"content":"    private void addTask(String[] str) throws TaskException {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"yongler"},"content":"        if (str[0].compareTo(\"deadline\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"yongler"},"content":"            if (str.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"yongler"},"content":"                throw new TaskException(\"deadline\");","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"yongler"},"content":"            StringBuilder stuff \u003d new StringBuilder();","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"yongler"},"content":"            StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"yongler"},"content":"            for (int i \u003d 1; i \u003c str.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"yongler"},"content":"                if (str[i].compareTo(\"/at\") \u003d\u003d 0) {","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"yongler"},"content":"                    for (int j \u003d 1; j \u003c i; j++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"yongler"},"content":"                        stuff.append(str[j]).append(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"yongler"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"yongler"},"content":"                    for (int j \u003d i + 1; j \u003c str.length; j++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"yongler"},"content":"                        deadline.append(str[j]).append(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"yongler"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"yongler"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"yongler"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"yongler"},"content":"            tasks.add(new Deadline(stuff.toString(), Parser.parseDate(deadline.toString())));","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"yongler"},"content":"        } else if (str[0].compareTo(\"todo\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"yongler"},"content":"            if (str.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"yongler"},"content":"                throw new TaskException(\"todo\");","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"yongler"},"content":"            StringBuilder stuff \u003d new StringBuilder();","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"yongler"},"content":"            for (int i \u003d 1; i \u003c str.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"yongler"},"content":"                stuff.append(str[i]).append(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"yongler"},"content":"            tasks.add(new Todo(stuff.toString()));","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"yongler"},"content":"        } else if (str[0].compareTo(\"event\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"yongler"},"content":"            if (str.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"yongler"},"content":"                throw new TaskException(\"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"yongler"},"content":"            StringBuilder stuff \u003d new StringBuilder();","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"yongler"},"content":"            StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"yongler"},"content":"            for (int i \u003d 1; i \u003c str.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"yongler"},"content":"                if (str[i].compareTo(\"/at\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"yongler"},"content":"                    for (int j \u003d 1; j \u003c i; j++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"yongler"},"content":"                        stuff.append(str[j]).append(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"yongler"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"yongler"},"content":"                    for (int j \u003d i + 1; j \u003c str.length; j++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"yongler"},"content":"                        deadline.append(str[j]).append(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"yongler"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"yongler"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"yongler"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"yongler"},"content":"            tasks.add(new Event(stuff.toString(), Parser.parseDate(deadline.toString())));","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"yongler"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"yongler"},"content":"            throw new TaskException(\"tasks\");","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"yongler"},"content":"        System.out.println(\"Got it. I\u0027ve added this duke.task: \");","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"yongler"},"content":"        System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"yongler"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"yongler"},"content":"     * Runs the whole Duke program and processes input","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"yongler"},"content":"     * until the \u0027bye\u0027 command is given.","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"yongler"},"content":"    public void run() {","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"yongler"},"content":"        ui.welcome();","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"yongler"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"yongler"},"content":"        while (true) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"yongler"},"content":"            System.out.println(ui.dividerLine());","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"yongler"},"content":"            String wholeString \u003d sc.nextLine();","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"yongler"},"content":"            String[] str \u003d wholeString.split(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"yongler"},"content":"            if (str[0].compareTo(\"bye\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"yongler"},"content":"                ui.bye();","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"yongler"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"yongler"},"content":"            } else if (str[0].compareTo(\"list\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"yongler"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"yongler"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"yongler"},"content":"                    System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"yongler"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"yongler"},"content":"            } else if (str[0].compareTo(\"mark\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"yongler"},"content":"                int k \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"yongler"},"content":"                tasks.get(k - 1).setAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"yongler"},"content":"                System.out.println(\"Nice! I\u0027ve marked this duke.task as done: \");","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"yongler"},"content":"                System.out.println(tasks.get(k - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"yongler"},"content":"            } else if (str[0].compareTo(\"unmark\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"yongler"},"content":"                int k \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"yongler"},"content":"                tasks.get(k - 1).setAsUndone();","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"yongler"},"content":"                System.out.println(\"OK, I\u0027ve marked this duke.task as not done yet:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"yongler"},"content":"                System.out.println(tasks.get(k - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"yongler"},"content":"            } else if (str[0].compareTo(\"delete\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"yongler"},"content":"                int k \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"yongler"},"content":"                System.out.println(\"Noted. I\u0027ve removed this duke.task: \");","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"yongler"},"content":"                System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"yongler"},"content":"                tasks.remove(k - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"yongler"},"content":"                System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"yongler"},"content":"            } else if (str[0].compareTo(\"find\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"yongler"},"content":"                String toFind \u003d str[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"yongler"},"content":"                int count \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"yongler"},"content":"                System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"yongler"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"yongler"},"content":"                    if (task.getDescription().contains(toFind)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"yongler"},"content":"                        System.out.printf(\"%d. %s\\n\", count, task);","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"yongler"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"yongler"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"yongler"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"yongler"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"yongler"},"content":"                    addTask(str);","lastModifiedDate":"2022-02-03"},{"lineNumber":152,"author":{"gitId":"yongler"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"yongler"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"yongler"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"yongler"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"yongler"},"content":"                storage.saveTasksToStorage(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"yongler"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"yongler"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":161,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":166}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"public class Main {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":8}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"    public Parser() {}","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"     * Parses date and time in string format into LocalDateTime instance.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"     * @param by Deadline in string format.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"     * @return LocalDateTime instance.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"    public static LocalDateTime parseDate(String by) {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"        return LocalDateTime.parse(by.trim(), formatter);","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":19}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"    private final String storagePath;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yongler"},"content":"        this.storagePath \u003d path;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"yongler"},"content":"     * Saves all task into backup file with path given in constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"yongler"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"yongler"},"content":"     * @throws IOException If creating directory and file throws error.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"yongler"},"content":"    public void saveTasksToStorage(TaskList tasks) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"yongler"},"content":"        if (Files.notExists(Paths.get(storagePath))) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"yongler"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"yongler"},"content":"            Files.createFile(Paths.get(storagePath));","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"yongler"},"content":"        FileWriter fw \u003d new FileWriter(storagePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"yongler"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"yongler"},"content":"            fw.write(task.convertToSaveFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"yongler"},"content":"            fw.write(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"yongler"},"content":"        fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"yongler"},"content":"     * Converts formatted string in backup file into a task instance..","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"yongler"},"content":"     * @param str Formatted string in backup file.","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"yongler"},"content":"     * @return A task instance.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"yongler"},"content":"    public Task loadTask(String[] str) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"yongler"},"content":"        Task task \u003d new Task();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"yongler"},"content":"        if (str[0].compareTo(\"[D]\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"yongler"},"content":"            task \u003d new Deadline(str[2], Parser.parseDate(str[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"yongler"},"content":"        } else if (str[0].compareTo(\"[T]\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"yongler"},"content":"            task \u003d new Todo(str[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"yongler"},"content":"        } else if (str[0].compareTo(\"[E]\") \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"yongler"},"content":"            task \u003d new Event(str[2], Parser.parseDate(str[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"yongler"},"content":"        if (str[1].equals(\"X\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"yongler"},"content":"            task.setAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"yongler"},"content":"        return task;","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"yongler"},"content":"     * Loads all task from backup file.","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"yongler"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"yongler"},"content":"     * @throws FileNotFoundException If backup file cant be found.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"yongler"},"content":"    public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"yongler"},"content":"        File file \u003d new File(storagePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"yongler"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"yongler"},"content":"            return new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"yongler"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"yongler"},"content":"            TaskList tasksList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"yongler"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"yongler"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"yongler"},"content":"                String next \u003d s.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"yongler"},"content":"                String[] input \u003d next.trim().split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"yongler"},"content":"                Task task \u003d loadTask(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"yongler"},"content":"                tasksList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"yongler"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"yongler"},"content":"            return tasksList;","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":89}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":13}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"    public Ui() {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"     * Prints welcome message.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"    public void welcome() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"        System.out.println(\"Hello! I\u0027m SUPERRRRDUKE\");","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"yongler"},"content":"     * Prints bye message.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"yongler"},"content":"    public void bye() {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"yongler"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"yongler"},"content":"     * Prints divider line for aesthetics purposes.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"yongler"},"content":"     * @return A dashed line.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"yongler"},"content":"    public String dividerLine() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"yongler"},"content":"        return (\"---------------------------------\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"yongler"},"content":"     * Prints loading error if there are no backup files to laod from.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"yongler"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"yongler"},"content":"        System.out.println(\"No backup files to load from.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import static duke.task.TaskType.DEADLINE;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"     * Defines an deadline.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"     * @param description Description of deadline to do.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"     * @param by Time of deadline.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"        super(description, DEADLINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"yongler"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"yongler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"yongler"},"content":"        return super.getSymbol() + super.toString()","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"yongler"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"yongler"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"yongler"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"yongler"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"yongler"},"content":"        return String.format(\"%s | %s\", super.convertToSaveFormat(), by.format((format)));","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import static duke.task.TaskType.EVENT;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"     * Defines an event.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"     * @param description Description of task to do.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"     * @param by Time of event.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"    public Event(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"        super(description, EVENT);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"yongler"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"yongler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"yongler"},"content":"        return super.getSymbol() + super.toString()","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"yongler"},"content":"                + \" (at: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"yongler"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"yongler"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"yongler"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"yongler"},"content":"        return String.format(\"%s | %s\", super.convertToSaveFormat(), by.format((format)));","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"public class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"    protected String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"    protected TaskType taskType;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"    public Task() {}","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"     * Defines a task.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"     * @param description Description of task to do.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"yongler"},"content":"    public void setAsDone() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"yongler"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"yongler"},"content":"    public void setAsUndone() {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"yongler"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"yongler"},"content":"     * Returns symbol for printing task based on its type.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"yongler"},"content":"     * @return [type] where type corresponds to task type.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"yongler"},"content":"    public String getSymbol() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"yongler"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"yongler"},"content":"        case TODO:","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"yongler"},"content":"            return \"[T]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"yongler"},"content":"        case EVENT:","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"yongler"},"content":"            return \"[E]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"yongler"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"yongler"},"content":"            return \"[D]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"yongler"},"content":"        default:","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"yongler"},"content":"            return \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"yongler"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"yongler"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"yongler"},"content":"        return this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"yongler"},"content":"     * Returns status icon when printing task.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"yongler"},"content":"     * @return X if task is done.","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"yongler"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"yongler"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"yongler"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"yongler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"yongler"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"yongler"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"yongler"},"content":"     * Formats task to be saved into backup file.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"yongler"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"yongler"},"content":"     * @return Formatted string for saving into backup file.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"yongler"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"yongler"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"yongler"},"content":"        return String.format(\"%s | %s | %s\", getSymbol(), getStatusIcon(), description);","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":73}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":" * Enum for the tasks types.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"    TODO, EVENT, DEADLINE","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":8}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"import static duke.task.TaskType.TODO;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"        super(description, TODO);","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"        return super.getSymbol() + super.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"        return String.format(\"%s\", super.convertToSaveFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":18}},{"path":"test/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"class ParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"    void parseDate() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"        String input \u003d \"2019/10/15 1800\";","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"        LocalDateTime date \u003d parser.parseDate(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"        LocalDateTime test_date \u003d LocalDateTime.parse(input.trim(), formatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"yongler"},"content":"//        System.out.println(date);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"yongler"},"content":"        assertEquals(test_date, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":23}},{"path":"test/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"    void TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"yongler"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"yongler"},"content":"        assertEquals(new ArrayList\u003cTask\u003e(), tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":18}},{"path":"test/duke/main/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"package duke.main;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"yongler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"yongler"},"content":"class UiTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"yongler"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"yongler"},"content":"    void dividerLine() {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"        assertEquals(\"---------------------------------\", ui.dividerLine());","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"yongler"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"yongler"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"yongler":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongler"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"yongler"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"yongler"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yongler":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yongler"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"yongler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yongler":2,"-":20}}]
