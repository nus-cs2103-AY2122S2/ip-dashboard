[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    mainClassName \u003d \"duke.main.Duke\"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raynerljm":1,"-":45}},{"path":"src/main/data/save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"T;X;homework","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"D;X;report;by;2022-01-30T23:59:00","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"T;X;whaat","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"E;O;festival;on;2022-02-15T15:23:00","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":4}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":" * Represents a command to add a new task.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * Type of task. Can be \u0027todo\u0027, \u0027deadline\u0027, or \u0027event","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    String taskType;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     * The description and name of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    String taskName;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"     * The preposition for the date time. Only applicable for deadlines and events.","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    String taskPreposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     * The date time for the event. Only applicable for deadlines and events.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    LocalDateTime taskDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"     * To store any exceptions that were thrown during the parsing of the command.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    DukeException exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     * Initializes the add command from user input","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"     * @param fullCommand The user input","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"    public AddCommand(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"        super(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"        StringTokenizer st \u003d new StringTokenizer(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"        String command \u003d st.nextToken();","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"        //Reading in the name and preposition","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        List\u003cString\u003e nameArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        String preposition \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        while (st.hasMoreTokens()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"            String nextToken \u003d st.nextToken();","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"            if (command.equals(\"todo\") || nextToken.charAt(0) !\u003d \u0027/\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"                nameArray.add(nextToken);","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"            //Only take in preposition if it is not a todo","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"            else {","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"                preposition \u003d nextToken.substring(1);","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"                break;","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"        String name \u003d String.join(\" \", nameArray);","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        //Error handling for no name","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"            this.exception \u003d new DukeException(\"Please add a description of your todo as it cannot be empty!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"            return;","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        //Setting up datetime","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"        String date \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"        if (st.hasMoreTokens()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"            date \u003d st.nextToken();","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"        if (st.hasMoreTokens()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"            time \u003d st.nextToken();","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"        if ((date.equals(\"\") || time.equals(\"\"))) {","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"            if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"                this.exception \u003d new DukeException(\"Please add a date and time for your deadline in the following\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"                        \"format:\\n\u0027deadline \u003cname\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"                return;","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"                this.exception \u003d new DukeException(\"Please add a date and time for your event in the following\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"                        \"format:\\n\" + \"\u0027event \u003cname\u003e /on \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"                return;","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"        //Converting datetime","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"        if (command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"                dateTime \u003d LocalDateTime.parse(date + \"T\" + time);","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"                if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"                    this.exception \u003d new DukeException(\"Please add a date and time for your deadline in the following\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"                            \"format:\\n\u0027deadline \u003cname\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"                    return;","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"                    this.exception \u003d new DukeException(\"Please add a date and time for your event in the following\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"                            \"format:\\n\u0027event \u003cname\u003e /on \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"                    return;","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"        this.taskType \u003d command;","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"        this.taskPreposition \u003d preposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"raynerljm"},"content":"        this.taskDate \u003d dateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"raynerljm"},"content":"     * Executes the add command and adds the specified task and its details to Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"raynerljm"},"content":"     * If any exceptions were thrown during the parsing of user input and the initializiation of the command,","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"raynerljm"},"content":"     * they will be thrown here and the command will be terminated.","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"     * @param tasks   The current tasks for the command to interact with.","lastModifiedDate":"2022-01-24"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"     * @param ui      The ui for the command to print output.","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"     * @param storage The storage for the command to save and load tasks to an external file.","lastModifiedDate":"2022-01-24"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-24"},{"lineNumber":127,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"raynerljm"},"content":"        if (this.exception !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"            throw this.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":132,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":133,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"        //Creating the new task","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"raynerljm"},"content":"        Task newTask \u003d new Task(\"\");","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"        if (this.taskType.equals(\"todo\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"            newTask \u003d new ToDoTask(this.taskName);","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"        } else if (this.taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"raynerljm"},"content":"            newTask \u003d new DeadlineTask(this.taskName, this.taskPreposition, this.taskDate);","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"raynerljm"},"content":"        } else if (this.taskType.equals(\"event\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"            newTask \u003d new EventTask(this.taskName, this.taskPreposition, this.taskDate);","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"raynerljm"},"content":"            throw new DukeException(\"Invalid command type\");","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"        //Adding the task","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"        //Output to update user","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"        ui.print(\"Got it. I\u0027ve added this task *quack*:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"        ui.print(String.format(\"  %s\", newTask.toString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"        ui.print(String.format(","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"                \"Now you have %d task%s in the list *quack*.\",","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"                tasks.getSize(), tasks.getSize() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"        //Saving the task to the save file","lastModifiedDate":"2022-01-24"},{"lineNumber":157,"author":{"gitId":"raynerljm"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-01-24"},{"lineNumber":162,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":163,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":164,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":165,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":166,"author":{"gitId":"raynerljm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":167,"author":{"gitId":"raynerljm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":168,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":169,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":169}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":" * Represents commands that are formed from user input and can be executed.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":" * Meant to be extended and implemented by subclasses.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     * The full command input by the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    String fullCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    Command(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * Returns whether the current command is an exit command to terminate the application.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"     * Executes the current command with Duke\u0027s current state.","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"     * @param tasks   The current tasks for the command to interact with.","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"     * @param ui      The ui for the command to print output.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     * @param storage The storage for the command to save and load tasks to an external file.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":38}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     * The task number to be deleted.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    int taskNumber;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     * To store any exceptions that were thrown during the parsing of the command.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    DukeException exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * Initializes the delete command with the provided user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * Parses through the user input to retrieve the task number.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     * @param fullCommand The user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        super(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"        String[] fullCommandSplit \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"            this.taskNumber \u003d Integer.parseInt(fullCommandSplit[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"            this.exception \u003d new DukeException(\"Please input an item number when deleting (eg. \u0027delete 1\u0027)\");","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"            this.exception \u003d new DukeException(\"Please only input integers when deleting tasks (eg. \u0027delete 1\");","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"     * Deletes the task corresponding to the specified number.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     * @param tasks   The current tasks for the command to interact with.","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     * @param ui      The ui for the command to print output.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"     * @param storage The storage for the command to save and load tasks to an external file.","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"        if (this.exception !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"            throw this.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"        } else if (this.taskNumber \u003c\u003d 0 || this.taskNumber \u003e tasks.getSize()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"            throw new DukeException(\"Please only input integers within the range of your tasks\");","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        Task removedTask \u003d tasks.deleteByNumber(this.taskNumber);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        ui.print(String.format(\"I\u0027ve deleted task %d! *quack*\", this.taskNumber));","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        ui.print(String.format(\"  %s\", removedTask.toString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":71}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"     * Initializes a new exit command.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     * @param command The command provided by the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"        super(command);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"     * Prints out the exit message of Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * @param tasks   The current tasks for the command to interact with.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * @param ui      The ui for the command to print output.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * @param storage The storage for the command to save and load tasks to an external file.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        ui.print(\"Aww. Bye! See you again soon\");","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"     * Returns true as this is an exit command.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"    String keyword;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    DukeException exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"        super(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"        String[] fullCommandParsed \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"            this.keyword \u003d fullCommandParsed[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"            this.exception \u003d new DukeException(\"Please input a keyword so that I can find your task for you!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"        if (this.exception !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"            throw this.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        TaskList filteredTasks \u003d tasks.filterByKeyword(this.keyword);","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"        filteredTasks.printTasks(ui);","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":38}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":" * Represents a command to print out a help message with a list of valid commands.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"     * Initializes the help command with user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     * @param fullCommand THe user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    public HelpCommand(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"        super(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"     * Prints the list of valid commands.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * @param tasks   The current tasks for the command to interact with.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * @param ui      The ui for the command to print output.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * @param storage The storage for the command to save and load tasks to an external file.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        ui.printHelp();","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":" * Represents a command to list out all current tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     * Initializes the help command with the user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     * @param fullCommand The user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    public ListCommand(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"        super(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     * Prints out a list of all current tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * @param tasks   The current tasks for the command to interact with.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * @param ui      The ui for the command to print output.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     * @param storage The storage for the command to save and load tasks to an external file.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        tasks.printTasks(ui);","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":42}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":" * Represents a command to mark or unmark a task.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     * To determine whether the command will mark or unmark the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    boolean isMark;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     * The specified task to be marked or unmarked.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    int taskNumber;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     * To store any exceptions that were thrown during the parsing of the command.","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    DukeException exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     * Initializes a new mark command.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"     * @param fullCommand","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"        super(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"        String[] fullCommandSplit \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        String command \u003d fullCommandSplit[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"            this.isMark \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"            this.isMark \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"            this.taskNumber \u003d Integer.parseInt(fullCommandSplit[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"            this.exception \u003d new DukeException(\"Please input an item number when deleting (eg. \u0027mark 1\u0027)\");","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"            this.exception \u003d new DukeException(\"Please only input integers when deleting tasks (eg. \u0027mark 1\");","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"     * Marks or unmarks the specified task as done.","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"     * @param tasks   The current tasks for the command to interact with.","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"     * @param ui      The ui for the command to print output.","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"     * @param storage The storage for the command to save and load tasks to an external file.","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        if (this.exception !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"            throw this.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"        } else if (this.taskNumber \u003c\u003d 0 || this.taskNumber \u003e tasks.getSize()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"            throw new DukeException(\"Please only input integers within the range of your tasks\");","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"        Task task \u003d tasks.getByNumber(this.taskNumber);","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"        if (this.isMark) {","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"            task.setMarked(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"            ui.print(String.format(\"I\u0027ve marked task %d as done! *quack*\", this.taskNumber));","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"            task.setMarked(false);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"            ui.print(String.format(\"I\u0027ve marked task %d as undone! *quack*\", this.taskNumber));","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        ui.print(String.format(\"  %d. %s\", this.taskNumber, task.toString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":87}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":" * A custom exception to manage exceptions faced during runtime of Duke","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"     * Initializes a new Duke Exception with the given error message","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"raynerljm":13}},{"path":"src/main/java/duke/function/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.function;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":" * Represents a parser to help manage user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    Parser() {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * If the command is not a valid command, a DukeException is thrown.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     * @param fullCommand Command input by the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"     * @return Command instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"     * @throws DukeException Custom exception containing the error message.","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"        StringTokenizer st \u003d new StringTokenizer(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        switch (st.nextToken()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        case \"list\":","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"            command \u003d new ListCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        case \"help\":","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"            command \u003d new HelpCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"        case \"event\":","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"            command \u003d new AddCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"            command \u003d new MarkCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"            command \u003d new DeleteCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"        case \"find\":","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"            command \u003d new FindCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"            command \u003d new ExitCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"            return command;","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"            throw new DukeException(\"That is not a valid command\\nPlease type \u0027help\u0027 to see a list of valid commands\");","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":69}},{"path":"src/main/java/duke/function/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.function;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":" * Manages the loading and saving of tasks into an external .txt file","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * The path to the save file","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    String filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"     * Initializes a new storage instance","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"     * @param filePath The path to the save file","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"     * Loads the file from the file path.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"     * Parses the file to convert the text into a List of Tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"     * @return A list of tasks loaded from the file path.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"                Scanner fileSc \u003d new Scanner(file);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"                while (fileSc.hasNextLine()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"                    String[] line \u003d fileSc.nextLine().split(\";\");","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"                    Task task;","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"                    // Todo Task","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"                    if (line[0].equals(\"T\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"                        task \u003d new ToDoTask(line[2]);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"                    // Deadline Task","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"                    else if (line[0].equals(\"D\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"                        task \u003d new DeadlineTask(line[2], line[3], LocalDateTime.parse(line[4]));","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"                    // Event Task","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"                    else if (line[0].equals(\"E\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"                        task \u003d new EventTask(line[2], line[3], LocalDateTime.parse(line[4]));","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"                    } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"                        throw new DukeException(\"An invalid task type was read\");","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"                    if (line[1].equals(\"X\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"                        task.setMarked(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"                throw new DukeException(\"The file cannot be found at the specified path\");","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"        return tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"     * Saves the given list of tasks to the specified file path.","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"                String taskString \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"                if (task instanceof ToDoTask) {","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \"T;\";","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"                } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \"D;\";","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"                } else if (task instanceof EventTask) {","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \"E;\";","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"                if (task.isMarked()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \"X;\";","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"                } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \"O;\";","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"                taskString +\u003d task.getName();","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"                if (task instanceof DeadlineTask) {","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"                    DeadlineTask dTask \u003d (DeadlineTask) task;","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \";\";","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d dTask.getPreposition();","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \";\";","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d dTask.getDateTime().format(DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"                } else if (task instanceof EventTask) {","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"                    EventTask dTask \u003d (EventTask) task;","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \";\";","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d dTask.getPreposition();","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d \";\";","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d dTask.getDateTime().format(DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"raynerljm"},"content":"                fileWriter.write(taskString);","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"raynerljm"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"raynerljm"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"            throw new DukeException(\"Unable to save tasks *quack*\");","lastModifiedDate":"2022-01-24"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":126}},{"path":"src/main/java/duke/function/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.function;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":" * Represents a collection of Tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     * A list of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"    List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     * Initializes the TaskList with an empty ArrayList of Tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * Initializes the TaskList with the given List of Tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     * @param tasks tasks to be inserted into the TaskList.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"     * Returns the number of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"     * @return The number of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"    public Integer getSize() {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"     * Prints tasks out with their index (1-based).","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"     * @param ui","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"    public void printTasks(Ui ui) {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"            System.out.println(\"You currently do not have any tasks *quack*, please add some more\");","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"            ui.print(\"These are your tasks *quack*:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"            for (int i \u003d 1; i \u003c\u003d this.getSize(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"                Task task \u003d this.getByNumber(i);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"                ui.print(String.format(\"%d. %s\", i, task.toString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"     * Returns a new TaskList after filtering tasks with provided keyword.","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"     * @param keyword Provided keyword.","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"    public TaskList filterByKeyword(String keyword) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"        for (Task task : this.getTasks()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"            if (task.getName().toLowerCase().contains(keyword)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"                newTaskList.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"     * Returns the task according to its index (1-based).","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"     * @param number The index (1-based) of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"     * @return The task retrieved from its index (1-based).","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"    public Task getByNumber(int number) {","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"        return this.tasks.get(number - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"     * Deletes the task according to its index (1-based).","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"     * @param number The index (1-based) of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"     * @return The task deleted from its index (1-based).","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"    public Task deleteByNumber(int number) {","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"        return tasks.remove(number - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":108}},{"path":"src/main/java/duke/function/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.function;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":" * To handle any input output interaction with users.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"     * For receiving user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    Scanner sc;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"     * Initializes a Ui instance with a scanner receiving input from the System input.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"    public Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * Prints the boot up message to greet users.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    public void printBootUp() {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"Hello! I am Duck 🐥\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"     * Prints the error message when saved tasks fail to load.","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    public void printLoadingError() {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"Since loading the save file has failed, your task list is currently empty\");","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"     * Prints the line separator surrounding Duke\u0027s messages.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"    public void printLineSeparator() {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     * Prints the message of the provided exception with Duke\u0027s personality.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"     * @param e The provided exception.","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    public void printException(DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"        System.out.println(String.format(\"%s *quack*\", e.getMessage()));","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"     * Prints a list of commands the user can use to interact with Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"    public void printHelp() {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"These are the commands you can use *quack*:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027list\u0027 to list out all your tasks\");","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027todo \u003cdescription\u003e\u0027 to add a todo task\");","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027deadline /\u003cpreposition\u003e \u003cdescription\u003e\u0027 to add a task with a deadline\");","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027event /\u003cpreposition\u003e \u003cdescription\u003e\u0027 to add an event with a date\");","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027mark \u003ctask number\u003e\u0027 to mark a task as done\");","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027unmark \u003ctask number\u003e\u0027 to unmark a task as done\");","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027delete \u003ctask number\u003e\u0027 to delete a task\");","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"  \u0027bye\u0027 to close your Duck app\");","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"        System.out.println(\"*quack*\");","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"     * Prints any provided message with Duke\u0027s personality.","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"     * @param message The provided message.","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"    public void print(String message) {","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        System.out.println(String.format(\"%s *quack*\", message));","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"     * Receives user input from the command line.","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"     * @return The user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":86}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.main;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import duke.function.Parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import duke.function.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import duke.function.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import duke.function.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":" * Duke is a Todo list command line application that allows you to create, delete, mark, and save tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"     * To load and save tasks into the specified file path","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * To maintain the current list of tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     * To handle any input output interaction with users","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"     * Returns a Duke application that loads previously saved tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     * @param filePath File path from where to load the saved tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"            ui.printException(e);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"            ui.printLoadingError();","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"     * Runs the Duke application","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"    public void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"        this.ui.printBootUp();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        // Program will keep taking in new user input until terminated","lastModifiedDate":"2022-01-14"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"            try {","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"                this.ui.printLineSeparator();","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"                this.ui.printException(e);","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"            } finally {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"                this.ui.printLineSeparator();","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"        new Duke(\"src/main/data/save.txt\").run();","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"raynerljm":73,"-":3}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":" * Represents a deadline task with a local date time.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"     * Preposition describing the date (eg. on, by).","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    String preposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"     * Date and time of the deadline.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"     * Initializes a new ∂eadline task.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * @param name        Name of the event.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * @param preposition Preposition describing the date.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * @param dateTime    Date and time of the event.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    public DeadlineTask(String name, String preposition, LocalDateTime dateTime) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"        super(name);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        this.preposition \u003d preposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    public String getPreposition() {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        return this.preposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        return this.dateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"     * Returns a formatted string including the type indicating it is a deadline task.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        return \"[D]\"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"                + super.toString()","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"                + String.format(\" (%s: %s)\",","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"                this.preposition,","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"                this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":53}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":" * Represents an event task with a local date time.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"     * Preposition describing the date (eg. on, by).","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    String preposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"     * Date and time of the event.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"     * Initializes a new event.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     * @param name        Name of the event.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * @param preposition Preposition describing the date.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * @param dateTime    Date and time of the event.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    public EventTask(String name, String preposition, LocalDateTime dateTime) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"        super(name);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        this.preposition \u003d preposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    public String getPreposition() {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        return this.preposition;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        return this.dateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"     * Returns a formatted string including the type indicating it is an event.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        return \"[E]\"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"                + super.toString()","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"                + String.format(\" (%s: %s)\",","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"                this.preposition,","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"                this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":" * Represents a task. Meant to be inherited by more specified tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"public class Task {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"    String name;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"     * To indicate whether the task has been completed","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    boolean isMarked;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     * Initializes a new task.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"     * @param name Description or name of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    public boolean isMarked() {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"        return this.isMarked;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public String getName() {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        return this.name;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    public void setMarked(boolean isMarked) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"     * Prints out a formatted version of the task with its done state.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"     * @return Formatted task.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"        String doneState \u003d isMarked ? \"X\" : \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        return String.format(\"[%s] %s\", doneState, this.name);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":49}},{"path":"src/main/java/duke/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":" * Represents a simple todo task with only a description.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"    public ToDoTask(String name) {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"        super(name);","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"     * Returns a formatted string including the type indicating it is a todo.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"     * @return","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"raynerljm":21}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"    public void mark_unmarked() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"        Task task \u003d new Task(\"taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"        task.setMarked(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"        assertEquals(task.isMarked(), true);","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    public void mark_marked() {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"        Task task \u003d new Task(\"taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"        task.setMarked(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"        task.setMarked(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"        assertEquals(task.isMarked(), true);","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    public void unmark_unmarked() {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"        Task task \u003d new Task(\"taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"        task.setMarked(false);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"        assertEquals(task.isMarked(), false);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    public void unmark_marked() {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"        Task task \u003d new Task(\"taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        task.setMarked(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        task.setMarked(false);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        assertEquals(task.isMarked(), false);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"    public void toString_marked() {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"        Task task \u003d new Task(\"taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        task.setMarked(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        assertEquals(task.toString(), \"[X] taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    public void toString_unmarked() {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"        Task task \u003d new Task(\"taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"        assertEquals(task.toString(), \"[ ] taskName\");","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"hello","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"help","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"list","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"todo homework","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"list","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"deadline project /by 2022-01-30 23:59","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"list","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"mark 2","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"event festival /on 2022-04-14 09:00","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"list","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"mark 3","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"delete 3","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"bye","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"raynerljm":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"if ! javac -cp ../src/main/java/duke/main -Xlint:none -d ../bin ../src/main/java/duke/main/*.java","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raynerljm":1,"-":37}}]
