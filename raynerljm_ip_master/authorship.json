[{"path":"src/main/data/save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"T;X;homework","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"D;X;report;by;2022-01-30T23:59:00","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"E;X;festival;on;2022-02-05T09:00:00","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"raynerljm":3}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"    String preposition;","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"    DeadlineTask(String name, String preposition, LocalDateTime dateTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"        super(name);","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"        this.preposition \u003d preposition;","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"        return \"[D]\" + super.toString() + String.format(\" (%s: %s)\",this.preposition, this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"raynerljm":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import java.io.File;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"    public static void main(String[] args) throws FileNotFoundException, IOException {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"        String SAVE_FILE_PATH \u003d \"src/main/data/save.txt\";","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"        // Storage for all the items listed by the user","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"        boolean hasUpdated \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"        // Loading up the file","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"        File file \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"            Scanner fileSc \u003d new Scanner(file);","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"            List\u003cString\u003e errors \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"            while (fileSc.hasNextLine()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"                String[] line \u003d fileSc.nextLine().split(\";\");","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"                Task task;","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"                try {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"                    // TODO Task","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"                    if (line[0].equals(\"T\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"                        task \u003d new ToDoTask(line[2]);","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"                    // Deadline Task","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"                    else if (line[0].equals(\"D\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"                        task \u003d new DeadlineTask(line[2], line[3], LocalDateTime.parse(line[4]));","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"                    // Event Task","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"                    else if (line[0].equals(\"E\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"                        task \u003d new EventTask(line[2], line[3], LocalDateTime.parse(line[4]));","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"                    } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"                        throw new Exception(\"An invalid task type was read\");","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"                    if (line[1].equals(\"X\")) task.mark();","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"                    tasks.add(task);","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"                    System.out.println(\"An error occurred while restoring your saved tasks\");","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"            System.out.println(\"Hello! I\u0027m Duck\\nWelcome back, your tasks have been restored! *quack*\");","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"            System.out.println(\"Hello! I\u0027m Duck\\nWhat can I do for you? *quack*\");","lastModifiedDate":"2022-01-14"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        // Scanner for reading user input","lastModifiedDate":"2022-01-14"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-14"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        String command \u003d \"\"; //Where user input will be stored","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        // Program will keep taking in new user input until terminated","lastModifiedDate":"2022-01-14"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        while (true) {","lastModifiedDate":"2022-01-14"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"            StringTokenizer st \u003d new StringTokenizer(sc.nextLine());","lastModifiedDate":"2022-01-14"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"            command \u003d st.nextToken();","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"            // User terminates the program","lastModifiedDate":"2022-01-14"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"            if (command.equals(\"bye\"))  {","lastModifiedDate":"2022-01-14"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"Aww. Hope to see you again soon! *quack*\");","lastModifiedDate":"2022-01-14"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"                return;","lastModifiedDate":"2022-01-14"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"            // User lists out all stored items","lastModifiedDate":"2022-01-14"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"            else if (command.equals(\"list\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"                if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-14"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"                    System.out.println(\"You currently do not have any tasks *quack*, please add some more\");","lastModifiedDate":"2022-01-14"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"                    continue;","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-14"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"These are your tasks *quack*:\");","lastModifiedDate":"2022-01-14"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-14"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"                    int number \u003d i + 1;","lastModifiedDate":"2022-01-14"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2022-01-14"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"                    System.out.println(String.format(\"%d. %s\", number, task.toString()));","lastModifiedDate":"2022-01-14"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-14"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"            // Add a ToDo Task OR Deadline Task OR Event Task","lastModifiedDate":"2022-01-15"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"            else if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"                //Reading in the name and preposition","lastModifiedDate":"2022-01-15"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"                List\u003cString\u003e nameArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-15"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"                String preposition \u003d \"\";","lastModifiedDate":"2022-01-14"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"                while (st.hasMoreTokens()) {","lastModifiedDate":"2022-01-14"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"                    String nextToken \u003d st.nextToken();","lastModifiedDate":"2022-01-14"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"                    if (command.equals(\"todo\") || nextToken.charAt(0) !\u003d \u0027/\u0027) {","lastModifiedDate":"2022-01-15"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"                        nameArray.add(nextToken);","lastModifiedDate":"2022-01-15"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-14"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"                    //Only take in preposition if it is not a todo","lastModifiedDate":"2022-01-15"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"                    else {","lastModifiedDate":"2022-01-15"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"                        preposition \u003d nextToken.substring(1);","lastModifiedDate":"2022-01-14"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"                        break;","lastModifiedDate":"2022-01-14"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-14"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-14"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"                String name \u003d String.join(\" \", nameArray);","lastModifiedDate":"2022-01-15"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"                //Error handling for no name","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"                if (name.equals(\"\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"                    System.out.println(\"Please add a description of your todo as it cannot be empty! *quack*\");","lastModifiedDate":"2022-01-15"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"                    continue;","lastModifiedDate":"2022-01-15"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"                //Setting up deadline/ date","lastModifiedDate":"2022-01-15"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"                String date \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"                String time \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"                if (st.hasMoreTokens()) date \u003d st.nextToken();","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"                if (st.hasMoreTokens()) time \u003d st.nextToken();","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"                if ((date.equals(\"\") || time.equals(\"\"))) {","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"                    if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(\"Please add a date and time for your deadline in the following format \u0027deadline \u003cname\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"raynerljm"},"content":"                        continue;","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"raynerljm"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(\"Please add a date and time for your event in the following format \u0027event \u003cname\u003e /on \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"raynerljm"},"content":"                        continue;","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-14"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"                    dateTime \u003d LocalDateTime.parse(date + \"T\" + time);","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"                    if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":127,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(\"Please add a date and time for your deadline in the following format \u0027deadline \u003cname\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"                        continue;","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":130,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(\"Please add a date and time for your event in the following format \u0027event \u003cname\u003e /on \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\u0027 ! *quack*\");","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"                        continue;","lastModifiedDate":"2022-01-22"},{"lineNumber":132,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"                //Creating the new task","lastModifiedDate":"2022-01-15"},{"lineNumber":135,"author":{"gitId":"raynerljm"},"content":"                Task newTask \u003d new Task(\"placeholder task\");","lastModifiedDate":"2022-01-15"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"                if (command.equals(\"todo\")) newTask \u003d new ToDoTask(name);","lastModifiedDate":"2022-01-15"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"                else if (command.equals(\"deadline\")) newTask \u003d new DeadlineTask(name, preposition, dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"                else if (command.equals(\"event\")) newTask \u003d new EventTask(name, preposition, dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"raynerljm"},"content":"                tasks.add(newTask);","lastModifiedDate":"2022-01-14"},{"lineNumber":140,"author":{"gitId":"raynerljm"},"content":"                hasUpdated \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"                //Output to update user","lastModifiedDate":"2022-01-15"},{"lineNumber":142,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"Got it. I\u0027ve added this task *quack*:\");","lastModifiedDate":"2022-01-14"},{"lineNumber":143,"author":{"gitId":"raynerljm"},"content":"                System.out.println(String.format(\"  %s\", newTask.toString()));","lastModifiedDate":"2022-01-14"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"                System.out.println(String.format(\"Now you have %d task%s in the list *quack*.\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2022-01-14"},{"lineNumber":145,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"            // User marks or unmarks or deletes a task","lastModifiedDate":"2022-01-21"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"            else if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"                // Error handling if user does not input a second argument","lastModifiedDate":"2022-01-14"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"                if (!st.hasMoreTokens()) {","lastModifiedDate":"2022-01-14"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"                    System.out.println(\"Please input an item number (eg. \u0027mark 1\u0027, \u0027unmark 1\u0027, or \u0027delete 1\u0027)\");","lastModifiedDate":"2022-01-15"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"                } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"                    // Error handling","lastModifiedDate":"2022-01-15"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"                    try {","lastModifiedDate":"2022-01-14"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"                        int number \u003d Integer.parseInt(st.nextToken());","lastModifiedDate":"2022-01-14"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"                        //If the number given is out of range","lastModifiedDate":"2022-01-15"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"                        if (number \u003c\u003d 0 || number \u003e tasks.size()) throw new DukeException(\"OutOfTaskRangeException\");","lastModifiedDate":"2022-01-21"},{"lineNumber":157,"author":{"gitId":"raynerljm"},"content":"                        Task task \u003d tasks.get(number - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"                        String action \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"                        String additionalText \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"                        //Deleting a task","lastModifiedDate":"2022-01-15"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"                        if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":162,"author":{"gitId":"raynerljm"},"content":"                            tasks.remove(number - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":163,"author":{"gitId":"raynerljm"},"content":"                            action \u003d \"delet\";","lastModifiedDate":"2022-01-15"},{"lineNumber":164,"author":{"gitId":"raynerljm"},"content":"                            hasUpdated \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":165,"author":{"gitId":"raynerljm"},"content":"                        }","lastModifiedDate":"2022-01-15"},{"lineNumber":166,"author":{"gitId":"raynerljm"},"content":"                        //Marking a task as done","lastModifiedDate":"2022-01-15"},{"lineNumber":167,"author":{"gitId":"raynerljm"},"content":"                        else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":168,"author":{"gitId":"raynerljm"},"content":"                            task.mark();","lastModifiedDate":"2022-01-15"},{"lineNumber":169,"author":{"gitId":"raynerljm"},"content":"                            additionalText \u003d \" as done\";","lastModifiedDate":"2022-01-15"},{"lineNumber":170,"author":{"gitId":"raynerljm"},"content":"                            action \u003d command;","lastModifiedDate":"2022-01-15"},{"lineNumber":171,"author":{"gitId":"raynerljm"},"content":"                            hasUpdated \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":172,"author":{"gitId":"raynerljm"},"content":"                        }","lastModifiedDate":"2022-01-15"},{"lineNumber":173,"author":{"gitId":"raynerljm"},"content":"                        //Unmarking a task","lastModifiedDate":"2022-01-15"},{"lineNumber":174,"author":{"gitId":"raynerljm"},"content":"                        else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":175,"author":{"gitId":"raynerljm"},"content":"                            task.unmark();","lastModifiedDate":"2022-01-15"},{"lineNumber":176,"author":{"gitId":"raynerljm"},"content":"                            action \u003d command;","lastModifiedDate":"2022-01-15"},{"lineNumber":177,"author":{"gitId":"raynerljm"},"content":"                            hasUpdated \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":178,"author":{"gitId":"raynerljm"},"content":"                        }","lastModifiedDate":"2022-01-15"},{"lineNumber":179,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(String.format(\"I\u0027ve %sed task %d%s! *quack*\", action, number, additionalText));","lastModifiedDate":"2022-01-15"},{"lineNumber":180,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(String.format(\"  %d. %s\", number, task.toString()));","lastModifiedDate":"2022-01-15"},{"lineNumber":181,"author":{"gitId":"raynerljm"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":182,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(\"Please ONLY input integers (eg. \u0027mark 1\u0027, \u0027unmark 1\u0027, \u0027delete 1\u0027)\");","lastModifiedDate":"2022-01-15"},{"lineNumber":183,"author":{"gitId":"raynerljm"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":184,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(\"Please ONLY input integers that correspond to tasks (type \u0027list\u0027 to see your tasks)\");","lastModifiedDate":"2022-01-15"},{"lineNumber":185,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-14"},{"lineNumber":186,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-14"},{"lineNumber":187,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":188,"author":{"gitId":"raynerljm"},"content":"            // User deletes a task","lastModifiedDate":"2022-01-15"},{"lineNumber":189,"author":{"gitId":"raynerljm"},"content":"            else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":190,"author":{"gitId":"raynerljm"},"content":"                // Error handling if user does not input a second argument","lastModifiedDate":"2022-01-14"},{"lineNumber":191,"author":{"gitId":"raynerljm"},"content":"                if (!st.hasMoreTokens()) {","lastModifiedDate":"2022-01-14"},{"lineNumber":192,"author":{"gitId":"raynerljm"},"content":"                    System.out.println(\"Please input an item number when deleting (eg. \u0027delete 1\u0027)\");","lastModifiedDate":"2022-01-15"},{"lineNumber":193,"author":{"gitId":"raynerljm"},"content":"                } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":194,"author":{"gitId":"raynerljm"},"content":"                    // Error handling if user inputs strings","lastModifiedDate":"2022-01-14"},{"lineNumber":195,"author":{"gitId":"raynerljm"},"content":"                    try {","lastModifiedDate":"2022-01-14"},{"lineNumber":196,"author":{"gitId":"raynerljm"},"content":"                        int number \u003d Integer.parseInt(st.nextToken());","lastModifiedDate":"2022-01-14"},{"lineNumber":197,"author":{"gitId":"raynerljm"},"content":"                        Task removedTask \u003d tasks.remove(number - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":198,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(String.format(\"I\u0027ve deleted task %d! *quack*\", number));","lastModifiedDate":"2022-01-15"},{"lineNumber":199,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(String.format(\"  %s\", removedTask.toString()));","lastModifiedDate":"2022-01-15"},{"lineNumber":200,"author":{"gitId":"raynerljm"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2022-01-14"},{"lineNumber":201,"author":{"gitId":"raynerljm"},"content":"                        System.out.println(\"Please ONLY input integers when deleting (eg. \u0027delete 1\u0027)\");","lastModifiedDate":"2022-01-15"},{"lineNumber":202,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-14"},{"lineNumber":203,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-14"},{"lineNumber":204,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":205,"author":{"gitId":"raynerljm"},"content":"            // Help command","lastModifiedDate":"2022-01-15"},{"lineNumber":206,"author":{"gitId":"raynerljm"},"content":"            else if (command.equals(\"help\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":207,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"These are the commands you can use *quack*:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":208,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027list\u0027 to list out all your tasks\");","lastModifiedDate":"2022-01-15"},{"lineNumber":209,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027todo \u003cdescription\u003e\u0027 to add a todo task\");","lastModifiedDate":"2022-01-15"},{"lineNumber":210,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027deadline /\u003cpreposition\u003e \u003cdescription\u003e\u0027 to add a task with a deadline\");","lastModifiedDate":"2022-01-15"},{"lineNumber":211,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027event /\u003cpreposition\u003e \u003cdescription\u003e\u0027 to add an event with a date\");","lastModifiedDate":"2022-01-15"},{"lineNumber":212,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027mark \u003ctask number\u003e\u0027 to mark a task as done\");","lastModifiedDate":"2022-01-15"},{"lineNumber":213,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027unmark \u003ctask number\u003e\u0027 to unmark a task as done\");","lastModifiedDate":"2022-01-15"},{"lineNumber":214,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027delete \u003ctask number\u003e\u0027 to delete a task\");","lastModifiedDate":"2022-01-15"},{"lineNumber":215,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"  \u0027bye\u0027 to close your Duck app\");","lastModifiedDate":"2022-01-15"},{"lineNumber":216,"author":{"gitId":"raynerljm"},"content":"                System.out.println(\"*quack*\");","lastModifiedDate":"2022-01-15"},{"lineNumber":217,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":218,"author":{"gitId":"raynerljm"},"content":"            // User adds items to the list","lastModifiedDate":"2022-01-14"},{"lineNumber":219,"author":{"gitId":"raynerljm"},"content":"            else {","lastModifiedDate":"2022-01-14"},{"lineNumber":220,"author":{"gitId":"raynerljm"},"content":"                System.out.println(String.format(\"That is not a valid command *quack*\\nType \u0027help\u0027 to see a list of valid commands\"));","lastModifiedDate":"2022-01-15"},{"lineNumber":221,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":222,"author":{"gitId":"raynerljm"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-15"},{"lineNumber":223,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":224,"author":{"gitId":"raynerljm"},"content":"            // Saving changes","lastModifiedDate":"2022-01-21"},{"lineNumber":225,"author":{"gitId":"raynerljm"},"content":"            if (hasUpdated) {","lastModifiedDate":"2022-01-21"},{"lineNumber":226,"author":{"gitId":"raynerljm"},"content":"                FileWriter fileWriter \u003d new FileWriter(SAVE_FILE_PATH);","lastModifiedDate":"2022-01-21"},{"lineNumber":227,"author":{"gitId":"raynerljm"},"content":"                for (Task task: tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":228,"author":{"gitId":"raynerljm"},"content":"                    String taskString \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":229,"author":{"gitId":"raynerljm"},"content":"                    if (task instanceof ToDoTask) {","lastModifiedDate":"2022-01-21"},{"lineNumber":230,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \"T;\";","lastModifiedDate":"2022-01-21"},{"lineNumber":231,"author":{"gitId":"raynerljm"},"content":"                    } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2022-01-21"},{"lineNumber":232,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \"D;\";","lastModifiedDate":"2022-01-21"},{"lineNumber":233,"author":{"gitId":"raynerljm"},"content":"                    } else if (task instanceof EventTask) {","lastModifiedDate":"2022-01-21"},{"lineNumber":234,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \"E;\";","lastModifiedDate":"2022-01-21"},{"lineNumber":235,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":236,"author":{"gitId":"raynerljm"},"content":"                    if (task.done) {","lastModifiedDate":"2022-01-21"},{"lineNumber":237,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \"X;\";","lastModifiedDate":"2022-01-21"},{"lineNumber":238,"author":{"gitId":"raynerljm"},"content":"                    } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":239,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \"O;\";","lastModifiedDate":"2022-01-21"},{"lineNumber":240,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":241,"author":{"gitId":"raynerljm"},"content":"                    taskString +\u003d task.name;","lastModifiedDate":"2022-01-21"},{"lineNumber":242,"author":{"gitId":"raynerljm"},"content":"                    if (task instanceof DeadlineTask) {","lastModifiedDate":"2022-01-21"},{"lineNumber":243,"author":{"gitId":"raynerljm"},"content":"                        DeadlineTask dTask \u003d (DeadlineTask) task;","lastModifiedDate":"2022-01-21"},{"lineNumber":244,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \";\";","lastModifiedDate":"2022-01-21"},{"lineNumber":245,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d dTask.preposition;","lastModifiedDate":"2022-01-21"},{"lineNumber":246,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \";\";","lastModifiedDate":"2022-01-21"},{"lineNumber":247,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d dTask.dateTime.format(DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"raynerljm"},"content":"                    } else if (task instanceof EventTask) {","lastModifiedDate":"2022-01-21"},{"lineNumber":249,"author":{"gitId":"raynerljm"},"content":"                        EventTask dTask \u003d (EventTask) task;","lastModifiedDate":"2022-01-21"},{"lineNumber":250,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \";\";","lastModifiedDate":"2022-01-21"},{"lineNumber":251,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d dTask.preposition;","lastModifiedDate":"2022-01-21"},{"lineNumber":252,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d \";\";","lastModifiedDate":"2022-01-21"},{"lineNumber":253,"author":{"gitId":"raynerljm"},"content":"                        taskString +\u003d dTask.dateTime.format(DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2022-01-23"},{"lineNumber":254,"author":{"gitId":"raynerljm"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":255,"author":{"gitId":"raynerljm"},"content":"                    fileWriter.write(taskString);","lastModifiedDate":"2022-01-21"},{"lineNumber":256,"author":{"gitId":"raynerljm"},"content":"                    fileWriter.write(System.lineSeparator());","lastModifiedDate":"2022-01-21"},{"lineNumber":257,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":258,"author":{"gitId":"raynerljm"},"content":"                fileWriter.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":259,"author":{"gitId":"raynerljm"},"content":"                hasUpdated \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":260,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":261,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"raynerljm":260,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"        super(errorMessage, err);","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"raynerljm":8}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"    String preposition;","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"    EventTask(String name,String preposition, LocalDateTime dateTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"        super(name);","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"        this.preposition \u003d preposition;","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"        return \"[E]\" + super.toString() + String.format(\" (%s: %s)\",this.preposition, this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"raynerljm":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"public class Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"    String name;","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"    boolean done;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"    Task(String name) {","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"    void mark() {","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    void unmark() {","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"        String doneState \u003d done ? \"X\" : \" \";","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"        return String.format(\"[%s] %s\", doneState, this.name);","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"raynerljm":22}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"    ToDoTask(String name) {","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"        super(name);","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"raynerljm":9}}]
