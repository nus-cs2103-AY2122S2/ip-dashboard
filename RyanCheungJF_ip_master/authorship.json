[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"## Acknowledgements","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"- [SE Education JavaFX Tutorial](https://se-education.org/guides/tutorials/javaFx.html)","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"- Past projects for CSS inspiration: `hanweic53`","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"RyanCheungJF":4,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"plugins {","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"repositories {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"application {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"archivesBaseName \u003d \u0027duke\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"dependencies {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.7.1\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"checkstyle {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"run {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"shadowJar {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"test {","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"    testLogging {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"        showExceptions true","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"        showCauses true","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"        showStackTraces true","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"RyanCheungJF":64}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"# Duke User Guide","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"### Feature-Task Types","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"Tasks in the application are classified under three different categories as listed below:","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"- Todo","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"- Deadline","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"- Event","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"This application also prevents users from adding duplicate tasks into the list, and will alert the user if they try to.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"### Feature-Task State","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"Each task has a state, to mark whether it has been completed.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"Completed tasks are marked with a cross, as follows: `[X]`\\","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"Incomplete tasks are marked as follows: `[ ]`","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"Each task is also associated with a specific number, detailing its position in the entire list. ","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"To learn how to obtain the number and use the application, read on to the `Usage` section.","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"### Feature-Task Date \u0026 Time","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"Certain types of tasks allow for users to add dates and time for increased specificity.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"To find out which tasks are capable of doing so, read on to the `Usage` section.","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"### Feature-Saving Tasks","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"Tasks added while using the app will automatically be saved.","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"Upon start-up, the tasks will be retrieved and thus the user can continue using the app. ","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"### `list` - View current tasks in the list","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command returns a list of tasks that have been added.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"If the user is a first time user, the list will be empty, and the text returned will reflect it as so.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"Command: ","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"`list`","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"### `todo` - Adds a task of type todo","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command adds a task of type todo to the list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"Todo tasks have no date and time functionality, and are automatically marked as incomplete by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"Specify the task name after a single space following `todo`.","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"Command:","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"`todo \u003ctaskName\u003e`","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"Example of usage :heavy_check_mark::","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"`todo walk`","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"`todo go for a run`","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"Task name can be made up of multiple words.","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"Negative examples of usage :x::","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"todo","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"- No task name is specified","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"### `deadline` - Adds a task of type todo into the list","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command adds a task of type deadline to the list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"Deadline tasks have date and time functionality, and are automatically marked as uncompleted by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"Time is optional, while specifying the date is compulsory.","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"Ensure the keyword `/by` is used, and a whitespace follows after the command, task name and date.","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"Command:","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"`deadline \u003ctaskName\u003e /by \u003cDD/MM/YYYY\u003e \u003ctime\u003e`","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"Example of usage :heavy_check_mark::","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"deadline report /by 22/02/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"deadline submit cheque /by 13/02/2021 midnight","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"deadline deliverables /by 16/01/2020","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"Negative examples of usage :x::","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"RyanCheungJF"},"content":"deadline report \\by 22/02/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of keyword \u0027/by\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"RyanCheungJF"},"content":"deadline report/by 22/02/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"RyanCheungJF"},"content":"deadline report /by 22/2/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of date format","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"RyanCheungJF"},"content":"### `event` - Adds a task of type todo into the list","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command adds a task of type event to the list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"RyanCheungJF"},"content":"Event tasks have date and time functionality, and are automatically marked as uncompleted by default.","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"RyanCheungJF"},"content":"Time is optional, while specifying the date is compulsory.","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"RyanCheungJF"},"content":"Ensure the keyword `/at` is used, and a whitespace follows after the command, task name and date.","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"RyanCheungJF"},"content":"Example of usage :heavy_check_mark::","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"RyanCheungJF"},"content":"event carnival /at 22/02/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"RyanCheungJF"},"content":"event swim comp /at 13/02/2021 noon","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"RyanCheungJF"},"content":"event birthday /at 16/01/2020","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"RyanCheungJF"},"content":"Negative examples of usage :x::","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"RyanCheungJF"},"content":"event carnival \\at 22/02/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of keyword \u0027/at\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"RyanCheungJF"},"content":"event carnival/at 22/02/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"RyanCheungJF"},"content":"event carnival /at 22/2/2022 2pm","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of date format","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":152,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":153,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":154,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":155,"author":{"gitId":"RyanCheungJF"},"content":"### `mark` - Marks a task as completed","lastModifiedDate":"2022-02-09"},{"lineNumber":156,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":157,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command marks the task specified as completed.","lastModifiedDate":"2022-02-09"},{"lineNumber":158,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":159,"author":{"gitId":"RyanCheungJF"},"content":"Specify the task number (as a digit) after a single space following `mark`.","lastModifiedDate":"2022-02-09"},{"lineNumber":160,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":161,"author":{"gitId":"RyanCheungJF"},"content":"To get the task number, one can use the `list` command. The task number will be beside the task name.","lastModifiedDate":"2022-02-09"},{"lineNumber":162,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":163,"author":{"gitId":"RyanCheungJF"},"content":"Command:","lastModifiedDate":"2022-02-09"},{"lineNumber":164,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":165,"author":{"gitId":"RyanCheungJF"},"content":"`mark \u003ctaskNumber\u003e`","lastModifiedDate":"2022-02-09"},{"lineNumber":166,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":167,"author":{"gitId":"RyanCheungJF"},"content":"Example of usage :heavy_check_mark::","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":169,"author":{"gitId":"RyanCheungJF"},"content":"`mark 1`","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":171,"author":{"gitId":"RyanCheungJF"},"content":"Negative examples of usage :x::","lastModifiedDate":"2022-02-09"},{"lineNumber":172,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":173,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":174,"author":{"gitId":"RyanCheungJF"},"content":"mark1","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"RyanCheungJF"},"content":"mark ","lastModifiedDate":"2022-02-09"},{"lineNumber":178,"author":{"gitId":"RyanCheungJF"},"content":"- No task number specified","lastModifiedDate":"2022-02-09"},{"lineNumber":179,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":180,"author":{"gitId":"RyanCheungJF"},"content":"mark one","lastModifiedDate":"2022-02-09"},{"lineNumber":181,"author":{"gitId":"RyanCheungJF"},"content":"- A digit isn\u0027t used","lastModifiedDate":"2022-02-09"},{"lineNumber":182,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":183,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":184,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":185,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":186,"author":{"gitId":"RyanCheungJF"},"content":"### `unmark` - Marks a task as incomplete","lastModifiedDate":"2022-02-09"},{"lineNumber":187,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":188,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command marks the task specified as incomplete.","lastModifiedDate":"2022-02-09"},{"lineNumber":189,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":190,"author":{"gitId":"RyanCheungJF"},"content":"Specify the task number after a single space following `unmark`.","lastModifiedDate":"2022-02-09"},{"lineNumber":191,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":192,"author":{"gitId":"RyanCheungJF"},"content":"To get the task number, one can use the `list` command. The task number will be beside the task name.","lastModifiedDate":"2022-02-09"},{"lineNumber":193,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":194,"author":{"gitId":"RyanCheungJF"},"content":"Command:","lastModifiedDate":"2022-02-09"},{"lineNumber":195,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":196,"author":{"gitId":"RyanCheungJF"},"content":"`unmark \u003ctaskNumber\u003e`","lastModifiedDate":"2022-02-09"},{"lineNumber":197,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":198,"author":{"gitId":"RyanCheungJF"},"content":"Example of usage :heavy_check_mark::","lastModifiedDate":"2022-02-09"},{"lineNumber":199,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":200,"author":{"gitId":"RyanCheungJF"},"content":"`unmark 1`","lastModifiedDate":"2022-02-09"},{"lineNumber":201,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":202,"author":{"gitId":"RyanCheungJF"},"content":"Negative examples of usage :x::","lastModifiedDate":"2022-02-09"},{"lineNumber":203,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":204,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":205,"author":{"gitId":"RyanCheungJF"},"content":"unmark1","lastModifiedDate":"2022-02-09"},{"lineNumber":206,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":207,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":208,"author":{"gitId":"RyanCheungJF"},"content":"unmark ","lastModifiedDate":"2022-02-09"},{"lineNumber":209,"author":{"gitId":"RyanCheungJF"},"content":"- No task number specified","lastModifiedDate":"2022-02-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":211,"author":{"gitId":"RyanCheungJF"},"content":"unmark one","lastModifiedDate":"2022-02-09"},{"lineNumber":212,"author":{"gitId":"RyanCheungJF"},"content":"- A digit isn\u0027t used","lastModifiedDate":"2022-02-09"},{"lineNumber":213,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":214,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":215,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":216,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":217,"author":{"gitId":"RyanCheungJF"},"content":"### `find` - Finds a specific task","lastModifiedDate":"2022-02-09"},{"lineNumber":218,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":219,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command marks returns the specified task.","lastModifiedDate":"2022-02-09"},{"lineNumber":220,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":221,"author":{"gitId":"RyanCheungJF"},"content":"Specify the task number after a single space following `find`.","lastModifiedDate":"2022-02-09"},{"lineNumber":222,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":223,"author":{"gitId":"RyanCheungJF"},"content":"To get the task number, one can use the `list` command. The task number will be beside the task name.","lastModifiedDate":"2022-02-09"},{"lineNumber":224,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":225,"author":{"gitId":"RyanCheungJF"},"content":"Command:","lastModifiedDate":"2022-02-09"},{"lineNumber":226,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":227,"author":{"gitId":"RyanCheungJF"},"content":"`unmark \u003ctaskNumber\u003e`","lastModifiedDate":"2022-02-09"},{"lineNumber":228,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":229,"author":{"gitId":"RyanCheungJF"},"content":"Example of usage :heavy_check_mark::","lastModifiedDate":"2022-02-09"},{"lineNumber":230,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":231,"author":{"gitId":"RyanCheungJF"},"content":"`find 1`","lastModifiedDate":"2022-02-09"},{"lineNumber":232,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":233,"author":{"gitId":"RyanCheungJF"},"content":"Negative examples of usage :x::","lastModifiedDate":"2022-02-09"},{"lineNumber":234,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":235,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":236,"author":{"gitId":"RyanCheungJF"},"content":"find1","lastModifiedDate":"2022-02-09"},{"lineNumber":237,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":238,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":239,"author":{"gitId":"RyanCheungJF"},"content":"find ","lastModifiedDate":"2022-02-09"},{"lineNumber":240,"author":{"gitId":"RyanCheungJF"},"content":"- No task number specified","lastModifiedDate":"2022-02-09"},{"lineNumber":241,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":242,"author":{"gitId":"RyanCheungJF"},"content":"find one","lastModifiedDate":"2022-02-09"},{"lineNumber":243,"author":{"gitId":"RyanCheungJF"},"content":"- A digit isn\u0027t used","lastModifiedDate":"2022-02-09"},{"lineNumber":244,"author":{"gitId":"RyanCheungJF"},"content":"```","lastModifiedDate":"2022-02-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":246,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"RyanCheungJF"},"content":"### `delete` - Deletes a specific task","lastModifiedDate":"2022-02-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":250,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command deletes the specified task.","lastModifiedDate":"2022-02-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"RyanCheungJF"},"content":"Specify the task number after a single space following `delete`.","lastModifiedDate":"2022-02-09"},{"lineNumber":253,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":254,"author":{"gitId":"RyanCheungJF"},"content":"To get the task number, one can use the `list` command. The task number will be beside the task name.","lastModifiedDate":"2022-02-09"},{"lineNumber":255,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":256,"author":{"gitId":"RyanCheungJF"},"content":"Command:","lastModifiedDate":"2022-02-09"},{"lineNumber":257,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":258,"author":{"gitId":"RyanCheungJF"},"content":"`delete \u003ctaskNumber\u003e`","lastModifiedDate":"2022-02-09"},{"lineNumber":259,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":260,"author":{"gitId":"RyanCheungJF"},"content":"Example of usage :heavy_check_mark::","lastModifiedDate":"2022-02-09"},{"lineNumber":261,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":262,"author":{"gitId":"RyanCheungJF"},"content":"`find 1`","lastModifiedDate":"2022-02-09"},{"lineNumber":263,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":264,"author":{"gitId":"RyanCheungJF"},"content":"Negative examples of usage :x::","lastModifiedDate":"2022-02-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":266,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":267,"author":{"gitId":"RyanCheungJF"},"content":"delete1","lastModifiedDate":"2022-02-09"},{"lineNumber":268,"author":{"gitId":"RyanCheungJF"},"content":"- Incorrect use of whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":269,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":270,"author":{"gitId":"RyanCheungJF"},"content":"delete","lastModifiedDate":"2022-02-09"},{"lineNumber":271,"author":{"gitId":"RyanCheungJF"},"content":"- No task number specified","lastModifiedDate":"2022-02-09"},{"lineNumber":272,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":273,"author":{"gitId":"RyanCheungJF"},"content":"delete one","lastModifiedDate":"2022-02-09"},{"lineNumber":274,"author":{"gitId":"RyanCheungJF"},"content":"- A digit isn\u0027t used","lastModifiedDate":"2022-02-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":276,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":277,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":278,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":279,"author":{"gitId":"RyanCheungJF"},"content":"### `bye` - Closes Duke","lastModifiedDate":"2022-02-09"},{"lineNumber":280,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":281,"author":{"gitId":"RyanCheungJF"},"content":"Calling this command closes Duke and does a save one last time.","lastModifiedDate":"2022-02-09"},{"lineNumber":282,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":283,"author":{"gitId":"RyanCheungJF"},"content":"Duke will automatically close after waiting a second, there is no need to manually close it.","lastModifiedDate":"2022-02-09"},{"lineNumber":284,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":285,"author":{"gitId":"RyanCheungJF"},"content":"Command:","lastModifiedDate":"2022-02-09"},{"lineNumber":286,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":287,"author":{"gitId":"RyanCheungJF"},"content":"`bye`","lastModifiedDate":"2022-02-09"},{"lineNumber":288,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":289,"author":{"gitId":"RyanCheungJF"},"content":"\u003cbr /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":290,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":291,"author":{"gitId":"RyanCheungJF"},"content":"### Unrecognized Command","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"RyanCheungJF":265,"-":26}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"goto fail","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"goto fail","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":":execute","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":":end","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":":fail","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"exit /b 1","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":":mainEnd","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":":omega","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import duke.handler.FileHandler;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import duke.handler.Handlers;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" * Returns the service bot Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    private Tasklist list;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the bot as an object.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that is used to store the tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    public Duke(Tasklist list) {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"        FileHandler.readFromFile(this.list);","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"     * Greets the user upon startup.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Customized greeting.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    public static String greet() {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        StringBuilder str \u003d new StringBuilder(\"Hello from\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"        return str.append(logo).append(\"What can I do for you?\\n\").toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns responses from Duke to the GUI.","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input Input from user.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Response from Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    public String handleInput(String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"        return Handlers.commandHandler(this.list, input);","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"RyanCheungJF":40,"-":8}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import duke.ui.Main;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"public class Launcher {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"     * Entry point of the application","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     * @param args Arguments to be passed into the program, if any.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"RyanCheungJF":18}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a custom exception used to handle edge cases in our application.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns an error object with a custom message.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * @param message This is the error message returned to users.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"        super(message);","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     * Checks whether the input is valid for Deadline and Event tasks. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Index of the keyword \u0027/by\u0027 or \u0027/at\u0027 that is too be used in the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"     * @param taskType Specifies the task type of either Deadline or Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"     * @return An array of the date and time format, if specified.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"    public static String[] isTaskValid(int index, String input, String taskType, Tasklist list) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"        if (taskType.equals(\"event\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please specify a date using \u0027/at\u0027.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"            if (index - 1 \u003c 6 || input.substring(6, index - 1).strip().equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please key in a valid task name.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isDuplicatedTask(input.substring(6, index - 1).strip(), list);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please specify a date using \u0027/by\u0027.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"            if (index - 1 \u003c 9 || input.substring(9, index - 1).strip().equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please key in a valid task name.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isDuplicatedTask(input.substring(9, index - 1).strip(), list);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please use \u0027todo, deadline, event\u0027 to start adding tasks.\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"        if (index + 4 \u003e input.length() || input.substring(index + 4).strip().equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please key in a valid time.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Sorry, avoid using \u0027|\u0027 as it is a special character.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"        String timeString \u003d input.substring(index + 4);","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"        String[] timeArray \u003d timeString.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"        if (timeArray.length \u003d\u003d 0 || timeArray.length \u003e 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"        String[] dateArray \u003d timeArray[0].split(\"/\");","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"        if (dateArray.length !\u003d 3) {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"        String regex \u003d \"[0-9]+\";","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"        Pattern p \u003d Pattern.compile(regex);","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"            if (!p.matcher(dateArray[i]).matches()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"        if (timeArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"            return dateArray;","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"            return new String[]{dateArray[0], dateArray[1], dateArray[2], timeArray[1]};","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"     * Checks whether the input is valid for Todo tasks. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"    public static void isTaskValid(String input, Tasklist list) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.length() \u003c 5 || input.substring(5).strip().equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please key in a valid task name.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Sorry, avoid using \u0027|\u0027 as it is a special character.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"        DukeException.isDuplicatedTask(input.substring(5).strip(), list);","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the integer if input is valid. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"     * @return The index to be used.","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"    public static int isIndexValid(String input, Tasklist list) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"        String [] keywords \u003d input.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"RyanCheungJF"},"content":"        int index;","lastModifiedDate":"2022-01-16"},{"lineNumber":108,"author":{"gitId":"RyanCheungJF"},"content":"        if (keywords.length !\u003d 2) {","lastModifiedDate":"2022-01-16"},{"lineNumber":109,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please provide a single task number.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":110,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":111,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":112,"author":{"gitId":"RyanCheungJF"},"content":"            index \u003d Integer.parseInt(keywords[1]) - 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":113,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2022-01-16"},{"lineNumber":114,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please key in a number starting from 1.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":116,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003e\u003d list.getTotalTasks()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"No task with this number exists yet!\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":118,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":119,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2022-01-16"},{"lineNumber":120,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please key in a valid digit.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":121,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":122,"author":{"gitId":"RyanCheungJF"},"content":"        return index;","lastModifiedDate":"2022-01-16"},{"lineNumber":123,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":124,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the keyword if input is valid. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"RyanCheungJF"},"content":"     * @return The word to be used.","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"RyanCheungJF"},"content":"    public static String isWordValid(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please type in a word to search through the tasks.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"RyanCheungJF"},"content":"        return input.substring(5);","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"RyanCheungJF"},"content":"     * Checks whether the input has a similar name as one of the existing tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"RyanCheungJF"},"content":"    public static void isDuplicatedTask(String input, Tasklist list) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"RyanCheungJF"},"content":"        for (int i \u003d 0; i \u003c list.getTotalTasks(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"RyanCheungJF"},"content":"            if (list.getTask(i).getTaskName().equals(input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Sorry, a task with a similar name already exists.\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":153}},{"path":"src/main/java/duke/handler/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.handler;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"import duke.time.Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a class to handle reading, writing, creating and updating functionalities regarding external files.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"public class FileHandler {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    private static final java.nio.file.Path PATH \u003d java.nio.file.Paths.get(FileHandler.HOME,","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"            \"desktop\", \"ip\", \"data\", \"duke.txt\");","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    // When reading from saved tasks, completed tasks are marked with \"1\" to represent TRUE","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    private static final String COMPLETED \u003d \"1\";","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"     * Asserts that the paths specified have a value.","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    public static void pathAssertionCheck() {","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"        assert FileHandler.HOME !\u003d null : \"Home should be initialized\";","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"        assert FileHandler.PATH !\u003d null : \"Path should be initialized\";","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"     * Attempts to read from the output file. If it does not exist, creates one. Afterwards, updates the list of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"    public static void readFromFile(Tasklist list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"        FileHandler.pathAssertionCheck();","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"        if (!java.nio.file.Files.exists(FileHandler.PATH)) {","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.createFolder();","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"            String input \u003d Files.readString(FileHandler.PATH);","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"            String[] tasks \u003d input.split(\"\\\\r?\\\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"                String[] taskInfo \u003d tasks[i].split(\"\\\\|\");","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"                boolean completed \u003d taskInfo[1].equals(COMPLETED);","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"                switch (taskInfo[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"                case \"T\":","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"                    list.addTask(new Todo(completed, taskInfo[2]));","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"                case \"D\":","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"                    if (taskInfo.length \u003d\u003d 4) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"                        list.addTask(new Deadline(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"                                Time.convertToDate(taskInfo[3]), \"\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"                    } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"                        list.addTask(new Deadline(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"                                Time.convertToDate(taskInfo[3]), taskInfo[4]));","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"                case \"E\":","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"                    if (taskInfo.length \u003d\u003d 4) {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"                        list.addTask(new Event(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"                                Time.convertToDate(taskInfo[3]), \"\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"                    } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"                        list.addTask(new Event(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"                                Time.convertToDate(taskInfo[3]), taskInfo[4]));","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"                default:","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"                    throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Path specified incorrectly.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.createFolder();","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"     * Writes to the output file in the specified format.","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"    public static void writeToFile(Tasklist list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"        FileHandler.pathAssertionCheck();","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"        StringBuilder writeTasks \u003d new StringBuilder();","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"        for (int i \u003d 0; i \u003c list.getTotalTasks(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"            String digit;","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.getTask(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"            if (t.isCompleted()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"                digit \u003d \"1|\";","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"                digit \u003d \"0|\";","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"                writeTasks.append(\"T|\").append(digit).append(t.getTaskName()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"                writeTasks.append(\"E|\").append(digit).append(t.getTaskName()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"                        .append(((Event) t).getDeadline()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"                                .append(((Event) t).getTime()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"                writeTasks.append(\"D|\").append(digit).append(t.getTaskName()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"RyanCheungJF"},"content":"                        .append(((Deadline) t).getDeadline()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"RyanCheungJF"},"content":"                                .append(((Deadline) t).getTime()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"RyanCheungJF"},"content":"        String content \u003d writeTasks.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"RyanCheungJF"},"content":"            FileWriter writer \u003d new FileWriter(String.valueOf(FileHandler.PATH));","lastModifiedDate":"2022-02-05"},{"lineNumber":114,"author":{"gitId":"RyanCheungJF"},"content":"            writer.write(content);","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"RyanCheungJF"},"content":"            writer.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Path specified incorrectly.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"RyanCheungJF"},"content":"     * Creates directory for the output file.","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"RyanCheungJF"},"content":"    public static void createFolder() {","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"RyanCheungJF"},"content":"        FileHandler.pathAssertionCheck();","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"RyanCheungJF"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(FileHandler.HOME, \"desktop\", \"ip\", \"data\");","lastModifiedDate":"2022-02-05"},{"lineNumber":127,"author":{"gitId":"RyanCheungJF"},"content":"        File file \u003d new File(String.valueOf(path));","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"RyanCheungJF"},"content":"        file.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":130}},{"path":"src/main/java/duke/handler/Handlers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.handler;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":" * Enum class used to handle the different commands used in the application.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"public enum Handlers {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"    Bye(\"bye\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    Deadline(\"deadline\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    Delete(\"delete\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    Event(\"event\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    Find(\"find\"),","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    Mark(\"mark\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    List(\"list\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    Todo(\"todo\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    Unmark(\"unmark\");","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"    // Only date is provided in input array","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    private static final int DATE \u003d 3;","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"    // Both date and time is provided in input array","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"    private static final int DATEANDTIME \u003d 4;","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"    public final String label;","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"     * Enum constructor to reference the exact commands used.","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"     * @param label Exact commands used in the application.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"    Handlers(String label) {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles and distributes all commands to the respective handlers.","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input Text that the user has entered.","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"    public static String commandHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"        String cmd \u003d inputArr[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"            if (cmd.equals(Bye.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.byeHandler(list);","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(List.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.listHandler(list);","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(Deadline.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.deadlineHandler(list, input, cmd);","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(Event.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.eventHandler(list, input, cmd);","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(Todo.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.todoHandler(list, input);","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(Mark.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.markHandler(list, input);","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(Unmark.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.unmarkHandler(list, input);","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(Find.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.findHandler(list, input);","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (cmd.equals(Delete.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"                return Handlers.deleteHandler(list, input);","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"                throw new IllegalArgumentException(\"Sorry, this is not a recognized command.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (IllegalArgumentException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027bye\u0027. Ends the program.","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"    public static String byeHandler(Tasklist list) {","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"        FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027deadline\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"     * @param cmd String representing the command being used.","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"    public static String deadlineHandler(Tasklist list, String input, String cmd) {","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"            String[] time \u003d DukeException.isTaskValid(index, input, cmd, list);","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"            Deadline task;","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"            LocalDate date \u003d LocalDate.of(Integer.parseInt(time[2]), Integer.parseInt(time[1]),","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"                    Integer.parseInt(time[0]));","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"            if (time.length \u003d\u003d DATE) {","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Deadline(false, input.substring(9, index - 1), date, \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (time.length \u003d\u003d DATEANDTIME) {","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Deadline(false, input.substring(9, index - 1), date, time[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Time provided in incorrect format.\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"RyanCheungJF"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"RyanCheungJF"},"content":"            StringBuilder str \u003d new StringBuilder(\"Deadline Added: \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"RyanCheungJF"},"content":"            str.append(\"There are now \").append(list.getTotalTasks()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"RyanCheungJF"},"content":"            return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException | DateTimeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027delete\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"RyanCheungJF"},"content":"    public static String deleteHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d DukeException.isIndexValid(input, list);","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.delete(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"RyanCheungJF"},"content":"            StringBuilder str \u003d new StringBuilder(t.toString() + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"RyanCheungJF"},"content":"            str.append(\"There are now \").append(list.getTotalTasks()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"RyanCheungJF"},"content":"            return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027event\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"RyanCheungJF"},"content":"     * @param cmd String representing the command being used.","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"RyanCheungJF"},"content":"    public static String eventHandler(Tasklist list, String input, String cmd) {","lastModifiedDate":"2022-01-31"},{"lineNumber":148,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"RyanCheungJF"},"content":"            String[] time \u003d DukeException.isTaskValid(index, input, cmd, list);","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"RyanCheungJF"},"content":"            Event task;","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"RyanCheungJF"},"content":"            LocalDate date \u003d LocalDate.of(Integer.parseInt(time[2]), Integer.parseInt(time[1]),","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"RyanCheungJF"},"content":"                    Integer.parseInt(time[0]));","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"RyanCheungJF"},"content":"            if (time.length \u003d\u003d DATE) {","lastModifiedDate":"2022-02-05"},{"lineNumber":155,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Event(false, input.substring(6, index - 1), date, \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (time.length \u003d\u003d DATEANDTIME) {","lastModifiedDate":"2022-02-05"},{"lineNumber":157,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Event(false, input.substring(6, index - 1), date, time[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":159,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Time provided in incorrect format.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":160,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"RyanCheungJF"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"RyanCheungJF"},"content":"            StringBuilder str \u003d new StringBuilder(\"Event Added: \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":164,"author":{"gitId":"RyanCheungJF"},"content":"            str.append(\"There are now \").append(list.getTotalTasks()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":165,"author":{"gitId":"RyanCheungJF"},"content":"            return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":166,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException | DateTimeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":168,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027find\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"RyanCheungJF"},"content":"    public static String findHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":178,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"RyanCheungJF"},"content":"            String searchPhrase \u003d DukeException.isWordValid(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"RyanCheungJF"},"content":"            LinkedList\u003cTask\u003e filtered \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"RyanCheungJF"},"content":"            for (int i \u003d 0; i \u003c list.getTotalTasks(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":182,"author":{"gitId":"RyanCheungJF"},"content":"                if (list.getTask(i).getTaskName().contains(searchPhrase)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":183,"author":{"gitId":"RyanCheungJF"},"content":"                    filtered.add(list.getTask(i));","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"RyanCheungJF"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":185,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"RyanCheungJF"},"content":"            StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-01-31"},{"lineNumber":187,"author":{"gitId":"RyanCheungJF"},"content":"            if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"RyanCheungJF"},"content":"                str.append(\"Sorry, but we could not find any tasks containing the search term.\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":189,"author":{"gitId":"RyanCheungJF"},"content":"                return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":190,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"RyanCheungJF"},"content":"                str.append(\"Here are the matching tasks!\\n\").append(Tasklist.taskFormatter(filtered));","lastModifiedDate":"2022-02-03"},{"lineNumber":192,"author":{"gitId":"RyanCheungJF"},"content":"                return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":193,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":200,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027mark\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":201,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":202,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":204,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":205,"author":{"gitId":"RyanCheungJF"},"content":"    public static String markHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":206,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":207,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d DukeException.isIndexValid(input, list);","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.mark(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":209,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":210,"author":{"gitId":"RyanCheungJF"},"content":"            StringBuilder str \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done!\" + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":211,"author":{"gitId":"RyanCheungJF"},"content":"            str.append(t.toString()).append(\"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":212,"author":{"gitId":"RyanCheungJF"},"content":"            return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":213,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":214,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":215,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":216,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":217,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":218,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":219,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027list\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":220,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":221,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":222,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":223,"author":{"gitId":"RyanCheungJF"},"content":"    public static String listHandler(Tasklist list) {","lastModifiedDate":"2022-01-31"},{"lineNumber":224,"author":{"gitId":"RyanCheungJF"},"content":"        return list.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":225,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":226,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":227,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":228,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027todo\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":229,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"RyanCheungJF"},"content":"    public static String todoHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":234,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":235,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isTaskValid(input, list);","lastModifiedDate":"2022-02-06"},{"lineNumber":236,"author":{"gitId":"RyanCheungJF"},"content":"            Todo task \u003d new Todo(false, input.substring(5));","lastModifiedDate":"2022-01-23"},{"lineNumber":237,"author":{"gitId":"RyanCheungJF"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":238,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":239,"author":{"gitId":"RyanCheungJF"},"content":"            StringBuilder str \u003d new StringBuilder(\"Todo Added: \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":240,"author":{"gitId":"RyanCheungJF"},"content":"            str.append(\"There are now \").append(list.getTotalTasks()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":241,"author":{"gitId":"RyanCheungJF"},"content":"            return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":242,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":243,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":244,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":245,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":246,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027unmark\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":249,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":250,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":251,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":252,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":253,"author":{"gitId":"RyanCheungJF"},"content":"    public static String unmarkHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":254,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":255,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d DukeException.isIndexValid(input, list);","lastModifiedDate":"2022-01-26"},{"lineNumber":256,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.unmark(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":257,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":258,"author":{"gitId":"RyanCheungJF"},"content":"            StringBuilder str \u003d new StringBuilder(\"Okay! I\u0027ve marked this as undone!\" + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":259,"author":{"gitId":"RyanCheungJF"},"content":"            str.append(t.toString()).append(\"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":260,"author":{"gitId":"RyanCheungJF"},"content":"            return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":261,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":262,"author":{"gitId":"RyanCheungJF"},"content":"            return err.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":263,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":264,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":265,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"RyanCheungJF":265}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.time.Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a type of task with a pending date, and may contain a time.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    private String time;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task of type Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     * @param deadline Date of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     * @param time Time of the deadline. Optional field.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    public Deadline(boolean isCompleted, String task, LocalDate deadline, String time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"        super(task, isCompleted);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date of the deadline. Formats it in DD MM YYYY.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the date of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        return Time.convertToString(this.deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the time of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the time of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        return this.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the deadline task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the deadline task.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        if (this.time.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + Time.convertToString(this.deadline) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + Time.convertToString(this.deadline) + \", \" + this.time + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":60}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.time.Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a type of task with a pending date, and may contain a time.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    private String time;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task of type Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     * @param deadline Date of the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     * @param time Time of the event. Optional field.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    public Event(boolean isCompleted, String task, LocalDate deadline, String time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"        super(task, isCompleted);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date of the event. Formats it in DD MM YYYY.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the date of the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        return Time.convertToString(this.deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the time of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the time of the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        return this.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the event task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the event task.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        if (this.time.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + Time.convertToString(this.deadline) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + Time.convertToString(this.deadline) + \", \" + this.time + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":60}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":" * Returns an object that encapsulates the details which the user wishes to complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"    private String task;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns a new initialized task.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    public Task(String task, boolean isCompleted) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task as completed.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    public void mark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task as incomplete.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns a boolean depending on whether the task is completed.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A boolean on whether the task is completed.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"        return this.isCompleted;","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"        return this.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"        StringBuilder status \u003d new StringBuilder();","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"            status.append(\"[X] \");","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"            status.append(\"[ ] \");","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"        return status.append(this.task).toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":69}},{"path":"src/main/java/duke/task/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a container to store all the tasks that have been created.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"public class Tasklist {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"    private LinkedList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task container. Only allows events, deadlines and todos.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    public Tasklist() {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"        this.tasks \u003d new LinkedList\u003cTask\u003e();","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     * Adds a task to the container to be tracked.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     * @param t Task to be added.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task specified.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the total number of tasks inside the container.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A number representing the total number of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    public Task mark(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        Task t \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"        t.mark();","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        return t;","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"    public Task unmark(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"        Task t \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"        t.unmark();","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"        return t;","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"    public Task delete(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the tasks in a list format.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing all the details of the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"    public static String taskFormatter(LinkedList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"        StringBuilder allTasks \u003d new StringBuilder(\"Fetching all records...\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"            return allTasks.append(\"No entries found, start by adding one!\\n\").toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"            allTasks.append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"        return allTasks.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the tasks in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing all the details of the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"        return Tasklist.taskFormatter(this.tasks);","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":106}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a type of task called todo.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task of type Todo.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"    public Todo (boolean isCompleted, String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"        super(task, isCompleted);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the todo task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the todo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"RyanCheungJF":27}},{"path":"src/main/java/duke/time/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a custom time object to handle conversions between the different formats of time.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"public class Time {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date in string format.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     * @param date Date in LocalDate format.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Same date represented in string form.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    public static String convertToString(LocalDate date) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date in LocalDate format.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"     * @param date Date in string format.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Same date represented in LocalDate form.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    public static LocalDate convertToDate(String date) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"        String[] dates \u003d date.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"        int year \u003d Integer.parseInt(dates[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"        int day \u003d Integer.parseInt(dates[0]);","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"        switch (dates[1]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Jan\":","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 1, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Feb\":","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 2, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Mar\":","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 3, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Apr\":","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 4, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"        case \"May\":","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 5, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Jun\":","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 6, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        case \"July\":","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 7, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Aug\":","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 8, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Sep\":","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 9, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Oct\":","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 10, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Nov\":","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 11, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 12, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":58}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"        Circle clip \u003d new Circle(displayPicture.getX() + 49.5, displayPicture.getY() + 43, 30);","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    private void flip() {","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"        db.flip();","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"        return db;","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"RyanCheungJF":63}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"    private Duke duke \u003d new Duke(new Tasklist());","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"            stage.show();","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"RyanCheungJF":34}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import duke.Duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/spaceman.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ghost.jpg\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"        assert d !\u003d null : \"Duke instance should be initialized\";","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * Greets the user and initializes the nodes to be used.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"        assert userImage !\u003d null : \"Images should load\";","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        assert dukeImage !\u003d null : \"Images should load\";","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Duke.greet(), dukeImage));","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        String response \u003d duke.handleInput(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"        );","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"            delay.setOnFinished(event -\u003e {","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"                Platform.exit();","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"            });","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"            delay.play();","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"RyanCheungJF":70}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"\u003cfx:root","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"        alignment\u003d\"CENTER_RIGHT\"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"        maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"        \u003cLabel","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"                fx:id\u003d\"dialog\"","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"                text\u003d\"Label\"","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"                wrapText\u003d\"true\"","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"                style\u003d\"-fx-background-color: #c3efee;","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"                -fx-border-color: #61e4c4;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"                -fx-border-width: 2 2;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"                -fx-border-radius: 15;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"                -fx-label-padding: 15;","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"                -fx-background-radius: 15;\"","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"        /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"        \u003cImageView","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"                fx:id\u003d\"displayPicture\"","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"                fitHeight\u003d\"99.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"                fitWidth\u003d\"99.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"                pickOnBounds\u003d\"true\"","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"                preserveRatio\u003d\"true\"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"        /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"        \u003cInsets","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"                bottom\u003d\"15.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"                left\u003d\"5.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"                right\u003d\"5.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"                top\u003d\"15.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"        /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"RyanCheungJF":47}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"\u003cAnchorPane","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"        maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"        prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"        fx:controller\u003d\"duke.ui.MainWindow\"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"        \u003cTextField","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"                fx:id\u003d\"userInput\"","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"                prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"        /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"        \u003cButton","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"                fx:id\u003d\"sendButton\"","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"        /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"        \u003cScrollPane","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"                fx:id\u003d\"scrollPane\"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"                hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"                hvalue\u003d\"1.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"                prefHeight\u003d\"557.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"                prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"                vvalue\u003d\"1.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"        \u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"                \u003cVBox","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"                        fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"                        prefHeight\u003d\"552.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"                        prefWidth\u003d\"388.0\"","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"                        style\u003d\"-fx-background-image: url(\u0027/images/background.png\u0027);\"","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"                /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"RyanCheungJF":57}},{"path":"src/test/java/duke/exception/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":" * Returns an object used to test the functionality of the referenced class.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"    public void taskValidation_invalidInput_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isTaskValid(8, \"event t /at -12/12/1999\", \"event\", new Tasklist());","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"            assertEquals(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\", err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    public void indexValidation_invalidDigit_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isIndexValid(\"mark one\", new Tasklist());","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"            assertEquals(\"Please key in a valid digit.\\n\", err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":30}},{"path":"src/test/java/duke/time/TimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"public class TimeTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"        assertEquals(\"23 Jan 2022\", Time.convertToString(LocalDate.of(2022, 1, 23)));","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"    public void testDateConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"        assertEquals(LocalDate.of(2021, 12, 25), Time.convertToDate(\"25 Dec 2021\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"mark -1","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"find book","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"add task","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"todo","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"todo buy|choya","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"deadline /by 25/01/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"deadline impossible date /by -1/01/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"deadline return book /by 25/01/2022 6pm","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"event project meeting /at 01/02/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"event festival /at","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"mark 47","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"deadline","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"find book","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"unmark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"delete 3","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"delete 2","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"java -classpath ..\\bin\\ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanCheungJF":2,"-":19}}]
