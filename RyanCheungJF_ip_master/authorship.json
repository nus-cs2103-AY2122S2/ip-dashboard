[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"plugins {","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"repositories {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"application {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"archivesBaseName \u003d \u0027duke\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"dependencies {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.7.1\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"checkstyle {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"run {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"test {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"RyanCheungJF":34}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"@rem","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"goto fail","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"echo.","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"goto fail","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":":execute","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":":end","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":":fail","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"exit /b 1","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":":mainEnd","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":":omega","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.handler.FileHandler;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"import duke.handler.Handlers;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":" * Returns the main task manager, Duke as an object.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the execution of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"     * @param args Arguments, if any, to be passed for execution.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        System.out.println(\"Hello I\u0027m Duke!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"        Tasklist list \u003d new Tasklist();","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"        Scanner scn \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"        FileHandler.readFromFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"        System.out.println(list.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"        Handlers.commandHandler(list, scn);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"RyanCheungJF":26,"-":9}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a custom exception used to handle edge cases in our application.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns an error object with a custom message.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * @param message This is the error message returned to users.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"        super(message);","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     * Checks whether the input is valid for Deadline and Event tasks. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Index of the keyword \u0027/by\u0027 or \u0027/at\u0027 that is too be used in the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"     * @param taskType Specifies the task type of either Deadline or Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"     * @return An array of the date and time format, if specified.","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"    public static String[] isTaskValid(int index, String input, String taskType) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"        if (taskType.equals(\"event\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please specify a date using \u0027/at\u0027.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"            if (index - 1 \u003c 6) {","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please key in a valid task name.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please specify a date using \u0027/by\u0027.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"            if (index - 1 \u003c 9) {","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please key in a valid task name.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"        if (index + 4 \u003e input.length() || input.substring(index + 4).strip().equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please key in a valid time.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Sorry, avoid using \u0027|\u0027 as it is a special character.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"        String timeString \u003d input.substring(index + 4);","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"        String[] timeArray \u003d timeString.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        if (timeArray.length \u003d\u003d 0 || timeArray.length \u003e 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"        String[] dateArray \u003d timeArray[0].split(\"/\");","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"        if (dateArray.length !\u003d 3) {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"        String regex \u003d \"[0-9]+\";","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"        Pattern p \u003d Pattern.compile(regex);","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"            if (!p.matcher(dateArray[i]).matches()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"        if (timeArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"            return dateArray;","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"            return new String[]{dateArray[0], dateArray[1], dateArray[2], timeArray[1]};","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"     * Checks whether the input is valid for Todo tasks. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"    public static void isTaskValid(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.length() \u003c 5 || input.substring(5).strip().equals(\"\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please key in a valid task name.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.contains(\"|\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Sorry, avoid using \u0027|\u0027 as it is a special character.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the integer if input is valid. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"     * @return The index to be used.","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"    public static int isIndexValid(String input, Tasklist list) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"        String [] keywords \u003d input.split(\" \");","lastModifiedDate":"2022-01-16"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"        int index;","lastModifiedDate":"2022-01-16"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"        if (keywords.length !\u003d 2) {","lastModifiedDate":"2022-01-16"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please provide a single task number.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"            index \u003d Integer.parseInt(keywords[1]) - 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2022-01-16"},{"lineNumber":107,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"Please key in a number starting from 1.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":108,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":109,"author":{"gitId":"RyanCheungJF"},"content":"            if (index \u003e\u003d list.getTotalTasks()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"RyanCheungJF"},"content":"                throw new DukeException(\"No task with this number exists yet!\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":111,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":112,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2022-01-16"},{"lineNumber":113,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please key in a valid digit.\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":114,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"RyanCheungJF"},"content":"        return index;","lastModifiedDate":"2022-01-16"},{"lineNumber":116,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":117,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the keyword if input is valid. Otherwise, throws an exception.","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"RyanCheungJF"},"content":"     * @return The word to be used.","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"RyanCheungJF"},"content":"     * @throws DukeException If any of the params do not satisfy conditions for processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"RyanCheungJF"},"content":"    public static String isWordValid(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"RyanCheungJF"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"RyanCheungJF"},"content":"            throw new DukeException(\"Please type in a word to search through the tasks.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"RyanCheungJF"},"content":"        return input.substring(5);","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":131}},{"path":"src/main/java/duke/handler/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.handler;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"import duke.time.Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a class to handle reading, writing, creating and updating functionalities regarding external files.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"public class FileHandler {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the desired path where the output file is stored.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"     * @return The path in string format.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    public static String getFilePath() {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"desktop\", \"ip\", \"data\", \"duke.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"        return String.valueOf(path);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     * Attempts to read from the output file. If it does not exist, creates one. Afterwards, updates the list of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"    public static void readFromFile(Tasklist list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"desktop\", \"ip\", \"data\", \"duke.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"        if (java.nio.file.Files.exists(Paths.get(FileHandler.getFilePath()))) {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"                String input \u003d Files.readString(path);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"                String[] tasks \u003d input.split(\"\\\\r?\\\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"                for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"                    String[] taskInfo \u003d tasks[i].split(\"\\\\|\");","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"                    boolean completed \u003d taskInfo[1].equals(\"1\");","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"                    switch (taskInfo[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"                        list.addTask(new Todo(completed, taskInfo[2]));","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"                        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"                    case \"D\":","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"                        if (taskInfo.length \u003d\u003d 4) {","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"                            list.addTask(new Deadline(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"                                    Time.convertToDate(taskInfo[3]), \"\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"                        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"                            list.addTask(new Deadline(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"                                    Time.convertToDate(taskInfo[3]), taskInfo[4]));","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"                        }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"                        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"                        if (taskInfo.length \u003d\u003d 4) {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"                            list.addTask(new Event(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"                                    Time.convertToDate(taskInfo[3]), \"\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"                        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"                            list.addTask(new Event(completed, taskInfo[2],","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"                                    Time.convertToDate(taskInfo[3]), taskInfo[4]));","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"                        }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"                        break;","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"                    default:","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"                        throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"            } catch (IOException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"                System.out.println(\"Path specified incorrectly.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"            } catch (ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"                FileHandler.createFolder();","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.createFolder();","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"     * Writes to the output file in the specified format.","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"    public static void writeToFile(Tasklist list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"        String path \u003d FileHandler.getFilePath();","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"        StringBuilder writeTasks \u003d new StringBuilder();","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"        for (int i \u003d 0; i \u003c list.getTotalTasks(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"            String digit;","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.getTask(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"            if (t.isCompleted()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"                digit \u003d \"1|\";","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"                digit \u003d \"0|\";","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"                writeTasks.append(\"T|\").append(digit).append(t.getTaskName()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"                writeTasks.append(\"E|\").append(digit).append(t.getTaskName()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"                        .append(((Event) t).getDeadline()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"                                .append(((Event) t).getTime()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"                writeTasks.append(\"D|\").append(digit).append(t.getTaskName()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"RyanCheungJF"},"content":"                        .append(((Deadline) t).getDeadline()).append(\"|\")","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"RyanCheungJF"},"content":"                                .append(((Deadline) t).getTime()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"RyanCheungJF"},"content":"        String content \u003d writeTasks.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"RyanCheungJF"},"content":"            FileWriter writer \u003d new FileWriter(path);","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"RyanCheungJF"},"content":"            writer.write(content);","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"RyanCheungJF"},"content":"            writer.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Path specified incorrectly.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"RyanCheungJF"},"content":"     * Creates directory for the output file.","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"RyanCheungJF"},"content":"    public static void createFolder() {","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"RyanCheungJF"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"RyanCheungJF"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"desktop\", \"ip\", \"data\");","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"RyanCheungJF"},"content":"        File file \u003d new File(String.valueOf(path));","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"RyanCheungJF"},"content":"        file.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":130}},{"path":"src/main/java/duke/handler/Handlers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.handler;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":" * Enum class used to handle the different commands used in the application.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"public enum Handlers {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    Bye(\"bye\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    Deadline(\"deadline\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    Delete(\"delete\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    Event(\"event\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    Find(\"find\"),","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    Mark(\"mark\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    List(\"list\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    Todo(\"todo\"),","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    Unmark(\"unmark\");","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    public final String label;","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"     * Enum constructor to reference the exact commands used.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"     * @param label Exact commands used in the application.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    Handlers(String label) {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles and distributes all commands to the respective handlers.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"     * @param scn Scanner used to read in the arguments.","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"    public static void commandHandler(Tasklist list, Scanner scn) {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"        while (scn.hasNextLine()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"            String input \u003d scn.nextLine();","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"            String cmd \u003d inputArr[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"                if (cmd.equals(Bye.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.byeHandler(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(List.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.listHandler(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(Deadline.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.deadlineHandler(list, input, cmd);","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(Event.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.eventHandler(list, input, cmd);","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(Todo.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.todoHandler(list, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(Mark.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.markHandler(list, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(Unmark.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.unmarkHandler(list, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(Find.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.findHandler(list, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"                } else if (cmd.equals(Delete.label)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"                    Handlers.deleteHandler(list, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"                    throw new IllegalArgumentException(\"Sorry, this is not a recognized command.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"            } catch (IllegalArgumentException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027bye\u0027. Ends the program.","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"    public static void byeHandler(Tasklist list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"        FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027deadline\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"     * @param cmd String representing the command being used.","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"    public static void deadlineHandler(Tasklist list, String input, String cmd) {","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"            String[] time \u003d DukeException.isTaskValid(index, input, cmd);","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"            Deadline task;","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"            LocalDate date \u003d LocalDate.of(Integer.parseInt(time[2]), Integer.parseInt(time[1]),","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"                    Integer.parseInt(time[0]));","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"            if (time.length \u003d\u003d 3) {","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Deadline(false, input.substring(9, index - 1), date, \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Deadline(false, input.substring(9, index - 1), date, time[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"RyanCheungJF"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Deadline Added: \" + task.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"There are now \" + list.getTotalTasks() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException | DateTimeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027delete\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"RyanCheungJF"},"content":"    public static void deleteHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d DukeException.isIndexValid(input, list);","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Noted. Deleting this task...\");","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.delete(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(t.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"There are now \" + list.getTotalTasks() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027event\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"RyanCheungJF"},"content":"     * @param cmd String representing the command being used.","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"RyanCheungJF"},"content":"    public static void eventHandler(Tasklist list, String input, String cmd) {","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"RyanCheungJF"},"content":"            String[] time \u003d DukeException.isTaskValid(index, input, cmd);","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"RyanCheungJF"},"content":"            Event task;","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"RyanCheungJF"},"content":"            LocalDate date \u003d LocalDate.of(Integer.parseInt(time[2]), Integer.parseInt(time[1]),","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"RyanCheungJF"},"content":"                    Integer.parseInt(time[0]));","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"RyanCheungJF"},"content":"            if (time.length \u003d\u003d 3) {","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Event(false, input.substring(6, index - 1), date, \"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"RyanCheungJF"},"content":"                task \u003d new Event(false, input.substring(6, index - 1), date, time[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"RyanCheungJF"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Event Added: \" + task.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"There are now \" + list.getTotalTasks() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException | DateTimeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027find\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"RyanCheungJF"},"content":"    public static void findHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"RyanCheungJF"},"content":"            String searchPhrase \u003d DukeException.isWordValid(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"RyanCheungJF"},"content":"            LinkedList\u003cTask\u003e filtered \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"RyanCheungJF"},"content":"            for (int i \u003d 0; i \u003c list.getTotalTasks(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"RyanCheungJF"},"content":"                if (list.getTask(i).getTaskName().contains(searchPhrase)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"RyanCheungJF"},"content":"                    filtered.add(list.getTask(i));","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"RyanCheungJF"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"RyanCheungJF"},"content":"            if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"RyanCheungJF"},"content":"                System.out.println(\"Sorry, but we could not find any tasks containing the search term.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":182,"author":{"gitId":"RyanCheungJF"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":183,"author":{"gitId":"RyanCheungJF"},"content":"                System.out.println(\"Here are the matching tasks!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"RyanCheungJF"},"content":"                System.out.println(Tasklist.taskFormatter(filtered));","lastModifiedDate":"2022-01-23"},{"lineNumber":185,"author":{"gitId":"RyanCheungJF"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027mark\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"RyanCheungJF"},"content":"    public static void markHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d DukeException.isIndexValid(input, list);","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":201,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.mark(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":202,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(t.toString() + \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":204,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":205,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":206,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":207,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":208,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":209,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":210,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027list\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":211,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":212,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list","lastModifiedDate":"2022-01-23"},{"lineNumber":213,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":214,"author":{"gitId":"RyanCheungJF"},"content":"    public static void listHandler(Tasklist list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":215,"author":{"gitId":"RyanCheungJF"},"content":"        System.out.println(list.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":216,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":217,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":218,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":219,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027todo\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":220,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":221,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":222,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":223,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":224,"author":{"gitId":"RyanCheungJF"},"content":"    public static void todoHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":225,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":226,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isTaskValid(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"RyanCheungJF"},"content":"            Todo task \u003d new Todo(false, input.substring(5));","lastModifiedDate":"2022-01-23"},{"lineNumber":228,"author":{"gitId":"RyanCheungJF"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":229,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Todo Added: \" + task.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"There are now \" + list.getTotalTasks() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":235,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":236,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":237,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":238,"author":{"gitId":"RyanCheungJF"},"content":"     * Handles the command \u0027unmark\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":239,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":240,"author":{"gitId":"RyanCheungJF"},"content":"     * @param list Tasklist that contains all tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":241,"author":{"gitId":"RyanCheungJF"},"content":"     * @param input The string that the user has entered following the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":242,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":243,"author":{"gitId":"RyanCheungJF"},"content":"    public static void unmarkHandler(Tasklist list, String input) {","lastModifiedDate":"2022-01-23"},{"lineNumber":244,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":245,"author":{"gitId":"RyanCheungJF"},"content":"            int index \u003d DukeException.isIndexValid(input, list);","lastModifiedDate":"2022-01-26"},{"lineNumber":246,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(\"Okay! I\u0027ve marked this as undone!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"RyanCheungJF"},"content":"            Task t \u003d list.unmark(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"RyanCheungJF"},"content":"            FileHandler.writeToFile(list);","lastModifiedDate":"2022-01-23"},{"lineNumber":249,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(t.toString() + \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":250,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":251,"author":{"gitId":"RyanCheungJF"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":252,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":253,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":254,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"RyanCheungJF":254}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.time.Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a type of task with a pending date, and may contain a time.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    private String time;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task of type Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     * @param deadline Date of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     * @param time Time of the deadline. Optional field.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    public Deadline(boolean isCompleted, String task, LocalDate deadline, String time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"        super(task, isCompleted);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date of the deadline. Formats it in DD MM YYYY.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the date of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        return Time.convertToString(this.deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the time of the deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the time of the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        return this.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the deadline task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the deadline task.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        if (this.time.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + Time.convertToString(this.deadline) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + Time.convertToString(this.deadline) + \", \" + this.time + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":60}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import duke.time.Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a type of task with a pending date, and may contain a time.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    private String time;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task of type Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     * @param deadline Date of the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     * @param time Time of the event. Optional field.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    public Event(boolean isCompleted, String task, LocalDate deadline, String time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"        super(task, isCompleted);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date of the event. Formats it in DD MM YYYY.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the date of the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        return Time.convertToString(this.deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the time of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string to represent the time of the event.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        return this.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the event task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the event task.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        if (this.time.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + Time.convertToString(this.deadline) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + Time.convertToString(this.deadline) + \", \" + this.time + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":60}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":" * Returns an object that encapsulates the details which the user wishes to complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"    private String task;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns a new initialized task.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    public Task(String task, boolean isCompleted) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task as completed.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"    public void mark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task as incomplete.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns a boolean depending on whether the task is completed.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A boolean on whether the task is completed.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"        return this.isCompleted;","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the task name.","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"        return this.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"        StringBuilder status \u003d new StringBuilder();","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"            status.append(\"[X] \");","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"            status.append(\"[ ] \");","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"        return status.append(this.task).toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":69}},{"path":"src/main/java/duke/task/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a container to store all the tasks that have been created.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"public class Tasklist {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"    private LinkedList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the container. Only allows events, deadlines and todos.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    public Tasklist() {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"        this.tasks \u003d new LinkedList\u003cTask\u003e();","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     * Adds a task to the container to be tracked.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     * @param t Task to be added.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task specified.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the total number of tasks inside the container.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A number representing the total number of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"    public Task mark(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        Task t \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"        t.mark();","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        return t;","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"RyanCheungJF"},"content":"    public Task unmark(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"RyanCheungJF"},"content":"        Task t \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"RyanCheungJF"},"content":"        t.unmark();","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"RyanCheungJF"},"content":"        return t;","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"RyanCheungJF"},"content":"     * @param index Position of the task in the container.","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Task matching the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"RyanCheungJF"},"content":"    public Task delete(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"RyanCheungJF"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the tasks in a list format.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing all the details of the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"RyanCheungJF"},"content":"    public static String taskFormatter(LinkedList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"RyanCheungJF"},"content":"        StringBuilder allTasks \u003d new StringBuilder(\"Fetching all records...\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"RyanCheungJF"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"RyanCheungJF"},"content":"            return allTasks.append(\"No entries found, start by adding one!\\n\").toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"RyanCheungJF"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"RyanCheungJF"},"content":"            allTasks.append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"RyanCheungJF"},"content":"        return allTasks.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":96,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the tasks in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing all the details of the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"RyanCheungJF"},"content":"        return Tasklist.taskFormatter(this.tasks);","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":106}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a type of task called todo.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the task of type Todo.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"     * @param isCompleted Status of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"     * @param task Task name.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"    public Todo (boolean isCompleted, String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"        super(task, isCompleted);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the todo task in a readable form.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"     * @return A string representing the details of the todo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"RyanCheungJF":27}},{"path":"src/main/java/duke/time/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":" * Returns a custom time object to handle conversions between the different formats of time.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"public class Time {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date in string format.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"     * @param date Date in LocalDate format.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Same date represented in string form.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"    public static String convertToString(LocalDate date) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"     * Returns the date in LocalDate format.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"     * @param date Date in string format.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"     * @return Same date represented in LocalDate form.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"    public static LocalDate convertToDate(String date) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"        String[] dates \u003d date.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"        int year \u003d Integer.parseInt(dates[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"        int day \u003d Integer.parseInt(dates[0]);","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"RyanCheungJF"},"content":"        switch (dates[1]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Jan\":","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 1, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Feb\":","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 2, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Mar\":","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 3, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Apr\":","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 4, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"RyanCheungJF"},"content":"        case \"May\":","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 5, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Jun\":","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 6, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"RyanCheungJF"},"content":"        case \"July\":","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 7, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Aug\":","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 8, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Sep\":","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 9, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Oct\":","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 10, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"RyanCheungJF"},"content":"        case \"Nov\":","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 11, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"RyanCheungJF"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"RyanCheungJF"},"content":"            return LocalDate.of(year, 12, day);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":58}},{"path":"src/test/java/duke/exception/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":" * Returns an object used to test the functionality of the referenced class.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"    public void taskValidation_invalidInput_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isTaskValid(8, \"event t /at -12/12/1999\", \"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"            assertEquals(\"Please provide time in the format \u0027DD/MM/YYYY \u003ctime\u003e\u0027.\\n\", err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"    public void indexValidation_invalidDigit_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"RyanCheungJF"},"content":"            DukeException.isIndexValid(\"mark one\", new Tasklist());","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"RyanCheungJF"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"RyanCheungJF"},"content":"            assertEquals(\"Please key in a valid digit.\\n\", err.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"RyanCheungJF"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":30}},{"path":"src/test/java/duke/time/TimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"package duke.time;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"public class TimeTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"        assertEquals(\"23 Jan 2022\", Time.convertToString(LocalDate.of(2022, 1, 23)));","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"    public void testDateConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"        assertEquals(LocalDate.of(2021, 12, 25), Time.convertToDate(\"25 Dec 2021\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"RyanCheungJF":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanCheungJF"},"content":"mark -1","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"RyanCheungJF"},"content":"find book","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"RyanCheungJF"},"content":"add task","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"RyanCheungJF"},"content":"todo","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"RyanCheungJF"},"content":"todo buy|choya","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"RyanCheungJF"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"RyanCheungJF"},"content":"deadline /by 25/01/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"RyanCheungJF"},"content":"deadline impossible date /by -1/01/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"RyanCheungJF"},"content":"deadline return book /by 25/01/2022 6pm","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"event project meeting /at 01/02/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"RyanCheungJF"},"content":"event festival /at","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"RyanCheungJF"},"content":"mark 47","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"RyanCheungJF"},"content":"deadline","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"RyanCheungJF"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"RyanCheungJF"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"RyanCheungJF"},"content":"find book","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"RyanCheungJF"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"unmark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"RyanCheungJF"},"content":"delete 3","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"RyanCheungJF"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"RyanCheungJF"},"content":"delete 2","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"RyanCheungJF"},"content":"delete 1","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"RyanCheungJF"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"RyanCheungJF"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"RyanCheungJF":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"RyanCheungJF"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RyanCheungJF"},"content":"java -classpath ..\\bin\\ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanCheungJF":2,"-":19}}]
