[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuqitanyq":3,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import duke.functionality.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import duke.functionality.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":" * Duke is the main class that executes the logic of the chatbot.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"    private UserInterface userInterface;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"     * Creates the Duke object.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"     * @param filePath The String filePath.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"        this.userInterface \u003d new UserInterface();","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"            storage.readFile(this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"            userInterface.errorMessage(e);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"     * Runs the logic of the application.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"    public void run() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"        userInterface.introMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"        String input \u003d userInterface.readInput();","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"                userInterface.lineDivider();","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"                Parser.parse(input, this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"                this.storage.writeFile(this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"                userInterface.lineDivider();","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"            } catch (DukeException errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"                userInterface.errorMessage(errorMessage);","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"            input \u003d userInterface.readInput();","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"        userInterface.byeMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"     * Executes the running of the application.","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"     * @param args The main method arguments.","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yuqitanyq":58,"-":2}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":" * DukeException is an exception class that creates exceptions that are unique to the Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"     * Creates a DukeException object, constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"     * @param errorMessage Message description of the error.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yuqitanyq":16}},{"path":"src/main/java/duke/functionality/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":" * Parser is a functionality class that helps Duke to understand what the user inputs are.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"    public static final String ERROR_UNKNOWN \u003d \"OOPS, I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"    public static final String ERROR_DESCRIPTION \u003d \"OOPS, The description of a command cannot be empty.\";","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"    public static final String ERROR_FORMAT_DATE \u003d \"Wrong Format... Try yyyy-MM-dd HHmm\";","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"     * Adds a specific type of task into the tasklist depending on the user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"     * @param input String user input to be parsed.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"     * @param taskList A tasklist to keep track of all the tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If user input is not understood or description is empty.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    public static void parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"                taskList.listItems();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"                String taskNumber \u003d input.substring(5);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"                taskList.markTask(taskNumber);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"                String taskNumber \u003d input.substring(7);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"                taskList.unmarkTask(taskNumber);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"                String description \u003d input.substring(5);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"                taskList.addToDoTask(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"                String[] descriptionArr \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"                taskList.addDeadlineTask(descriptionArr);","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"                String[] descriptionArr \u003d input.substring(6).split(\" /at \");","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"                taskList.addEventTask(descriptionArr);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"                String taskNumber \u003d input.substring(7);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"                taskList.deleteTask(taskNumber);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"                String description \u003d input.substring(5);","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"                taskList.findTask(taskList, description);","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"                throw new DukeException(ERROR_UNKNOWN);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"        } catch(IndexOutOfBoundsException error) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"            throw new DukeException(ERROR_DESCRIPTION);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"     * Returns a LocalDate object by converting a String date string.","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"     * @param dateString A String version of the date.","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"     * @return LocalDate object.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If formatting of the dateString is wrong.","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"    public static LocalDate convertDate(String dateString) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"            return LocalDate.parse(dateString, format);","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"            throw new DukeException(ERROR_FORMAT_DATE);","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yuqitanyq":70}},{"path":"src/main/java/duke/functionality/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":" * Storage is a functionality class to allow users to save their tasks so","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":" * that they can refer to them again even if they restart the program.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    protected String filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"     * Creates a Storage object, constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"     * @param filePath A String of the filepath.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"     * Adds the details from a saved file previously to the tasklist, so","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"     * that the user can access their past tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"     * @param taskList A tasklist to keep track of the past tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If the command from the file cannot be understood.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"    public void readFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"        File information \u003d new File(this.filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"        if (information.exists()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"                File file \u003d new File(this.filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"                    String text \u003d sc.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"                    String[] data \u003d text.split(\" \\\\| \");","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"                    String initial \u003d data[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"                    Task history;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"                    switch (initial) {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"                        history \u003d new Todo(data[2]);","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"                        break;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"                    case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"                        history \u003d new Deadline(data[2], Parser.convertDate(data[3]));","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"                        break;","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"                        history \u003d new Event(data[2], Parser.convertDate(data[3]));","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"                        break;","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"                    default:","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"                        throw new DukeException(\"Cannot understand the command\");","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"                    if (data[1].equals(\"mark\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"                        history.markAsDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"                    taskList.addGeneralTask(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"                throw new DukeException(\"Cannot find file...\");","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"     * Writes the details of the existing tasklist into the file to be saved.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"     * @param taskList A tasklist which contains all the tasks to be saved.","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If there is a problem with accessing the file.","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"    public void writeFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"            File directory \u003d new File(\"data\");","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"                directory.mkdir();","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"            String path \u003d directory.getAbsolutePath() + \"/Duke.txt\";","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"            File newFile \u003d new File(path);","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"            FileWriter writer \u003d new FileWriter(newFile);","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"            StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"                data.append(taskList.get(i).formatString()).append(\"\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"            writer.write(data.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"            writer.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"            throw new DukeException(\"Error... try again\");","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yuqitanyq":97}},{"path":"src/main/java/duke/functionality/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":" * TaskList is a functionality class which enables a tracking feature","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":" * to allow users to track their tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"public class TaskList {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"    private static final String LIST \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    private static final String MARK \u003d \"Nice! I\u0027ve marked this task as done:\\n  \";","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"    private static final String UNMARK \u003d \"OK, I\u0027ve marked this task as not done yet:\\n  \";","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"    private static final String ADDED \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    private static final String REMOVED \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    private static final String ALREADY_MARKED \u003d \"Tasked has already been marked...\";","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    private static final String ALREADY_UNMARKED \u003d \"Task has already been unmarked...\";","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"    private static final String ALREADY_DELETED \u003d \"Task has already been deleted...\";","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    private static final String MATCH \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"     * Creates a TaskList object, constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"     * Gets the task at a specified index.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"     * @param index An integer representing the index.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the current length of the tasklist.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"     * @return The length of the tasklist.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"    public int size() {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"     * Prints out the list of tasks in the tasklist.","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"    public void listItems() {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(LIST);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"            System.out.println(i + 1 + \".\" + this.taskList.get(i));","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"    public void listItemsMatch() {","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(MATCH);","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"            System.out.println(i + 1 + \".\" + this.taskList.get(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"yuqitanyq"},"content":"     * Marks the specific task as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"yuqitanyq"},"content":"     * @param taskNumber A String to be parsed into an integer, represents task number.","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If task has been marked.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"yuqitanyq"},"content":"    public void markTask(String taskNumber) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"yuqitanyq"},"content":"        int index \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"yuqitanyq"},"content":"        Task taskToMark \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"yuqitanyq"},"content":"        if (!taskToMark.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"yuqitanyq"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"yuqitanyq"},"content":"            this.taskList.set(index, taskToMark);","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"yuqitanyq"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"yuqitanyq"},"content":"            throw new DukeException(ALREADY_MARKED);","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(MARK + taskToMark);","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"yuqitanyq"},"content":"     * Unmarks a task.","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"yuqitanyq"},"content":"     * @param taskNumber A String to be parsed into an integer, represents task number.","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If task has been unmarked.","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"yuqitanyq"},"content":"    public void unmarkTask(String taskNumber) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"yuqitanyq"},"content":"        int num \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"yuqitanyq"},"content":"        Task taskToUnmark \u003d this.taskList.get(num);","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"yuqitanyq"},"content":"        if (taskToUnmark.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"yuqitanyq"},"content":"            taskToUnmark.markAsUndone();","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"yuqitanyq"},"content":"            this.taskList.set(num, taskToUnmark);","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"yuqitanyq"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"yuqitanyq"},"content":"            throw new DukeException(ALREADY_UNMARKED);","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(UNMARK + taskToUnmark);","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"yuqitanyq"},"content":"     * Adds a Todo task to the tasklist.","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"yuqitanyq"},"content":"     * @param description A description of the Todo task.","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"yuqitanyq"},"content":"    public void addToDoTask(String description) {","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"yuqitanyq"},"content":"        Todo todoItem \u003d new Todo(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"yuqitanyq"},"content":"        this.taskList.add(todoItem);","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"yuqitanyq"},"content":"        int numOfItems \u003d this.taskList.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(ADDED + todoItem);","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(\"Now you have \" + numOfItems + \" tasks in the list.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"yuqitanyq"},"content":"     * Adds a Deadline task to the tasklist.","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"yuqitanyq"},"content":"     * @param arr A String array containing the components of the user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If conversion of the date is wrong in format.","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"yuqitanyq"},"content":"    public void addDeadlineTask(String[] arr) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"yuqitanyq"},"content":"        Deadline deadlineItem \u003d new Deadline(arr[0], Parser.convertDate(arr[1]));","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"yuqitanyq"},"content":"        this.taskList.add(deadlineItem);","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"yuqitanyq"},"content":"        int numOfItems \u003d this.taskList.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(ADDED + deadlineItem);","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(\"Now you have \" + numOfItems + \" tasks in the list.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"yuqitanyq"},"content":"     * Adds an Event task to the tasklist.","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"yuqitanyq"},"content":"     * @param arr A String array containing the components of the user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If conversion of the date is wrong in format.","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":138,"author":{"gitId":"yuqitanyq"},"content":"    public void addEventTask(String[] arr) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"yuqitanyq"},"content":"        Event eventItem \u003d new Event(arr[0], Parser.convertDate(arr[1]));","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"yuqitanyq"},"content":"        this.taskList.add(eventItem);","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"yuqitanyq"},"content":"        int numOfItems \u003d this.taskList.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(ADDED + eventItem);","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(\"Now you have \" + numOfItems + \" tasks in the list.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":147,"author":{"gitId":"yuqitanyq"},"content":"     * Deletes a task from the tasklist.","lastModifiedDate":"2022-01-30"},{"lineNumber":148,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":149,"author":{"gitId":"yuqitanyq"},"content":"     * @param taskNumber A String to be parsed into an integer, represents task number.","lastModifiedDate":"2022-01-30"},{"lineNumber":150,"author":{"gitId":"yuqitanyq"},"content":"     * @throws DukeException If the task to be deleted does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":151,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":152,"author":{"gitId":"yuqitanyq"},"content":"    public void deleteTask(String taskNumber) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"yuqitanyq"},"content":"            int index \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"yuqitanyq"},"content":"            Task itemToDelete \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"yuqitanyq"},"content":"            this.taskList.remove(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":157,"author":{"gitId":"yuqitanyq"},"content":"            int numOfItems \u003d this.taskList.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":158,"author":{"gitId":"yuqitanyq"},"content":"            System.out.println(REMOVED + itemToDelete);","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"yuqitanyq"},"content":"            System.out.println(\"Now you have \" + numOfItems + \" tasks in the list.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":160,"author":{"gitId":"yuqitanyq"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2022-01-28"},{"lineNumber":161,"author":{"gitId":"yuqitanyq"},"content":"            throw new DukeException(ALREADY_DELETED);","lastModifiedDate":"2022-01-28"},{"lineNumber":162,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":163,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":164,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":165,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":166,"author":{"gitId":"yuqitanyq"},"content":"     * Adds a task into the tasklist, regardless of type of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":167,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":168,"author":{"gitId":"yuqitanyq"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-01-30"},{"lineNumber":169,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":170,"author":{"gitId":"yuqitanyq"},"content":"    public void addGeneralTask(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":171,"author":{"gitId":"yuqitanyq"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":172,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":173,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":174,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"yuqitanyq"},"content":"     * Finds the task based on search key word.","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":177,"author":{"gitId":"yuqitanyq"},"content":"     * @param taskList The tasklist containing all the tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"yuqitanyq"},"content":"     * @param userInput The String user input containing the key word to search.","lastModifiedDate":"2022-01-30"},{"lineNumber":179,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":180,"author":{"gitId":"yuqitanyq"},"content":"    public void findTask(TaskList taskList, String userInput) {","lastModifiedDate":"2022-01-30"},{"lineNumber":181,"author":{"gitId":"yuqitanyq"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":182,"author":{"gitId":"yuqitanyq"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":183,"author":{"gitId":"yuqitanyq"},"content":"            String stringToSearch \u003d taskList.get(i).description;","lastModifiedDate":"2022-01-30"},{"lineNumber":184,"author":{"gitId":"yuqitanyq"},"content":"            if (stringToSearch.contains(userInput)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":185,"author":{"gitId":"yuqitanyq"},"content":"                foundTasks.addGeneralTask(taskList.get(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":186,"author":{"gitId":"yuqitanyq"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":187,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":188,"author":{"gitId":"yuqitanyq"},"content":"        foundTasks.listItemsMatch();","lastModifiedDate":"2022-01-30"},{"lineNumber":189,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":190,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":191,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yuqitanyq":191}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":" * Deadline is a class which represents the deadline task.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"     * Creates a Deadline task object, constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"     * @param description A description of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"     * @param by The date which the task must be completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"     * Formats the description of the task into a standardised format to","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"     * be saved to a file.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String which is to be saved in a file.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"    public String formatString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"        String output \u003d \"D\";","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"        String markState \u003d this.isDone ? \"mark\" : \"unmark\";","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"        return output + \" | \" + markState + \" | \"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"                + this.description + this.by;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the String representation of the deadline task.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String representation of the deadline task.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yuqitanyq":46}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":" * Event class is a class which represents the event task.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"     * Creates an Event task object, constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"     * @param description A description of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"     * @param at The date which the event happens.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"     * Formats the description of the task into a standardised format to","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"     * be saved to a file.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String which is to be saved in a file.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    public String formatString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"        String output \u003d \"E\";","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"        String markState \u003d this.isDone ? \"mark\" : \"unmark\";","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"        return output + \" | \" + markState + \" | \"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"                + this.description + \" | \" + this.at;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the String representation of the Event task.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String representation of the Event task.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yuqitanyq":46}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":" * Task is a class which represents tasks to be done.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"    public String description;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"     * Creates a Task object, constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"     * @param description A description of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the String representation of the status of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"     * \"X\" means done. \" \" means not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"     * @return the String representation of the status of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the description that has been formatted.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"     * Abstract method, implementation done in child classes.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String description that has been formatted.","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"    public abstract String formatString();","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"        if (this.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yuqitanyq":65}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":" * Todo is a class which represents the todo task.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"     * Formats the description of the task into a standardised format to","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"     * be saved to a file.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String which is to be saved in a file.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    public String formatString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"        String output \u003d \"T\";","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"        String markState \u003d this.isDone ? \"mark\" : \"unmark\";","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"        return output + \" | \" + markState + \" | \" + this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the String representation of the Todo task.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"     * @return A String representation of the Todo task.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yuqitanyq":33}},{"path":"src/main/java/duke/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":" * UserInterface is an ui class that represents the user interface","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":" * in which the user interacts with.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"public class UserInterface {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"    private static final String LINE \u003d \"_______________________________________________\";","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"    private static final String INTRO \u003d \"\\nHello! I\u0027m YQ, your assistant\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"    private static final String BYE \u003d \"\\nBye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"    protected Scanner sc;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"     * Creates a user interface object, constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    public UserInterface() {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"     * Returns the input by the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"     * @return The String input from the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"    public String readInput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"     * Prints the introduction message.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"    public void introMessage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"        String intro \u003d LINE + INTRO + logo + LINE;","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(intro);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"     * Prints the bye message.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"    public void byeMessage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(LINE + BYE + LINE);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"yuqitanyq"},"content":"     * Prints the duke error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"yuqitanyq"},"content":"     * @param error The error message description.","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"yuqitanyq"},"content":"    public void errorMessage(DukeException error) {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(error.getMessage() + \"\\n\" + LINE);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yuqitanyq"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"yuqitanyq"},"content":"     * Prints the line divider.","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"yuqitanyq"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"yuqitanyq"},"content":"    public void lineDivider() {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yuqitanyq"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yuqitanyq":65}},{"path":"src/test/java/duke/functionality/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.functionality;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"import java.sql.Array;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"    @DisplayName(\"The catch error works for unknown commands.\")","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"    public void unknownCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"        String input \u003d \"hello it\u0027s me\";","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"            Parser.parse(input, taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"            assertEquals(Parser.ERROR_UNKNOWN, error.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"    @DisplayName(\"The catch error works for index out of bounds error.\")","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"    public void indexOutOfBounds() {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yuqitanyq"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yuqitanyq"},"content":"        String input \u003d \"todo  \";","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yuqitanyq"},"content":"            Parser.parse(input, taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yuqitanyq"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yuqitanyq"},"content":"            assertEquals(Parser.ERROR_DESCRIPTION, error.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yuqitanyq"},"content":"    @DisplayName(\"Convert date method works well.\")","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yuqitanyq"},"content":"    public void dateConversion() {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yuqitanyq"},"content":"        String dateString \u003d \"2022-01/30\";","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yuqitanyq"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yuqitanyq"},"content":"            Parser.convertDate(dateString);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yuqitanyq"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yuqitanyq"},"content":"            assertEquals(Parser.ERROR_FORMAT_DATE, error.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yuqitanyq"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yuqitanyq":49}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"public class EventTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"    @DisplayName(\"Event string format is correct.\")","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"    public void eventStringFormat() {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"        String description \u003d \"read book\";","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-30\");","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"        Event testEvent \u003d new Event(description, date);","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"        assertEquals(\"E | unmark | read book | 2022-01-30\",","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"                testEvent.formatString());","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    @DisplayName(\"Event string representation is correct.\")","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    public void eventToString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"        String description \u003d \"sleep\";","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-31\");","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"        Event testEvent \u003d new Event(description, date);","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"        assertEquals(\"[E][ ] sleep (at: Jan 31 2022)\",","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"                testEvent.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yuqitanyq":27}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yuqitanyq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yuqitanyq"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yuqitanyq"},"content":"    @DisplayName(\"Status Icon check is okay.\")","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yuqitanyq"},"content":"    public void checkStatus() {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yuqitanyq"},"content":"        Task exampleTask \u003d new Todo(\"hello world\");","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yuqitanyq"},"content":"        exampleTask.markAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yuqitanyq"},"content":"        String expected \u003d \"X\";","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yuqitanyq"},"content":"        String actual \u003d exampleTask.getStatusIcon();","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yuqitanyq"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yuqitanyq"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yuqitanyq"},"content":"    @DisplayName(\"String representation of Task is fine.\")","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yuqitanyq"},"content":"    public void checkString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yuqitanyq"},"content":"        Task exampleTask \u003d new Todo(\"study hard\");","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yuqitanyq"},"content":"        String expected \u003d \"[T][ ] study hard\";","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yuqitanyq"},"content":"        String actual \u003d exampleTask.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yuqitanyq"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yuqitanyq"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yuqitanyq"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yuqitanyq"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yuqitanyq":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuqitanyq"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"yuqitanyq"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"yuqitanyq"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"yuqitanyq"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yuqitanyq":4}}]
