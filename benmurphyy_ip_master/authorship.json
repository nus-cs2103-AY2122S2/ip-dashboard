[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"   ","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"Attributions:","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"\u003ca href\u003d\"https://www.flaticon.com/free-icons/dog\" title\u003d\"dog icons\"\u003eDog icons created by smalllikeart - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"\u003ca href\u003d\"https://www.flaticon.com/free-icons/rottweiler\" title\u003d\"rottweiler icons\"\u003eRottweiler icons created by smalllikeart - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"benmurphyy":6,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"plugins {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"repositories {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"sourceSets {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    main {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        java {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"java {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    toolchain {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        languageVersion \u003d JavaLanguageVersion.of(11)","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"compileJava {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    options.release \u003d 11","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"test {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    testLogging {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        showExceptions true","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        showCauses true","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"application {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    mainClass \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"run {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"checkstyle {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"checkstyleMain {","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    source \u003d \u0027src/main/java\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"shadowJar {","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"dependencies {","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.2\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"benmurphyy":84}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":":execute","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":":end","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":":fail","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"exit /b 1","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":":mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":":omega","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"benmurphyy":89}},{"path":"src/main/java/duke/CommandExecutor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.RequiredInformationMissingException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownFileEntry;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":" * Class that handles parsing and executing of inputs read from the GUI.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"public class CommandExecutor {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"     * Creates instance of CommandExecutor.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException      if some error reading task file occurs.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     * @throws UnknownFileEntry if unknown line read in task file.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    public CommandExecutor() throws IOException, UnknownFileEntry {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        this.taskManager \u003d new TaskManager();","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     * Main method, exceutes a command passed from the GUI.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * @param input","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     * @returns string representing dukes response.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    public String executeCommand(String input) throws RequiredInformationMissingException, UnknownCommandException,","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"            IOException {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cString\u003e parsedInput \u003d Parser.parseInput(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        String command \u003d parsedInput.get(0);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"            //end the program","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"            System.exit(0);","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"            int indexOfTask \u003d Integer.parseInt(parsedInput.get(1));","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"            return executeMarkTask(indexOfTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"            int indexOfTask \u003d Integer.parseInt(parsedInput.get(1));","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"            return executeUnmarkTask(indexOfTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"            Task task \u003d new Task(parsedInput.get(1));","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"            return executeAddTask(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"            Event task \u003d new Event(parsedInput.get(1), parsedInput.get(2));","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"            return executeAddTask(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            Deadline task \u003d new Deadline(parsedInput.get(1), parsedInput.get(2));","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            return executeAddTask(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            int indexOfTask \u003d Integer.parseInt(parsedInput.get(1));","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"            return executeDeleteTask(indexOfTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"            return executeListTasks();","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"            String keyword \u003d parsedInput.get(1);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            return executeFind(keyword);","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        //should never be able to reach this return statement as if a bad input is given,","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        //UnkownCommandException would already have been thrown earlier.","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"        assert \"never reach here\" \u003d\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"        return \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"     * Executes the marking of task as done.","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"     * @param indexOfTask index of the task to mark","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"     * @return string of output to print in gui for this action","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException if error encountered with writing to file","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    public String executeMarkTask(int indexOfTask) throws IOException{","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        str.append(taskManager.completeTask(indexOfTask));","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        taskManager.saveTasks();","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        return str.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"     * Executes the unmarking of a task as done.","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"     * @param indexOfTask index of the task to unmark","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"     * @return string of output to print in gui for this action","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException if error encountered with writing to file","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"    public String executeUnmarkTask(int indexOfTask) throws IOException{","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"        str.append(taskManager.removeCompletedStatusOfTask(indexOfTask));","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"        taskManager.saveTasks();","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        return str.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"     * Executes the adding of a task to Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"     * @param task task to add to Duke","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"     * @return string of output to print in gui for this action","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException if error encountered with writing to file","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"    public String executeAddTask(Task task) throws IOException{","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"        taskManager.addTask(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"  \" + task + \"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"Now you have \" + taskManager.getNumberOfTasks() + \" duke.tasks in the list.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"        taskManager.saveTasks();","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"        return str.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"     * Executes the deletion of a task from Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"     * @param indexOfTask index of task to be deleted","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"     * @return string of output to print in gui for this action","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"    public String executeDeleteTask(int indexOfTask) throws IOException{","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"        Task task \u003d taskManager.removeTask(indexOfTask);","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"  \" + task + \"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"Now you have \" + taskManager.getNumberOfTasks() + \" duke.tasks left in the list.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"        taskManager.saveTasks();","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"        return str.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"     * Executes the listing of all tasks in Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"     * @return string of output to print to gui for this action","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"    public String executeListTasks() {","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"Heres a list of your items:\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"        str.append(taskManager.getPrintableListOfTasks());","lastModifiedDate":"2022-01-31"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        return str.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"     * Executes the finding of a file in Duke using a keyword.","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"     * @param keyword keyword to look for in Duke","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"     * @return string of output to print to gui for this action","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"    public String executeFind(String keyword) {","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskManager.findListOfMatchingTasks(keyword);","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"            str.append(\"No matching tasks found.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"            return str.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"        str.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2022-01-31"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"            str.append((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2022-01-31"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"        return str.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"benmurphyy":168}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import duke.gui.UI;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":" * duke.Duke Chatbot main method class.","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"        Application.launch(UI.class, args);","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"benmurphyy":11,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.RequiredInformationMissingException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":" * Class that has methods for handling user input","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"public class Parser {","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    //constants representing the index in the input string of the start of required information","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"    //to carry out each command\u0027s actions","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    private static final int MARK_INFO_INDEX \u003d 5;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    private static final int UNMARK_INFO_INDEX \u003d 7;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    private static final int TODO_INFO_INDEX \u003d 5;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    private static final int EVENT_INFO_INDEX \u003d 5;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    private static final int DEADLINE_INFO_INDEX \u003d 9;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    private static final int DELETE_INFO_INDEX \u003d 7;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    private static final int FIND_INFO_INDEX \u003d 5;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     * Parses the input typed in by user, returning a nicely formatted arraylist containing the command name as first","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     * index, and and relevant arguments from the input as the result.","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"     * @param input","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"     * @return List containing the parsedInput strings.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"     * @throws RequiredInformationMissingException if required info for a command not present in input.","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     * @throws UnknownCommandException             if command is unknown.","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    public static ArrayList\u003cString\u003e parseInput(String input) throws RequiredInformationMissingException,","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"            UnknownCommandException {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cString\u003e parsedInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        String command \u003d getCommandFromInput(input);","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        parsedInput.add(command);","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(\"list\");","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"            if (!hasRequiredInformation(command, input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"                throw new RequiredInformationMissingException(\"missing mark index\");","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"            //mark index should not be empty now","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"            assert !input.substring(MARK_INFO_INDEX).isEmpty();","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(MARK_INFO_INDEX));","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"            if (hasRequiredInformation(command, input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"                throw new RequiredInformationMissingException(\"missing unmark index\");","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"            assert !input.substring(UNMARK_INFO_INDEX).isEmpty();","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(UNMARK_INFO_INDEX));","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"            if (!hasRequiredInformation(command, input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"                throw new RequiredInformationMissingException(\"empty todo description\");","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            assert !input.substring(TODO_INFO_INDEX).isEmpty();","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(TODO_INFO_INDEX));","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            if (!hasRequiredInformation(command, input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"                throw new RequiredInformationMissingException(\"empty event description\");","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"            assert !input.substring(EVENT_INFO_INDEX).isEmpty();","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"            int indexOfStartDate \u003d input.indexOf(\" /\") + 5;","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(EVENT_INFO_INDEX, input.indexOf(\" /\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(indexOfStartDate));","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"            if (!hasRequiredInformation(command, input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"                throw new RequiredInformationMissingException(\"empty deadline description\");","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"            assert !input.substring(DEADLINE_INFO_INDEX).isEmpty();","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"            int indexOfStartDate \u003d input.indexOf(\" /\") + 5;","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(DEADLINE_INFO_INDEX, input.indexOf(\" /\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(indexOfStartDate));","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"            if (!hasRequiredInformation(command, input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"                throw new RequiredInformationMissingException(\"missing delete index\");","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"            assert !input.substring(DELETE_INFO_INDEX).isEmpty();","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(DELETE_INFO_INDEX));","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"            parsedInput.add(input.substring(FIND_INFO_INDEX));","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"bye\") || command.equals(\"list\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"            //no additional information for command required","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"            throw new UnknownCommandException(\"unknown command entered\");","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        return parsedInput;","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"     * Extracts the command from a given input.","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"     * @param input","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"     * @return the command","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"    private static String getCommandFromInput(String input) {","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"        int indexOfWhitespace \u003d input.indexOf(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"        if (indexOfWhitespace \u003d\u003d -1) {","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"            //1 word input","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"            return input;","lastModifiedDate":"2022-01-22"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"        return input.substring(0, indexOfWhitespace);","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"     * Checks for a given command, whether the input from user contains information sufficient to","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"     * carry out the task, if so returns true, if not returns false.","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"     * @param command command to run","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"     * @param input input from user","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"     * @return true if input has sufficient information, false if not","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"    public static boolean hasRequiredInformation(String command, String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"            return input.length() \u003e MARK_INFO_INDEX;","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"            return input.length() \u003e UNMARK_INFO_INDEX;","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"            return input.length() \u003e TODO_INFO_INDEX;","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"            if (input.length() \u003c\u003d EVENT_INFO_INDEX) {","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"                return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"            //further check that there is a date for this event","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"            int indexOfSlash \u003d input.indexOf(\" /\");","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"            if (indexOfSlash \u003d\u003d -1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"                return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"            return input.length() \u003e (indexOfSlash + 5);","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"            if (input.length() \u003c\u003d DEADLINE_INFO_INDEX) {","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"                return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"            //further check that there is a date for this event","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"            int indexOfSlash \u003d input.indexOf(\" /\");","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"            if (indexOfSlash \u003d\u003d -1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"                return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"            return input.length() \u003e (indexOfSlash + 5);","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"            return input.length() \u003e DELETE_INFO_INDEX;","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"        //code should not reach here, given that we always pass in a valid command to this method.","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"        assert \"should not reach here\" \u003d\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"benmurphyy":153}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownFileEntry;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":" * Handles all storage of duke.tasks to a file.","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    private final Path filePath;","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    private final File file;","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"     * Initializes storage object.","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    public Storage() {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        //gets the absolute file path in users home directory to store the saved tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        filePath \u003d Paths.get(System.getProperty(\"user.home\"), \"dukeChatBot\", \"data\", \"savedTasks.txt\");","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        file \u003d new File(filePath.toString());","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * Writes a single task to the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     * @param task task to write to the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException if io failed.","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    public void writeTask(Task task) throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        fw.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     * Writes all the duke.tasks in the list to the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     * @param tasks list of duke.tasks to write.","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException if io failed.","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    public void writeTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            fw.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     * Read entire file, return the duke.tasks as a list of duke.tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"     * @return list of all duke.tasks in the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException      if file cannot be acessed or created.","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"     * @throws UnknownFileEntry if file contains an unknown entry.","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"    public ArrayList\u003cTask\u003e readTasks() throws IOException, UnknownFileEntry {","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        //create the file\u0027s parent directories if they do not exist","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"        //create the file itself if it does not exist","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        file.createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"            String s \u003d scanner.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"            String[] sections \u003d s.split(\" : \");","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"            //create task based on the string read, add to duke.tasks","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"            if (sections[0].equals(\"T\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"                tasks.add(new Task(sections[2], sections[1] \u003d\u003d \"1\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"            } else if (sections[0].equals(\"D\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"                tasks.add(new Deadline(sections[2], sections[3], sections[1] \u003d\u003d \"1\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"            } else if (sections[0].equals(\"E\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"                tasks.add(new Event(sections[2], sections[3], sections[1] \u003d\u003d \"1\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"                throw new UnknownFileEntry(\"unknown line read in task file\");","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        return tasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"benmurphyy":94}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownFileEntry;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":" * duke.TaskManager that manages all the duke.tasks that we log in the chatbot.","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * Initialises the taskManager","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException      if file io error occurs.","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     * @throws UnknownFileEntry if unknown file entry found.","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    public TaskManager() throws IOException, UnknownFileEntry {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"        tasks \u003d storage.readTasks();","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     * Add a task to the task manager.","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     * @param task","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     * remove a task from the task manager.","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     * @param index index to remove, indexed from 1.","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"     * @return the task that was removed.","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        return tasks.remove(index - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     * return the total number of duke.tasks in the task manager list.","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     * @return total number of duke.tasks in the task manager list.","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"     * Complete the task at the given index of the task manager (indexed from 1 where 1 is first task).","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"     * @param index","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     * @return the task we completed.","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    public Task completeTask(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        tasks.get(index - 1).complete();","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"     * Uncomplete the task at the given index of the task manager (indexed from 1 where 1 is first task).","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"     * @param index","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"     * @return the task we made incomplete.","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    public Task removeCompletedStatusOfTask(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        tasks.get(index - 1).removeCompletedStatus();","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"     * Return a nice printable numbered list of the duke.tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"     * @return a String representing the duke.tasks in nice format","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"    public String getPrintableListOfTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"            str.append(i + \".\" + task.toString() + \"\\n\");","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"            i++;","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        return str.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"     * Returns a list of tasks with name matching the expr.","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"     * @param expr the keyword used to search for matching tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"     * @return list of tasks with names matching the expr.","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"    public ArrayList\u003cTask\u003e findListOfMatchingTasks(String expr) {","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"            if (task.nameMatchesKeyword(expr)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"                matches.add(task);","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"        return matches;","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"     * Saves all the duke.tasks in this task manager.","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"     * @throws IOException if a error occurs interacting with the task file.","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"        storage.writeTasks(tasks);","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"benmurphyy":118}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"        super(message);","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"benmurphyy":7}},{"path":"src/main/java/duke/exceptions/RequiredInformationMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Exception that occurs when users does not give a description when adding a task.","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class RequiredInformationMissingException extends DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public RequiredInformationMissingException(String message) {","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        super(message);","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"benmurphyy":10}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Exception thrown when user enters a command that duke.Duke has not been programmed to handle.","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class UnknownCommandException extends Throwable {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        super(message);","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"benmurphyy":10}},{"path":"src/main/java/duke/exceptions/UnknownFileEntry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Exception thrown when an unknown line is read in a file.","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class UnknownFileEntry extends Throwable {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"     * Create an instance of UnknownFileEntry exception.","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"     * @param message","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"    public UnknownFileEntry(String message) {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        super(message);","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"benmurphyy":16}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.gui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    private Text dialog;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     * Constructor for a dialogbox.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     * @param text text to write in dialogbox.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * @param img  profile picture for dialogbox.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     * Returns a dialogbox containing user text and profile picture.","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     * @param text","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     * @param img","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     * Returns a dialogbox containing duke text and profile picture.","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     * @param text","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"     * @param img","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        db.flip();","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        return db;","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"    private void flip() {","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"benmurphyy":81}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.gui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import duke.CommandExecutor;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.RequiredInformationMissingException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private CommandExecutor commandExecutor;","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/rottweiler.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/samoyed.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * Initialises a s","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        String introMessage \u003d \"Hello, I\u0027m Duke, your trusty doggo assistant!\\nHere\u0027s what i can do:\\n\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"                + \"Add a event:\\nevent \u003ctask name\u003e /at \u003ctime \u0026 date\u003e\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"                + \"Add a todo task:\\ntodo \u003ctask name\u003e\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"                + \"Add a deadline:\\ndeadline \u003ctask name\u003e /at \u003ctime \u0026 date\u003e\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"                + \"See number list of tasks:\\nlist\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"                + \"Mark a task as done:\\nmark \u003ctask number\u003e\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"                + \"Unmark a task as done:\\nunmark \u003ctask number\u003e\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"                + \"Delete a task:\\ndelete \u003ctask number\u003e\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"                + \"Find tasks matching a keyword:\\nfind \u003ctask name\u003e\\n\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"                + \"Exit the chat:\\nbye\";","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(introMessage, dukeImage));","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    public void setCommandExecutor(CommandExecutor ex) {","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        commandExecutor \u003d ex;","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"            response \u003d commandExecutor.executeCommand(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        } catch (RequiredInformationMissingException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"            response \u003d \"I need to know more details regarding your command!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"            response \u003d \"I don\u0027t know what that command is!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"            response \u003d \"A problem occured saving to the tasks file.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        } finally {","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"            );","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"            userInput.clear();","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"benmurphyy":81}},{"path":"src/main/java/duke/gui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.gui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import duke.CommandExecutor;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownFileEntry;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":" * Main duke.gui.UI interface class.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"public class UI extends Application {","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    private CommandExecutor commandExecutor;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    public void init() {","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"            this.commandExecutor \u003d new CommandExecutor();","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"            System.out.println(\"An error occured accessing the stored tasks file.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"            System.out.println(\"Error Message: \" + e.getMessage());","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"            System.exit(-1);","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        } catch (UnknownFileEntry e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"            System.out.println(\"Unrecognised entries in stored tasks file.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"            System.exit(-1);","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * Starts the GUI.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(UI.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCommandExecutor(commandExecutor);","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"            stage.show();","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"benmurphyy":50}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":" * Deadline type of Task, with a date and time that the task must be completed.","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    private String deadline;","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"     * @param name","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * @param deadline","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"        //try parsing the eventTime as a date to set date","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"            this.date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"            //dont set date if not in right format","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Constructor for Deadline with completion status.","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * @param name","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * @param deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * @param isCompleted","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    public Deadline(String name, String deadline, boolean isCompleted) {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        super(name, isCompleted);","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     * Returns the file string representation of this deadline.","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    public String toFileString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        return \"D : \" + (isCompleted ? \"1 : \" : \"0 : \") + name + \" : \" + deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"     * Overriden toString method for deadline object.","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"     * @return String representation of deadline object","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"        String str \u003d \"[D]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"            str +\u003d \"[X] \";","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"            str +\u003d \"[ ] \";","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"        str +\u003d name + \" \";","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        //prints out special date format if it was entered as a recognised date format initially.","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        str +\u003d \"(by: \" + (date !\u003d null ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : deadline) + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        return str;","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"benmurphyy":71}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":" * Event type of Task. Has specific time of occurence.","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"    private String eventTime;","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"     * Constructor of Event.","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"     * @param name","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * @param eventTime","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    public Event(String name, String eventTime) {","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        //try parsing the eventTime as a date to set date","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"            this.date \u003d LocalDate.parse(eventTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"            //dont set date if not in right format","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     * Aleternative Construcotr of Event to set completion status.","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * @param name","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * @param eventTime","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * @param isCompleted","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    public Event(String name, String eventTime, boolean isCompleted) {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        super(name, isCompleted);","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     * Returns the string representation of this event for storage.","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    public String toFileString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        return \"E : \" + (isCompleted ? \"1 : \" : \"0 : \") + name + \" : \" + eventTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"     * Overriden toString method for Event.","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"     * @return String representation of Event.","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        String str \u003d \"[E]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"            str +\u003d \"[X] \";","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            str +\u003d \"[ ] \";","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        str +\u003d name + \" \";","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        str +\u003d \"(at: \" + (date !\u003d null ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : eventTime) + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        return str;","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"benmurphyy":71}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * This class represents a task and all its attributes like its name or whether it is completed.","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"    protected String name;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    protected boolean isCompleted \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"     * Construct a task.","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"     * @param name","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     * Alternative constructor for Task, to create a task with a preset completion status.","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     * @param name","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     * @param isCompleted","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    public Task(String name, boolean isCompleted) {","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Complete the task.","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    public void complete() {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * Make the task uncomplete.","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    public void removeCompletedStatus() {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     * Returns the file string representation of this task.","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    public String toFileString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        return \"T : \" + (isCompleted ? \"1 : \" : \"0 : \") + name;","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"     * Returns a boolean representing if the task name has the given expr.","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"     * @param expr keyword to match in the task name.","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"     * @return true if keyword found in task name, false otherwise.","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"    public boolean nameMatchesKeyword(String expr) {","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        return name.contains(expr);","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"     * Overriden toString function. Prints the completion status and the task name in this format:","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"     * \"[ ] taskname\" if incomplete, \"[X] taskname\" if complete.","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"benmurphyy":78}},{"path":"src/main/resources/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"T : 0 : read book","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 12am","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 2012-04-04","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"E : 0 : test deletion : now","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"T : 0 : read book","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 2012-04-04","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"E : 0 : test deletion : now","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"T : 0 : read book","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 2012-04-04","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"E : 0 : test deletion : now","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"T : 0 : read book","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 2012-04-04","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"E : 0 : test deletion : now","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"T : 0 : read book","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 2012-04-04","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"E : 0 : test deletion : now","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"T : 0 : read book","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 2012-04-04","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"E : 0 : test deletion : now","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"T : 0 : read book","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"E : 0 : watch movie : 12pm","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"D : 0 : brush teeth : 2012-04-04","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"E : 0 : test deletion : now","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"benmurphyy":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"      \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"         \u003c/HBox.margin\u003e\u003c/Text\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"benmurphyy":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"benmurphyy":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.RequiredInformationMissingException;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":" * Junit testing class to run various tests on the Duke Chatbot.","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"     * Tests parsing by Parser class on a properly inputted event.","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"     * @throws RequiredInformationMissingException","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * @throws UnknownCommandException","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    public void testEventInputParsing_correctEventInput_correctArrayOfEventInputFields() throws RequiredInformationMissingException, UnknownCommandException {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cString\u003e ls \u003d Parser.parseInput(\"event brush teeth /at 12am\");","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"        String[] expected \u003d {\"event\", \"brush teeth\", \"12am\"};","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        Assertions.assertArrayEquals(expected, ls.toArray());","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"     * Tests parsing by Parser class on a properly inputted deadline.","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     * @throws RequiredInformationMissingException","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     * @throws UnknownCommandException","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    public void testDeadlineInputParsing_correctDeadlineInput_correctArrayOfDeadlineInputFields() throws RequiredInformationMissingException, UnknownCommandException {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cString\u003e ls \u003d Parser.parseInput(\"deadline brush teeth /by 12am\");","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        String[] expected \u003d {\"deadline\", \"brush teeth\", \"12am\"};","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"        Assertions.assertArrayEquals(expected, ls.toArray());","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     * Tests parsing by Parser class on a properly inputted todo.","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"     * @throws RequiredInformationMissingException","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     * @throws UnknownCommandException","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    public void testToDoInputParsing_correctTodoInput_correctArrayOfTodoInputFields() throws RequiredInformationMissingException, UnknownCommandException {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        ArrayList\u003cString\u003e ls \u003d Parser.parseInput(\"todo brush teeth\");","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        String[] expected \u003d {\"todo\", \"brush teeth\"};","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        Assertions.assertArrayEquals(expected, ls.toArray());","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"benmurphyy":50}}]
