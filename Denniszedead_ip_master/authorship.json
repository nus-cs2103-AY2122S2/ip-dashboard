[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import java.io.File;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":" * Duke is a task list CLI application that stores three types of tasks, Todos, Deadlines and Events.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":" * The tasks can be marked and unmarked to represent completeness.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    /** The Storage that acts as an interface between Duke and duke.txt */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"    /** The Task List that stores all the tasks */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    /** The UI that handles user interactions */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"     * Constructs a new Duke application.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"     * @param filename The file which contains the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"    public Duke(String filename) {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"        // Creates the new UI for Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"        // Gets the data from filename and creates a new task list based on the data in filename.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"            storage \u003d new Storage(filename);","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"            taskList \u003d storage.getData();","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"            // If file could not be found, create new file name and get fata from there.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"            File newFile \u003d new File(\"data/\");","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"            if (!newFile.exists()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"                newFile.mkdir();","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"            newFile \u003d new File(filename);","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"            try {","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"                newFile.createNewFile();","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"                storage \u003d new Storage(filename);","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"                ex.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"     * Causes the Duke application to run.","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"    void run() {","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"        // Creates a new scanner input for duke for user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"        // Open the start menu for duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"        ui.showMenu();","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"        // The main operartion for duke. Keeps on running until the user enters bye.","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"        while (true) {","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"                // Waits for the user input, then run the command.","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"                String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"                Command cmd \u003d ui.showUserCommandLine(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"                cmd.run(taskList, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"                // Shows the custom duke expression message.","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"                ui.showCommandError(e);","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"     * Executes the Duke application.","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"        // Creates a new duke application and tells it to run.","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Denniszedead":83,"-":4}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.dukeexceptions.*;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.dukeexceptions.EmptyDateException;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":" * The Command object that represents the different commands of Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"    protected String parameter;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"     * Creates a new Command.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"     * @param parameter The parameter entered by the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"    protected Command(String parameter) {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"        this.parameter \u003d parameter;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"     * Runs the various commands based on the type of command it is.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions The exception from Duke if there are errors encountered.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"    public abstract void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions;","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"     * Creates the command based on the user\u0027s input in the command line.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"     * @param command The type of command.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"     * @param parameter The parameter which varies based on the type of command.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"     * @return The command with its type based on command.","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws InvalidCommandException If the user enters either an invalid command or empty command.","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Command getCommand(String command, String parameter) throws InvalidCommandException {","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"        // Check if the command entered by the user is valid, then return the command on that type, otherwise, throws","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // the InvalidCommandException exception.","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"        if (command.equals(\"BYE\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"            return new ByeCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"LIST\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"            return new ListCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"MARK\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"            return new MarkCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"UNMARK\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"            return new UnmarkCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"TODO\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"            return new TodoCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"DEADLINE\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"            return new DeadlineCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"EVENT\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"            return new EventCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"DELETE\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"            return new DeleteCommand(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"        } else if (command.equals(\"FIND\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"            return new FindCommand(parameter);","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw InvalidCommandException.createInvalidCommand(command);","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":" * The Bye command exits the Duke application.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"class ByeCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"    /** Constructs a bye command without expecting a parameter. */","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"    protected ByeCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"     * Causes the Duke application to exit.","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions Should not have an exception unless it is an unexpected error.","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"        // Shows the exit screen.","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"        ui.showExitScreen();","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        // Exits duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":" * The list command shows the task list to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"class ListCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    /** Constructs the list command without expecting a parameter. */","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"    protected ListCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"     * Shows all the tasks in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions Should not have an exception unless it is an unexpected error.","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"        // Shows the screen with all the task in task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"        ui.taskListDisplay.run(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":" * The mark command marks the tasks, representing the tasks as complete.","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"class MarkCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"    /** Constructs the mark command with index number of the item in the task list as the parameter. */","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"    protected MarkCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"     * Marks the task indicated by the index in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions Occurs if the user did not enter a number or the number is out of range from the index.","lastModifiedDate":"2022-01-31"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"        // Checks if the user did not enter a number, then throw an exception.","lastModifiedDate":"2022-01-31"},{"lineNumber":144,"author":{"gitId":"Denniszedead"},"content":"        if (parameter.isBlank()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw EmptyNumberException.createEmptyNumber(\"Mark\");","lastModifiedDate":"2022-02-05"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":148,"author":{"gitId":"Denniszedead"},"content":"        // Marks the task as indicated in the index of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":149,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"Denniszedead"},"content":"            String task \u003d taskList.markTask(Integer.parseInt(parameter));","lastModifiedDate":"2022-01-31"},{"lineNumber":151,"author":{"gitId":"Denniszedead"},"content":"            ui.showMarkedTaskDisplay(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"Denniszedead"},"content":"            storage.updateData(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"Denniszedead"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"Denniszedead"},"content":"            // If the user enters a number that is out of bound of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new ListIndexOutOfBoundException();","lastModifiedDate":"2022-02-05"},{"lineNumber":156,"author":{"gitId":"Denniszedead"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":157,"author":{"gitId":"Denniszedead"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":159,"author":{"gitId":"Denniszedead"},"content":"            // If the user enters a parameter that is not a number.","lastModifiedDate":"2022-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2022-02-05"},{"lineNumber":161,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":166,"author":{"gitId":"Denniszedead"},"content":" * The unmarks command unmarks the task, indicating it as incomplete.","lastModifiedDate":"2022-01-31"},{"lineNumber":167,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":168,"author":{"gitId":"Denniszedead"},"content":"class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":169,"author":{"gitId":"Denniszedead"},"content":"    /** Constructs the unmark command with index number of the item in the task list as the parameter. */","lastModifiedDate":"2022-01-31"},{"lineNumber":170,"author":{"gitId":"Denniszedead"},"content":"    protected UnmarkCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":171,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":173,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":174,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":175,"author":{"gitId":"Denniszedead"},"content":"     * Unmarks the task indicated by the index in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":176,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":178,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":179,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":180,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions Occurs if the user did not enter a number or the number is out of range from the index.","lastModifiedDate":"2022-01-31"},{"lineNumber":181,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":182,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // Checks if the user did not enter a number, then throw an EmptyNumberException exception.","lastModifiedDate":"2022-02-05"},{"lineNumber":185,"author":{"gitId":"Denniszedead"},"content":"        if (parameter.isBlank()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw EmptyNumberException.createEmptyNumber(\"Unmark\");","lastModifiedDate":"2022-02-05"},{"lineNumber":187,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":188,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":189,"author":{"gitId":"Denniszedead"},"content":"        // Unmarks the task as indicated in the index of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":190,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":191,"author":{"gitId":"Denniszedead"},"content":"            String task \u003d taskList.unmarkTask(Integer.parseInt(parameter));","lastModifiedDate":"2022-01-31"},{"lineNumber":192,"author":{"gitId":"Denniszedead"},"content":"            ui.showUnmarkedTaskDisplay(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":193,"author":{"gitId":"Denniszedead"},"content":"            storage.updateData(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":194,"author":{"gitId":"Denniszedead"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":195,"author":{"gitId":"Denniszedead"},"content":"            // If the user enters a number that is out of bound of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new ListIndexOutOfBoundException();","lastModifiedDate":"2022-02-05"},{"lineNumber":197,"author":{"gitId":"Denniszedead"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":198,"author":{"gitId":"Denniszedead"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":199,"author":{"gitId":"Denniszedead"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":200,"author":{"gitId":"Denniszedead"},"content":"            // If the user enters a parameter that is not a number.","lastModifiedDate":"2022-01-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2022-02-05"},{"lineNumber":202,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":203,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":204,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":205,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":206,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":207,"author":{"gitId":"Denniszedead"},"content":" * The Todo Command dds a todo tasks in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":208,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":209,"author":{"gitId":"Denniszedead"},"content":"class TodoCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":210,"author":{"gitId":"Denniszedead"},"content":"    /** Constructs the TODO command that takes in the name of the TODO task as the parameter. */","lastModifiedDate":"2022-01-31"},{"lineNumber":211,"author":{"gitId":"Denniszedead"},"content":"    protected TodoCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":212,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":213,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":214,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":215,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":216,"author":{"gitId":"Denniszedead"},"content":"     * Adds a todo task in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":217,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":218,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":219,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":220,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":221,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions If the user did not indicate a name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":222,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":223,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":224,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":225,"author":{"gitId":"Denniszedead"},"content":"        // Checks if the user enters an empty parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":226,"author":{"gitId":"Denniszedead"},"content":"        if (parameter.isBlank()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            throw EmptyTaskException.createEmptyTask(\"todo\");","lastModifiedDate":"2022-02-05"},{"lineNumber":228,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":229,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":230,"author":{"gitId":"Denniszedead"},"content":"        // Creates a new TODO task.","lastModifiedDate":"2022-01-31"},{"lineNumber":231,"author":{"gitId":"Denniszedead"},"content":"        Task todo \u003d Task.createTask(\"TODO\", false, parameter, null);","lastModifiedDate":"2022-01-31"},{"lineNumber":232,"author":{"gitId":"Denniszedead"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2022-01-27"},{"lineNumber":233,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":234,"author":{"gitId":"Denniszedead"},"content":"        // Shows the screen with the new task that was recently created.","lastModifiedDate":"2022-01-31"},{"lineNumber":235,"author":{"gitId":"Denniszedead"},"content":"        ui.newTaskDisplay(todo, taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":236,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":237,"author":{"gitId":"Denniszedead"},"content":"        // Updates the task list in the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":238,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":239,"author":{"gitId":"Denniszedead"},"content":"            storage.updateData(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":240,"author":{"gitId":"Denniszedead"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":241,"author":{"gitId":"Denniszedead"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":242,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":243,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":244,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":245,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":246,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":247,"author":{"gitId":"Denniszedead"},"content":" * The deadline command adds a deadline tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":248,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":249,"author":{"gitId":"Denniszedead"},"content":"class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":250,"author":{"gitId":"Denniszedead"},"content":"    /** Creates the deadline command with task name /by dd/mm/yyyy HHmm as parameter. */","lastModifiedDate":"2022-01-31"},{"lineNumber":251,"author":{"gitId":"Denniszedead"},"content":"    protected DeadlineCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":252,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":253,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":254,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":255,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":256,"author":{"gitId":"Denniszedead"},"content":"     * Adds a deadline command into the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":257,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":258,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":259,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":260,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":261,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions If the users enters no parameter, no date or invalid date.","lastModifiedDate":"2022-01-31"},{"lineNumber":262,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":263,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":264,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":265,"author":{"gitId":"Denniszedead"},"content":"        // Check if the user did not enter a task name and date, then throw Empty Task parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":266,"author":{"gitId":"Denniszedead"},"content":"        if (parameter.isBlank()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            throw EmptyTaskException.createEmptyTask(\"dateline\");","lastModifiedDate":"2022-02-05"},{"lineNumber":268,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":269,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":270,"author":{"gitId":"Denniszedead"},"content":"        // Get the index \"/by\" from the parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":271,"author":{"gitId":"Denniszedead"},"content":"        int index \u003d parameter.indexOf(\"/by \");","lastModifiedDate":"2022-01-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // If the user did not enter /by, then throw the EmptyDateException exception.","lastModifiedDate":"2022-02-05"},{"lineNumber":273,"author":{"gitId":"Denniszedead"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            throw EmptyDateException.createEmptyDate(\"dateline\");","lastModifiedDate":"2022-02-05"},{"lineNumber":275,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":276,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":277,"author":{"gitId":"Denniszedead"},"content":"        // Gets the task name form the parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":278,"author":{"gitId":"Denniszedead"},"content":"        String task \u003d parameter.substring(0, index);","lastModifiedDate":"2022-01-31"},{"lineNumber":279,"author":{"gitId":"Denniszedead"},"content":"        // If the user did not enter a task name, then throw empty task exception.","lastModifiedDate":"2022-01-31"},{"lineNumber":280,"author":{"gitId":"Denniszedead"},"content":"        if (task.isBlank()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            throw EmptyTaskException.createEmptyTask(\"dateline\");","lastModifiedDate":"2022-02-05"},{"lineNumber":282,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":283,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":284,"author":{"gitId":"Denniszedead"},"content":"        // Get the date from the parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":285,"author":{"gitId":"Denniszedead"},"content":"        String date \u003d parameter.substring(index + 4, parameter.length());","lastModifiedDate":"2022-01-31"},{"lineNumber":286,"author":{"gitId":"Denniszedead"},"content":"        // If the user did not enter a date after \"/by\".","lastModifiedDate":"2022-01-31"},{"lineNumber":287,"author":{"gitId":"Denniszedead"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            throw EmptyDateException.createEmptyDate(\"dateline\");","lastModifiedDate":"2022-02-05"},{"lineNumber":289,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":290,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":291,"author":{"gitId":"Denniszedead"},"content":"        // Creates a new deadline task, then add it to the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":292,"author":{"gitId":"Denniszedead"},"content":"        Task deadline \u003d Task.createTask(\"DEADLINE\", false, task, date);","lastModifiedDate":"2022-01-27"},{"lineNumber":293,"author":{"gitId":"Denniszedead"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":294,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":295,"author":{"gitId":"Denniszedead"},"content":"        // Shows the recently created deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":296,"author":{"gitId":"Denniszedead"},"content":"        ui.newTaskDisplay(deadline, taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":297,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":298,"author":{"gitId":"Denniszedead"},"content":"        // Updates the task list in the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":299,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":300,"author":{"gitId":"Denniszedead"},"content":"            storage.updateData(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":301,"author":{"gitId":"Denniszedead"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":302,"author":{"gitId":"Denniszedead"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":303,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":304,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":305,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":306,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":307,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":308,"author":{"gitId":"Denniszedead"},"content":" * The event command adds an event task in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":309,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":310,"author":{"gitId":"Denniszedead"},"content":"class EventCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":311,"author":{"gitId":"Denniszedead"},"content":"    /** Creates the event command with task name /at dd/mm/yyyy HHmm as parameter. */","lastModifiedDate":"2022-01-31"},{"lineNumber":312,"author":{"gitId":"Denniszedead"},"content":"    protected EventCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":313,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":314,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":315,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":316,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":317,"author":{"gitId":"Denniszedead"},"content":"     * Adds an event task in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":318,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":319,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":320,"author":{"gitId":"Denniszedead"},"content":"     * @param ui The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":321,"author":{"gitId":"Denniszedead"},"content":"     * @param storage The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":322,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions If the users enters no parameter, no date or invalid date.","lastModifiedDate":"2022-01-31"},{"lineNumber":323,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":324,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":325,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":326,"author":{"gitId":"Denniszedead"},"content":"        // Check if the user did not enter a task name and date, then throw Empty Task parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":327,"author":{"gitId":"Denniszedead"},"content":"        if (parameter.isBlank()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            throw EmptyTaskException.createEmptyTask(\"event\");","lastModifiedDate":"2022-02-05"},{"lineNumber":329,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":330,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":331,"author":{"gitId":"Denniszedead"},"content":"        // Get the index \"/at\" from the parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":332,"author":{"gitId":"Denniszedead"},"content":"        int index \u003d parameter.indexOf(\"/at \");","lastModifiedDate":"2022-01-31"},{"lineNumber":333,"author":{"gitId":"Denniszedead"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            throw EmptyDateException.createEmptyDate(\"event\");","lastModifiedDate":"2022-02-05"},{"lineNumber":335,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":336,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":337,"author":{"gitId":"Denniszedead"},"content":"        // Gets the task name form the parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":338,"author":{"gitId":"Denniszedead"},"content":"        String task \u003d parameter.substring(0, index);","lastModifiedDate":"2022-01-31"},{"lineNumber":339,"author":{"gitId":"Denniszedead"},"content":"        // If the user did not enter a task name, then throw empty task exception.","lastModifiedDate":"2022-01-31"},{"lineNumber":340,"author":{"gitId":"Denniszedead"},"content":"        if (task.isBlank()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw EmptyTaskException.createEmptyTask(\"event\");","lastModifiedDate":"2022-02-05"},{"lineNumber":342,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":343,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":344,"author":{"gitId":"Denniszedead"},"content":"        // Get the date from the parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":345,"author":{"gitId":"Denniszedead"},"content":"        String date \u003d parameter.substring(index + 4, parameter.length());","lastModifiedDate":"2022-01-31"},{"lineNumber":346,"author":{"gitId":"Denniszedead"},"content":"        // If the user did not enter a date after \"/at\".","lastModifiedDate":"2022-01-31"},{"lineNumber":347,"author":{"gitId":"Denniszedead"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            throw EmptyDateException.createEmptyDate(\"event\");","lastModifiedDate":"2022-02-05"},{"lineNumber":349,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":350,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":351,"author":{"gitId":"Denniszedead"},"content":"        // Creates a new event task, then add it to the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":352,"author":{"gitId":"Denniszedead"},"content":"        Task event \u003d Task.createTask(\"EVENT\", false, task, date);","lastModifiedDate":"2022-01-27"},{"lineNumber":353,"author":{"gitId":"Denniszedead"},"content":"        taskList.addTask(event);","lastModifiedDate":"2022-01-27"},{"lineNumber":354,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":355,"author":{"gitId":"Denniszedead"},"content":"        // Shows the recently created event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":356,"author":{"gitId":"Denniszedead"},"content":"        ui.newTaskDisplay(event, taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":357,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":358,"author":{"gitId":"Denniszedead"},"content":"        // Updates the task list in the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":359,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":360,"author":{"gitId":"Denniszedead"},"content":"            storage.updateData(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":361,"author":{"gitId":"Denniszedead"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":362,"author":{"gitId":"Denniszedead"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":363,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":364,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":365,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":366,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":367,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":368,"author":{"gitId":"Denniszedead"},"content":" * The delete command deletes a task in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":369,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":370,"author":{"gitId":"Denniszedead"},"content":"class DeleteCommand extends Command{","lastModifiedDate":"2022-01-29"},{"lineNumber":371,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":372,"author":{"gitId":"Denniszedead"},"content":"     * Constructs the delete command with index number of the item in the task list as the parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":373,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":374,"author":{"gitId":"Denniszedead"},"content":"    DeleteCommand(String parameter) {","lastModifiedDate":"2022-01-29"},{"lineNumber":375,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-29"},{"lineNumber":376,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":377,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":378,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":379,"author":{"gitId":"Denniszedead"},"content":"     * Deletes the task indicated by the index number in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":380,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":381,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The TaskList which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":382,"author":{"gitId":"Denniszedead"},"content":"     * @param ui       The UI on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":383,"author":{"gitId":"Denniszedead"},"content":"     * @param storage  The Storage on which the command will act on.","lastModifiedDate":"2022-01-31"},{"lineNumber":384,"author":{"gitId":"Denniszedead"},"content":"     * @throws DukeExceptions If the user did not enter a number.","lastModifiedDate":"2022-01-31"},{"lineNumber":385,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":386,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":387,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-29"},{"lineNumber":388,"author":{"gitId":"Denniszedead"},"content":"        // If the user did not enter a number, returns an empty number parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":389,"author":{"gitId":"Denniszedead"},"content":"        if (parameter.isBlank()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            throw EmptyNumberException.createEmptyNumber(\"Delete\");","lastModifiedDate":"2022-02-05"},{"lineNumber":391,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":392,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":393,"author":{"gitId":"Denniszedead"},"content":"        // Deletes the task from the task list based on the index. Then update the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":394,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":395,"author":{"gitId":"Denniszedead"},"content":"            String deletedTask \u003d taskList.deleteFromIndex(Integer.parseInt(parameter));","lastModifiedDate":"2022-01-29"},{"lineNumber":396,"author":{"gitId":"Denniszedead"},"content":"            ui.showDeleteTaskDisplay(deletedTask, taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":397,"author":{"gitId":"Denniszedead"},"content":"            storage.updateData(taskList);","lastModifiedDate":"2022-01-29"},{"lineNumber":398,"author":{"gitId":"Denniszedead"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":399,"author":{"gitId":"Denniszedead"},"content":"            // If the user enters a number that is out of bound of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            throw new ListIndexOutOfBoundException();","lastModifiedDate":"2022-02-05"},{"lineNumber":401,"author":{"gitId":"Denniszedead"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":402,"author":{"gitId":"Denniszedead"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-29"},{"lineNumber":403,"author":{"gitId":"Denniszedead"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":404,"author":{"gitId":"Denniszedead"},"content":"            // If the user enters a parameter that is not a number.","lastModifiedDate":"2022-01-31"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2022-02-05"},{"lineNumber":406,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":407,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":408,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":409,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":410,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":411,"author":{"gitId":"Denniszedead"},"content":" * Finds all the tasks in the task list that contain the keyword entered by the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":412,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":413,"author":{"gitId":"Denniszedead"},"content":"class FindCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":414,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":415,"author":{"gitId":"Denniszedead"},"content":"     * Creates a new FindCommand object.","lastModifiedDate":"2022-01-31"},{"lineNumber":416,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":417,"author":{"gitId":"Denniszedead"},"content":"     * @param parameter The parameter of the command entered by the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":418,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":419,"author":{"gitId":"Denniszedead"},"content":"    protected FindCommand(String parameter) {","lastModifiedDate":"2022-01-31"},{"lineNumber":420,"author":{"gitId":"Denniszedead"},"content":"        super(parameter);","lastModifiedDate":"2022-01-31"},{"lineNumber":421,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":422,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":423,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":424,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2022-01-31"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        // Check if the user did not enter a keyword, then throw the EmptyKeywordException exception.","lastModifiedDate":"2022-02-05"},{"lineNumber":426,"author":{"gitId":"Denniszedead"},"content":"        if (parameter.isBlank()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            throw new EmptyKeywordException();","lastModifiedDate":"2022-02-05"},{"lineNumber":428,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":429,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":430,"author":{"gitId":"Denniszedead"},"content":"        // Gets a new task list which the tasks that contains the keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":431,"author":{"gitId":"Denniszedead"},"content":"        TaskList filteredTaskList \u003d taskList.findTasksFromKeyword(parameter);","lastModifiedDate":"2022-01-31"},{"lineNumber":432,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":433,"author":{"gitId":"Denniszedead"},"content":"        // Gets the UI to show the filtered task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":434,"author":{"gitId":"Denniszedead"},"content":"        ui.showFilteredTaskListDisplay(parameter, filteredTaskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":435,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":436,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"Denniszedead":408,"-":28}},{"path":"src/main/java/duke/dukeexceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * The custom exception for duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"public abstract class DukeExceptions extends Exception {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    protected DukeExceptions(String s) {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"        super(s);","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":11}},{"path":"src/main/java/duke/dukeexceptions/EmptyKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * Thrown when the user did not enter the keyword when the command requires one.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class EmptyKeywordException extends DukeExceptions {","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * Creates a new EmptyKeywordException exception.","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public EmptyKeywordException() {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"        super(\"Please enter a keyword for find command!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"Denniszedead":10,"-":3}},{"path":"src/main/java/duke/dukeexceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * The exception when the command entered by the user is not valid.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public abstract class InvalidCommandException extends DukeExceptions {","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected InvalidCommandException(String s) {","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"        super(s);","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"     * Creates an invalid command when the user enters one.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"     * @param cmd The user input. Can be Empty.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"     * @return An Invalid command.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws InvalidCommandException Either MissingCommandException Exception representing no command is entered or IncorrectCommand","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"     *                        representing commands other than specified in the Command class is entered.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static InvalidCommandException createInvalidCommand(String cmd) throws InvalidCommandException {","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        throw cmd.isBlank() ? new MissingCommandException() : new IncorrectCommandException();","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":" * The missing command exception that represents the user enters an empty command.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"final class MissingCommandException extends InvalidCommandException {","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    MissingCommandException() {","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"        super(\"Sorry, I don\u0027t see any commands!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":" * The incorrect command exception that represents the users enters a command that is not specified by Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"final class IncorrectCommandException extends InvalidCommandException {","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    IncorrectCommandException() {","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"        super(\"Sorry! I don\u0027t undestand what are you saying!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":31,"-":9}},{"path":"src/main/java/duke/dukeexceptions/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * An exception when the user enters an invalid number when the command requires one.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public final class InvalidNumberException extends DukeExceptions {","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * Creates a new InvalidNumberException exception.","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"        super(\"You have entered an invalid number!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"Denniszedead":10,"-":3}},{"path":"src/main/java/duke/dukeexceptions/ListIndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * The List Index Out Of Bound exception is thrown when the user tries to access the index that is more than the","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" * number of tasks in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public final class ListIndexOutOfBoundException extends DukeExceptions {","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public ListIndexOutOfBoundException() {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"        super(\"Index is out of bond!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":9,"-":2}},{"path":"src/main/java/duke/praser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.praser;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.dukeexceptions.InvalidCommandException;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":" * The parser object make sures that the command entered by the user is correct.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"public class Parser {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static Command parse(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"        String command;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"        String parameter \u003d \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"        // Split the parameter into command and parameter based on white space.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        String[] strings \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"        if (strings.length \u003c 2) {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"            // If there are no words after space.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"            command \u003d userInput;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"            command \u003d strings[0];","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"            parameter \u003d userInput.substring(command.length() + 1);","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"        // Returns the command based on the command and parameter.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"        return Command.getCommand(command.toUpperCase(), parameter);","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"Denniszedead":25,"-":2}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":" * The Storage object acts as an interface between Duke and the filename for database management.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"    /** The file which stores the tasks in the task list. */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    private File file;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"     * Creates a new Storage object with the filename to store and retrieves the data in the tasks list.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"     * @param filename THe file where the tasks in the tasks list is retrieved and stored.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    public Storage(String filename) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"        this.file \u003d new File(filename);","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"     * Gets all the tasks in file and creates a new task list based on the data retrieved.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"     * @return Task List with all the tasks retrieved from the file filename.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"     * @throws FileNotFoundException If the file filename could not be found in duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"    public TaskList getData() throws FileNotFoundException {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        Scanner fileInput \u003d new Scanner(file);","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"        // Gets the data from the file and creates new task into the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"        while (fileInput.hasNextLine()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"            // Gets the properties for a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"            String type \u003d fileInput.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            Boolean isDone \u003d Boolean.parseBoolean(fileInput.nextLine());","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"            String name \u003d fileInput.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"            String date \u003d fileInput.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"            // If the program finishes processing a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"            if (date.equals(\"*** Next Task ***\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"                date \u003d null;","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"                fileInput.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"            // Adds the task to the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                taskList.addTask(Task.createTask(type, isDone, name, date));","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"        return taskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"     * Updates the file filename with the latest data from the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The task list which has the latest data.","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"     * @throws IOException If an IO error happens.","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"    public void updateData(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"        // Creates a new filewriter.","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        // Writes all the tasks in the task list into the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        fw.write(taskList.updateDatabase());","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"        // Closes the filewriter.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"        fw.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":78,"-":2}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.dukeexceptions.InvalidDateException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":" * The task object represents the tasks stored by duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"    /** The date formatter on which indicates that the user will enter the date in dd/mm/yyyy HHmm. */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    protected static DateTimeFormatter initFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"    /** The date formatter on which the date will be displayed when toString() is called. */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    protected static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"    /** The name of the task. */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    protected String taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    /** Representing whether the task is done */","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"    protected boolean isMarked;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"     * Creates a new Task.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"     * @param done Whether the task is done or not.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"    protected Task(String taskName, boolean done) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"        this.isMarked \u003d done;","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"     * Sets the task to be complete.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"        isMarked \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"     * Sets the task to be incomplete.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"        isMarked \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"     * Returns a string in the format that is stored in the file filename.","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"     * @return The properties of the task that follows the format stored in the file filename.","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"    public abstract String updateIntoDatabase();","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"     * Get the task name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"     * @return The name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        return taskName;","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"     * Creates a new task.","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"     * @param type The type of task.","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"     * @param done The completeness of the tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"     * @param date The date of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"     * @return A new Task object.","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws InvalidDateException If the task that requires a date encounters a date in an invalid format.","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Task createTask(String type, Boolean done, String name, String date) throws InvalidDateException {","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        // Convert the task type to uppercase.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"        type \u003d type.toUpperCase();","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"        // Creates a new task based on the task type.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"        if (type.equals(\"TODO\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"            return new ToDo(name, done);","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"        } else if (type.equals(\"DEADLINE\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"            return new Deadline(name, done, date);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"        } else if (type.equals(\"EVENT\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"            return new Event(name, done, date);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":" * The task representing TODO.","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"final class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"    protected ToDo(String taskName, boolean done) {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        super(taskName, done);","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"     * @return The tasks with its properties.","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"        String tag \u003d \"[T]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"        String doneIndicator \u003d \"[\" + (isMarked ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"        return tag + doneIndicator + \" \" + taskName;","lastModifiedDate":"2022-01-31"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"    public String updateIntoDatabase() {","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"        return \"TODO\\n\" + isMarked + \"\\n\" + taskName + \"\\n\" + \"*** Next Task ***\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":" * The tasks that contains the deadline.","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"final class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"    /** The date of the dateline */","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"     * A task with a deadline.","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"     * @param done The completeness of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"     * @param deadline The date representing the deadline of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws InvalidDateException If the user did not enter the date in the format dd/mm/yyyy HHmm.","lastModifiedDate":"2022-02-05"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    protected Deadline(String taskName, boolean done, String deadline) throws InvalidDateException {","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"        super(taskName, done);","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"        // Parse the date of the deadline as DD MMM YYYY HH:mm.","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, initFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":147,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":148,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":149,"author":{"gitId":"Denniszedead"},"content":"     * @return The tasks with its properties.","lastModifiedDate":"2022-01-31"},{"lineNumber":150,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":151,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":152,"author":{"gitId":"Denniszedead"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":153,"author":{"gitId":"Denniszedead"},"content":"        String tag \u003d \"[D]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"Denniszedead"},"content":"        String doneIndicator \u003d \"[\" + (isMarked ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2022-01-31"},{"lineNumber":155,"author":{"gitId":"Denniszedead"},"content":"        String deadline \u003d \"(by: \" + this.deadline.format(formatter) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"Denniszedead"},"content":"        return tag + doneIndicator + \" \" + taskName + deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":157,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":160,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":161,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":162,"author":{"gitId":"Denniszedead"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":163,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":164,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":165,"author":{"gitId":"Denniszedead"},"content":"    public String updateIntoDatabase() {","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"Denniszedead"},"content":"        return \"DEADLINE\\n\" + isMarked + \"\\n\" + taskName + \"\\n\" + deadline.format(initFormatter) + \"\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":167,"author":{"gitId":"Denniszedead"},"content":"                + \"*** Next Task ***\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"},{"lineNumber":170,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"Denniszedead"},"content":"final class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"Denniszedead"},"content":"    /** The date of the event */","lastModifiedDate":"2022-01-31"},{"lineNumber":173,"author":{"gitId":"Denniszedead"},"content":"    private LocalDateTime eventDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":174,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":175,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":176,"author":{"gitId":"Denniszedead"},"content":"     * Creates the event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":178,"author":{"gitId":"Denniszedead"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":179,"author":{"gitId":"Denniszedead"},"content":"     * @param done The completeness of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":180,"author":{"gitId":"Denniszedead"},"content":"     * @param eventDate","lastModifiedDate":"2022-01-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @throws InvalidDateException","lastModifiedDate":"2022-02-05"},{"lineNumber":182,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    protected Event(String taskName, boolean done, String eventDate) throws InvalidDateException {","lastModifiedDate":"2022-02-05"},{"lineNumber":184,"author":{"gitId":"Denniszedead"},"content":"        super(taskName, done);","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":186,"author":{"gitId":"Denniszedead"},"content":"        // Parse the date of the deadline as DD MMM YYYY HH:mm.","lastModifiedDate":"2022-01-31"},{"lineNumber":187,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"Denniszedead"},"content":"            this.eventDate \u003d LocalDateTime.parse(eventDate, initFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"Denniszedead"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-02-05"},{"lineNumber":191,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":193,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":194,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":195,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":197,"author":{"gitId":"Denniszedead"},"content":"     * @return The tasks with its properties.","lastModifiedDate":"2022-01-31"},{"lineNumber":198,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":199,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":200,"author":{"gitId":"Denniszedead"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":201,"author":{"gitId":"Denniszedead"},"content":"        String tag \u003d \"[E]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":202,"author":{"gitId":"Denniszedead"},"content":"        String doneIndicator \u003d \"[\" + (isMarked ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2022-01-31"},{"lineNumber":203,"author":{"gitId":"Denniszedead"},"content":"        String eventDate \u003d \"(at: \" + this.eventDate.format(formatter) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"Denniszedead"},"content":"        return tag + doneIndicator + \" \" + taskName + eventDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":205,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":208,"author":{"gitId":"Denniszedead"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":209,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":210,"author":{"gitId":"Denniszedead"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":211,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":212,"author":{"gitId":"Denniszedead"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":213,"author":{"gitId":"Denniszedead"},"content":"    public String updateIntoDatabase() {","lastModifiedDate":"2022-01-29"},{"lineNumber":214,"author":{"gitId":"Denniszedead"},"content":"        return \"EVENT\\n\" + isMarked + \"\\n\" + taskName + \"\\n\" + eventDate.format(initFormatter) + \"\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":215,"author":{"gitId":"Denniszedead"},"content":"                + \"*** Next Task ***\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":217,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Denniszedead":208,"-":9}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.tasklist;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import java.util.List;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":" * The task list which contains all the tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"public class TaskList {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"    /** The ArrayList which stores all the tasks. */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"     * Creates a new Task List.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"     * Marks the task located in the index provided.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"     * @return The string representation of the task that was recently marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"     * @throws IndexOutOfBoundsException When the user enters the index that is outside the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"    public String markTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"            // Minus one as the index from the parameter is 1-based.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"            task.setDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"            return task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"            // If the index is out of bound of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"     * Unmarks the task indicated by the index in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"     * @return The string representation of the task that was recently unmarked.","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"     * @throws IndexOutOfBoundsException When the user enters the index that is outside the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"    public String unmarkTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"            // Minus one as the index from the parameter is 1-based.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"            task.setUndone();","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"            return task.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"            // If the index is out of bound of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"     * Adds a new task in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"     * @param task The new task to be added into the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"     * Shows all the tasks in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"    public void printTasks() {","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"        for (int index \u003d 0; index \u003c this.taskList.size(); index++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"            System.out.println(Integer.toString(index + 1) + \". \" + taskList.get(index).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"     * Shows the number of tasks in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"    public void printNoTasks() {","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"     * Deletes the task indicated by the index.","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"     * @return The string representation of the task that was recently deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"    public String deleteFromIndex(int index) {","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"        // Minus one as the index from the parameter is 1-based.","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"        String deletedTask \u003d taskList.get(index - 1).toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"        return deletedTask;","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"     * Returns the string format that is stored in the file.","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"     * @return The string representation that follows the format that is stored in the database.","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    public String updateDatabase() {","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"            result \u003d result + task.updateIntoDatabase();","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"        return result;","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"     * Returns a task list with all tasks that contains the keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"     * @param keyword The keyword to be searched.","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"     * @return A new task list with the tasks containing the keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"    public TaskList findTasksFromKeyword(String keyword) {","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"        TaskList filteredTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"        // Gets all the tasks that contains the keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"        List\u003cTask\u003e filteredArrayList \u003d taskList.stream()","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"                .filter(task -\u003e task.getTaskName().contains(keyword))","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"        // Puts all the tasks in the filteredArrayList into the new Task List.","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"        for (Task task: filteredArrayList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"            filteredTaskList.addTask(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"        return filteredTaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Denniszedead":133}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.dukeexceptions.InvalidCommandException;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"import duke.praser.Parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.DeleteTaskDisplay;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.ErrorMenu;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.ExitScreen;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.MarkTaskDisplay;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.Menu;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.NewTaskDisplay;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.TaskListDisplay;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.UnmarkedTaskDisplay;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"import duke.uicomponents.FilteredTaskListDisplay;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":" * The UI controls the user interactions.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"public class Ui {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"    /** The menu that is shown when duke starts. */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"    Menu menu;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"    /** The exit screen when duke exits */","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"    ExitScreen exitScreen;","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"    /** The error menu when there are error detected */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"    ErrorMenu errorMenu;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    /** The screen that shows the task list. */","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"    public TaskListDisplay taskListDisplay;","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"    /** The screen that shows the task that is recently marked */","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"    MarkTaskDisplay markTaskDisplay;","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"    /** The screen that shows the task that is recently unmarked */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"    UnmarkedTaskDisplay unmarkedTaskDisplay;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"    /** The screen that shows the task when a new task is added */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"    NewTaskDisplay newTaskDisplay;","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"    /** The screen that shows the task when a task is deleted */","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"Denniszedead"},"content":"    DeleteTaskDisplay deleteTaskDisplay;","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Denniszedead"},"content":"    private FilteredTaskListDisplay filteredTaskListDisplay;","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"Denniszedead"},"content":"     * Creates a new UI for duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"Denniszedead"},"content":"    public Ui() {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"Denniszedead"},"content":"        menu \u003d new Menu();","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"Denniszedead"},"content":"        exitScreen \u003d new ExitScreen();","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"Denniszedead"},"content":"        taskListDisplay \u003d new TaskListDisplay();","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"Denniszedead"},"content":"        markTaskDisplay \u003d new MarkTaskDisplay();","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"Denniszedead"},"content":"        unmarkedTaskDisplay \u003d new UnmarkedTaskDisplay();","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"Denniszedead"},"content":"        newTaskDisplay \u003d new NewTaskDisplay();","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"Denniszedead"},"content":"        deleteTaskDisplay \u003d new DeleteTaskDisplay();","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"Denniszedead"},"content":"        errorMenu \u003d new ErrorMenu();","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"Denniszedead"},"content":"        filteredTaskListDisplay \u003d new FilteredTaskListDisplay();","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"Denniszedead"},"content":"     * Shows the menu when duke starts.","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"Denniszedead"},"content":"    public void showMenu() {","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"Denniszedead"},"content":"        menu.run();","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"Denniszedead"},"content":"     * Facilitates the user inputs.","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"Denniszedead"},"content":"     * @param userInput The user input.","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"Denniszedead"},"content":"     * @return A command that is entered by the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws InvalidCommandException If the user input is either empty or the user enters an invalid command.","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Command showUserCommandLine(String userInput) throws InvalidCommandException {","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"Denniszedead"},"content":"        return Parser.parse(userInput);","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"Denniszedead"},"content":"     * Shows the exception message if an exception is encountered.","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"Denniszedead"},"content":"     * @param exceptions The exception to be displayed.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"Denniszedead"},"content":"    public void showCommandError(DukeExceptions exceptions) {","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"Denniszedead"},"content":"        errorMenu.run(exceptions.getMessage());","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"Denniszedead"},"content":"     * Shows the exit screen when the user exits duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"Denniszedead"},"content":"    public void showExitScreen() {","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"Denniszedead"},"content":"        exitScreen.run();","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"Denniszedead"},"content":"     * Shows all the tasks in the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The task list to be shown.","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"Denniszedead"},"content":"    void showTaskListDisplay(TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"Denniszedead"},"content":"        taskListDisplay.run(taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"Denniszedead"},"content":"     * Shows the tasts that was recently marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":104,"author":{"gitId":"Denniszedead"},"content":"    public void showMarkedTaskDisplay(String task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"Denniszedead"},"content":"        markTaskDisplay.run(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":109,"author":{"gitId":"Denniszedead"},"content":"     * Shows the tasks that was recently unmarked.","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"Denniszedead"},"content":"    public void showUnmarkedTaskDisplay(String task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"Denniszedead"},"content":"        unmarkedTaskDisplay.run(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"Denniszedead"},"content":"     * Shows the task that was recently added into task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was recently added.","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The task list which will then show the number of tasks now.","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"Denniszedead"},"content":"    public void newTaskDisplay(Task task, TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"Denniszedead"},"content":"        newTaskDisplay.run(task, taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"Denniszedead"},"content":"     * Shows the task that was recently deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was recently deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The task list which will show the number of tasks left.","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"Denniszedead"},"content":"    public void showDeleteTaskDisplay(String task, TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"Denniszedead"},"content":"        deleteTaskDisplay.run(task, taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"Denniszedead"},"content":"     * Shows the filtered task list which contains the keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":140,"author":{"gitId":"Denniszedead"},"content":"     * @param keyword The keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":141,"author":{"gitId":"Denniszedead"},"content":"     * @param filteredTaskList The task list which contains the tasks that have the keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":142,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":143,"author":{"gitId":"Denniszedead"},"content":"    public void showFilteredTaskListDisplay(String keyword, TaskList filteredTaskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":144,"author":{"gitId":"Denniszedead"},"content":"        filteredTaskListDisplay.run(keyword, filteredTaskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":145,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":146,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":143,"-":3}},{"path":"src/main/java/duke/uicomponents/DeleteTaskDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":" * Displays to the user when a task is deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"public class DeleteTaskDisplay {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"     * Runs the screen when a task is deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was recently deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The task list which shows the number of tasks left.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"    public void run(String task, TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Deleted this tasks: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"        taskList.printNoTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":22}},{"path":"src/main/java/duke/uicomponents/ErrorMenu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * Shows the display when the exception is thrown.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"public class ErrorMenu {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"     * Runs the error display.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"     * @param errorMessage The exception message.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    public void run(String errorMessage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Error Detected: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":17}},{"path":"src/main/java/duke/uicomponents/ExitScreen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * The display when the user exits duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"public class ExitScreen {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"     * Runs the exit screen.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"    public void run() {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"     We hope you have an    \");","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Enriching experience with us\");","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"           Bye Bye          \");","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":17}},{"path":"src/main/java/duke/uicomponents/FilteredTaskListDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":" * Displays all the tasks which contains the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"public class FilteredTaskListDisplay {","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"     * Runs the Filter task List Display.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"     * @param keyword The keyword in the query.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"     * @param filteredTaskList The task list that contains tasks with the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"    public void run(String keyword, TaskList filteredTaskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Here are the tasks which contains \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"        filteredTaskList.printTasks();","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"Denniszedead":21}},{"path":"src/main/java/duke/uicomponents/MarkTaskDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * Shows the menu when the user marks a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"public class MarkTaskDisplay {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"     * Runs the mark task display.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was recently marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    public void run(String task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Alright, I\u0027ve marked the duke.task: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Good job by the way!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":17}},{"path":"src/main/java/duke/uicomponents/Menu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * The display when the user starts duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"public class Menu {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"     * Runs the menu display.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"    public void run() {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"   Welcome chosen one!   \");","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"      I am Big Tech      \");","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\" How can I be of service \");","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Denniszedead":17}},{"path":"src/main/java/duke/uicomponents/NewTaskDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":" * Displays when the user adds a new task.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"public class NewTaskDisplay {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"     * Runs the new task display.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was recently added.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The task list which will then print out the number of tasks now.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    public void run(Task task, TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Alright, I\u0027ve added this to the list\");","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"        taskList.printNoTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":23}},{"path":"src/main/java/duke/uicomponents/TaskListDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":" * The display that shows all the task in the task lists.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"public class TaskListDisplay{","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"     * Runs the task list display.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"     * @param taskList The task list which will show all its tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Here You go: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"        taskList.printTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":21}},{"path":"src/main/java/duke/uicomponents/UnmarkedTaskDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.uicomponents;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":" * Shows the menu when the user unmarks a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"public class UnmarkedTaskDisplay {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"     * Runs the unmark task display.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"     * @param task The task that was recently unmarked.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"    public void run(String task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Alright, I\u0027ve unmarked the duke.task: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        System.out.println(\"Hope you complete it soon!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":17}},{"path":"src/test/java/duke/command/TestCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.dukeexceptions.InvalidCommandException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"public class TestCommand{","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"    void createCommand_noCommand_MissingCommandExceptionThrown() {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"            Command cmd \u003d Command.getCommand(\"\", \"\");","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"            Assertions.assertEquals(\"Sorry, I don\u0027t see any commands!\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"    void createCommand_randomCommand_IncorrectCommandExceptionThrown() {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"            Command cmd \u003d Command.getCommand(\"Some\", \"random command\");","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"            Assertions.assertEquals(\"Sorry! I don\u0027t undestand what are you saying!\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"    void createCommand_byeCommand_ByeCommand() {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"            Command cmd \u003d Command.getCommand(\"BYE\", \"\");","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"            Assertions.assertInstanceOf(ByeCommand.class, cmd);","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"Denniszedead"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"Denniszedead"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"Denniszedead"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"Denniszedead"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"Denniszedead":33,"-":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Denniszedead"},"content":"some random duke.command","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"Denniszedead"},"content":"todo read book","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"Denniszedead"},"content":"deadline return book /by 2/2/2022 1200","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Denniszedead"},"content":"event project meeting /at 30/1/2022 1000","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Denniszedead"},"content":"todo join sports club","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"Denniszedead"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"Denniszedead"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"Denniszedead"},"content":"deadline Capstone Project Submission /by 12/2/2022 2359","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Denniszedead"},"content":"event IU Concert /at 5/5/2022 2000","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Denniszedead"},"content":"deadline do homework /by 31/1/2022 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Denniszedead"},"content":"event CS2103 finals /at 2/1/2022 1200","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Denniszedead"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"Denniszedead"},"content":"todo","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"Denniszedead"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"Denniszedead"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"Denniszedead"},"content":"deadline event","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"Denniszedead"},"content":"event event","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"Denniszedead"},"content":"deadline event /by","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"Denniszedead"},"content":"event event /by","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"Denniszedead"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"Denniszedead"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"Denniszedead"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"Denniszedead"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"Denniszedead"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"Denniszedead"},"content":"mark 9999","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"Denniszedead"},"content":"mark","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"Denniszedead"},"content":"unmark","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"Denniszedead"},"content":"delete","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"Denniszedead"},"content":"delete 5","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"Denniszedead"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"Denniszedead"},"content":"delete 9999","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"Denniszedead"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Denniszedead":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Denniszedead"},"content":"","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"Denniszedead":1,"-":21}}]
