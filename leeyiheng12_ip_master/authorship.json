[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"DEADLINE shower false 21/12/2022-12:21","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"DEADLINE read true 21/11/1999-10:03","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"DEADLINE eat false 20/01/1000-19:30","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"TODO sadasd true","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"TODO sleep /at  false","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"EVENT sleep false 11/11/1111-11:11","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"leeyiheng12":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"import user.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"/** The main Duke class, that allows the user to save tasks. */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"    public Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"    public Duke() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"     * The main function that starts Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"     * @param args String inputs, but not used for Duke.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"        duke.ui.greet();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"        String userInput;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"        boolean finished \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"        while (!finished) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"            userInput \u003d duke.ui.getInput();","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"                duke.ui.sayGoodbye();","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"                finished \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"                duke.ui.handle(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"leeyiheng12":31}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package exceptions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"/** A subclass of Exception, to represent exceptions specific to Duke. */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"     * Constructs a new exception with an error message.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"     * @param errorMessage Error message of the error thrown.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"leeyiheng12":14}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"/** A class that deals with the storage of Duke tasks onto the hard disk. */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"    /** Directory which stores the tasks on a .txt file. */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"    public File DIRECTORY \u003d new File(\"data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"    /** Path of the .txt file. */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"    public Path TASKS_PATH \u003d Paths.get(\"data\", \"tasks.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"    /** .txt file which stores the Duke tasks. */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"    public File TASKS_FILE \u003d new File(TASKS_PATH.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"     * Returns an ArrayList of tasks, if a valid .txt tasks file exist on disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"     * Otherwise, returns an empty arraylist of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException if the file was tampered with during the execution of the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"     **/","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"        // adds directory if it does not exist","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"        boolean directoryCreated \u003d DIRECTORY.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"        // creates a new file if it does not exist","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"        boolean didNotExist;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"            didNotExist \u003d TASKS_FILE.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"leeyiheng12"},"content":"        if (!directoryCreated \u0026\u0026 !didNotExist) {  // the file existed","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"leeyiheng12"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"leeyiheng12"},"content":"                Scanner s \u003d new Scanner(TASKS_FILE); // create a Scanner using the File as the source","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"leeyiheng12"},"content":"                Task t;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"leeyiheng12"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"leeyiheng12"},"content":"                    String someTask \u003d s.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"leeyiheng12"},"content":"                    try {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"leeyiheng12"},"content":"                        t \u003d Task.importFromString(someTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"leeyiheng12"},"content":"                        allTasks.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"leeyiheng12"},"content":"                    } catch (IllegalArgumentException | ArrayIndexOutOfBoundsException ignored) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"leeyiheng12"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"leeyiheng12"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"leeyiheng12"},"content":"            } catch (FileNotFoundException err) {  // will not reach here","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"leeyiheng12"},"content":"                throw new DukeException(err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"leeyiheng12"},"content":"        return allTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"leeyiheng12"},"content":"     * Takes in an ArrayList of tasks, and writes them to disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"leeyiheng12"},"content":"     * @param allTasks an ArrayList of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException if the file was tampered with during the execution of the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"leeyiheng12"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e allTasks) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"leeyiheng12"},"content":"            FileWriter fw \u003d new FileWriter(TASKS_PATH.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"leeyiheng12"},"content":"            for (Task t: allTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"leeyiheng12"},"content":"                fw.write(t.exportToString() + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"leeyiheng12"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"leeyiheng12"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"leeyiheng12":85}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"/** A class that functions as an abstraction of a deadline task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"    public static String WRONG_FORMAT_ERROR_STRING \u003d","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"            \"Format for deadlines: \u0027deadline [some task] /by [dd/mm/yyyy-hh:mm]\u0027\";","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"    public DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy-HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"    public DateTimeFormatter PRETTY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"    public Task.TaskType taskType \u003d Task.TaskType.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"    public String taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"    public LocalDateTime deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"     * Constructor method for the Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskName Name of the Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"     * @param deadline The date and time that the Deadline must be completed by.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the date and time argument is not formatted properly.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"    public Deadline(String taskName, String deadline) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(WRONG_FORMAT_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"     * The string representation of the task to be displayed to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"     * @return A string representation of the task for the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"                this.isDone() ? \"X\" : \" \", this.taskName, this.deadline.format(PRETTY_FORMAT));","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"leeyiheng12"},"content":"     * @return The description of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"leeyiheng12"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"leeyiheng12"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"leeyiheng12"},"content":"     * Converts the task into a string representation to be used to be saved on disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"leeyiheng12"},"content":"     * @return The task in string format to be used to be saved on disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"leeyiheng12"},"content":"    public String exportToString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"leeyiheng12"},"content":"        return String.format(\"%s %s %s %s\",","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"leeyiheng12"},"content":"            this.taskType, this.taskName, this.isDone(), this.deadline.format(INPUT_FORMAT));","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"leeyiheng12":65}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"/** A class that functions as an abstraction of an event task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"    public static String WRONG_FORMAT_ERROR_STRING \u003d \"Format for events: \u0027event [some event] /at [dd/mm/yyyy-hh:mm]\u0027\";","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"    DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy-HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"    DateTimeFormatter PRETTY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"    public Task.TaskType taskType \u003d Task.TaskType.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"    public String taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"    public LocalDateTime eventTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"     * Constructor method for the Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskName Name of the Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"     * @param eventTime The date and time of the Event.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the date and time argument is not formatted properly.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"    public Event(String taskName, String eventTime) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"            this.eventTime \u003d LocalDateTime.parse(eventTime, INPUT_FORMAT);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(WRONG_FORMAT_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"     * The string representation of the task to be displayed to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"     * @return A string representation of the task for the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"        return String.format(\"[E][%s] %s (at: %s)\",","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"                this.isDone() ? \"X\" : \" \", this.taskName, this.eventTime.format(PRETTY_FORMAT));","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"leeyiheng12"},"content":"     * @return The description of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"leeyiheng12"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"leeyiheng12"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"leeyiheng12"},"content":"     * Converts the task into a string representation to be used to be saved on disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"leeyiheng12"},"content":"     * @return The task in string format to be used to be saved on disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"leeyiheng12"},"content":"    public String exportToString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"leeyiheng12"},"content":"        return String.format(\"%s %s %s %s\",","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"leeyiheng12"},"content":"            this.taskType, this.taskName, this.isDone(), this.eventTime.format(INPUT_FORMAT));","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"leeyiheng12":64}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"/** A class that functions as an abstraction of a task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"    public static String UNKNOWN_INPUT_ERROR_STRING \u003d \"I don\u0027t think I know what this is!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"    public static String BAD_DESCRIPTION_ERROR_STRING \u003d \"Description cannot be empty!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"    public static String INVALID_TASK_NUM_ERROR_STRING \u003d \"Not a valid task number!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"    public static String TASK_NUM_DOES_NOT_EXIST_ERROR_STRING \u003d \"Task %d does not exist!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"    public enum TaskType {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"        TODO,","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"        EVENT,","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"        DEADLINE","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"    public boolean isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"     * Sets the Task as done or undone.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"     * @param newDone True if the task is to be set as done, false to be set as undone.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"    public void setDone(boolean newDone) {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"        this.isDone \u003d newDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"     * Checks if the task is done or undone.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"    /** Method to be implemented by any Task: to be able to retrieve its description. */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"    public abstract String getDescription();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"    /** Method to be implemented by any Task: to be able to be represented by a string. */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"    public abstract String exportToString();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"     * Returns a task when given the string representation of it.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"leeyiheng12"},"content":"     * @param exportedTask The string representation of a Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"leeyiheng12"},"content":"     * @return A Task object.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If given task command was not formatted properly.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"leeyiheng12"},"content":"    public static Task importFromString(String exportedTask)","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"leeyiheng12"},"content":"        throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"leeyiheng12"},"content":"        String[] details \u003d exportedTask.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"leeyiheng12"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"leeyiheng12"},"content":"        switch (TaskType.valueOf(details[0])) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"leeyiheng12"},"content":"        case TODO:","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"leeyiheng12"},"content":"            task \u003d new Todo(details[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"leeyiheng12"},"content":"            task.setDone(Boolean.parseBoolean(details[2]));","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"leeyiheng12"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"leeyiheng12"},"content":"        case EVENT:","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"leeyiheng12"},"content":"            task \u003d new Event(details[1], details[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"leeyiheng12"},"content":"            task.setDone(Boolean.parseBoolean(details[2]));","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"leeyiheng12"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"leeyiheng12"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"leeyiheng12"},"content":"            task \u003d new Deadline(details[1], details[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"leeyiheng12"},"content":"            task.setDone(Boolean.parseBoolean(details[2]));","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"leeyiheng12"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"leeyiheng12"},"content":"        return task;","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"leeyiheng12":71}},{"path":"src/main/java/tasks/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import user.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"/** A class that encapsulates the lists of tasks to be completed. */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"public class Tasklist {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"    public Storage storage \u003d new Storage();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"    public ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"     * Loads the tasks from storage, if exists.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"    public void loadTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"            allTasks \u003d storage.loadTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"            Ui.prettyPrint(err.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"     * Saves the tasks to storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException if the file was tampered with during the execution of the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"    public void saveTasks() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"        storage.saveTasks(allTasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the number of tasks inputted by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"     * @return An integer, representing the number of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"    public int getNumTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"        return this.allTasks.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the specific task stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskNum The task number.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"leeyiheng12"},"content":"     * @return The appropriate task.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"leeyiheng12"},"content":"    public Task getTask(int taskNum) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"leeyiheng12"},"content":"        return this.allTasks.get(taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"leeyiheng12"},"content":"     * Adds a task.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"leeyiheng12"},"content":"     * @param t The task to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"leeyiheng12"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"leeyiheng12"},"content":"        this.allTasks.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"leeyiheng12"},"content":"     * Marks a task as completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskNum The number of the task to be marked as completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"leeyiheng12"},"content":"     * @return An array of strings, containing the success message if task is successfully marked.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the task to be marked as completed is already completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"leeyiheng12"},"content":"    public String[] markTask(int taskNum) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"leeyiheng12"},"content":"        Task thisTask \u003d allTasks.get(taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"leeyiheng12"},"content":"        if (thisTask.isDone()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(\"This task is already done!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"leeyiheng12"},"content":"            thisTask.setDone(true);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"leeyiheng12"},"content":"            return new String[] {\"Nice! I\u0027ve marked this task as done:\", thisTask.toString()};","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"leeyiheng12"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskNum The number of the task to be marked as not completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"leeyiheng12"},"content":"     * @return An array of strings, containing the success message if task is successfully marked.","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the task to be marked as not completed was not completed yet.","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"leeyiheng12"},"content":"    public String[] unmarkTask(int taskNum) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"leeyiheng12"},"content":"        Task thisTask \u003d allTasks.get(taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"leeyiheng12"},"content":"        if (!thisTask.isDone()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(\"This task has not been done yet!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"leeyiheng12"},"content":"            thisTask.setDone(false);","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"leeyiheng12"},"content":"            return new String[] {\"Ok, I\u0027ve marked this task as not done yet:\", thisTask.toString()};","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"leeyiheng12"},"content":"     * Deletes a task from the lists of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskNum The number of the task to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"leeyiheng12"},"content":"     * @return An array of strings, containing the success message if task is successfully deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"leeyiheng12"},"content":"    public String[] deleteTask(int taskNum) {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"leeyiheng12"},"content":"        Task thisTask \u003d allTasks.get(taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"leeyiheng12"},"content":"        allTasks.remove(taskNum);","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"leeyiheng12"},"content":"        return new String[] {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"leeyiheng12"},"content":"            \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"leeyiheng12"},"content":"            thisTask.toString(),","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"leeyiheng12"},"content":"            String.format(\"Now you have %d tasks in the list.\", allTasks.size())};","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"leeyiheng12"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keywords) {","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"leeyiheng12"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"leeyiheng12"},"content":"        for (Task t : allTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"leeyiheng12"},"content":"            if (t.getDescription().contains(keywords)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"leeyiheng12"},"content":"                foundTasks.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"leeyiheng12"},"content":"        return foundTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"leeyiheng12":121}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"/** A class that functions as an abstraction of a todo task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"    public Task.TaskType taskType \u003d Task.TaskType.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"    public String taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"     * Constructor method for the Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskName Name of the Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"     * The string representation of the task to be displayed to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"     * @return A string representation of the task for the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"        return String.format(\"[T][%s] %s\", this.isDone() ? \"X\" : \" \", this.taskName);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"     * @return The description of the todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"     * Converts the task into a string representation to be used to be saved on disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"     * @return The task in string format to be used to be saved on disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"    public String exportToString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"        return String.format(\"%s %s %s\", this.taskType, this.taskName, this.isDone());","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"leeyiheng12":45}},{"path":"src/main/java/user/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package user;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"/** A class that handles the parsing of a user\u0027s input. */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the task number of a task to be marked as completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"     * @param command The user\u0027s input to mark the task as completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"     * @param numTasks The total number of tasks saved.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"     * @return The task number of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the task number provided is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"    public int handleMarkTask(String command, int numTasks) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"        String taskString \u003d command.substring(5);  // \"mark \" is 5 letters","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"        int taskToMark;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"            taskToMark \u003d Integer.parseInt(taskString);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"        catch (NumberFormatException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(Task.INVALID_TASK_NUM_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"        if (1 \u003c\u003d taskToMark \u0026\u0026 taskToMark \u003c\u003d numTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"            return taskToMark - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(String.format(Task.TASK_NUM_DOES_NOT_EXIST_ERROR_STRING, taskToMark));","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the task number of a task to be marked as not completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"     * @param command The user\u0027s input to mark the task as not completed.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"     * @param numTasks The total number of tasks saved.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"     * @return The task number of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the task number provided is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"    public int handleUnmarkTask(String command, int numTasks) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"leeyiheng12"},"content":"        String taskString \u003d command.substring(7);  // \"unmark \" is 7 letters","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"leeyiheng12"},"content":"        int taskToUnmark;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"leeyiheng12"},"content":"            taskToUnmark \u003d Integer.parseInt(taskString);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"leeyiheng12"},"content":"        catch (NumberFormatException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(Task.INVALID_TASK_NUM_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"leeyiheng12"},"content":"        if (1 \u003c\u003d taskToUnmark \u0026\u0026 taskToUnmark \u003c\u003d numTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"leeyiheng12"},"content":"            return taskToUnmark - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(String.format(Task.TASK_NUM_DOES_NOT_EXIST_ERROR_STRING, taskToUnmark));","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the task number of a task to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"leeyiheng12"},"content":"     * @param command The user\u0027s input to mark the task as deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"leeyiheng12"},"content":"     * @param numTasks The total number of tasks saved.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"leeyiheng12"},"content":"     * @return The task number of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the task number provided is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"leeyiheng12"},"content":"    public int handleDeleteTask(String command, int numTasks) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"leeyiheng12"},"content":"        String taskString \u003d command.substring(7);  // \"delete \" is 7 letters","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"leeyiheng12"},"content":"        int taskToDelete;","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"leeyiheng12"},"content":"            taskToDelete \u003d Integer.parseInt(taskString);","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"leeyiheng12"},"content":"        catch (NumberFormatException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(Task.INVALID_TASK_NUM_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"leeyiheng12"},"content":"        if (1 \u003c\u003d taskToDelete \u0026\u0026 taskToDelete \u003c\u003d numTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"leeyiheng12"},"content":"            return taskToDelete - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(String.format(Task.TASK_NUM_DOES_NOT_EXIST_ERROR_STRING, taskToDelete));","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the keywords of the task string to be found.","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"leeyiheng12"},"content":"     * @param command The user\u0027s input of a task to find.","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"leeyiheng12"},"content":"     * @return The keywords given by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"leeyiheng12"},"content":"    public String handleFindTask(String command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"leeyiheng12"},"content":"        return command.substring(5);  // \"find \" is 7 letters","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"leeyiheng12"},"content":"     * Returns a Todo task given the user\u0027s input to create a Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskString The user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"leeyiheng12"},"content":"     * @return The Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the user\u0027s input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"leeyiheng12"},"content":"    public Task handleTodo(String taskString) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"leeyiheng12"},"content":"        if (taskString.length() \u003c\u003d 5) {","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(Task.BAD_DESCRIPTION_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"leeyiheng12"},"content":"            String taskName \u003d taskString.substring(5);  // \"todo \" has 5 characters","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"leeyiheng12"},"content":"            return new Todo(taskName);","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"leeyiheng12"},"content":"     * Returns a Deadline task given the user\u0027s input to create a Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskString The user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"leeyiheng12"},"content":"     * @return The Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the user\u0027s input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"leeyiheng12"},"content":"    public Task handleDeadline(String taskString) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"leeyiheng12"},"content":"        if (taskString.length() \u003c\u003d 9) {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(Task.BAD_DESCRIPTION_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"leeyiheng12"},"content":"            int byIdx \u003d taskString.indexOf(\"/by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"leeyiheng12"},"content":"            if (byIdx \u003c\u003d 9) {  // either -1, or 0 to 9","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"leeyiheng12"},"content":"                throw new DukeException(Deadline.WRONG_FORMAT_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"leeyiheng12"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"leeyiheng12"},"content":"                String taskName \u003d taskString.substring(9, byIdx-1);  // \"deadline \" has 9 characters","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"leeyiheng12"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"leeyiheng12"},"content":"                    String taskDeadline \u003d taskString.substring(byIdx + 4);  // \"/by \" has 4 characters","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"leeyiheng12"},"content":"                    return new Deadline(taskName, taskDeadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"leeyiheng12"},"content":"                } catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"leeyiheng12"},"content":"                    throw new DukeException(Deadline.WRONG_FORMAT_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"leeyiheng12"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"leeyiheng12"},"content":"     * Returns an Event task given the user\u0027s input to create an Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskString The user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"leeyiheng12"},"content":"     * @return The Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the user\u0027s input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"leeyiheng12"},"content":"    public Task handleEvent(String taskString) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"leeyiheng12"},"content":"        if (taskString.length() \u003c\u003d 6) {","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(Task.BAD_DESCRIPTION_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"leeyiheng12"},"content":"            int atIdx \u003d taskString.indexOf(\"/at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"leeyiheng12"},"content":"            if (atIdx \u003c\u003d 6) {  // either -1, or 0 to 6","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"leeyiheng12"},"content":"                throw new DukeException(Event.WRONG_FORMAT_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"leeyiheng12"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"leeyiheng12"},"content":"                String taskName \u003d taskString.substring(6, atIdx-1);  // \"event \" has 9 characters","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"leeyiheng12"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"leeyiheng12"},"content":"                    String taskTime \u003d taskString.substring(atIdx + 4);  // \"/at \" has 4 characters","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"leeyiheng12"},"content":"                    return new Event(taskName, taskTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"leeyiheng12"},"content":"                } catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"leeyiheng12"},"content":"                    throw new DukeException(Event.WRONG_FORMAT_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"leeyiheng12"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"leeyiheng12"},"content":"     * Returns the right Task given the user\u0027s input to create a new Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"leeyiheng12"},"content":"     * @param taskString The user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"leeyiheng12"},"content":"     * @return The right task.","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"leeyiheng12"},"content":"     * @throws DukeException If the user\u0027s input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"leeyiheng12"},"content":"    public Task addTask(String taskString) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"leeyiheng12"},"content":"        Task t;","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"leeyiheng12"},"content":"        if (taskString.startsWith(\"todo \")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"leeyiheng12"},"content":"            t \u003d handleTodo(taskString);","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"leeyiheng12"},"content":"        } else if (taskString.startsWith(\"deadline \")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"leeyiheng12"},"content":"            t \u003d handleDeadline(taskString);","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"leeyiheng12"},"content":"        } else if (taskString.startsWith(\"event \")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"leeyiheng12"},"content":"            t \u003d handleEvent(taskString);","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"leeyiheng12"},"content":"            throw new DukeException(Task.UNKNOWN_INPUT_ERROR_STRING);","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"leeyiheng12"},"content":"        return t;","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"leeyiheng12":185}},{"path":"src/main/java/user/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"package user;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"/** A class that handles the interactions with the user. */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"    public Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"    public Tasklist tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"    public static String INDENT \u003d \"    \";","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"    public static String SEPARATOR \u003d \"--------------------------------------------\";","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"    public static String LOGO \u003d INDENT + \" ____        _        \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"            + INDENT + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"            + INDENT + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"            + INDENT + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"            + INDENT + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"    public String[] OPENING_MESSAGE \u003d new String[] {\"Hello! I\u0027m Duke!\", \"What can I do for you?\"};","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"    public String CLOSING_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"    public Parser parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"     * Constructor method to create a new tasklist and parser.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"    public Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"        tasklist \u003d new Tasklist();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"        tasklist.loadTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"     * Prints a string with indentation before it.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"     * @param message The string to be printed with indentation before it.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"    public static void printIndent(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"        System.out.println(INDENT + message);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"leeyiheng12"},"content":"     * Prints a string with separators before and after it.","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"leeyiheng12"},"content":"     * @param message The string to be printed with separators before and after it.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"leeyiheng12"},"content":"    public static void prettyPrint(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"leeyiheng12"},"content":"     * Prints multiple string with separators before and after it.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"leeyiheng12"},"content":"     * @param messages An array of strings string to be printed with separators before and after them.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"leeyiheng12"},"content":"    public static void prettyPrint(String[] messages) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR);","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"leeyiheng12"},"content":"        for (String message : messages) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"leeyiheng12"},"content":"            printIndent(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"leeyiheng12"},"content":"     * Greets the user with a Duke logo and a welcome message.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"leeyiheng12"},"content":"    public void greet() {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"leeyiheng12"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"leeyiheng12"},"content":"        prettyPrint(OPENING_MESSAGE);","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"leeyiheng12"},"content":"     * Greets the user with a goodbye message.","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"leeyiheng12"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"leeyiheng12"},"content":"        prettyPrint(CLOSING_MESSAGE);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"leeyiheng12"},"content":"     * Displays the tasks saved to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"leeyiheng12"},"content":"    public void displayTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"leeyiheng12"},"content":"        if (tasklist.getNumTasks() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"leeyiheng12"},"content":"            printIndent(\"You have no tasks!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"leeyiheng12"},"content":"            printIndent(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"leeyiheng12"},"content":"            for (int i \u003d 0; i \u003c tasklist.getNumTasks(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"leeyiheng12"},"content":"                printIndent(String.format(\"%d. %s\", i+1, tasklist.getTask(i)));","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"leeyiheng12"},"content":"     * Reads user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"leeyiheng12"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"leeyiheng12"},"content":"    public void displayFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR);","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"leeyiheng12"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"leeyiheng12"},"content":"            printIndent(\"No tasks are found!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"leeyiheng12"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"leeyiheng12"},"content":"            printIndent(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"leeyiheng12"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"leeyiheng12"},"content":"                printIndent(String.format(\"%d. %s\", i+1, foundTasks.get(i)));","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"leeyiheng12"},"content":"        printIndent(SEPARATOR + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"leeyiheng12"},"content":"    public String getInput() {","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"leeyiheng12"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"leeyiheng12"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"leeyiheng12"},"content":"     * Handles the user\u0027s input, and performs the corresponding action.","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"leeyiheng12"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"leeyiheng12"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"leeyiheng12"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"leeyiheng12"},"content":"    public void handle(String userInput) {","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"leeyiheng12"},"content":"             if (userInput.equals(\"list\")) {  // display tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"leeyiheng12"},"content":"                displayTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"leeyiheng12"},"content":"            } else if (userInput.startsWith(\"mark \")) {  // mark task as done","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"leeyiheng12"},"content":"                int taskToMark \u003d parser.handleMarkTask(userInput, tasklist.getNumTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"leeyiheng12"},"content":"                String[] result \u003d tasklist.markTask(taskToMark);","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"leeyiheng12"},"content":"                prettyPrint(result);","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"leeyiheng12"},"content":"            } else if (userInput.startsWith(\"unmark \")) {  // mark task as undone","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"leeyiheng12"},"content":"                 int taskToUnmark \u003d parser.handleUnmarkTask(userInput, tasklist.getNumTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"leeyiheng12"},"content":"                 String[] result \u003d tasklist.unmarkTask(taskToUnmark);","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"leeyiheng12"},"content":"                 prettyPrint(result);","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"leeyiheng12"},"content":"            } else if (userInput.startsWith(\"delete \")) {  // delete task","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"leeyiheng12"},"content":"                 int taskToDelete \u003d parser.handleDeleteTask(userInput, tasklist.getNumTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"leeyiheng12"},"content":"                 String[] result \u003d tasklist.deleteTask(taskToDelete);","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"leeyiheng12"},"content":"                 prettyPrint(result);","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"leeyiheng12"},"content":"            } else if (userInput.startsWith(\"find \")) {  // find task","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"leeyiheng12"},"content":"                 String keywords \u003d parser.handleFindTask(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"leeyiheng12"},"content":"                 ArrayList\u003cTask\u003e foundTasks \u003d tasklist.findTasks(keywords);","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"leeyiheng12"},"content":"                 displayFoundTasks(foundTasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"leeyiheng12"},"content":"             } else {  // add task","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"leeyiheng12"},"content":"                Task t \u003d parser.addTask(userInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"leeyiheng12"},"content":"                 tasklist.addTask(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"leeyiheng12"},"content":"                 String[] messages \u003d new String[] {","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"leeyiheng12"},"content":"                         \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"leeyiheng12"},"content":"                         t.toString(),","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"leeyiheng12"},"content":"                         \"Now you have \" + tasklist.getNumTasks() + \" tasks in the list.\"","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"leeyiheng12"},"content":"                 };","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"leeyiheng12"},"content":"                 prettyPrint(messages);","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"leeyiheng12"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"leeyiheng12"},"content":"            tasklist.saveTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"leeyiheng12"},"content":"            prettyPrint(err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"leeyiheng12":162}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"import user.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"    public void addTask_invalidDeadline_exceptionThrown() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"            parser.addTask(\"deadline  /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"            String correctString \u003d \"Format for deadlines: \u0027deadline [some task] /by [dd/mm/yyyy-hh:mm]\u0027\";","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"            assertEquals(correctString, err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"    public void handleDeleteTask_invalidTaskNum_exceptionThrown() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"leeyiheng12"},"content":"            parser.handleDeleteTask(\"delete five\", 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"leeyiheng12"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"leeyiheng12"},"content":"            String correctString \u003d \"Not a valid task number!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"leeyiheng12"},"content":"            assertEquals(correctString, err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"leeyiheng12"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"leeyiheng12"},"content":"    public void handleDeleteTask_NoSuchTaskNum_exceptionThrown() {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"leeyiheng12"},"content":"            parser.handleDeleteTask(\"delete 5\", 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"leeyiheng12"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"leeyiheng12"},"content":"            String correctString \u003d \"Task 5 does not exist!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"leeyiheng12"},"content":"            assertEquals(correctString, err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"leeyiheng12":44}},{"path":"src/test/java/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"import tasks.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"leeyiheng12"},"content":"public class TasklistTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"leeyiheng12"},"content":"    Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"leeyiheng12"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"leeyiheng12"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"leeyiheng12"},"content":"    public void addTasks_markMarkedTasks_exceptionThrown() {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"leeyiheng12"},"content":"        tasklist.addTask(new Todo(\"eat\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"leeyiheng12"},"content":"        tasklist.addTask(new Todo(\"sleep\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"leeyiheng12"},"content":"        tasklist.addTask(new Todo(\"drink\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"leeyiheng12"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"leeyiheng12"},"content":"            tasklist.markTask(2);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"leeyiheng12"},"content":"            tasklist.markTask(2);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"leeyiheng12"},"content":"            fail();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"leeyiheng12"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"leeyiheng12"},"content":"            assertEquals(\"This task is already done!\", err.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"leeyiheng12"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"leeyiheng12"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"leeyiheng12"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"leeyiheng12":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeyiheng12"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"leeyiheng12"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"leeyiheng12"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"leeyiheng12"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"leeyiheng12"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"leeyiheng12"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"leeyiheng12":6}}]
