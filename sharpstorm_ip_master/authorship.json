[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.command.Parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private static TaskList taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        new Duke().init().run();","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    private Duke() {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    private Duke init() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"            taskList \u003d Storage.load();","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"            taskList.registerListener(store -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                    Storage.save(store);","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"                } catch (DukeIOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                    System.out.println(\"Warning: An error occurred while saving Task list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            System.out.println(\"Cannot write to working directory.\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"                    + \"Please check that you have write to the directory permissions.\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"                    + \"Will not save any changes!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"    private void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        Ui ui \u003d Ui.getInstance().greet();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        while (isRunning) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"            String command \u003d ui.readInput();","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            isRunning \u003d ui.printCommand((linePrinter) -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"                try {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"                    return Parser.parse(command).execute(linePrinter, taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"                } catch (DukeException ex) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"                    ui.printError(linePrinter, ex);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"                return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"            System.out.println();","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sharpstorm":51,"-":3}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.serializer.TaskListSerializer;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":" * Handles persistence operations on the file system.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":" * This includes creation of relevant directories and files.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    private static final String DATA_FOLDER_PATH \u003d \"data/\";","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    private static final String DB_FILENAME \u003d \"store.db\";","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    public static TaskList load() throws DukeIOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        FileInputStream dbStream \u003d openDatabaseRead();","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        return TaskListSerializer.inflate(dbStream);","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"    public static void save(TaskList taskList) throws DukeIOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        FileOutputStream dbStream \u003d openDatabaseWrite();","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        TaskListSerializer.deflate(taskList, dbStream);","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"    private static void initDataStore() throws DukeIOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        File dataFolder \u003d new File(DATA_FOLDER_PATH);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        if (dataFolder.exists() \u0026\u0026 !dataFolder.isDirectory()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Data Store is not a directory at: \"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"                    + dataFolder.getAbsolutePath());","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        } else if (!dataFolder.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"            if (!dataFolder.mkdir()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"                throw new DukeIOException(\"Cannot create data store directory at: \"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"                        + dataFolder.getAbsolutePath());","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"    private static FileInputStream openDatabaseRead() throws DukeIOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        initDataStore(); // throws DukeIOException","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        File database \u003d Paths.get(DATA_FOLDER_PATH, DB_FILENAME).toFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"            return new FileInputStream(database);","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"            // Does not create the database until a change is made","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"    private static FileOutputStream openDatabaseWrite() throws DukeIOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"        initDataStore(); // throws DukeIOException","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"        File database \u003d Paths.get(DATA_FOLDER_PATH, DB_FILENAME).toFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"            if (!database.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"                if (!database.createNewFile()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"                    throw new DukeIOException(\"Could not create database\");","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"            return new FileOutputStream(database);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Could not create database\");","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":77}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    private static final String SEPARATOR \u003d \"\\t------------------------------------\";","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    private static final String BOT_NAME \u003d \"Megumin\";","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    private static final String ERROR_INVALID_COMMAND \u003d \"I do not understand you!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    private static final String ERROR_INVALID_SYNTAX \u003d \"There was a problem understanding you:\";","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    private static final String ERROR_IO \u003d \"I had a problem reading / writing my memory!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    private static Ui instance;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    private final Scanner scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    private Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    public Ui greet() {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        printCommand((linePrinter) -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"Hi! I\u0027m \" + BOT_NAME);","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"What do you need?\");","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        System.out.println();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    public String readInput() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        System.out.println(\"Enter a Command or New Task:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"    public boolean printCommand(Function\u003cIPrintable, Boolean\u003e action) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        boolean isRunning \u003d action.apply((line) -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"            System.out.println(\"\\t\" + line);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        return isRunning;","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"    public void printError(IPrintable linePrinter, DukeException ex) {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"        if (ex instanceof DukeInvalidCommandException) {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        } else if (ex instanceof DukeIllegalArgumentException) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(ERROR_INVALID_SYNTAX);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(ex.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"        } else if (ex instanceof DukeIOException) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(ERROR_IO);","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"            instance \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"        return instance;","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":70}},{"path":"src/main/java/duke/command/BetweenCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"public class BetweenCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    BetweenCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        final String[] argParts \u003d args.split(\" and \");","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        if (argParts.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Not in the format \u003cdate\u003e and \u003cdate\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime start \u003d parseDateTime(argParts[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime end \u003d parseDateTime(argParts[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Here are your tasks in between %s and %s:\",","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                argParts[0], argParts[1]));","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        taskList.forEach((idx, task) -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"            task.getDate().ifPresent(date -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"                if (date.isBefore(end) \u0026\u0026 date.isAfter(start)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(task.getReadableString());","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":34}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    protected final String args;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    protected Command(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    protected int parseTaskNumber() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        int taskIndex;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"            taskIndex \u003d Integer.parseInt(this.args);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Task Number must be a number\");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        // Note that task storage uses 0-based index","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        return taskIndex - 1;","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"    protected Task parseSelectTask(TaskList taskList) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        int taskIndex \u003d this.parseTaskNumber();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        Task task \u003d taskList.getTaskByIndex(taskIndex);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"No matching task with given number\");","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        return task;","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    protected LocalDateTime parseDateTime(String dateString) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        return parseDateTime(dateString, \"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"    protected LocalDateTime parseDate(String dateString) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        return parseDateTime(dateString + \" 00:00\", \"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    protected LocalDateTime parseDateTime(String dateString, String pattern) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"            return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Date not in the format \" + pattern);","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"    public abstract boolean execute(IPrintable linePrinter, TaskList taskList)","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"            throws DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":59}},{"path":"src/main/java/duke/command/CreateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    CreateCommand(String args, TaskType taskType) {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        if (this.taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"            this.parseCreateTodo(linePrinter, this.args, taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        } else if (this.taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"            this.parseCreateDeadline(linePrinter, this.args, taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        } else if (this.taskType \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"            this.parseCreateEvent(linePrinter, this.args, taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"    private void parseCreateTodo(IPrintable linePrinter, String args, TaskList taskList)","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        // Syntax Check","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Task name cannot be empty\");","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        final Task task \u003d taskList.addTask(new Todo(args));","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        this.printResponse(linePrinter, task, taskList, \"Todo\");","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"    private void parseCreateDeadline(IPrintable linePrinter, String args, TaskList taskList)","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        // Syntax Check","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        final String[] argParts \u003d args.split(\" /by \");","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        if (argParts.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Not in the format \u003cTask name\u003e /by \u003cDate\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"        final String taskDescription \u003d argParts[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        if (taskDescription.equals(\"\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Task name cannot be empty\");","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        final LocalDateTime taskBy \u003d parseDateTime(argParts[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"        final Task task \u003d taskList.addTask(new Deadline(taskDescription, taskBy));","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"        this.printResponse(linePrinter, task, taskList, \"Deadline\");","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"    private void parseCreateEvent(IPrintable linePrinter, String args, TaskList taskList)","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        // Syntax Check","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"        final String[] argParts \u003d args.split(\" /at \");","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"        if (argParts.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Not in the format \u003cTask name\u003e /at \u003cDate\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"        final String taskDescription \u003d argParts[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"        if (taskDescription.equals(\"\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Task name cannot be empty\");","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        final LocalDateTime taskAt \u003d parseDateTime(argParts[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"        final Task task \u003d taskList.addTask(new Event(taskDescription, taskAt));","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"        this.printResponse(linePrinter, task, taskList, \"Event\");","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"    private void printResponse(IPrintable linePrinter, Task task, TaskList taskList, String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Added the following %s Task:\", type));","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t%s\", task.getReadableString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Now you have %d task(s) in the list\", taskList.getTaskCount()));","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":85}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    DeleteCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        int taskIndex \u003d parseTaskNumber();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        Task deleted \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        if (deleted \u003d\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"No matching task with given number\");","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(\"Deleted the task:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t %s\", deleted.getReadableString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":26}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"    ExitCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(\"Goodbye! Have a Nice Day.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":16}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"    ListCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(\"This is your task list:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        taskList.forEach((index, task) -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"            // Note that index passed into this consumer is 0-based. Increment by 1 for readability","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(String.format(\"%d. %s\", index + 1, task.getReadableString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":20}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private final boolean newState;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    MarkCommand(String args, boolean newState) {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        this.newState \u003d newState;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        Task task \u003d parseSelectTask(taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        if (task.isDone() \u003d\u003d newState) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(String.format(\"Task is already %s:\", newState ? \"done\" : \"not done\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        } else if (newState) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"            taskList.markTask(task, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"Great Job Finishing the task:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"            taskList.markTask(task, false);","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"Marking the task as not done yet:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t %s\", task.getReadableString()));","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":32}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_CREATE_TODO \u003d \"todo\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_CREATE_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_CREATE_EVENT \u003d \"event\";","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_UPCOMING \u003d \"upcoming\";","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_BETWEEN \u003d \"between\";","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_SCHEDULE \u003d \"schedule\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    public static Command parse(String command)","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"            throws DukeInvalidCommandException {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        final String[] commandParts \u003d command.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        final String commandLowerCase \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        final String args \u003d command.substring(commandLowerCase.length()).trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        switch (commandLowerCase) {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"            return new ExitCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"            return new ListCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"            return new MarkCommand(args, commandLowerCase.equals(COMMAND_MARK));","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_CREATE_TODO:","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"            return new CreateCommand(args, TaskType.TODO);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_CREATE_DEADLINE:","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"            return new CreateCommand(args, TaskType.DEADLINE);","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_CREATE_EVENT:","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"            return new CreateCommand(args, TaskType.EVENT);","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_UPCOMING:","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            return new UpcomingCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_SCHEDULE:","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"            return new ScheduleCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_BETWEEN:","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"            return new BetweenCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        default:","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeInvalidCommandException(String.format(\"No such command: %s\", commandLowerCase));","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":53}},{"path":"src/main/java/duke/command/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    ScheduleCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime dayStart \u003d parseDate(this.args);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime dayEnd \u003d dayStart.plus(1, ChronoUnit.DAYS);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Here are your tasks on %s:\", this.args));","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        taskList.forEach((idx, task) -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"            task.getDate().ifPresent(date -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"                if (date.isBefore(dayEnd) \u0026\u0026 date.isAfter(dayStart)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(task.getReadableString());","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":29}},{"path":"src/main/java/duke/command/UpcomingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"public class UpcomingCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    UpcomingCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        super(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    public boolean execute(IPrintable linePrinter, TaskList taskList) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        int days;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"            days \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Days must be a positive number\");","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        if (days \u003c 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Days must be a positive number\");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime endTime \u003d LocalDateTime.now().plus(days, ChronoUnit.DAYS);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Here are your tasks in %d days:\", days));","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        taskList.forEach((idx, task) -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"            task.getDate().ifPresent(date -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"                if (date.isBefore(endTime)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(task.getReadableString());","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"sharpstorm":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"sharpstorm":7}},{"path":"src/main/java/duke/exception/DukeIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"public class DukeIOException extends DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    public DukeIOException(String message) {","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":7}},{"path":"src/main/java/duke/exception/DukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"public class DukeIllegalArgumentException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    public DukeIllegalArgumentException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"sharpstorm":7}},{"path":"src/main/java/duke/exception/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"sharpstorm":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    private LocalDateTime by;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    public Deadline(String task, LocalDateTime by) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        super(TaskType.DEADLINE, task);","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    protected Deadline() {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        this(\"\", null);","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        return this.by;","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    public Optional\u003cLocalDateTime\u003e getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        return Optional.of(this.by);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    public String getReadableString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        return String.format(\"%s (by: %s)\", super.getReadableString(),","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027-\u0027 hh:mm a\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    public void serialize(DataOutputStream dOut) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        super.serialize(dOut);","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeUTF(by.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"    protected Task readSerializedData(DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        super.readSerializedData(dIn);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        this.by \u003d LocalDateTime.parse(dIn.readUTF());","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    private LocalDateTime at;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    public Event(String task, LocalDateTime at) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        super(TaskType.EVENT, task);","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    protected Event() {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        this(\"\", null);","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        return this.at;","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    public Optional\u003cLocalDateTime\u003e getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        return Optional.of(this.at);","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"    public String getReadableString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        return String.format(\"%s (at: %s)\", super.getReadableString(),","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027-\u0027 hh:mm a\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"    public void serialize(DataOutputStream dOut) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        super.serialize(dOut);","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeUTF(this.at.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"    protected Task readSerializedData(DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        super.readSerializedData(dIn);","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        this.at \u003d LocalDateTime.parse(dIn.readUTF());","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.util.ISerializable;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"public abstract class Task implements ISerializable {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    private final TaskType type;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    private String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    protected Task(TaskType type, String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    void setDone(boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        return this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    public Optional\u003cLocalDateTime\u003e getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        return Optional.empty();","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    public String getReadableString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        return String.format(\"[%s][%s] %s\", this.type.getShorthand(), this.getStatusIcon(),","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"                this.description);","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    public void serialize(DataOutputStream dOut) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeShort(this.type.getTypeId());","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeUTF(this.description);","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeBoolean(this.isDone);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    protected Task readSerializedData(DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        this.description \u003d dIn.readUTF();","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        this.isDone \u003d dIn.readBoolean();","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"    public static Task inflate(TaskType type, DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        Task task;","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"        switch (type) {","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        case TODO:","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"            task \u003d new Todo();","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"        case EVENT:","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"            task \u003d new Event();","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"            task \u003d new Deadline();","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        return task.readSerializedData(dIn);","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":77}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private final ArrayList\u003cConsumer\u003cTaskList\u003e\u003e changeListeners;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        this.changeListeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        this.notifyListeners();","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        return task;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    public void forEach(BiConsumer\u003cInteger, ? super Task\u003e consumer) {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"            consumer.accept(i, this.tasks.get(i));","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        if (index \u003e\u003d this.tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        if (index \u003e\u003d this.tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        Task deleted \u003d this.tasks.remove(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        this.notifyListeners();","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        return deleted;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    public Task markTask(Task task, boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        if (task.isDone() !\u003d isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            task.setDone(isDone);","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"            this.notifyListeners();","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        return task;","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"    public void registerListener(Consumer\u003cTaskList\u003e listener) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        changeListeners.add(listener);","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"    public void removeListener(Consumer\u003cTaskList\u003e listener) {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        changeListeners.remove(listener);","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"    private void notifyListeners() {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        this.changeListeners.forEach(handler -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"            handler.accept(this);","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":69}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    TODO(\"T\", 1),","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"    DEADLINE(\"D\", 2),","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    EVENT(\"E\", 3);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    private final String shorthand;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    private final int typeId;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    TaskType(String shorthand, int typeId) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        this.shorthand \u003d shorthand;","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        this.typeId \u003d typeId;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    public String getShorthand() {","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        return this.shorthand;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    public int getTypeId() {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        return this.typeId;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    public static TaskType matchType(int typeId) {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        return Arrays.stream(TaskType.values()).filter(x -\u003e x.getTypeId() \u003d\u003d typeId)","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"                .findFirst()","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"                .orElse(null);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":31}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    public Todo(String task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"        super(TaskType.TODO, task);","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    protected Todo() {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"        this(\"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":11}},{"path":"src/main/java/duke/task/serializer/TaskListSerializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task.serializer;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import java.io.OutputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":" * Serializes and Deserializes Database Files into TaskStore object.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":" * Database Files follow a custom binary format.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":" * Does not provide File System operations.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"public class TaskListSerializer {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public static TaskList inflate(InputStream dbStream) throws DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        TaskList store \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        if (dbStream \u003d\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"            return store;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        DataInputStream dbDataStream \u003d new DataInputStream(dbStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        try (dbDataStream) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"            int recordCount \u003d dbDataStream.readInt();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"            for (int i \u003d 0; i \u003c recordCount; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"                int recordLength \u003d dbDataStream.readInt();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"                byte[] recordData \u003d dbStream.readNBytes(recordLength);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"                    store.addTask(TaskSerializer.inflate(recordData));","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"                } catch (DukeIOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"                    System.out.println(\"Verbose: Failed to load Task record\");","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to inflate database: IO Error\");","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        return store;","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"    public static void deflate(TaskList store, OutputStream dbStream) throws DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        try (DataOutputStream dbDataStream \u003d new DataOutputStream(dbStream)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"            dbDataStream.writeInt(store.getTaskCount());","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"            for (int i \u003d 0; i \u003c store.getTaskCount(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"                byte[] flattenedData \u003d TaskSerializer.deflate(store.getTaskByIndex(i));","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"                dbDataStream.writeInt(flattenedData.length);","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"                dbDataStream.write(flattenedData);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to deflate database: IO Error\");","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":57}},{"path":"src/main/java/duke/task/serializer/TaskSerializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task.serializer;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":" * Serializes and Deserializes Task objects into Data Streams.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"public class TaskSerializer {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    static Task inflate(byte[] data) throws DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayInputStream memStream \u003d new ByteArrayInputStream(data);","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        DataInputStream dataStream \u003d new DataInputStream(memStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        try (dataStream) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"            int typeId \u003d dataStream.readShort();","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"            TaskType taskType \u003d TaskType.matchType(typeId);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"            if (taskType \u003d\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                throw new DukeIOException(\"Encountered unknown format in database\");","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"            return Task.inflate(taskType, dataStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to inflate Task\");","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    static byte[] deflate(Task task) throws DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        DataOutputStream dataStream \u003d new DataOutputStream(memStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        try (dataStream) {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"            task.serialize(dataStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"            return memStream.toByteArray();","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to serialize Task\");","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":45}},{"path":"src/main/java/duke/util/IPrintable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.util;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"public interface IPrintable {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    public void print(String input);","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":5}},{"path":"src/main/java/duke/util/ISerializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.util;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"public interface ISerializable {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"    void serialize(DataOutputStream dOut) throws IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":8}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"public class UiTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    public void testGreet() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayOutputStream outStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        System.setOut(new PrintStream(outStream));","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        Ui.getInstance().greet();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        outStream.flush();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        String lines \u003d outStream.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t------------------------------------\\r\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                + \"\\tHi! I\u0027m Megumin\\r\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"                + \"\\tWhat do you need?\\r\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"                + \"\\t------------------------------------\\r\\n\\r\\n\", lines);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    public void testPrintCommand() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayOutputStream outStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        System.setOut(new PrintStream(outStream));","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        Ui.getInstance().printCommand((linePrinter) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"test line\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"            return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        outStream.flush();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        String lines \u003d outStream.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t------------------------------------\\r\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"                + \"\\ttest line\\r\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"                + \"\\t------------------------------------\\r\\n\", lines);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    public void testPrintError() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub printer \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        Ui.getInstance().printError(printer, new DukeInvalidCommandException(\"error 1\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        Ui.getInstance().printError(printer, new DukeIllegalArgumentException(\"error 2\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        Ui.getInstance().printError(printer, new DukeIOException(\"error 3\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"I do not understand you!\", printer.getLines().get(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"There was a problem understanding you:\", printer.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"error 2\", printer.getLines().get(2));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"I had a problem reading / writing my memory!\", printer.getLines().get(3));","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":59}},{"path":"src/test/java/duke/command/BetweenCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"public class BetweenCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Todo(\"Test\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Event(\"Test\", LocalDateTime.parse(\"2022-12-22T12:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T13:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T14:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Event(\"Test\", LocalDateTime.parse(\"2022-12-23T15:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Event(\"Test\", LocalDateTime.parse(\"2022-12-24T16:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        new BetweenCommand(\"22/12/2022 10:00 and 22/12/2022 13:30\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(3, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        new BetweenCommand(\"22/12/2022 10:00 and 22/12/2022 14:30\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(4, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        new BetweenCommand(\"22/12/2022 13:30 and 27/12/2022 14:30\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(4, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        new BetweenCommand(\"23/12/2022 13:30 and 23/12/2022 15:30\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(2, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        new BetweenCommand(\"12/12/2022 13:30 and 13/12/2022 15:30\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(1, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_invalidArgs_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"            new BetweenCommand(\"nothing\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cdate\u003e and \u003cdate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"            new BetweenCommand(\"22/12/2022 10:00 22/12/2022 14:30\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cdate\u003e and \u003cdate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"            new BetweenCommand(\"22/12/2022 10:00 and\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cdate\u003e and \u003cdate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"            new BetweenCommand(\"www and 22/12/2022 14:30\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"sharpstorm"},"content":"            new BetweenCommand(\"22/12/2022 14:30 and asd\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":93}},{"path":"src/test/java/duke/command/CreateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"public class CreateCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        new CreateCommand(\"test fully 1\", TaskType.TODO).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(1, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(list.getTaskByIndex(0) instanceof Todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"test fully 1\", list.getTaskByIndex(0).getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        new CreateCommand(\"test fully 2 /by 23/12/2022 18:00\", TaskType.DEADLINE)","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"                .execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(2, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(list.getTaskByIndex(1) instanceof Deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"test fully 2\", list.getTaskByIndex(1).getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"2022-12-23T18:00\", list.getTaskByIndex(1).getDate()","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"                .map(LocalDateTime::toString).orElse(null));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        new CreateCommand(\"test fully 3 /at 24/12/2022 18:00\", TaskType.EVENT)","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"                .execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(3, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(list.getTaskByIndex(2) instanceof Event);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"test fully 3\", list.getTaskByIndex(2).getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"2022-12-24T18:00\", list.getTaskByIndex(2).getDate()","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"                .map(LocalDateTime::toString).orElse(null));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_emptyTaskName_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"\", TaskType.TODO).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Task name cannot be empty\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\" /by 23/12/2022 18:00\", TaskType.DEADLINE).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Task name cannot be empty\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\" /at 23/12/2022 18:00\", TaskType.EVENT).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Task name cannot be empty\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"    public void testParsingDeadline_invalidFormat_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"23/12/2022 18:00\", TaskType.DEADLINE).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cTask name\u003e /by \u003cDate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"/by 23/12/2022 18:00\", TaskType.DEADLINE).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cTask name\u003e /by \u003cDate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"test /by\", TaskType.DEADLINE).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cTask name\u003e /by \u003cDate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"test /by test\", TaskType.DEADLINE).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"test /by 32/12/2022 18:00\", TaskType.DEADLINE)","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"sharpstorm"},"content":"                    .execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"sharpstorm"},"content":"    public void testParsingEvent_invalidFormat_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"23/12/2022 18:00\", TaskType.EVENT).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cTask name\u003e /at \u003cDate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"/at 23/12/2022 18:00\", TaskType.EVENT).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cTask name\u003e /at \u003cDate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"test /at\", TaskType.EVENT).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Not in the format \u003cTask name\u003e /at \u003cDate\u003e\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"test /at test\", TaskType.EVENT).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"sharpstorm"},"content":"            new CreateCommand(\"test /at 32/12/2022 18:00\", TaskType.EVENT).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":155}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        Task[] taskSource \u003d new Task[] {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"                new Todo(\"Test\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.parse(\"2022-12-22T12:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T13:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T14:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.parse(\"2022-12-23T15:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.parse(\"2022-12-24T16:00\"))","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        for (Task task : taskSource) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        new DeleteCommand(\"1\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"Deleted the task:\", linePrinter.getLines().get(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t \" + taskSource[0].getReadableString(), linePrinter.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        new DeleteCommand(\"2\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"Deleted the task:\", linePrinter.getLines().get(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t \" + taskSource[2].getReadableString(), linePrinter.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        new DeleteCommand(\"4\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"Deleted the task:\", linePrinter.getLines().get(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t \" + taskSource[5].getReadableString(), linePrinter.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_invalidArgs_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Todo(\"Test\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"            new DeleteCommand(\"test\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Task Number must be a number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"            new DeleteCommand(\"0\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"No matching task with given number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"            new DeleteCommand(\"2\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"No matching task with given number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":77}},{"path":"src/test/java/duke/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(new ExitCommand(\"\").execute(linePrinter, list));","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(1, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"Goodbye! Have a Nice Day.\", linePrinter.getLines().get(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":28}},{"path":"src/test/java/duke/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        Task[] taskSource \u003d new Task[] {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"                new Todo(\"Test\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.parse(\"2022-12-22T12:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T13:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        for (Task task : taskSource) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        new ListCommand(\"\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(4, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"1. \" + taskSource[0].getReadableString(), linePrinter.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"2. \" + taskSource[1].getReadableString(), linePrinter.getLines().get(2));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"3. \" + taskSource[2].getReadableString(), linePrinter.getLines().get(3));","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":38}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        Task[] taskSource \u003d new Task[] {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"                new Todo(\"Test\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.parse(\"2022-12-22T12:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T13:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T14:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.parse(\"2022-12-23T15:00\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.parse(\"2022-12-24T16:00\"))","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        for (Task task : taskSource) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(taskSource[0].isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        new MarkCommand(\"1\", true).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(taskSource[0].isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t \" + taskSource[0].getReadableString(), linePrinter.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        new MarkCommand(\"5\", true).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(taskSource[0].isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t \" + taskSource[4].getReadableString(), linePrinter.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        new MarkCommand(\"1\", false).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(taskSource[0].isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"\\t \" + taskSource[0].getReadableString(), linePrinter.getLines().get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_invalidArgs_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Todo(\"Test\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            new MarkCommand(\"test\", true).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Task Number must be a number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"            new MarkCommand(\"0\", true).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"No matching task with given number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"            new MarkCommand(\"2\", true).execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"No matching task with given number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":80}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    public void testFactory_valid_success() throws DukeInvalidCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"mark a\") instanceof MarkCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"unmark a\") instanceof MarkCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"todo a\") instanceof CreateCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"deadline a\") instanceof CreateCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"event a\") instanceof CreateCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"delete a\") instanceof DeleteCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"upcoming a\") instanceof UpcomingCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"between a\") instanceof BetweenCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"schedule a\") instanceof ScheduleCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    public void testFactory_alphabetCases_success() throws DukeInvalidCommandException {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"Bye\") instanceof ExitCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"ByE\") instanceof ExitCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(Parser.parse(\"BYE\") instanceof ExitCommand);","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"    public void testFactory_invalid_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"            Parser.parse(\"notcommand\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeInvalidCommandException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"No such command: notcommand\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":43}},{"path":"src/test/java/duke/command/ScheduleCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Todo(\"Test\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Event(\"Test\", LocalDateTime.parse(\"2022-12-22T12:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T13:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Deadline(\"Test\", LocalDateTime.parse(\"2022-12-22T14:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Event(\"Test\", LocalDateTime.parse(\"2022-12-23T15:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Event(\"Test\", LocalDateTime.parse(\"2022-12-24T16:00\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        new ScheduleCommand(\"22/12/2022\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(4, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        new ScheduleCommand(\"23/12/2022\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(2, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        new ScheduleCommand(\"25/12/2022\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(1, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_invalidArgs_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"            new ScheduleCommand(\"test\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"            new ScheduleCommand(\"32/12/2022\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Date not in the format dd/MM/yyyy HH:mm\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":60}},{"path":"src/test/java/duke/command/UpcomingCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIllegalArgumentException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.PrinterStub;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"public class UpcomingCommandTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_valid_success() throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        Task[] taskSource \u003d new Task[] {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"                new Todo(\"Test\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.now().plusDays(2).minusSeconds(10)),","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test\", LocalDateTime.now().plusDays(3).minusSeconds(10)),","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test\", LocalDateTime.now().plusDays(4).minusSeconds(10)),","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.now().plusDays(7).minusSeconds(10)),","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test\", LocalDateTime.now().plusDays(8).minusSeconds(10))","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        for (Task task : taskSource) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            list.addTask(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        new UpcomingCommand(\"3\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(3, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        new UpcomingCommand(\"4\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(4, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        new UpcomingCommand(\"1\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(1, linePrinter.lineCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    public void testParsing_invalidArgs_exceptionRaised() {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new Todo(\"Test\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        PrinterStub linePrinter \u003d new PrinterStub();","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"            new UpcomingCommand(\"test\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Days must be a positive number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"            new UpcomingCommand(\"-1\").execute(linePrinter, list);","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Days must be a positive number\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":67}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.StreamUtils;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    public void testInitialState_testStrings_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        Deadline t1 \u003d new Deadline(\"Test 1\", LocalDateTime.parse(\"2022-12-22T12:34\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(t1.getDate().isPresent());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"2022-12-22T12:34\", t1.getDate().get().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(String.format(\"[%s][ ] Test 1 (by: 22 Dec 2022 - 12:34 PM)\",","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"                        TaskType.DEADLINE.getShorthand()), t1.getReadableString());","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    public void testSerialize_valid_success() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        byte[] actual \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"            Task t1 \u003d new Deadline(\"Test 2\", LocalDateTime.parse(\"2023-10-21T23:45\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"            t1.serialize(dOut);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(TaskType.DEADLINE.getTypeId());","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"2023-10-21T23:45\");","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        assertArrayEquals(reference, actual);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_valid_success() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"2020-11-13T12:34\");","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        StreamUtils.buildInputStream((dIn) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"            Deadline d1 \u003d new Deadline();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            d1.readSerializedData(dIn);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(d1.getDate().isPresent());","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"2020-11-13T12:34\", d1.getDate().get().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        }, reference);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":55}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.StreamUtils;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"public class EventTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    public void testInitialState_testStrings_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        Event t1 \u003d new Event(\"Test 1\", LocalDateTime.parse(\"2022-12-22T12:34\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(t1.getDate().isPresent());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"2022-12-22T12:34\", t1.getDate().get().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(String.format(\"[%s][ ] Test 1 (at: 22 Dec 2022 - 12:34 PM)\",","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"                        TaskType.EVENT.getShorthand()), t1.getReadableString());","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    public void testSerialize_valid_success() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        byte[] actual \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"            Task t1 \u003d new Event(\"Test 2\", LocalDateTime.parse(\"2023-10-21T23:45\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"            t1.serialize(dOut);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(TaskType.EVENT.getTypeId());","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"2023-10-21T23:45\");","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        assertArrayEquals(reference, actual);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_valid_success() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"2020-11-13T12:34\");","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        StreamUtils.buildInputStream((dIn) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"            Event d1 \u003d new Event();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            d1.readSerializedData(dIn);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(d1.getDate().isPresent());","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"2020-11-13T12:34\", d1.getDate().get().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        }, reference);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":55}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    private static class TaskStub extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        private TaskStub(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"            super(TaskType.TODO, description);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    public void testAddRemoveGet_valid_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        Task t1 \u003d new TaskStub(\"Task 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        Task t2 \u003d new TaskStub(\"Task 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(t1);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(1, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(t2);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(2, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(t1, list.getTaskByIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(t2, list.getTaskByIndex(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(t1, list.deleteTask(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(1, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(t2, list.getTaskByIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"    public void testRemoveGet_outOfBounds_null() {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        assertNull(list.getTaskByIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        list.addTask(new TaskStub(\"Task 1\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        assertNull(list.getTaskByIndex(-1));","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        assertNotNull(list.getTaskByIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        assertNull(list.getTaskByIndex(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"        assertNull(list.deleteTask(-1));","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        assertNull(list.deleteTask(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        assertNotNull(list.deleteTask(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    public void testMark_valid_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        Task t1 \u003d new TaskStub(\"Task 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        list.markTask(t1, true);","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"        list.markTask(t1, true);","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"        list.markTask(t1, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"        list.markTask(t1, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"    public void testForEach() {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"        final HashMap\u003cInteger, Task\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"        Task[] sourceTasks \u003d new Task[] {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"                new TaskStub(\"Task\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"                new TaskStub(\"Task\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"                new TaskStub(\"Task\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"                new TaskStub(\"Task\")","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"            list.addTask(sourceTasks[i]);","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"        list.forEach(tasks::put);","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(4, tasks.size());","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(tasks.containsKey(0) \u0026\u0026 tasks.containsKey(1) \u0026\u0026 tasks.containsKey(2)","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"sharpstorm"},"content":"                \u0026\u0026 tasks.containsKey(3));","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(sourceTasks[0], tasks.get(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(sourceTasks[1], tasks.get(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(sourceTasks[2], tasks.get(2));","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(sourceTasks[3], tasks.get(3));","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":94}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.StreamUtils;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    private static class TaskStub extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        private TaskStub(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"            super(TaskType.TODO, description);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        private static String getShorthand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"            return TaskType.TODO.getShorthand();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        private static int getTypeId() {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"            return TaskType.TODO.getTypeId();","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"    public void testInitialState_testStrings_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        Task t1 \u003d new TaskStub(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"Test Description 1\", t1.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\" \", t1.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(t1.getDate().isEmpty());","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(String.format(\"[%s][ ] %s\", TaskStub.getShorthand(), \"Test Description 1\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"                t1.getReadableString());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    public void testMarking_markUnmark_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        Task t1 \u003d new TaskStub(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\" \", t1.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(String.format(\"[%s][ ] %s\", TaskStub.getShorthand(), \"Test Description 1\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"                t1.getReadableString());","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        t1.setDone(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\"X\", t1.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(String.format(\"[%s][X] %s\", TaskStub.getShorthand(), \"Test Description 1\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"                t1.getReadableString());","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        t1.setDone(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        assertFalse(t1.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(\" \", t1.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(String.format(\"[%s][ ] %s\", TaskStub.getShorthand(), \"Test Description 1\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"                t1.getReadableString());","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"    public void testSerialize_valid_success() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"        byte[] actual \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"            Task t1 \u003d new TaskStub(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"            t1.serialize(dOut);","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(TaskStub.getTypeId());","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        assertArrayEquals(reference, actual);","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"        actual \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"            Task t1 \u003d new TaskStub(\"Test 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"            t1.setDone(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"            t1.serialize(dOut);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"        reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(TaskStub.getTypeId());","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"sharpstorm"},"content":"        assertArrayEquals(reference, actual);","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_valid_success() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"2022-12-12T13:00\");","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference2 \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"sharpstorm"},"content":"        // Test Factory","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"sharpstorm"},"content":"        StreamUtils.buildInputStream((dIn) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"sharpstorm"},"content":"            Task task \u003d Task.inflate(TaskType.TODO, dIn);","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(task instanceof Todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(task.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Test Description 1\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"sharpstorm"},"content":"        }, reference);","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"sharpstorm"},"content":"        StreamUtils.buildInputStream((dIn) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"sharpstorm"},"content":"            Task task \u003d Task.inflate(TaskType.DEADLINE, dIn);","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(task instanceof Deadline);","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(task.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Test Description 1\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"sharpstorm"},"content":"        }, reference);","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"sharpstorm"},"content":"        StreamUtils.buildInputStream((dIn) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"sharpstorm"},"content":"            Task task \u003d Task.inflate(TaskType.EVENT, dIn);","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(task instanceof Event);","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"sharpstorm"},"content":"            assertTrue(task.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Test Description 1\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"sharpstorm"},"content":"        }, reference);","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"sharpstorm"},"content":"        StreamUtils.buildInputStream((dIn) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"sharpstorm"},"content":"            Task task \u003d Task.inflate(TaskType.TODO, dIn);","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"sharpstorm"},"content":"            assertNotNull(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"sharpstorm"},"content":"            assertFalse(task.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Test 2\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"sharpstorm"},"content":"        }, reference2);","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_invalid_Exception() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"sharpstorm"},"content":"            dOut.write(256);","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"sharpstorm"},"content":"            dOut.write(222);","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Garbage data\");","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"sharpstorm"},"content":"            StreamUtils.buildInputStream((dIn) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"sharpstorm"},"content":"                Task task \u003d Task.inflate(TaskType.TODO, dIn);","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"sharpstorm"},"content":"                assertTrue(task instanceof Todo);","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"sharpstorm"},"content":"                assertTrue(task.isDone());","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"sharpstorm"},"content":"                assertEquals(\"Test Description 1\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"sharpstorm"},"content":"            }, reference);","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":153}},{"path":"src/test/java/duke/task/TaskTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"public class TaskTypeTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    public void testMatching_oneToThree_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(TaskType.TODO, TaskType.matchType(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(TaskType.DEADLINE, TaskType.matchType(2));","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(TaskType.EVENT, TaskType.matchType(3));","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    public void testMatching_four_null() {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        assertNull(TaskType.matchType(4));","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":21}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.StreamUtils;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    public void testInitialState_testStrings_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        Todo t1 \u003d new Todo(\"Test 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        assertTrue(t1.getDate().isEmpty());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(String.format(\"[%s][ ] %s\", TaskType.TODO.getShorthand(), \"Test 1\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"                t1.getReadableString());","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    public void testSerialize_valid_success() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        byte[] actual \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"            Todo t1 \u003d new Todo(\"Test 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"            t1.serialize(dOut);","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(TaskType.TODO.getTypeId());","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test 2\");","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        assertArrayEquals(reference, actual);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":37}},{"path":"src/test/java/duke/task/serializer/TaskListSerializerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task.serializer;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.StreamUtils;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"public class TaskListSerializerTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_valid_success() throws IOException, DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        byte[] taskData \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(1);","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        byte[] data \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeInt(4);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"            for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"                dOut.writeInt(taskData.length);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"                dOut.write(taskData);","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d TaskListSerializer.inflate(new ByteArrayInputStream(data));","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(4, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_invalidData_recordSkipped() throws IOException, DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        byte[] taskData \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(1);","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"        byte[] invalidTaskData \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(4);","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"        byte[] data \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeInt(5);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeInt(invalidTaskData.length);","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"            dOut.write(invalidTaskData);","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"            for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"                dOut.writeInt(taskData.length);","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"                dOut.write(taskData);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeInt(invalidTaskData.length);","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"            dOut.write(invalidTaskData);","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        TaskList list \u003d TaskListSerializer.inflate(new ByteArrayInputStream(data));","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(3, list.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"    public void testDeflate_valid_success() throws DukeIOException, IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"        taskList.addTask(new Todo(\"Test 1\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"        taskList.addTask(new Deadline(\"Test 2\", LocalDateTime.parse(\"2022-12-12T12:34\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"        taskList.addTask(new Event(\"Test 3\", LocalDateTime.parse(\"2022-12-12T12:34\")));","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"        TaskListSerializer.deflate(taskList, memStream);","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"        byte[] deflated \u003d memStream.toByteArray();","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"        memStream.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayInputStream memInStream \u003d new ByteArrayInputStream(deflated);","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"        assertEquals(3, TaskListSerializer.inflate(memInStream).getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":85}},{"path":"src/test/java/duke/task/serializer/TaskSerializerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.task.serializer;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.exception.DukeIOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import duke.testutil.StreamUtils;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"public class TaskSerializerTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_valid_success() throws IOException, DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        for (int i \u003d 1; i \u003c 4; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"            final int innerI \u003d i;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"            byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                dOut.writeShort(innerI);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"                dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"                dOut.writeUTF(\"2022-12-12T13:00\");","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"            assertNotNull(TaskSerializer.inflate(reference));","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    public void testInflate_invalidType_dukeExceptionRaised() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        byte[] reference \u003d StreamUtils.buildOutputStream((dOut) -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeShort(4);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"Test Description 1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeBoolean(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"            dOut.writeUTF(\"2022-12-12T13:00\");","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"            TaskSerializer.inflate(reference);","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIOException ex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"            assertEquals(\"Encountered unknown format in database\", ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"    public void testDeflate_valid_success() throws DukeIOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        Task[] tasks \u003d new Task[] {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"                new Todo(\"Test 1\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"                new Deadline(\"Test 2\", LocalDateTime.parse(\"2022-12-12T12:34\")),","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"                new Event(\"Test 3\", LocalDateTime.parse(\"2022-12-12T12:34\"))","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"            assertNotNull(TaskSerializer.deflate(tasks[i]));","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":61}},{"path":"src/test/java/duke/testutil/PrinterStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.testutil;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import duke.util.IPrintable;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"public class PrinterStub implements IPrintable {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    private final ArrayList\u003cString\u003e lines;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    public PrinterStub() {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"        this.lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    public void print(String input) {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        lines.add(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    public ArrayList\u003cString\u003e getLines() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        return this.lines;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    public int lineCount() {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        return this.lines.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    public PrinterStub clear() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        this.lines.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":31}},{"path":"src/test/java/duke/testutil/StreamUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.testutil;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"public class StreamUtils {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    public static byte[] buildOutputStream(ThrowableConsumer\u003cDataOutputStream, IOException\u003e writer)","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"            throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        DataOutputStream dataStream \u003d new DataOutputStream(memStream);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        writer.accept(dataStream);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        dataStream.flush();","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"        byte[] ret \u003d memStream.toByteArray();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        dataStream.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        return ret;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    public static void buildInputStream(ThrowableConsumer\u003cDataInputStream, IOException\u003e reader,","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"                                                   byte[] data) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayInputStream memStream \u003d new ByteArrayInputStream(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        DataInputStream dataStream \u003d new DataInputStream(memStream);","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        reader.accept(dataStream);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        dataStream.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":30}},{"path":"src/test/java/duke/testutil/ThrowableConsumer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"package duke.testutil;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"@FunctionalInterface","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"public interface ThrowableConsumer\u003cT, E extends Exception\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"    void accept(T t) throws E;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"sharpstorm":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"todo This is a todo task","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"deadline This is a deadline task /by 12/11/2022 12:22","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"event This is an event task /at 13/12/2022 15:00","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"delete 2","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"deadline","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"deadline /by","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"deadline text /by","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"deadline /by text","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"event","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"event /at","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"event text /at","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"event /at text","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"mark","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"mark notanumber","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"mark 4","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"mark 0","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"delete 0","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"delete 3","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"if exist .\\data (","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    del /s /f /q .\\data\\*.*","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    rmdir .\\data","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":")","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"pause","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":8,"-":19}}]
