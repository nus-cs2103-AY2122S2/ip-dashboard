[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private LocalDateTime by;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    public Deadline(String task, LocalDateTime by) {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        super(TaskType.DEADLINE, task);","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    protected Deadline() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        this(\"\", null);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        return this.by;","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"    public Optional\u003cLocalDateTime\u003e getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        return Optional.of(this.by);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    public String getReadableString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        return String.format(\"%s (by: %s)\", super.getReadableString(),","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027-\u0027 hh:mm a\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"    public void serialize(DataOutputStream dOut) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        super.serialize(dOut);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeUTF(by.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    public Task readSerializedData(DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        super.readSerializedData(dIn);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        this.by \u003d LocalDateTime.parse(dIn.readUTF());","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":47}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private static final String SEPARATOR \u003d \"\\t------------------------------------\";","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    private static final String BOT_NAME \u003d \"Megumin\";","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    private static final String ERROR_INVALID_COMMAND \u003d \"I do not understand you!\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    private static final String ERROR_INVALID_SYNTAX \u003d \"There was a problem understanding you:\";","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_CREATE_TODO \u003d \"todo\";","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_CREATE_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_CREATE_EVENT \u003d \"event\";","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_UPCOMING \u003d \"upcoming\";","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_BETWEEN \u003d \"between\";","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    private static final String COMMAND_SCHEDULE \u003d \"schedule\";","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    private static TaskStore taskStore;","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        init();","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        greet();","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        while (true) {","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"            String command \u003d readInput(sc);","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"            if (command.equalsIgnoreCase(COMMAND_EXIT)) {","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"                break;","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"            printBlock((linePrinter) -\u003e {","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"                try {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"                    parseCommand(command, linePrinter);","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"                } catch (DukeInvalidCommandException ex) {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"                } catch (DukeIllegalArgumentException ex) {","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(ERROR_INVALID_SYNTAX);","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(ex.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            System.out.println();","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"        printBlock((linePrinter) -\u003e {","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"Goodbye! Have a Nice Day.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"    private static void init() {","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"            taskStore \u003d TaskStoreSerializer.inflate();","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            taskStore.registerListener(store -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"                    TaskStoreSerializer.deflate(store);","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"                } catch (DukeIOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"                    System.out.println(\"Warning: An error occurred while saving Task list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"        } catch (DukeIOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"            System.out.println(\"Cannot write to working directory.\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"                    + \"Please check that you have write to the directory permissions.\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"                    + \"Will not save any changes!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"    private static void greet() {","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        printBlock((linePrinter) -\u003e {","lastModifiedDate":"2022-01-17"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"Hi! I\u0027m \" + BOT_NAME);","lastModifiedDate":"2022-01-17"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"What do you need?\");","lastModifiedDate":"2022-01-17"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"        System.out.println();","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"    private static String readInput(Scanner sc) {","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"        System.out.println(\"Enter a Command or New Task:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":87,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":88,"author":{"gitId":"sharpstorm"},"content":"    private static void parseCommand(String command, IPrintable linePrinter)","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"sharpstorm"},"content":"            throws DukeInvalidCommandException,DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"sharpstorm"},"content":"        final String[] commandParts \u003d command.split(\" \");","lastModifiedDate":"2022-01-17"},{"lineNumber":91,"author":{"gitId":"sharpstorm"},"content":"        final String commandLowerCase \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2022-01-17"},{"lineNumber":92,"author":{"gitId":"sharpstorm"},"content":"        final String args \u003d command.substring(commandLowerCase.length()).trim();","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"sharpstorm"},"content":"        switch (commandLowerCase) {","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"This is your task list:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"sharpstorm"},"content":"            taskStore.forEach((index, task) -\u003e {","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"sharpstorm"},"content":"                // Note that index passed into this consumer is 0-based. Increment by 1 for readability","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"sharpstorm"},"content":"                linePrinter.print(String.format(\"%d. %s\", index + 1, task.getReadableString()));","lastModifiedDate":"2022-01-17"},{"lineNumber":100,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-17"},{"lineNumber":101,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"sharpstorm"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"sharpstorm"},"content":"            parseMarkCommand(linePrinter, args, commandLowerCase.equals(COMMAND_MARK));","lastModifiedDate":"2022-01-17"},{"lineNumber":106,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_CREATE_TODO:","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"sharpstorm"},"content":"            parseCreateTodo(linePrinter, args);","lastModifiedDate":"2022-01-17"},{"lineNumber":109,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_CREATE_DEADLINE:","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"sharpstorm"},"content":"            parseCreateDeadline(linePrinter, args);","lastModifiedDate":"2022-01-17"},{"lineNumber":112,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_CREATE_EVENT:","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"sharpstorm"},"content":"            parseCreateEvent(linePrinter, args);","lastModifiedDate":"2022-01-17"},{"lineNumber":115,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"sharpstorm"},"content":"            parseDeleteEvent(linePrinter, args);","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_UPCOMING:","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"sharpstorm"},"content":"            parseUpcomingEvents(linePrinter, args);","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_SCHEDULE:","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"sharpstorm"},"content":"            parseSchedule(linePrinter, args);","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"sharpstorm"},"content":"        case COMMAND_BETWEEN:","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"sharpstorm"},"content":"            parseBetween(linePrinter, args);","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"sharpstorm"},"content":"        default:","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeInvalidCommandException(String.format(\"No such command: %s\", commandLowerCase));","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":131,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":132,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":133,"author":{"gitId":"sharpstorm"},"content":"    private static int parseTaskNumber(String args) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"sharpstorm"},"content":"        int taskIndex;","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":136,"author":{"gitId":"sharpstorm"},"content":"            taskIndex \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-17"},{"lineNumber":137,"author":{"gitId":"sharpstorm"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-01-17"},{"lineNumber":138,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Task Number must be a number\");","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":140,"author":{"gitId":"sharpstorm"},"content":"        // Note that task storage uses 0-based index","lastModifiedDate":"2022-01-17"},{"lineNumber":141,"author":{"gitId":"sharpstorm"},"content":"        return taskIndex - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"sharpstorm"},"content":"    private static Task parseSelectTask(String args) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"sharpstorm"},"content":"        int taskIndex \u003d parseTaskNumber(args);","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"sharpstorm"},"content":"        Task task \u003d taskStore.getTaskByIndex(taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":147,"author":{"gitId":"sharpstorm"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-17"},{"lineNumber":148,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"No matching task with given number\");","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"sharpstorm"},"content":"        return task;","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"sharpstorm"},"content":"    private static void parseMarkCommand(IPrintable linePrinter, String args, boolean newState)","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"sharpstorm"},"content":"        Task task \u003d parseSelectTask(args);","lastModifiedDate":"2022-01-18"},{"lineNumber":156,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":157,"author":{"gitId":"sharpstorm"},"content":"        if (task.isDone() \u003d\u003d newState) {","lastModifiedDate":"2022-01-17"},{"lineNumber":158,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(String.format(\"Task is already %s:\", newState ? \"done\" : \"not done\"));","lastModifiedDate":"2022-01-17"},{"lineNumber":159,"author":{"gitId":"sharpstorm"},"content":"        } else if (newState) {","lastModifiedDate":"2022-01-17"},{"lineNumber":160,"author":{"gitId":"sharpstorm"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-17"},{"lineNumber":161,"author":{"gitId":"sharpstorm"},"content":"            taskStore.notifyListeners();","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"Great Job Finishing the task:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":163,"author":{"gitId":"sharpstorm"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":164,"author":{"gitId":"sharpstorm"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2022-01-17"},{"lineNumber":165,"author":{"gitId":"sharpstorm"},"content":"            taskStore.notifyListeners();","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"sharpstorm"},"content":"            linePrinter.print(\"Marking the task as not done yet:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":167,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":168,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t %s\", task.getReadableString()));","lastModifiedDate":"2022-01-17"},{"lineNumber":169,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":170,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":171,"author":{"gitId":"sharpstorm"},"content":"    private static void parseDeleteEvent(IPrintable linePrinter, String args)","lastModifiedDate":"2022-01-18"},{"lineNumber":172,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":173,"author":{"gitId":"sharpstorm"},"content":"        int taskIndex \u003d parseTaskNumber(args);","lastModifiedDate":"2022-01-18"},{"lineNumber":174,"author":{"gitId":"sharpstorm"},"content":"        Task deleted \u003d taskStore.deleteTask(taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":175,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":176,"author":{"gitId":"sharpstorm"},"content":"        if (deleted \u003d\u003d null) {","lastModifiedDate":"2022-01-18"},{"lineNumber":177,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"No matching task with given number\");","lastModifiedDate":"2022-01-18"},{"lineNumber":178,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":179,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(\"Deleted the task:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t %s\", deleted.getReadableString()));","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":183,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":184,"author":{"gitId":"sharpstorm"},"content":"    private static void parseCreateTodo(IPrintable linePrinter, String args)","lastModifiedDate":"2022-01-18"},{"lineNumber":185,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":186,"author":{"gitId":"sharpstorm"},"content":"        // Syntax Check","lastModifiedDate":"2022-01-17"},{"lineNumber":187,"author":{"gitId":"sharpstorm"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":188,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Task name cannot be empty\");","lastModifiedDate":"2022-01-18"},{"lineNumber":189,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":190,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":191,"author":{"gitId":"sharpstorm"},"content":"        final Task task \u003d taskStore.addTask(new Todo(args));","lastModifiedDate":"2022-01-17"},{"lineNumber":192,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(\"Added the following Todo Task:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":193,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t%s\", task.getReadableString()));","lastModifiedDate":"2022-01-17"},{"lineNumber":194,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Now you have %d task(s) in the list\", taskStore.getTaskCount()));","lastModifiedDate":"2022-01-17"},{"lineNumber":195,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":196,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":197,"author":{"gitId":"sharpstorm"},"content":"    private static void parseCreateDeadline(IPrintable linePrinter, String args)","lastModifiedDate":"2022-01-18"},{"lineNumber":198,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":199,"author":{"gitId":"sharpstorm"},"content":"        // Syntax Check","lastModifiedDate":"2022-01-17"},{"lineNumber":200,"author":{"gitId":"sharpstorm"},"content":"        final String[] argParts \u003d args.split(\" /by \");","lastModifiedDate":"2022-01-17"},{"lineNumber":201,"author":{"gitId":"sharpstorm"},"content":"        if (argParts.length \u003c 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":202,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Not in the format \u003cTask name\u003e /by \u003cDate\u003e\");","lastModifiedDate":"2022-01-18"},{"lineNumber":203,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":204,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":205,"author":{"gitId":"sharpstorm"},"content":"        final String taskDescription \u003d argParts[0];","lastModifiedDate":"2022-01-17"},{"lineNumber":206,"author":{"gitId":"sharpstorm"},"content":"        final LocalDateTime taskBy \u003d parseDateTime(argParts[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":207,"author":{"gitId":"sharpstorm"},"content":"        final Task task \u003d taskStore.addTask(new Deadline(taskDescription, taskBy));","lastModifiedDate":"2022-01-17"},{"lineNumber":208,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(\"Added the following Deadline Task:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":209,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t%s\", task.getReadableString()));","lastModifiedDate":"2022-01-17"},{"lineNumber":210,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Now you have %d task(s) in the list\", taskStore.getTaskCount()));","lastModifiedDate":"2022-01-17"},{"lineNumber":211,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":212,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":213,"author":{"gitId":"sharpstorm"},"content":"    private static void parseCreateEvent(IPrintable linePrinter, String args)","lastModifiedDate":"2022-01-18"},{"lineNumber":214,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":215,"author":{"gitId":"sharpstorm"},"content":"        // Syntax Check","lastModifiedDate":"2022-01-17"},{"lineNumber":216,"author":{"gitId":"sharpstorm"},"content":"        final String[] argParts \u003d args.split(\" /at \");","lastModifiedDate":"2022-01-17"},{"lineNumber":217,"author":{"gitId":"sharpstorm"},"content":"        if (argParts.length \u003c 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":218,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Not in the format \u003cTask name\u003e /at \u003cDate\u003e\");","lastModifiedDate":"2022-01-18"},{"lineNumber":219,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":220,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":221,"author":{"gitId":"sharpstorm"},"content":"        final String taskDescription \u003d argParts[0];","lastModifiedDate":"2022-01-17"},{"lineNumber":222,"author":{"gitId":"sharpstorm"},"content":"        final LocalDateTime taskAt \u003d parseDateTime(argParts[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":223,"author":{"gitId":"sharpstorm"},"content":"        final Task task \u003d taskStore.addTask(new Event(taskDescription, taskAt));","lastModifiedDate":"2022-01-17"},{"lineNumber":224,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(\"Added the following Event Task:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":225,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"\\t%s\", task.getReadableString()));","lastModifiedDate":"2022-01-17"},{"lineNumber":226,"author":{"gitId":"sharpstorm"},"content":"        linePrinter.print(String.format(\"Now you have %d task(s) in the list\", taskStore.getTaskCount()));","lastModifiedDate":"2022-01-17"},{"lineNumber":227,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":228,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":229,"author":{"gitId":"sharpstorm"},"content":"    private static void parseUpcomingEvents(IPrintable linePrinter, String args)","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"sharpstorm"},"content":"        int days \u003d -1;","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"sharpstorm"},"content":"            days \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"sharpstorm"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":235,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Days must be a positive number\");","lastModifiedDate":"2022-01-23"},{"lineNumber":236,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":237,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":238,"author":{"gitId":"sharpstorm"},"content":"        if (days \u003c 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":239,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Days must be a positive number\");","lastModifiedDate":"2022-01-23"},{"lineNumber":240,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":241,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":242,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime endTime \u003d LocalDateTime.now().plus(days, ChronoUnit.DAYS);","lastModifiedDate":"2022-01-23"},{"lineNumber":243,"author":{"gitId":"sharpstorm"},"content":"        taskStore.forEach((idx, task) -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":244,"author":{"gitId":"sharpstorm"},"content":"            task.getDate().ifPresent(date -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":245,"author":{"gitId":"sharpstorm"},"content":"                if (date.isBefore(endTime)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":246,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(task.getReadableString());","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-23"},{"lineNumber":249,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-23"},{"lineNumber":250,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":251,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":252,"author":{"gitId":"sharpstorm"},"content":"    private static void parseSchedule(IPrintable linePrinter, String args)","lastModifiedDate":"2022-01-23"},{"lineNumber":253,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":254,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime dayStart \u003d parseDate(args);","lastModifiedDate":"2022-01-23"},{"lineNumber":255,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime dayEnd \u003d dayStart.plus(1, ChronoUnit.DAYS);","lastModifiedDate":"2022-01-23"},{"lineNumber":256,"author":{"gitId":"sharpstorm"},"content":"        taskStore.forEach((idx, task) -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":257,"author":{"gitId":"sharpstorm"},"content":"            task.getDate().ifPresent(date -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":258,"author":{"gitId":"sharpstorm"},"content":"                if (date.isBefore(dayEnd) \u0026\u0026 date.isAfter(dayStart)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":259,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(task.getReadableString());","lastModifiedDate":"2022-01-23"},{"lineNumber":260,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":261,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-23"},{"lineNumber":262,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-23"},{"lineNumber":263,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":264,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":265,"author":{"gitId":"sharpstorm"},"content":"    private static void parseBetween(IPrintable linePrinter, String args)","lastModifiedDate":"2022-01-23"},{"lineNumber":266,"author":{"gitId":"sharpstorm"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":267,"author":{"gitId":"sharpstorm"},"content":"        final String[] argParts \u003d args.split(\" and \");","lastModifiedDate":"2022-01-23"},{"lineNumber":268,"author":{"gitId":"sharpstorm"},"content":"        if (argParts.length \u003c 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":269,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Not in the format \u003cdate\u003e and \u003cdate\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":270,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":271,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime start \u003d parseDateTime(argParts[0]);","lastModifiedDate":"2022-01-23"},{"lineNumber":272,"author":{"gitId":"sharpstorm"},"content":"        LocalDateTime end \u003d parseDateTime(argParts[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":273,"author":{"gitId":"sharpstorm"},"content":"        taskStore.forEach((idx, task) -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":274,"author":{"gitId":"sharpstorm"},"content":"            task.getDate().ifPresent(date -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":275,"author":{"gitId":"sharpstorm"},"content":"                if (date.isBefore(end) \u0026\u0026 date.isAfter(start)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":276,"author":{"gitId":"sharpstorm"},"content":"                    linePrinter.print(task.getReadableString());","lastModifiedDate":"2022-01-23"},{"lineNumber":277,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":278,"author":{"gitId":"sharpstorm"},"content":"            });","lastModifiedDate":"2022-01-23"},{"lineNumber":279,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-23"},{"lineNumber":280,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":281,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":282,"author":{"gitId":"sharpstorm"},"content":"    private static LocalDateTime parseDateTime(String dateString) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":283,"author":{"gitId":"sharpstorm"},"content":"        return parseDateTime(dateString, \"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":284,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":285,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":286,"author":{"gitId":"sharpstorm"},"content":"    private static LocalDateTime parseDate(String dateString) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":287,"author":{"gitId":"sharpstorm"},"content":"        return parseDateTime(dateString + \" 00:00\", \"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":288,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":289,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":290,"author":{"gitId":"sharpstorm"},"content":"    private static LocalDateTime parseDateTime(String dateString, String pattern) throws DukeIllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":291,"author":{"gitId":"sharpstorm"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2022-01-23"},{"lineNumber":292,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":293,"author":{"gitId":"sharpstorm"},"content":"            return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":294,"author":{"gitId":"sharpstorm"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":295,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIllegalArgumentException(\"Date not in the format \" + pattern);","lastModifiedDate":"2022-01-23"},{"lineNumber":296,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":297,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":298,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":299,"author":{"gitId":"sharpstorm"},"content":"    private static void printBlock(Consumer\u003cIPrintable\u003e action) {","lastModifiedDate":"2022-01-17"},{"lineNumber":300,"author":{"gitId":"sharpstorm"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-17"},{"lineNumber":301,"author":{"gitId":"sharpstorm"},"content":"        action.accept((line) -\u003e {","lastModifiedDate":"2022-01-17"},{"lineNumber":302,"author":{"gitId":"sharpstorm"},"content":"            System.out.println(\"\\t\" + line);","lastModifiedDate":"2022-01-17"},{"lineNumber":303,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-17"},{"lineNumber":304,"author":{"gitId":"sharpstorm"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2022-01-17"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sharpstorm":302,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"sharpstorm":5}},{"path":"src/main/java/DukeIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"public class DukeIOException extends DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"    public DukeIOException(String message) {","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":5}},{"path":"src/main/java/DukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"public class DukeIllegalArgumentException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"    public DukeIllegalArgumentException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"sharpstorm":5}},{"path":"src/main/java/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"sharpstorm":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private LocalDateTime at;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    public Event(String task, LocalDateTime at) {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        super(TaskType.EVENT, task);","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    protected Event() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        this(\"\", null);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        return this.at;","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    public Optional\u003cLocalDateTime\u003e getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        return Optional.of(this.at);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"    public String getReadableString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"        return String.format(\"%s (at: %s)\", super.getReadableString(),","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027-\u0027 hh:mm a\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"    public void serialize(DataOutputStream dOut) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"        super.serialize(dOut);","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeUTF(this.at.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    public Task readSerializedData(DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        super.readSerializedData(dIn);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        this.at \u003d LocalDateTime.parse(dIn.readUTF());","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":46}},{"path":"src/main/java/IPrintable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"public interface IPrintable {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"    public void print(String input);","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":3}},{"path":"src/main/java/ISerializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"public interface ISerializable {","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"    void serialize(DataOutputStream dOut) throws IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataInputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"import java.io.DataOutputStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"import java.util.Optional;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"public abstract class Task implements ISerializable {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    private final TaskType type;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        return this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    protected void markAsDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"    protected void unmarkAsDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    public Optional\u003cLocalDateTime\u003e getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"        return Optional.empty();","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"    public String getReadableString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"        return String.format(\"[%s][%s] %s\", this.type.getShorthand(), this.getStatusIcon(),","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"                this.description);","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    public void serialize(DataOutputStream dOut) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeShort(this.type.getTypeId());","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeUTF(this.description);","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        dOut.writeBoolean(this.isDone);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    protected Task readSerializedData(DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        this.description \u003d dIn.readUTF();","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"        this.isDone \u003d dIn.readBoolean();","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        return this;","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"    public static Task inflate(TaskType type, DataInputStream dIn) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        Task task;","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"        switch (type) {","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"        case TODO:","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"            task \u003d new Todo();","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"        case EVENT:","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"            task \u003d new Event();","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"            task \u003d new Deadline();","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"        return task.readSerializedData(dIn);","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":77}},{"path":"src/main/java/TaskSerializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.io.*;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":" * Serializes and Deserializes Task objects into Data Streams.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"public class TaskSerializer {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    public static Task inflate(byte[] data) throws DukeIOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayInputStream memStream \u003d new ByteArrayInputStream(data);","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"        DataInputStream dataStream \u003d new DataInputStream(memStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        try (dataStream) {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"            int typeId \u003d dataStream.readShort();","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"            TaskType taskType \u003d TaskType.matchType(typeId);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"            if (taskType \u003d\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"                throw new DukeIOException(\"Encountered unknown format in database\");","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"            return Task.inflate(taskType, dataStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to inflate Task\");","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    public static byte[] deflate(Task task) throws DukeIOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"        DataOutputStream dataStream \u003d new DataOutputStream(memStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"        try (dataStream) {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"            task.serialize(dataStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            return memStream.toByteArray();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to serialize Task\");","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":35}},{"path":"src/main/java/TaskStore.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"public class TaskStore {","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"    private ArrayList\u003cConsumer\u003cTaskStore\u003e\u003e changeListeners;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    public TaskStore() {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"        this.changeListeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        this.notifyListeners();","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        return task;","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"    public void forEach(BiConsumer\u003cInteger, ? super Task\u003e consumer) {","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"            consumer.accept(i, this.tasks.get(i));","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        if (index \u003e\u003d this.tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        if (index \u003e\u003d this.tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"        Task deleted \u003d this.tasks.remove(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"        this.notifyListeners();","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"        return deleted;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"    public void registerListener(Consumer\u003cTaskStore\u003e listener) {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        changeListeners.add(listener);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    public void removeListener(Consumer\u003cTaskStore\u003e listener) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        changeListeners.remove(listener);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"    public void notifyListeners() {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"        this.changeListeners.forEach(handler -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"            handler.accept(this);","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"        });","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":63}},{"path":"src/main/java/TaskStoreSerializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.io.*;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":" * Serializes and Deserializes Database Files into TaskStore object.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":" * Database Files follow a custom binary format.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"public class TaskStoreSerializer {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    private static final String DATA_FOLDER_PATH \u003d \"data/\";","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"    private static final String DB_FILENAME \u003d \"store.db\";","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    public static TaskStore inflate() throws DukeIOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"        FileInputStream dbStream \u003d openDatabaseRead();","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        TaskStore store \u003d new TaskStore();","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"        if (dbStream \u003d\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"            return store;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"        DataInputStream dbDataStream \u003d new DataInputStream(dbStream);","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"        try (dbDataStream) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"            int recordCount \u003d dbDataStream.readInt();","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"            for (int i \u003d 0; i \u003c recordCount; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"                int recordLength \u003d dbDataStream.readInt();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                byte[] recordData \u003d dbStream.readNBytes(recordLength);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"                    store.addTask(TaskSerializer.inflate(recordData));","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"                } catch (DukeIOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"                    System.out.println(\"Verbose: Failed to load Task record\");","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to inflate database: IO Error\");","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"sharpstorm"},"content":"        return store;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"sharpstorm"},"content":"    public static void deflate(TaskStore store) throws DukeIOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"sharpstorm"},"content":"        FileOutputStream dbStream \u003d openDatabaseWrite();","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"sharpstorm"},"content":"        try (DataOutputStream dbDataStream \u003d new DataOutputStream(dbStream)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"sharpstorm"},"content":"            dbDataStream.writeInt(store.getTaskCount());","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"sharpstorm"},"content":"            for (int i \u003d 0; i \u003c store.getTaskCount(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"sharpstorm"},"content":"                byte[] flattenedData \u003d TaskSerializer.deflate(store.getTaskByIndex(i));","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"sharpstorm"},"content":"                dbDataStream.writeInt(flattenedData.length);","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"sharpstorm"},"content":"                dbDataStream.write(flattenedData);","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Failed to deflate database: IO Error\");","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"sharpstorm"},"content":"    private static void initDataStore() throws DukeIOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"sharpstorm"},"content":"        File dataFolder \u003d new File(DATA_FOLDER_PATH);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"sharpstorm"},"content":"        if (dataFolder.exists() \u0026\u0026 !dataFolder.isDirectory()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Data Store is not a directory at: \"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"sharpstorm"},"content":"                    + dataFolder.getAbsolutePath());","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"sharpstorm"},"content":"        } else if (!dataFolder.exists()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"sharpstorm"},"content":"            if (!dataFolder.mkdir()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"sharpstorm"},"content":"                throw new DukeIOException(\"Cannot create data store directory at: \"","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"sharpstorm"},"content":"                        + dataFolder.getAbsolutePath());","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"sharpstorm"},"content":"    private static FileInputStream openDatabaseRead() throws DukeIOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"sharpstorm"},"content":"        initDataStore(); // throws DukeIOException","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"sharpstorm"},"content":"        File database \u003d Paths.get(DATA_FOLDER_PATH, DB_FILENAME).toFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"sharpstorm"},"content":"            return new FileInputStream(database);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"sharpstorm"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"sharpstorm"},"content":"            // Does not create the database until a change is made","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"sharpstorm"},"content":"            return null;","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"sharpstorm"},"content":"    private static FileOutputStream openDatabaseWrite() throws DukeIOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"sharpstorm"},"content":"        initDataStore(); // throws DukeIOException","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"sharpstorm"},"content":"        File database \u003d Paths.get(DATA_FOLDER_PATH, DB_FILENAME).toFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"sharpstorm"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"sharpstorm"},"content":"            if (!database.exists()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"sharpstorm"},"content":"                if (!database.createNewFile()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"sharpstorm"},"content":"                    throw new DukeIOException(\"Could not create database\");","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"sharpstorm"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"sharpstorm"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"sharpstorm"},"content":"            return new FileOutputStream(database);","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"sharpstorm"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"sharpstorm"},"content":"            throw new DukeIOException(\"Could not create database\");","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"sharpstorm"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"sharpstorm":96}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    TODO(\"T\", 1),","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"    DEADLINE(\"D\", 2),","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    EVENT(\"E\", 3);","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    private final String shorthand;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"    private final int typeId;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"    TaskType(String shorthand, int typeId) {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"        this.shorthand \u003d shorthand;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"        this.typeId \u003d typeId;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"    public String getShorthand() {","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"        return this.shorthand;","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"    public int getTypeId() {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"        return this.typeId;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"    static TaskType matchType(int typeId) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"        return Arrays.stream(TaskType.values()).filter(x -\u003e x.getTypeId() \u003d\u003d typeId)","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"                .findFirst()","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"                .orElse(null);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"    public Todo(String task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"        super(TaskType.TODO, task);","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"    protected Todo() {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"        this(\"\");","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"sharpstorm"},"content":"todo This is a todo task","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"sharpstorm"},"content":"deadline This is a deadline task /by User Date 1","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"sharpstorm"},"content":"event This is an event task /at User Date 2","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"sharpstorm"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sharpstorm"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sharpstorm"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sharpstorm"},"content":"delete 2","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"sharpstorm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"sharpstorm"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sharpstorm"},"content":"deadline","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sharpstorm"},"content":"deadline /by","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sharpstorm"},"content":"deadline text /by","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sharpstorm"},"content":"deadline /by text","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sharpstorm"},"content":"event","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sharpstorm"},"content":"event /at","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"sharpstorm"},"content":"event text /at","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"sharpstorm"},"content":"event /at text","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sharpstorm"},"content":"unmark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sharpstorm"},"content":"mark","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sharpstorm"},"content":"mark notanumber","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sharpstorm"},"content":"mark 4","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"sharpstorm"},"content":"mark 0","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"sharpstorm"},"content":"delete 0","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"sharpstorm"},"content":"delete 3","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"sharpstorm"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"sharpstorm"},"content":"pause","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sharpstorm":1,"-":21}}]
