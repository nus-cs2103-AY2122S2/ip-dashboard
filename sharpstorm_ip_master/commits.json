{"authorDailyContributionsMap":{"sharpstorm":[{"date":"2022-01-17","commitResults":[{"hash":"3dda973fb2ad2da5ef10fd6b912874cf2f4c5bc5","messageTitle":"Add Bot Welcome Greeting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"d7d23566af0c1c07f40a507ecc9d387bcfa72c39","messageTitle":"Add User Input Functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":3}}},{"hash":"fb198a238b4af1c5b2f7a55b34290696a31ad45b","messageTitle":"Add Functional Interface for block printing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":8}}},{"hash":"3c721ef03d82bdf80c78267e5252e05a42e07901","messageTitle":"Add exit command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"32abcc179669bbe1dface07b2b7bb807fa33276f","messageTitle":"Add Task and TaskStore data structures","messageBody":"","tags":["A-Collections","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":0}}},{"hash":"0feef4deb918107a6b52be097b580d716dc5bb96","messageTitle":"Add Task Creation and Listing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}},{"hash":"e45ea62f9a6078d99fa50408a3245d084ed5a6e5","messageTitle":"Update user input prompt to reflect task creation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"24d552c2362404c30251284f158818ee8add84c3","messageTitle":"Add completion marker to Task data structure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"b4767fdcdfc1f5daca01a55d82105d289b9423ec","messageTitle":"Update task listing to include done indicator","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"70e8020f2fea1e0f2f5cb35500fe3945116867df","messageTitle":"Add Task marking and unmarking functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":1}}},{"hash":"3600d5973f0d87a376944e1a4c1eaa7a529a76e9","messageTitle":"Update marking to show no action messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"6844989ec4c9490d5eb962a240a1850e8a5d6256","messageTitle":"Add new Task types and data fields","messageBody":"Task class: make Task an abstract class\n\nThe task class is currently a concrete class, while it is should be\nabstract under the new modelling.\n\nLet\u0027s,\n* Make Task an abstract class\n* Remove the addTask method with String argument in TaskStore\n* Replace Duke driver Task creation with placeholder Todo type\n","tags":["A-Inheritance","A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":7}}},{"hash":"01a6355e374537c3c3cd7aa9da9d525cd3b6a324","messageTitle":"Tighten command matching to exact word","messageBody":"Change command matching logic.\nThe previous command matching used startWith as the matching\nmechanism. This could resulted in unintentionally matching\ncommand words with extra trailing characters.\n\nLet\u0027s\n* Change matching logic to be exact, in other words, use equals\n* Streamline command processing flow\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":36}}},{"hash":"f946d227bc6f4b92a386fa4066dc6f68707989f7","messageTitle":"Add Task type printing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"599b0cccfaf98df5611cd2f04809dd750eab525a","messageTitle":"Optimise command processing flow","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":13}}},{"hash":"8a08acaa1dc8f7f0e6bda4779bc689c8e5de35e4","messageTitle":"Add Event and Deadline creation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}},{"hash":"7e3dbd11489666fd02ffa2aacd26b170eabf08fc","messageTitle":"Update test cases and test script","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":26,"deletions":0},"bat":{"insertions":1,"deletions":0}}}]},{"date":"2022-01-18","commitResults":[{"hash":"ecc7a6c1ac3bf95667fcdc830d2c41803e51bb97","messageTitle":"Add exception-based error handling","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":18}}},{"hash":"eec437a23c8ee12bc9a31a1968b22f7fd68dfcba","messageTitle":"Update test cases for new errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"fc4060ce104ad49905e5dd1432d5028dd2f78283","messageTitle":"Add delete task functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":15}}},{"hash":"5590e25ef5c25fd5d6ad066b1a8e1a6c326ad77a","messageTitle":"Update test cases for testing delete","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0}}},{"hash":"0087fd64449e8a5b1c43494763f2bc44679e2695","messageTitle":"Clean up code formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":10}}}]},{"date":"2022-01-23","commitResults":[{"hash":"80498879b2354e76401d9437a7d9527a51f12455","messageTitle":"Add Task serialization and inflation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":263,"deletions":6}}},{"hash":"e30d57336d3d99c82ee38fe380e578a740e41a69","messageTitle":"Fix Stackoverflow error in TaskType","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c82f3bb220b057213b83add80041a7f3346a225e","messageTitle":"Add saving and loading of Task list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":1}}},{"hash":"1ff9e68757d00f774ce28d024fbe818951ca7f0d","messageTitle":"Refactor Task saving to Observer pattern","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":21}}},{"hash":"01b8a16d47e2e0d697b40fe38f865afde8cbfb3e","messageTitle":"Fix leaking file streams in serializers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":32}}},{"hash":"f29d46e552c2e477d6126b3776dff0dbd454f386","messageTitle":"Add final modifier to TaskType private variables","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"dedc1e6cfbde00526ee720519e8f88576c27a13e","messageTitle":"Add parsing of date object for dated Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":8}}},{"hash":"bf089f75b5ed557d266123ed303dadd6edf10809","messageTitle":"Beautify date printing format","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"7a70dc62c3adb813d8002c45ffcd915716d793dd","messageTitle":"Add upcoming and schedule commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":4}}},{"hash":"fd2e577c18abb25ddb7adfcac8d08047e474d93a","messageTitle":"Add between command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}}]},{"date":"2022-01-24","commitResults":[{"hash":"7abda7011895f4a5206871876eb2b54b3f0fc5bc","messageTitle":"Refactor TaskStore to TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":25}}},{"hash":"ff95ed71cfd05f0239880d6103463f50ea0488ff","messageTitle":"Separate Serializer from file system logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":55}}},{"hash":"03afaef0bebdedbda667feaf5d6b305e2b27c093","messageTitle":"Refactor TaskStoreSerializer to TaskListSerializer","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"8a43906abb8a0a94c5ed4dad1a7639928bc691e0","messageTitle":"Extract command parsing logic to separate class","messageBody":"Extract command parsing to separate class\n\nCommand processing is all performed in the Duke class.\nThis results in a very long file, with no clear separation of\nresponsibilities. It also makes the file messy with UI and parsing\nlogic.\n\nLet\u0027s\n- Extract command parsing to the Parser class\n- Hide command processing logic from the Duke class\n","fileTypesAndContributionMap":{"java":{"insertions":246,"deletions":241}}},{"hash":"7f741ad3fbc8069e85e1319cbdb4aef240f11fbe","messageTitle":"Refactor UI related functions to a separate class","messageBody":"See commit 8a43906 for reasoning.\n","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":39}}},{"hash":"546cb3bf92d7df9e53fb600913e20e05a2aa26ef","messageTitle":"Add error message for IO exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"e793c0acd0b75c0e5f14e820194f19607cab1d43","messageTitle":"Extract commands to individual classes","messageBody":"Extract commands to multiple classes\n\nAll command processing logic reside in Parser class. This results in a\nlong file with many independent methods that can make it difficult to\nsearch for specific processing logic.\n\nThis commit changes this by\n- Extracting command processing logic to logical groups, each\n  encapsulated within a class.\n- Creating a hierarchy of Command classes following the strategy\n  pattern.\n- Changing Parser to follow the factory design pattern.\n","fileTypesAndContributionMap":{"java":{"insertions":282,"deletions":195}}},{"hash":"4d62c09c1241de91a37c8d311ce9edf8bccde579","messageTitle":"Update test script and test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"bat":{"insertions":5,"deletions":0}}},{"hash":"5ba8d1e9e4794747774ecb7f81c45add8b06bb8b","messageTitle":"Remove unnecessary imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":13}}},{"hash":"e3b1882e5df45da554b5b98f42bbb4415b4f66a2","messageTitle":"Refactor classes into packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":3}}},{"hash":"77b9eb89dccc34d4122a6441ce1fcc2e0214d7be","messageTitle":"Refactor command package structure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":30}}},{"hash":"b4b6ef5d043859f7545417ba6ab2b718de0e9d93","messageTitle":"Tighten access modifiers across packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":50}}},{"hash":"1ac9302cbd63c100a45fa4e062ee4f3dcf9fceb7","messageTitle":"Refactor entry point Duke into object","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":16}}},{"hash":"dc87c7e611040f9b4497edd6092de40b93dc76c7","messageTitle":"Change Task modification to package only","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":14}}},{"hash":"a7906bcaad529b485f02340f54112da54c7bad2c","messageTitle":"Update test script for packages","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":2,"deletions":2}}}]},{"date":"2022-01-25","commitResults":[{"hash":"ff5aa554eed3987e324540fada1c7a0d061e39fb","messageTitle":"Add initial test for Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"3489e90de6e537c20575d7c422bb783ca068b6b1","messageTitle":"Refactor visibility of methods in task package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"08d13c8745594fd4d898b8ad63071dcbe20ef6bf","messageTitle":"Add Tests for task package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":597,"deletions":0}}},{"hash":"1d2b25e8072259f04733829112f5bb8e32d37e5b","messageTitle":"Fix formatting bugs in command handlers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"b1b95a3a72e070f913a2200f13281b80ec48b4b9","messageTitle":"Add command handler test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":671,"deletions":0}}},{"hash":"834c1110ebd87d9a5448b163df290f3604b94d12","messageTitle":"Add exit check for Exit command handler","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"63730ccf2e5d6958fb75a40e5c66f26a6c81f364","messageTitle":"Add test cases for Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"03d522b1f4748a40d9e862e9b5003f3277557a94","messageTitle":"Add find tasks functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"9df75d58b53bd0baa23e911df51bbebbb5828072","messageTitle":"Fix find command matching bug","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":4}}},{"hash":"327e053d5ca38dfb13af7538bfa421f708477c69","messageTitle":"Update test case for find command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}}]},{"date":"2022-01-26","commitResults":[{"hash":"9b7ed8e0a946ab78c3e127884a9bcd4a2b021335","messageTitle":"Rename interfaces to remove leading I","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":31}}},{"hash":"29585a96545d9bb2d0fa1a4adfab8920af1c81d7","messageTitle":"Format code in command package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":29}}},{"hash":"f9ccf1edb99c325662a340202358bc2b46863c98","messageTitle":"Format code in task package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":36}}},{"hash":"ecf0395e1e4c4e70b40eeb854fcb0af8864e7175","messageTitle":"Format code in duke package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":8}}},{"hash":"b7fd29e4fcd7a7354114b07c394d893acd283227","messageTitle":"Remove extra imports in test scripts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":15}}},{"hash":"17273d5d53352b373581fcb920f8f056d43aa67d","messageTitle":"Format code in test scripts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":38}}},{"hash":"d8bc16bf688d72c447027f11835ca2cc16556b56","messageTitle":"Add Javadocs for the duke package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":3}}},{"hash":"d67544da5515189169a8f5029c5770499fa7b909","messageTitle":"Add Javadoc for exceptions and interfaces","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"a67d41dd1ee37f6339eef6c3391448c43df2ffdd","messageTitle":"Add Javadocs for task package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":199,"deletions":6}}},{"hash":"e0f7a3a1c97efda630e0e83a5e05f8f848fd3562","messageTitle":"Add Javadocs for command package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":145,"deletions":10}}},{"hash":"c777ee25330af1fccfc82647d02ce3da75f1b661","messageTitle":"Fix small formatting bugs in Javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"2ff059677bcd9051fa28656afd832ce975a6baf5","messageTitle":"Change DukeIOException to comply with standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":39}}},{"hash":"97fb6e7940a6631ac9f960901e9298a9620cc5b4","messageTitle":"Add Javadoc for find command handler","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}}]},{"date":"2022-01-27","commitResults":[{"hash":"5d3eb9a4641b4defcd95b718f71382a87c0d963f","messageTitle":"Fix styling issues in testing scripts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"fa412eddfd863194d87a64a1bc0d57dad6daea10","messageTitle":"Fix broken level 9 caused by merge","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2022-01-30","commitResults":[{"hash":"18e5a3f25a60752dc16e977aff2f73563f34133b","messageTitle":"Modify gradle project configuration","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1}}},{"hash":"5ca1f014b675155176054e6a98026b35c80dc8bb","messageTitle":"Update import ordering to satisfy checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":203,"deletions":181}}},{"hash":"94581f9a728e9f3d2673e3af1d51080432b129e6","messageTitle":"Add JavaFX gradle dependencies","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}}]},{"date":"2022-01-31","commitResults":[{"hash":"312f133f9a320c76d8b4a9a02572c2e2dffa8a97","messageTitle":"Add basic JavaFX ui","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":143,"deletions":8}}},{"hash":"205451e883a20a712b3130987576327be5cbf3a9","messageTitle":"Refactor semantics of Ui hierarchy","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":56}}}]},{"date":"2022-02-01","commitResults":[{"hash":"e39d784beaf73686d2a9732809bfa4eeb7cd4492","messageTitle":"Add resizable ui support","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":6,"deletions":6}}},{"hash":"571dac7e117360eaa183a4d3571b9974e9a60ec9","messageTitle":"Add Javadocs for newly created methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":11}}},{"hash":"b709e8446aea99f739c710b4b3ce2754f8f5bf57","messageTitle":"Clean-up imports","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":9,"deletions":8},"java":{"insertions":0,"deletions":6}}},{"hash":"20c963dd34b077f43d02a5c2ab56be65d062f0e5","messageTitle":"Remove unused variable and extra throws clause","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"3ec962386c91f19274caf7f88330883a465ad7ce","messageTitle":"Add mockito-based ui testing","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":46,"deletions":24}}},{"hash":"d7e452a2b2f5a9fbf33c2d2a5989d6aff2e001ce","messageTitle":"Fix up code to comply with coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":5}}},{"hash":"53e8029c4986d6b335e26b66021d9eb09d128f65","messageTitle":"Change string array to varargs format","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2022-02-02","commitResults":[{"hash":"601a63bd07831e666d49e2426a0cf9a8bfd97fa4","messageTitle":"Change naming of database file name constant","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2022-02-03","commitResults":[{"hash":"734bff75702c05dc048b415ec2c39413c2f0cb7e","messageTitle":"Fix Javadoc spacing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":0}}}]},{"date":"2022-02-06","commitResults":[{"hash":"7909a4465e14f3b9677ab2d08a21726b4fb96f76","messageTitle":"Fix gradle classpath error for javadocs task","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"129b5fbbf494cee5429d78bcb7639df91763f5ae","messageTitle":"Add Java assertions","messageBody":"Add null-check assertions\n\nThere are many points in the code where objects declared are assumed\nto be not null, that is, the error-handling code is presumed to work\ncorrectly.\n\nThis is a dangerous assumption to make, and could result in hidden\nbugs and errors arising from inconsistent code states.\n\nUsing a trust-but-verify approach, let\u0027s add assertions throughout\nthe application logic to ensure that the error-handling code works\ncorrectly. Doing so flags events when the application state is\ninconsistent, allowing bugs to be identified more easily.\n\nAdd default case false-assertions\n\nThere are several if-else statements that have default cases that are\nignored simply because they should never be reached. No code exists\nwithin these empty cases.\n\nThis is also a dangerous assumption to make, as errors in code could\nlead to unexpected behaviour.\n\nLet\u0027s add false-assertions to these portions in the code to help\nidentify when these cases are triggered, which indicates that there are\nbugs in the code logic.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":57,"deletions":1}}}]},{"date":"2022-02-07","commitResults":[{"hash":"31ce0d5b446dbd849cc739983142574dc3fedccb","messageTitle":"Improve code readability in command package","messageBody":"Change magic numbers and strings to constant variables\n\nMagic numbers are used in command processing logic to translate from\na human readable format to a format that is used in the application\u0027s\ninternal state.\n\nMagic numbers and strings can be difficult to decipher if the reader\nhas no idea what the code logic is trying to do, and negatively\nimpacts the readability of the codebase.\n\nLet\u0027s extract the magic numbers and strings to named constants that\ndescribe the function of the magic strings or constants. This makes\nthe code easier to read, and friendlier to readers not involved in\ndevelopment.\n\nExtract common functionality in CreateCommand to methods\n\nThe logic in CreateCommand involves 3 entirely separate flows, and are\nimplemented in 3 separate methods independent from one another.\n\nHowever, some of the logic, particularly input validation, are\nrepeated across the 3 flows, resulting in almost identical code\nportions.\n\nLet\u0027s extract the common functionality into methods so there is only\na single implementation of the validation logic. This makes the logic\nmore maintainable and reusable.\n","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":47}}},{"hash":"d6c05a19f7407e6fcd92c3274c2e8caa9389e803","messageTitle":"Improve code readability in other packages","messageBody":"Break methods into smaller subroutines\n\nThe implementation in TaskListSerializer uses a single method to\nperform all the serialization and deserialization required for\nTaskList objects.\n\nThis results in a complex and deeply nested method, with many\nsubcomponents in the processing logic, which can be difficult to\nunderstand when reading the code.\n\nLet\u0027s break the long serialization methods into subroutines to make\nthe code more readable, and at the same time reduce the complexity\nconcentrated in a single part in code.\n","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":36}}},{"hash":"98ac39f7d25b52bcc1709502bb690d60921f8c0c","messageTitle":"Clean up imports and tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"d1aa1da339d77c1da08b4a1b9d2a3baeb5ad0ae6","messageTitle":"Remove cyclic dependency in Task inflation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":91}}},{"hash":"0c12704dab347a1da10d88435c0bc772a50e39f8","messageTitle":"Fix Mockito testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":17}}},{"hash":"edb4a469e23920fee6b8134b4e9e07902d9a38ba","messageTitle":"Add Mockito testing for serializers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":48}}},{"hash":"3f736dcdf9ad7bcd77c052fd7f47b73d988e5f68","messageTitle":"Fix incorrect error message in schedule command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"71d1c5bfdf4d88d002e09422e9afc85a5896257e","messageTitle":"Improve feedback from schedule command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":9}}},{"hash":"cc059236c252ec391a9fb83d02203f0caef440ad","messageTitle":"Add time sorting to schedule command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":5}}},{"hash":"37909f8d6ed71727342a6ab7428f0b4f395961b2","messageTitle":"Improve upcoming command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":15}}}]},{"date":"2022-02-08","commitResults":[{"hash":"d3c2de1dadff09beda9d01d16c055e7cbc7c0cf9","messageTitle":"Add base for natural date parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":159,"deletions":35}}},{"hash":"2a30dabf44d8adda5915c5e58e58f6356b1eb2d3","messageTitle":"Improve date parsing logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":143,"deletions":23}}},{"hash":"94625e41d53b8724b3507cdac9d0c0d3c0af38c4","messageTitle":"Add javadocs and positional date parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":232,"deletions":45}}},{"hash":"3d45b21467fa3e73caec93ff54c15704f0dde887","messageTitle":"Add test cases for date parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":3}}},{"hash":"53cc5e0fe3471fd4e660ac1f0592815452dec614","messageTitle":"Add day-relative date parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":17}}},{"hash":"85745335a0dd13b1a9e611dfaa1fadaefaa32c8f","messageTitle":"Fix constant declaration for day mappings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2022-02-12","commitResults":[{"hash":"c6095177438e4adba5bbe8b308cc13c93aa18086","messageTitle":"Split long test cases into smaller cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":201,"deletions":142}}}]},{"date":"2022-02-13","commitResults":[{"hash":"86c84a09e22515f8d44c10adc1ee86f88254327a","messageTitle":"Comply with stricter Javadoc standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":12}}},{"hash":"3d5df78dff4dcd6496611404c8dcd563b3d72546","messageTitle":"Refactor date parsers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":901,"deletions":654}}}]}]},"authorFileTypeContributionMap":{"sharpstorm":{"java":4408,"md":0,"fxml":36,"sh":0,"bat":8,"gradle":23,"txt":30}},"authorContributionVariance":{"sharpstorm":237697.42},"authorDisplayNameMap":{"sharpstorm":"CS2103-W17-1 HO Z.. HAN"}}
