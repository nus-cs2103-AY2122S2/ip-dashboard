[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import duke.taskList.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":" * Represents the start of the program and the main run loop.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     * Returns a Duke Object with helper classes initialized according to the /data/duke.txt file.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public Duke() {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        ui.showStartUpMessage();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"            this.storage \u003d new Storage(this.tasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"            ui.showFeedbackMessage(\"\\n\\tError reading from duke.txt\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     * Executes the instructions given by user until a Command.BYE is issued by the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    public void execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        boolean canExit \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        while (!canExit) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"                input \u003d ui.readCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"                String[] commands \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"                Command command \u003d Parser.parseString(commands);","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"                switch (command) {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"                case BYE:","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"                    canExit \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(\"\\n\\tBye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"                    try {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"                        storage.saveTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"                        ui.showFeedbackMessage(\"\\n\\tError saving duke.txt file.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"                case LIST:","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(tasks.listTasks());","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"                case MARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(tasks.markAsDone(commands[1], true));","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"                case UNMARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(tasks.unmarkDone(commands[1]));","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"                case DELETE:","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(tasks.deleteTask(commands[1]));","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"                case INVALID:","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(\"\\n\\t\" + commands[0] + \" is not a valid command\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"                case EMPTY:","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"                case FIND:","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(tasks.findKeyword(commands[1].trim()));","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"                default:","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"                    ui.showFeedbackMessage(tasks.addTask(command, commands[1], true));","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"                ui.showFeedbackMessage(\"\\n\\t\" + e.getMessage() + \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"        d.execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bryans17":87,"-":2}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":" * List out all possible commands the user can use.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"public enum Command {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, BYE, LIST, DELETE, INVALID, EMPTY, FIND","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"bryans17":8}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":" * Represents an exception related to the Duke application.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"public abstract class DukeException extends Exception{","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"        super(message);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"bryans17":10}},{"path":"src/main/java/duke/exception/DukeInvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":" * Represents an exception related to the invalid task numbers.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"public class DukeInvalidTaskNumberException extends DukeException{","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    public DukeInvalidTaskNumberException(String message) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"        super(message);","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"bryans17":10}},{"path":"src/main/java/duke/exception/DukeWrongInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.exception;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":" * Represents an exception related to the wrong input formats.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"public class DukeWrongInputFormatException extends DukeException{","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    public DukeWrongInputFormatException(String message) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"        super(message);","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"bryans17":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeWrongInputFormatException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":" * Utility Class to parse the command given by the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"     * Parse the command given by the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"     * @param command Command given by user.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     * @return duke.command.Command based on what the user gave.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"     * @throws DukeWrongInputFormatException If the format of the input given by the user is invalid.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    public static Command parseString(String[] command) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        switch (command[0].toLowerCase()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"        case \"\":","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"            return Command.EMPTY;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003e 1 \u0026\u0026 !command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Command bye should not have any arguments\");","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"            return Command.BYE;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"        case \"list\":","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003e 1 \u0026\u0026 !command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Command list should not have any arguments\");","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"            return Command.LIST;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Missing task number to mark\");","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"            return Command.MARK;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Missing task number to unmark\");","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            return Command.UNMARK;","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Missing task number to delete\");","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"            return Command.DELETE;","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"            return Command.TODO;","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"        case \"event\":","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"            return Command.EVENT;","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"        case \"find\":","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"            if (command.length \u003c\u003d 1 || command[1].equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Missing keyword to find\");","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"            return Command.FIND;","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"            return Command.INVALID;","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"bryans17":72}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import duke.taskList.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import java.util.List;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":" * Represents the hard disk that stores the tasks between sessions.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     * Returns a Storage Object and loads the task in the current file.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"     * @param tasks TaskList to be used.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"     * @throws IOException If there was an error of I/O while loading the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public Storage(TaskList tasks) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"        this.loadTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     * Loads the tasks from file.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     * @throws IOException If there was an error of I/O while loading the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    private void loadTask() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"            Path path \u003d Paths.get(\".\", \"data\", \"duke.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"                Files.createDirectories(Paths.get(\".\", \"data\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"                Files.createFile(path);","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            List\u003cString\u003e list \u003d Files.readAllLines(path);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"            for (String s : list) {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"                if (s.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"                    continue;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"                if (s.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"                    String[] temp \u003d s.split(\" \", 3);","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"                    tasks.addTask(Command.TODO, temp[2], false);","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"                    if (temp[1].charAt(1) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"                        tasks.markAsDone(String.valueOf(tasks.size()), false);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"                } else if (s.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"                    String[] temp \u003d s.split(\" \", 3);","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"                    tasks.addTask(Command.DEADLINE, temp[2], false);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"                    if (temp[1].charAt(1) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"                        tasks.markAsDone(String.valueOf(tasks.size()), false);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"                } else if (s.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"                    String[] temp \u003d s.split(\" \", 3);","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"                    tasks.addTask(Command.EVENT, temp[2], false);","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"                    if (temp[1].charAt(1) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"                        tasks.markAsDone(String.valueOf(tasks.size()), false);","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException ignored) {}","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"     * Saves the tasks in TaskList into the file.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"     * @throws IOException If there was an error of I/O while saving the tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    public void saveTask() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"        Path path \u003d Paths.get(\"data\",\"duke.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        Files.write(path, tasks.saveToFile());","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"bryans17":79}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeWrongInputFormatException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    private final String DEADLINE_STRING;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    private final LocalDateTime DEADLINE;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * Returns a deadline Task object and accepts a String as description and a String to indicate the deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     * @param deadLine Deadline of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public Deadline(String description, String deadLine) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        this.DEADLINE \u003d this.parseDeadline(deadLine);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        this.DEADLINE_STRING \u003d this.formatDeadline();","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     * Converts the deadline from a String to a LocalDateTime object and returns it.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     * @param deadLine Deadline of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     * @return deadLine as a LocalDateTime.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    private LocalDateTime parseDeadline(String deadLine) throws DukeException{","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        String[] temp \u003d deadLine.split(\" \",2);","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        if(temp.length \u003c\u003d 1 || temp[1].length() \u003c 4) {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Format for deadline is wrong. Please refer to list of commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            return LocalDateTime.parse(temp[0] + \"T\" + temp[1].charAt(0) + temp[1].charAt(1)","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"                    + \":\" + temp[1].charAt(2) + temp[1].charAt(3) + \":00\");","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Format for deadline is wrong. Please refer to list of commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"     * Returns a formatted String based on the pattern MMM dd yyyy HH:mm.","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    private String formatDeadline() {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        DateTimeFormatter form \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"        return DEADLINE.format(form);","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"     * Returns a formatted String to be saved in a file.","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"   @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    public String formatSave() {","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"        DateTimeFormatter form \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        String date \u003d this.DEADLINE.format(form);","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"        return \"D |\" + (super.isDone ? \"1| \" : \"0| \") + super.description + \" /by \" + date;","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"     * Returns a String to display the type, the done status of task as well as the task description.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.DEADLINE_STRING + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"bryans17":79}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeWrongInputFormatException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":" * Represents an event task.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    private final String SCHEDULED_TIME_STRING;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    private final LocalDateTime SCHEDULED_TIME;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * Returns an event Task object and accepts a String as description and a String to indicate the scheduledTime.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     * @param scheduledTime Scheduled time of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public Event(String description, String scheduledTime) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        this.SCHEDULED_TIME \u003d parseScheduledTime(scheduledTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        this.SCHEDULED_TIME_STRING \u003d formatScheduledTime();","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     * Converts the scheduled time from a String to a LocalDateTime object and returns it.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     * @param scheduledTime Deadline of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"     * @return scheduled time as a LocalDateTime.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    private LocalDateTime parseScheduledTime(String scheduledTime) throws DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"        String[] temp \u003d scheduledTime.split(\" \", 2);","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"        if (temp.length \u003c\u003d 1 || temp[1].length() \u003c 4) {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Format for event is wrong. Please refer to list of commands.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            return LocalDateTime.parse(temp[0] + \"T\" + temp[1].charAt(0) + temp[1].charAt(1)","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"                    + \":\" + temp[1].charAt(2) + temp[1].charAt(3) + \":00\");","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Format for event is wrong. Please refer to list of commands.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"     * Returns a formatted String based on the pattern MMM dd yyyy HH:mm.","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"    private String formatScheduledTime() {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        DateTimeFormatter form \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"        return SCHEDULED_TIME.format(form);","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"     * Returns a formatted String to be saved in a file.","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    public String formatSave() {","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"        DateTimeFormatter form \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        String date \u003d this.SCHEDULED_TIME.format(form);","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"        return \"E |\" + (super.isDone ? \"1| \" : \"0| \") + super.description + \" /at \" + date;","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"     * Returns a String to display the type, the done status of task as well as the task description.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.SCHEDULED_TIME_STRING + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"bryans17":79}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":" * Represents and encapsulates a Task.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"    protected final String description;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"     * Returns a Task object and accepts a String as description.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    protected Task(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"        setDone(false);","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     * Sets done variable of duke.task.Task.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     * Abstact method to be implemented by subclasses for the purpose of saving to a file.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    public abstract String formatSave();","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     * Returns the task description.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"     * @return description of task.","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"     */    ","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"        return this.description;","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"     * Returns a String to display done status of task as well as the task description.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        return \"[\" +(isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"bryans17":51}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":" * Represents a todo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"     * Returns a ToDo Task object and accepts a String as description.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"     * Returns a formatted String to be saved in a file.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    public String formatSave() {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"        return \"T |\" + (super.isDone ? \"1| \" : \"0| \") + super.description;","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"     * Returns a String to display the type, the done status of task as well as the task description.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     * @return Formatted String.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"bryans17":36}},{"path":"src/main/java/duke/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeInvalidTaskNumberException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeWrongInputFormatException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":" * Represents the list of tasks that the user has created.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"     * Returns a new TaskList Object with an empty java.util.ArrayList.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"     * Creates a formatted String listing out the duke.task.Task that the list currently contains.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"     * @return List of Tasks as a String.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"    public String listTasks() {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"        StringBuilder output \u003d new StringBuilder(\"\\n\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        return printTasks(output, this.tasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"     * Creates a formatted String listing out the duke.task.Task that are in the supplied ArrayList.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"     * @param beg StringBuilder initialized with a starting sentence.","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"     * @param list ArrayList containg the tasks that you want to list out.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"     * @return List of Tasks as a String.","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    private String printTasks(StringBuilder beg, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"            beg.append(\"\\t\").append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"        return beg.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"     * Creates a formatted String listing out the duke.task.Task in the list that contains a given keyword.","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"     * @param keyword keyword that the user wants to find.","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"     * @return List of Tasks, that contains the given keyword, as a String.","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"    public String findKeyword(String keyword) {","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"        ArrayList\u003cTask\u003e result \u003d findKeywordHelper(keyword);","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"        StringBuilder output \u003d new StringBuilder(\"\\n\\tHere are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        return printTasks(output, result);","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"     * Returns an ArrayList containing all Tasks in the list with a given keyword.","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"     * @param keyword keyword that the user wants to find.","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"     * @return List of Tasks that contains the given keyword.","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    private ArrayList\u003cTask\u003e findKeywordHelper(String keyword) {","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"            if(tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"                result.add(tasks.get(i));","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"        return result;","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"     * Returns the current size of the tasks ArrayList.","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"     * @return size of current list.","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"    public int size() {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"     * Executes appropriate action specified by the duke.command.Command given by the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"     * @param c The duke.command.Command given by user.","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"     * @param task Additional arguments the user supplied such as description.","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"     * @param showMessage A boolean to indicate if a feedback message should be generated.","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"     * @return Feedback String corresponding to the duke.command.Command.","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"     * @throws DukeWrongInputFormatException If there\u0027s a mistake with the format of the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"    public String addTask(Command c, String task, boolean canShowMessage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"        Task t;","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"        switch (c) {","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"        case TODO:","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"            t \u003d new ToDo(task.trim());","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"            String[] descriptionAndDate \u003d task.split(\" /by \", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"            if (descriptionAndDate.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Missing deadline by date.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"bryans17"},"content":"            t \u003d new Deadline(descriptionAndDate[0].trim(), descriptionAndDate[1].trim());","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"bryans17"},"content":"        case EVENT:","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"bryans17"},"content":"            String[] descriptionAndTime \u003d task.split(\" /at \", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"bryans17"},"content":"            if (descriptionAndTime.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"bryans17"},"content":"                throw new DukeWrongInputFormatException(\"Missing event at date.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"bryans17"},"content":"            t \u003d new Event(descriptionAndTime[0].trim(), descriptionAndTime[1].trim());","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"bryans17"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"bryans17"},"content":"            t \u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"bryans17"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"bryans17"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"bryans17"},"content":"        if(canShowMessage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":124,"author":{"gitId":"bryans17"},"content":"            return \"\\n\\tGot it. I\u0027ve added this task:\\n\\t\\t\" + t + \"\\n\\t\"","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"bryans17"},"content":"                    + \"Now you have \" + tasks.size() + \" in the list.\\n\" ;","lastModifiedDate":"2022-01-24"},{"lineNumber":126,"author":{"gitId":"bryans17"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"bryans17"},"content":"            return null;","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":130,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"bryans17"},"content":"     * Sets the done boolean variable of the duke.task.Task at index in to true.","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"bryans17"},"content":"     * @param in Index of task to be marked as done, given as a String.","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"bryans17"},"content":"     * @param showMessage A boolean to indicate if a feedback message should be generated.","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"bryans17"},"content":"     * @return Feedback String.","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"bryans17"},"content":"     * @throws DukeWrongInputFormatException If there\u0027s a mistake with the format of the command or if the index number does not exist.","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"bryans17"},"content":"    public String markAsDone(String in, boolean canShowMessage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"bryans17"},"content":"            int index \u003d Integer.parseInt(in);","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"bryans17"},"content":"            if (index \u003e this.tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"bryans17"},"content":"                throw new DukeInvalidTaskNumberException(\"Task number: \" + index + \" does not exist\");","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"bryans17"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"bryans17"},"content":"                this.tasks.get(index-1).setDone(true);","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"bryans17"},"content":"                if (canShowMessage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"bryans17"},"content":"                    return \"\\n\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\"","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"bryans17"},"content":"                            + this.tasks.get(index-1).toString() + \"\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"bryans17"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"bryans17"},"content":"                    return null;","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"bryans17"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":152,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":153,"author":{"gitId":"bryans17"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Please input a valid Task number \"","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"bryans17"},"content":"                    + \"after typing mark: mark \u003ctaskNum\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"bryans17"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Please input a valid mark command: mark \u003ctaskNum\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":159,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":160,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"bryans17"},"content":"     * Sets the done boolean variable of the duke.task.Task at index in to false.","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"bryans17"},"content":"     * @param in Index of task to be marked as not done, given as a String.","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"bryans17"},"content":"     * @return Feedback String.","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"bryans17"},"content":"     * @throws DukeWrongInputFormatException If there\u0027s a mistake with the format of the command or if the index number does not exist.","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"bryans17"},"content":"    public String unmarkDone(String in) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"bryans17"},"content":"            int index \u003d Integer.parseInt(in);","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"bryans17"},"content":"            if (index \u003e this.tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"bryans17"},"content":"                throw new DukeInvalidTaskNumberException(\"Task number: \" + index + \" does not exist\");","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"bryans17"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"bryans17"},"content":"                this.tasks.get(index-1).setDone(false);","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"bryans17"},"content":"                return \"\\n\\tOK, I\u0027ve marked this task as not done yet:\\n\\t\\t\"","lastModifiedDate":"2022-01-24"},{"lineNumber":176,"author":{"gitId":"bryans17"},"content":"                        + this.tasks.get(index-1).toString() + \"\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":177,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"bryans17"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Please input a valid Task number \"","lastModifiedDate":"2022-01-24"},{"lineNumber":180,"author":{"gitId":"bryans17"},"content":"                    + \"after typing unmark: unmark \u003ctaskNum\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":181,"author":{"gitId":"bryans17"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":182,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Please input a valid mark command: unmark \u003ctaskNum\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":183,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":185,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"bryans17"},"content":"     * Deletes the duke.task.Task at index in.","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"bryans17"},"content":"     * @param in Index of task to be deleted, given as a String.","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"bryans17"},"content":"     * @return Feedback String.","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"bryans17"},"content":"     * @throws DukeWrongInputFormatException If there\u0027s a mistake with the format of the command or if the index number does not exist.","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"bryans17"},"content":"    public String deleteTask(String in) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"bryans17"},"content":"            int index \u003d Integer.parseInt(in);","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"bryans17"},"content":"            if (index \u003e this.tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"bryans17"},"content":"                throw new DukeInvalidTaskNumberException(\"Task number: \" + index + \" does not exist\");","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"bryans17"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":199,"author":{"gitId":"bryans17"},"content":"                Task deleted \u003d tasks.remove(index - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":200,"author":{"gitId":"bryans17"},"content":"                return \"\\n\\tNoted. I\u0027ve removed this task:\\n\\t\\t\" + deleted.toString()","lastModifiedDate":"2022-01-23"},{"lineNumber":201,"author":{"gitId":"bryans17"},"content":"                        + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":202,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":203,"author":{"gitId":"bryans17"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":204,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Please input a valid Task number \"","lastModifiedDate":"2022-01-24"},{"lineNumber":205,"author":{"gitId":"bryans17"},"content":"                    + \"after typing delete: delete \u003ctaskNum\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":206,"author":{"gitId":"bryans17"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":207,"author":{"gitId":"bryans17"},"content":"            throw new DukeWrongInputFormatException(\"Please input a valid delete command: delete \u003ctaskNum\u003e\");","lastModifiedDate":"2022-01-23"},{"lineNumber":208,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":209,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":210,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":211,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":212,"author":{"gitId":"bryans17"},"content":"     * Returns an Iterable object that iterates over the current tasks list and calling Task.formatSave() on the Tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":213,"author":{"gitId":"bryans17"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":214,"author":{"gitId":"bryans17"},"content":"     * @return Iterable\u003c? extends CharSequence\u003e for saving to file.","lastModifiedDate":"2022-01-23"},{"lineNumber":215,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":216,"author":{"gitId":"bryans17"},"content":"    public Iterable\u003c? extends CharSequence\u003e saveToFile() {","lastModifiedDate":"2022-01-22"},{"lineNumber":217,"author":{"gitId":"bryans17"},"content":"        Iterator\u003cTask\u003e it \u003d this.tasks.iterator();","lastModifiedDate":"2022-01-22"},{"lineNumber":218,"author":{"gitId":"bryans17"},"content":"        return (Iterable\u003cString\u003e) () -\u003e new Iterator\u003c\u003e() {","lastModifiedDate":"2022-01-22"},{"lineNumber":219,"author":{"gitId":"bryans17"},"content":"            @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":220,"author":{"gitId":"bryans17"},"content":"            public boolean hasNext() {","lastModifiedDate":"2022-01-22"},{"lineNumber":221,"author":{"gitId":"bryans17"},"content":"                return it.hasNext();","lastModifiedDate":"2022-01-22"},{"lineNumber":222,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":223,"author":{"gitId":"bryans17"},"content":"            @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":224,"author":{"gitId":"bryans17"},"content":"            public String next() {","lastModifiedDate":"2022-01-22"},{"lineNumber":225,"author":{"gitId":"bryans17"},"content":"                return it.next().formatSave();","lastModifiedDate":"2022-01-22"},{"lineNumber":226,"author":{"gitId":"bryans17"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":227,"author":{"gitId":"bryans17"},"content":"        };","lastModifiedDate":"2022-01-22"},{"lineNumber":228,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":229,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"bryans17":229}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke.ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":" * Represents the user interface that the user will interact with.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"public class Ui {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"    private final String LINE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"    private Scanner in;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"    private PrintStream out;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"     * Returns a new Ui Object with in initialized with java.util.Scanner(System.in) and out initialized with System.out.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    public Ui() {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"     * Prints a hardcoded start up message to the console to indicate to the user that the program has started.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"    public void showStartUpMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        this.out.println(\"Hello I\u0027m\\n\" + logo + \"\\n\" + \"What can I do for you?\\n\" + LINE);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"     * Prints any feedback message generated from commands given by the user with this.LINE to seperate the messages.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"    public void showFeedbackMessage(String mes) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"        if(mes \u003d\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"            return;","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"        this.out.println(LINE + mes + LINE);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"bryans17":46}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"import duke.exception.DukeWrongInputFormatException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"bryans17"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"bryans17"},"content":"    public void testTodoToString(){","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"bryans17"},"content":"        ToDo td \u003d new ToDo(\"something\");","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"bryans17"},"content":"        assertEquals(\"[T][ ] something\",td.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"bryans17"},"content":"    public void testTodoFormatSave(){","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"bryans17"},"content":"        ToDo td \u003d new ToDo(\"something\");","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"bryans17"},"content":"        assertEquals(\"T |0| something\",td.formatSave());","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"bryans17"},"content":"    public void testDeadlineConstructor_correctFormat_noException(){","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"bryans17"},"content":"            Deadline dl \u003d new Deadline(\"something1\", \"2022-01-03 1800\");","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"bryans17"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"bryans17"},"content":"    public void testDeadlineConstructor_wrongDateFormat_DukeWrongInputFormatExceptionThrown(){","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"bryans17"},"content":"            Deadline dl \u003d new Deadline(\"something2\", \"2022-01/04 1800\");","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"bryans17"},"content":"            Assertions.fail(\"input should be wrong\");","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"bryans17"},"content":"            assertTrue(e instanceof DukeWrongInputFormatException);","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"bryans17"},"content":"            assertEquals(\"Format for deadline is wrong. Please refer to list of commands.\", e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"bryans17"},"content":"    public void testDeadlineToString_correctFormat_noException(){","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"bryans17"},"content":"            Deadline dl \u003d new Deadline(\"something1\", \"2022-01-03 1800\");","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"bryans17"},"content":"            assertEquals(\"[D][ ] something1 (by: Jan 03 2022 18:00)\", dl.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"bryans17"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"bryans17"},"content":"    public void testDeadlineFormatSave_correctFormat_noException(){","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"bryans17"},"content":"            Deadline dl \u003d new Deadline(\"something3\", \"2022-01-23 1547\");","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"bryans17"},"content":"            assertEquals(\"D |0| something3 /by 2022-01-23 1547\", dl.formatSave());","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"bryans17"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"bryans17"},"content":"    public void testEventConstructor_correctFormat_noException(){","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"bryans17"},"content":"            Event eve \u003d new Event(\"something5\", \"2022-01-03 1830\");","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"bryans17"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"bryans17"},"content":"    public void testEventConstructor_wrongDateFormat_DukeWrongInputFormatExceptionThrown(){","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"bryans17"},"content":"            Event eve \u003d new Event(\"something90\", \"2022-01-04 18:00\");","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"bryans17"},"content":"            Assertions.fail(\"input should be wrong\");","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"bryans17"},"content":"            assertTrue(e instanceof DukeWrongInputFormatException);","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"bryans17"},"content":"            assertEquals(\"Format for event is wrong. Please refer to list of commands.\", e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"bryans17"},"content":"    public void testEventToString_correctFormat_noException(){","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"bryans17"},"content":"            Event eve \u003d new Event(\"something1\", \"2022-01-03 1800\");","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"bryans17"},"content":"            assertEquals(\"[E][ ] something1 (at: Jan 03 2022 18:00)\", eve.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"bryans17"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"bryans17"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"bryans17"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"bryans17"},"content":"    public void testEventFormatSave_correctFormat_noException(){","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"bryans17"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"bryans17"},"content":"            Event eve \u003d new Event(\"something3\", \"2022-01-23 1547\");","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"bryans17"},"content":"            assertEquals(\"E |0| something3 /at 2022-01-23 1547\", eve.formatSave());","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"bryans17"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"bryans17"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"bryans17"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"bryans17"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"bryans17"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"bryans17":108}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryans17"},"content":"hi","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"bryans17"},"content":"todo test1","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"bryans17"},"content":"mark","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"bryans17"},"content":"event kill myself /at tomorrow","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"bryans17"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"bryans17"},"content":"unmark","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"bryans17"},"content":"mark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"bryans17"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"bryans17"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"bryans17"},"content":"unmark 1","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"bryans17"},"content":"deadline testtest /by 16012022","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"bryans17"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"bryans17"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"bryans17":13}}]
