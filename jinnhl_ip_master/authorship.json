[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"T | 1 | read book","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | Mon 2-4pm","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":6}},{"path":"data/dukee.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"T | 1 | read book","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":4}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"T | 1 | read book","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | 2/12/2019 1800","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | 2/12/2019 1800","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":5}},{"path":"data/taskss.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"T | 1 | read book","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | 2/12/2019 1800","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | 2/12/2019 1800","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":5}},{"path":"src/main/java/jeff/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":" * ByeCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to exit the program.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"     * Saves the current task list and say \"bye\" to the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"        ui.showBye();","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     * @return true to exit the while loop.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"        return true;","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":36}},{"path":"src/main/java/jeff/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" * Command class acts as a format for other Command classes.","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":19}},{"path":"src/main/java/jeff/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Deadline;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":" * DeadlineCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to add a new Deadline task.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    private String description;","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    private String dateInfo;","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     * Constructor of DeadlineCommand.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"     * @param dateInfo End date of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    public DeadlineCommand(String description, String dateInfo) {","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        this.dateInfo \u003d dateInfo;","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"     * Creates a new Deadline task and store it","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     * into the task list and feedback to the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When no available format is available","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"     *                       to parse dateInfo or file cannot be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"        Task currTask \u003d new Deadline(description, dateInfo);","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"        tasks.add(currTask);","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        ui.showAdded(currTask.toString(), tasks.size());","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":60}},{"path":"src/main/java/jeff/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" * DeleteCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to delete a specific task.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    private int index;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     * Constructor of DeleteCommand.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     * @param body Position of the task to delete.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    public DeleteCommand(String body) {","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"        this.index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     * Deletes the Task according to index given by the user if available.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When index of task to delete is","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     *                       out of bounds or file cannot be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"            tasks.getAt(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"            int temp \u003d index + 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"            throw new JeffException(\" ☹ OOPS!!! The task you want to delete at index \"","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"                    + temp + \" is out of bounds,\"","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"                    + \"please double check the index number\");","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        ui.showDelete(tasks.getString(index), tasks.size() - 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        tasks.delete(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":61}},{"path":"src/main/java/jeff/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Event;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":" * EventCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to add a new Event task.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    private String description;","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    private String dateInfo;","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     * Constructor of EventCommand.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"     * @param dateInfo Date of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    public EventCommand(String description, String dateInfo) {","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        this.dateInfo \u003d dateInfo;","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"     * Creates a new Event task and store it","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     * into the task list and feedback to the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When no available format is available","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"     *                       to parse dateInfo or file cannot be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"        Task currTask \u003d new Event(description, dateInfo);","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"        tasks.add(currTask);","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        ui.showAdded(currTask.toString(), tasks.size());","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":60}},{"path":"src/main/java/jeff/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":" * HelpCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":" * to run when user inputs an invalid command.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"     * Helps the user find available commands.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"        ui.showHelp();","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":36}},{"path":"src/main/java/jeff/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":" * ListCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to list out every task.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"     * Passes the string to print to ui class","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"     * to print out every entry of the list if any.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"            ui.showEmptyList();","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"        } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"            StringBuilder taskStrings \u003d new StringBuilder();","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"            for (int n \u003d 0; n \u003c tasks.size(); n++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"                int temp \u003d n + 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"                String currTaskString \u003d temp + \".\" + tasks.getString(n) + \"\\n\";","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"                taskStrings.append(Ui.addPrefix(currTaskString));","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"            ui.showList(taskStrings.toString());","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":47}},{"path":"src/main/java/jeff/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" * MarkCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to mark a specific task as done.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    private int index;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     * Constructor of MarkCommand.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     * @param body Position of the task to mark as done.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    public MarkCommand(String body) {","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"        this.index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     * Marks the Task as done according","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     * to index given by the user if available.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When index of task to mark as done is","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     *                       out of bounds or file cannot be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"            tasks.getAt(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"            int temp \u003d index + 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"            throw new JeffException(\" ☹ OOPS!!! The task you want to mark as done at index \"","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"                    + temp + \" is out of bounds,\"","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"                    + \"please double check the index number\");","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        tasks.mark(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"        ui.showMark(tasks.getString(index));","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":62}},{"path":"src/main/java/jeff/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Todo;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":" * TodoCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to add a new Todo task.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    private String description;","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     * Constructor of TodoCommand.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     * @param body Name of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    public TodoCommand(String body) {","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"        this.description \u003d body;","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     * Creates a new Todo task and store it","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"     * into the task list and feedback to the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When file cannot be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"        Task currTask \u003d new Todo(description);","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"        tasks.add(currTask);","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"        ui.showAdded(currTask.toString(), tasks.size());","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":56}},{"path":"src/main/java/jeff/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" * UnmarkCommand class is a Command that contains instructions","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":" * to run when user wants to mark a specific task as not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    private int index;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     * Constructor of UnmarkCommand.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     * @param body Position of the task to mark as not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    public UnmarkCommand(String body) {","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"        this.index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     * Marks the Task as not done according","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     * to index given by the user if available.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList containing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"     * @param ui Ui class for invoking user feedback.","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"     * @param storage Storage class used to save files.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When index of task to mark as not done","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     *                       is out of bounds or file cannot be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"            tasks.getAt(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"            int temp \u003d index + 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"            throw new JeffException(\" ☹ OOPS!!! The task you want to mark as not done at index \"","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"                    + temp + \" is out of bounds,\"","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"                    + \"please double check the index number\");","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        tasks.unmark(index);","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"        ui.showUnmark(tasks.getString(index));","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"     * Used to exit the Jeff program.","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"     * @return false to keep running.","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":62}},{"path":"src/main/java/jeff/main/Jeff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.main;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.command.Command;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"import jeff.ui.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":" * Jeff class is a task manager with a variety of commands.","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":" * To see the full list of commands, check the readme.txt.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"public class Jeff {","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Jeff class.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"     * @param filePath Path of saved file.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    public Jeff(String filePath) {","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"        } catch (JeffException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    public void run() {","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"        ui.showLine();","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"            try {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"            } catch (JeffException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"            } finally {","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"                ui.showLine();","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"        new Jeff(\"data/tasks.txt\").run();","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":61}},{"path":"src/main/java/jeff/main/JeffException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.main;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":" * JeffException class is a custom exception class to handle","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":" * problems that might occur.","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"public class JeffException extends Exception {","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"     * Constructor for the JeffException class.","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"     * @param errorMessage Exception message.","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    public JeffException(String errorMessage) {","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":18}},{"path":"src/main/java/jeff/parser/DateParse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":" * DateParse class parse a varying format of dates into a LocalDate object.","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"public class DateParse {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    private boolean isFound \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    // All the available formats Jeff accepts as dates","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    ArrayList\u003cDateTimeFormatter\u003e knownPatterns \u003d new ArrayList\u003cDateTimeFormatter\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format3 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format4 \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format5 \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format6 \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format7 \u003d DateTimeFormatter.ofPattern(\"yyyy-M-dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format8 \u003d DateTimeFormatter.ofPattern(\"yyyy/M/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format9 \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format10 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format11 \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format12 \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format13 \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format14 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format15 \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format16 \u003d DateTimeFormatter.ofPattern(\"dd/M/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"     * Constructor for DateParse","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"     * @param str String to be parsed into a LocalDate object","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When no available format is available to parse date input.","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"    public DateParse(String str) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format1);","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format2);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format3);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format4);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format5);","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format6);","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format7);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format8);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format9);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format10);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format11);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format12);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format13);","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format14);","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format15);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format16);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"        int curr \u003d 0;","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"        while((!isFound) \u0026\u0026 curr \u003c 16) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"                date \u003d LocalDate.parse(str, knownPatterns.get(curr));","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"                isFound \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"                curr++;","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"jinnhl"},"content":"        if ((!isFound) \u0026\u0026 curr \u003d\u003d 16) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"jinnhl"},"content":"            throw new JeffException(\"Sorry but Jeff does not understand the date format given\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"jinnhl"},"content":"                    + \"Please check the readme.txt for the acceptable formats.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"jinnhl"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":81}},{"path":"src/main/java/jeff/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.command.ByeCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import jeff.command.Command;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.command.DeadlineCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"import jeff.command.DeleteCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.command.EventCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"import jeff.command.HelpCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"import jeff.command.ListCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"import jeff.command.MarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"import jeff.command.TodoCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"import jeff.command.UnmarkCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":" * Parser class is used to parse the raw input from the user","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":" * and call the correct Command class while handling exceptions.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"public class Parser {","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     * Parses the user input and calls the correct command","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     * @param fullCommand Raw input from user.","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"     * @return Returns the command according to what the user wants.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When certain information are missing, or formatting is wrong.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"    public static Command parse(String fullCommand) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        String[] splitCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"        String keyword \u003d splitCommand[0];","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"        // To prevent NullPointerException for when body does not exist.","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"        String body \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"        int len \u003d splitCommand.length;","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"        if (len \u003e 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"            body \u003d splitCommand[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        // Perform the correct instructions according to the keyword.","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"        switch(keyword) {","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"        case (\"bye\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"        case (\"list\") :","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"        case (\"mark\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"            // When no index is given.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! Please tell me the task\u0027s\"","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"                        + \" index number so that I can mark it as done.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"            return new MarkCommand(body);","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"        case (\"unmark\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"            // When no index is given.","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! Please tell me the task\u0027s\"","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"                        + \" index number so that I can mark it as not done.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"            return new UnmarkCommand(body);","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        case (\"todo\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"            // When no description is given.","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"            return new TodoCommand(body);","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"        case (\"deadline\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"            // When no description is given.","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"jinnhl"},"content":"            String[] splitBody \u003d body.split(\" /by \", 2);","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"jinnhl"},"content":"            String description \u003d splitBody[0];","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"jinnhl"},"content":"            // To prevent NullPointerException for when body does not exist.","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"jinnhl"},"content":"            String dateInfo \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"jinnhl"},"content":"            int bodyLength \u003d splitBody.length;","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"jinnhl"},"content":"            if (bodyLength \u003e 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"jinnhl"},"content":"                dateInfo \u003d splitBody[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"jinnhl"},"content":"            // When no description or dateInfo are given.","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"jinnhl"},"content":"            if (description.equals(\"\") || description.equals(\" \")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"jinnhl"},"content":"            } else if (bodyLength \u003d\u003d 1 || dateInfo.equals(\"\") || dateInfo.equals(\" \")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! Please input a due date for this task\");","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"jinnhl"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"jinnhl"},"content":"                return new DeadlineCommand(description, dateInfo);","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"jinnhl"},"content":"        case (\"event\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"jinnhl"},"content":"            // When no description is given.","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"jinnhl"},"content":"            splitBody \u003d body.split(\" /at \", 2);","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"jinnhl"},"content":"            description \u003d splitBody[0];","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"jinnhl"},"content":"            // To prevent NullPointerException for when body does not exist.","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"jinnhl"},"content":"            dateInfo \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"jinnhl"},"content":"            bodyLength \u003d splitBody.length;","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"jinnhl"},"content":"            if (bodyLength \u003e 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"jinnhl"},"content":"                dateInfo \u003d splitBody[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"jinnhl"},"content":"            // When no description or dateInfo are given.","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"jinnhl"},"content":"            if (description.equals(\"\") || description.equals(\" \")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"jinnhl"},"content":"            } else if (bodyLength \u003d\u003d 1 || dateInfo.equals(\"\") || dateInfo.equals(\" \")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! Please input a due date for this task\");","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"jinnhl"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"jinnhl"},"content":"                return new EventCommand(description, dateInfo);","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":113,"author":{"gitId":"jinnhl"},"content":"        case (\"delete\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":114,"author":{"gitId":"jinnhl"},"content":"            // When no description is given.","lastModifiedDate":"2022-02-07"},{"lineNumber":115,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":116,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\" ☹ OOPS!!! Please tell me the task\u0027s\"","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"jinnhl"},"content":"                        + \" index number so that I can delete it from the list.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"jinnhl"},"content":"            return new DeleteCommand(body);","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"jinnhl"},"content":"        default:","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"jinnhl"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":124,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":124}},{"path":"src/main/java/jeff/parser/TimeParse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":" * TimeParse class parses a varying 4 digit military time into a 12 hour LocalTime object.","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"public class TimeParse {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    private String timeStr;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"     * Constructor of TimeParse.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"     * @param str String to be parsed into LocalTime object.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    public TimeParse(String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"        this.timeStr \u003d str.substring(0, 2) + \":\" + str.substring(2);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"        time \u003d LocalTime.parse(timeStr);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":28}},{"path":"src/main/java/jeff/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Deadline;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Event;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"import jeff.task.Todo;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"import java.io.File;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":" * Storage class for loading and saving from an external file.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"public class Storage {","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    private String filePath;","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     * @param filePath Location of external file.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     * Loads the contents of the external file into a TaskList if any.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"     * @return TaskList filled with the contents of the external file.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When no available format is available to parse dateInfo.","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"    public TaskList load() throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        // When the file or directory does not exist, create it.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        Scanner sc;","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"            sc \u003d new Scanner(f);","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"            File parent \u003d f.getParentFile();","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"            if (!parent.exists()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"                parent.mkdir();","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"            return tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"        // Look through every line on the external file and add to TaskList.","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"            try {","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"                String[] inputLine \u003d input.split(\"\\\\| \", 4);","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"                String type \u003d inputLine[0];","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"                String done \u003d inputLine[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"                String name \u003d inputLine[2];","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"                String time;","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"                // New task from the current line","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"                Task curr;","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"                // Check what type of task is this.","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"jinnhl"},"content":"                switch (type) {","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"jinnhl"},"content":"                    case \"T \":","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"jinnhl"},"content":"                        curr \u003d new Todo(name);","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"jinnhl"},"content":"                    case \"D \":","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"jinnhl"},"content":"                        time \u003d inputLine[3];","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"jinnhl"},"content":"                        curr \u003d new Deadline(name.substring(0, name.length() - 1), time);","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"jinnhl"},"content":"                    case \"E \":","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"jinnhl"},"content":"                        time \u003d inputLine[3];","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"jinnhl"},"content":"                        curr \u003d new Event(name.substring(0, name.length() - 1), time);","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"jinnhl"},"content":"                    default:","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"jinnhl"},"content":"                        curr \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"jinnhl"},"content":"                // Check if the task is marked as done.","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"jinnhl"},"content":"                switch (done) {","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"jinnhl"},"content":"                    case \"1 \":","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"jinnhl"},"content":"                        curr.setMark();","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"jinnhl"},"content":"                    case \"0 \":","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"jinnhl"},"content":"                // After all the necessary information, add it into the TaskList.","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"jinnhl"},"content":"                tasks.add(curr);","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"jinnhl"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"jinnhl"},"content":"                throw new JeffException(\"Invalid date time format at: \" + input","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"jinnhl"},"content":"                        + \"Please refer to readme.txt for the available formats\");","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"jinnhl"},"content":"        sc.close();","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"jinnhl"},"content":"        return tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"jinnhl"},"content":"     * Saves the current Tasks on the TaskList directly onto the filePath.","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"jinnhl"},"content":"     * @param tasks TaskList to be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"jinnhl"},"content":"    public void save(TaskList tasks) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":113,"author":{"gitId":"jinnhl"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-07"},{"lineNumber":114,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":115,"author":{"gitId":"jinnhl"},"content":"            // For each task, store all its information into a string.","lastModifiedDate":"2022-02-07"},{"lineNumber":116,"author":{"gitId":"jinnhl"},"content":"            for (int n \u003d 0; n \u003c tasks.size(); n++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":117,"author":{"gitId":"jinnhl"},"content":"                Task currTask \u003d tasks.getAt(n);","lastModifiedDate":"2022-02-07"},{"lineNumber":118,"author":{"gitId":"jinnhl"},"content":"                String str \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":119,"author":{"gitId":"jinnhl"},"content":"                String suffix \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":120,"author":{"gitId":"jinnhl"},"content":"                switch (currTask.whatType()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":121,"author":{"gitId":"jinnhl"},"content":"                    case \"T\":","lastModifiedDate":"2022-02-07"},{"lineNumber":122,"author":{"gitId":"jinnhl"},"content":"                        str \u003d \"T | \";","lastModifiedDate":"2022-02-07"},{"lineNumber":123,"author":{"gitId":"jinnhl"},"content":"                        suffix \u003d currTask.getDescription();","lastModifiedDate":"2022-02-07"},{"lineNumber":124,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":125,"author":{"gitId":"jinnhl"},"content":"                    case \"D\":","lastModifiedDate":"2022-02-07"},{"lineNumber":126,"author":{"gitId":"jinnhl"},"content":"                        str \u003d \"D | \";","lastModifiedDate":"2022-02-07"},{"lineNumber":127,"author":{"gitId":"jinnhl"},"content":"                        Deadline tempD \u003d (Deadline) currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":128,"author":{"gitId":"jinnhl"},"content":"                        suffix \u003d tempD.getDescription() + \" | \" + tempD.getOriginalDate();","lastModifiedDate":"2022-02-07"},{"lineNumber":129,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":130,"author":{"gitId":"jinnhl"},"content":"                    case \"E\":","lastModifiedDate":"2022-02-07"},{"lineNumber":131,"author":{"gitId":"jinnhl"},"content":"                        str \u003d \"E | \";","lastModifiedDate":"2022-02-07"},{"lineNumber":132,"author":{"gitId":"jinnhl"},"content":"                        Event tempE \u003d (Event) currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":133,"author":{"gitId":"jinnhl"},"content":"                        suffix \u003d tempE.getDescription() + \" | \" + tempE.getOriginalDate();","lastModifiedDate":"2022-02-07"},{"lineNumber":134,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":135,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":136,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-02-07"},{"lineNumber":137,"author":{"gitId":"jinnhl"},"content":"                switch (currTask.getStatusIcon()) {","lastModifiedDate":"2022-02-07"},{"lineNumber":138,"author":{"gitId":"jinnhl"},"content":"                    case \"X\":","lastModifiedDate":"2022-02-07"},{"lineNumber":139,"author":{"gitId":"jinnhl"},"content":"                        str \u003d str + \"1 | \";","lastModifiedDate":"2022-02-07"},{"lineNumber":140,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":141,"author":{"gitId":"jinnhl"},"content":"                    case \" \":","lastModifiedDate":"2022-02-07"},{"lineNumber":142,"author":{"gitId":"jinnhl"},"content":"                        str \u003d str + \"0 | \";","lastModifiedDate":"2022-02-07"},{"lineNumber":143,"author":{"gitId":"jinnhl"},"content":"                        break;","lastModifiedDate":"2022-02-07"},{"lineNumber":144,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-02-07"},{"lineNumber":145,"author":{"gitId":"jinnhl"},"content":"                // Once all the information is extracted, write it into the file.","lastModifiedDate":"2022-02-07"},{"lineNumber":146,"author":{"gitId":"jinnhl"},"content":"                fw.write(str + suffix + System.lineSeparator());","lastModifiedDate":"2022-02-07"},{"lineNumber":147,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":148,"author":{"gitId":"jinnhl"},"content":"            fw.close();","lastModifiedDate":"2022-02-07"},{"lineNumber":149,"author":{"gitId":"jinnhl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":150,"author":{"gitId":"jinnhl"},"content":"            throw new JeffException(\"Please make sure that\" + filePath","lastModifiedDate":"2022-02-07"},{"lineNumber":151,"author":{"gitId":"jinnhl"},"content":"                    + \" is available to write.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":152,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":153,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":154,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":154}},{"path":"src/main/java/jeff/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.parser.DateParse;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import jeff.parser.TimeParse;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":" * Deadline class is a task customised to store end date of deadlines.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    protected String dateInfo;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    protected String originalDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    protected DateParse date;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    protected TimeParse time;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the Deadline.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     * @param dateInfo Information for which this task is due.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When no available format is available to parse dateInfo.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    public Deadline(String description, String dateInfo) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"        this.originalDate \u003d dateInfo;","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"        String[] str \u003d dateInfo.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"        this.date \u003d new DateParse(str[0]);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        this.time \u003d new TimeParse(str[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"        this.dateInfo \u003d this.date.toString() + \" \" + this.time.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     * Returns the identity of this Task class.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     * @return D for Deadline.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    public String whatType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        return \"D\";","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"     * Returns the original string of dateInfo.","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"     * Used for saving to file.","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"     * @return Original string of dateInfo.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"    public String getOriginalDate() {","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"        return this.originalDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"     * toString method specific for Deadline class,","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     * inherits toString() fromTask class while adding additional information.","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"     * Like the type of task, [D], and date information.","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dateInfo + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":62}},{"path":"src/main/java/jeff/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import jeff.parser.DateParse;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import jeff.parser.TimeParse;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":" * Event class is a task customised to store date of the Event.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    protected String dateInfo;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    protected String originalDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    protected DateParse date;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    protected TimeParse time;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Event class.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the Event.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     * @param dateInfo Information for which this task is due.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     * @throws JeffException When no available format is available to parse dateInfo.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    public Event(String description, String dateInfo) throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"        this.originalDate \u003d dateInfo;","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"        String[] str \u003d dateInfo.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"        this.date \u003d new DateParse(str[0]);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        this.time \u003d new TimeParse(str[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"        this.dateInfo \u003d this.date.toString() + \" \" + this.time.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"     * Returns the identity of this Task class.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     * @return E for Event.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    public String whatType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        return \"E\";","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"     * Returns the original string of dateInfo.","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"     * Used for saving to file.","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"     * @return Original string of dateInfo.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"    public String getOriginalDate() {","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"        return this.originalDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"     * toString method specific for Event class,","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     * inherits toString() fromTask class while adding additional information.","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"     * Like the type of task, [E], and date information.","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.dateInfo + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":62}},{"path":"src/main/java/jeff/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":" * Task class acts as a format for other Task classes.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Task class, set isDone to false by default.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     * Returns a string representation of if the task is done.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"     * @return \"X\" if task is done.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     *         \" \" if task is not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     * Returns a string representation of the description.","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"     * @return Description of this task.","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"        return description;","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"     * Sets the current task to be done.","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"    public void setMark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"     * Sets the current task to be not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"    public void setUnmark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"    public abstract String whatType();","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"jinnhl":58}},{"path":"src/main/java/jeff/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":" * TaskList class is used to store all the Task using an ArrayList","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":" * while providing various methods to manipulate the entries.","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"public class TaskList {","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"     * Constructor of TaskList with no parameters.","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     * Constructor of TaskList with another TaskList as reference..","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    public TaskList(TaskList taskList) {","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"        this.tasks \u003d taskList.tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"     * Returns the number of Tasks stored.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     * @return Size of the ArrayList.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    public int size() {","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"     * Adds the current Task into the TaskList.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"     * @param currTask Task to be stored.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"    public void add(Task currTask) {","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"        this.tasks.add(currTask);","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"     * Deletes the Task at the index.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"     * @param num Index of Task to be deleted.","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"    public void delete(int num) {","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"        this.tasks.remove(num);","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"     * Marks the Task at the index as done.","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"     * @param num Index of task to be marked as done.","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"    public void mark(int num) {","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        this.tasks.get(num).setMark();","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"     * Unmarks the Task at the index as not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"     * @param num Index of task to be marked as not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"    public void unmark(int num) {","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"        this.tasks.get(num).setUnmark();","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"jinnhl"},"content":"     * Returns the Task at the given index.","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"jinnhl"},"content":"     * @param num Index of the Task to return.","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"jinnhl"},"content":"     * @return Task at the current index.","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"jinnhl"},"content":"     * @throws IndexOutOfBoundsException When Task at index is no available.","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"jinnhl"},"content":"    public Task getAt(int num) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"jinnhl"},"content":"        return this.tasks.get(num);","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"jinnhl"},"content":"     * Returns the string of the Task at the given index.","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"jinnhl"},"content":"     * @param num Index of the String of Task to return.","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"jinnhl"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"jinnhl"},"content":"    public String getString(int num) {","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"jinnhl"},"content":"        return this.tasks.get(num).toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":94,"author":{"gitId":"jinnhl"},"content":"     * Checks if the current TaskList is empty.","lastModifiedDate":"2022-02-07"},{"lineNumber":95,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"jinnhl"},"content":"     * @return Boolean value of if the TaskList is empty.","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"jinnhl"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"jinnhl"},"content":"        return this.tasks.size() \u003d\u003d 0;","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":101}},{"path":"src/main/java/jeff/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":" * Todo class is a task customised to store the descriptions of task to do.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the to-do task.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"     * Returns the identity of this Task class.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     * @return T for Event.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    public String whatType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"        return \"T\";","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"     * toString method specific for Todo class,","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"     * inherits toString() fromTask class while adding additional information.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"     * Like the type of task, [T].","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":35}},{"path":"src/main/java/jeff/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":" * Ui class is used to interact with the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"public class Ui {","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"    private static final String LOGO \u003d \"Hello! My name is \\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@      @@.         @@          @@          @@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@      @@.         @@          \u0026@          @@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@      @@.     @@@@@@      @@\u0026@@@     @@@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@      @@.     @@@@@@      @@@@@@     @@@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@      @@.        ,@@          @@          @@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@      @@.     @@@@@@      @@@@@@      @@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@      @@.     @@@@@@      @@@@@@      @@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@       .@@.         #@      @@\u0026@@@      @@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@      .@@@.         #@      @@@@@@      @@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"            + \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    private static final String DIVIDER \u003d \"---------------------------------------------------------------------------\\n\";","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"    private static final String PREFIX \u003d \"    \";","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"    public void showLine() {","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"    public static String addPrefix(String str) {","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        return PREFIX + str;","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"    public String readCommand() {","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"    public void showBye() {","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"Bye, my name is Jeff\");","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"        sc.close();","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"    public void showList(String str) {","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"        System.out.println(str);","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"    public void showEmptyList() {","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"Your task list is currently empty.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"    public void showMark(String currTask){","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + addPrefix(currTask));","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"    public void showUnmark(String currTask) {","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + addPrefix(currTask));","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"    public void showAdded(String currTask, int size) {","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"                        + addPrefix(currTask) + \"\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"                        + \"Now you have \" + size + \" task(s) in the list.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"jinnhl"},"content":"    public void showDelete(String currTask, int size) {","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"jinnhl"},"content":"                + addPrefix(currTask) + \"\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"jinnhl"},"content":"                + \"Now you have \" + size + \" task(s) in the list.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"jinnhl"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"jinnhl"},"content":"        System.out.println(message);","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"jinnhl"},"content":"    public void showHelp() {","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"I do not understand your commands\\n\"","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"jinnhl"},"content":"                + \"Please refer to the readme.txt for the available commands\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":88}},{"path":"src/test/java/jeff/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"    @Test","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public void testString() throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        String description \u003d \"testing\";","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"        String dateInfo \u003d \"2/8/2019 2000\";","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        Deadline currTask \u003d new Deadline(description, dateInfo);","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"        assertEquals(\"[D][ ] testing (by: Aug 02 2019 08:00 pm)\", currTask.toString());","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":17}},{"path":"src/test/java/jeff/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import jeff.main.JeffException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"public class EventTest {","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"    @Test","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public void testString() throws JeffException {","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        String description \u003d \"testing\";","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"        String dateInfo \u003d \"20-8-2019 1800\";","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        Event currTask \u003d new Event(description, dateInfo);","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"        assertEquals(\"[E][ ] testing (at: Aug 20 2019 06:00 pm)\", currTask.toString());","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":17}},{"path":"src/test/java/jeff/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"package jeff.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"public class TodoTest {","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"    @Test","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"    public void testString() {","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"        String description \u003d \"testing\";","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        Todo currTask \u003d new Todo(description);","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"        assertEquals(\"[T][ ] testing\", currTask.toString());","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"jinnhl":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"todo read book","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"mark 2","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"todo join sports club","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"mark 4","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"todo borrow book","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":9}}]
