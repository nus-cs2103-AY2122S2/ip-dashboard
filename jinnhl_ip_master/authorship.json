[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"T | 1 | read book","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | Mon 2-4pm","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":6}},{"path":"data/dukee.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"T | 1 | read book","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":4}},{"path":"src/main/java/DateParse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":" * This class parse a varying format of dates into a LocalDate object.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"public class DateParse {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"    private boolean isFound \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    ArrayList\u003cDateTimeFormatter\u003e knownPatterns \u003d new ArrayList\u003cDateTimeFormatter\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format2 \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format3 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format4 \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format5 \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format6 \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format7 \u003d DateTimeFormatter.ofPattern(\"yyyy-M-dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format8 \u003d DateTimeFormatter.ofPattern(\"yyyy/M/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format9 \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format10 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format11 \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format12 \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format13 \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format14 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format15 \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"    DateTimeFormatter format16 \u003d DateTimeFormatter.ofPattern(\"dd/M/yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    public DateParse(String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format1);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format2);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format3);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format4);","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format5);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format6);","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format7);","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format8);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format9);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format10);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format11);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format12);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format13);","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format14);","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format15);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"        knownPatterns.add(format16);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"        int curr \u003d 0;","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"        while((!isFound) \u0026\u0026 curr \u003c 16) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"                date \u003d LocalDate.parse(str, knownPatterns.get(curr));","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"                isFound \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"                curr++;","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"        if ((!isFound) \u0026\u0026 curr \u003d\u003d 16) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"            System.err.println(\"Format not found\");","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"        this.helper();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"    private LocalDate helper() {","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"        return date;","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":71}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"    protected String dateInfo;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"    protected DateParse date;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"    protected TimeParse time;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Deadline class","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the Deadline","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"     * @param dateInfo Information for which this task is due","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public Deadline(String description, String dateInfo) {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"        String[] str \u003d dateInfo.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        this.date \u003d new DateParse(str[0]);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"        this.time \u003d new TimeParse(str[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"        this.dateInfo \u003d this.date.toString() + \" \" + this.time.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    public String whatType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"        return \"D\";","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     * toString method specific for Deadline class,","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     * inherits toString() fromTask class while adding additional information","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"     * Like the type of task, [D], and date information","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dateInfo + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":32}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"     * main functions like a to-do list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"        Boolean end \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        ArrayList\u003cTask\u003e store \u003d new ArrayList(100);","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"            new ReadFile(store);","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"            System.err.println(e);","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"            System.exit(0);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"        int curr \u003d store.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"        // While loop ends when user inputs bye","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"        while(!end) {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"            String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"                new DukeException().checker(splitInput, curr);","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"                System.err.println(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"                continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"            // If user inputs bye, terminate the program","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"                end \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"            // If user inputs list, run through the to-do list, array store[], and list out all the to-dos","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"            else if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"                for (int n \u003d 0; n \u003c curr; n++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"                    int temp \u003d n + 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"                    System.out.println(temp + \".\" + store.get(n).toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"            // If user inputs keyword mark, mark the task corresponding to the index number as done","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"            else if (splitInput[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"                Integer num \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"                store.get(num).setMark();","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + store.get(num).toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"            // If user inputs keyword unmark, mark the task corresponding to the index number as not done","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"            else if (splitInput[0].equals(\"unmark\")){","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"                Integer num \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"                store.get(num).setUnmark();","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + store.get(num).toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"            // If user inputs keyword to-do, add this task as a Todo class","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"            else if (splitInput[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"                store.add(new Todo(splitInput[1]));","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"                int temp \u003d curr + 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + store.get(curr).toString()","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"                        + \"\\nNow you have \" + temp + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"                curr++;","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"            // If user inputs keyword deadline, add this task as a Deadline class","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"            else if (splitInput[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"                String[] splitInput2 \u003d splitInput[1].split(\" /by \", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"                store.add(new Deadline(splitInput2[0], splitInput2[1]));","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"                int temp \u003d curr + 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"jinnhl"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + store.get(curr).toString()","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"jinnhl"},"content":"                        + \"\\nNow you have \" + temp + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"jinnhl"},"content":"                curr++;","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"jinnhl"},"content":"            // If user inputs keyword event, add this task as an Event class","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"jinnhl"},"content":"            else if (splitInput[0].equals(\"event\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"jinnhl"},"content":"                String[] splitInput2 \u003d splitInput[1].split(\" /at \", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"jinnhl"},"content":"                store.add(new Event(splitInput2[0], splitInput2[1]));","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"jinnhl"},"content":"                int temp \u003d curr + 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"jinnhl"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + store.get(curr).toString()","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"jinnhl"},"content":"                        + \"\\nNow you have \" + temp + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"jinnhl"},"content":"                curr++;","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"jinnhl"},"content":"            // If user inputs keyword delete, delete the task corresponding to the index given","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"jinnhl"},"content":"            else if (splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"jinnhl"},"content":"                Integer num \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"jinnhl"},"content":"                curr--;","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"jinnhl"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + store.get(num).toString()","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"jinnhl"},"content":"                        + \"\\nNow you have \" + curr + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"jinnhl"},"content":"                store.remove(num);","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"jinnhl"},"content":"            // Unused","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"jinnhl"},"content":"            else {}","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"jinnhl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"jinnhl"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"jinnhl"},"content":"            new WriteFile(store);","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"jinnhl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"jinnhl"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"-":4,"jinnhl":100}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":" * DukeException class is a custom exception class to handle","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":" * problems that might occur in Duke.java","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public DukeException() {}","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"     * checker method is used to run checks for all the different types of request","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"     * and check if it invalids any of them. Returns a description or advice on what","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"     * is missing or how to resolve it.","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"     * @param arr This String array stores the user\u0027s input, used to check for validity","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"     * @param curr Holds the capacity for the stored list, used to check if request is out of bounds","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    public void checker(String[] arr, int curr) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"        String request \u003d arr[0];","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"        int len \u003d arr.length;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"        if (request.equals(\"delete\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"                throw new DukeException(\" ☹ OOPS!!! Please tell me the task\u0027s\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"                        \" index number so that I can delete it from the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"                Integer index \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"                if (index \u003c 1 || index \u003e curr) {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"                    throw new DukeException(\" ☹ OOPS!!! The task you want to delete is out of bounds,\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"                            \" please double check the index number\");","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"        } else if (request.equals(\"mark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"                throw new DukeException(\" ☹ OOPS!!! Please tell me the task\u0027s\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"                        \" index number so that I can mark it as done.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"                Integer index \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"                if (index \u003c 1 || index \u003e curr) {","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"                    throw new DukeException(\" ☹ OOPS!!! The task you want to mark as done is out of bounds,\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"                            \" please double check the index number\");","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"        } else if (request.equals(\"unmark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"                throw new DukeException(\"☹ OOPS!!! Please tell me the task\u0027s\\\" +\\n\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"                        \"                        \\\" index number so that I can mark it as not done.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"                Integer index \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"                if (index \u003c 1 || index \u003e curr) {","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"                    throw new DukeException(\" ☹ OOPS!!! The task you want to mark as not done is out of bounds,\" +","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"                            \" please double check the index number\");","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"        } else if (request.equals(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"jinnhl"},"content":"                throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"jinnhl"},"content":"        } else if (request.equals(\"deadline\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"jinnhl"},"content":"                throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"jinnhl"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"jinnhl"},"content":"                String[] components \u003d arr[1].split(\"/by\", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"jinnhl"},"content":"                if (components[0].equals(\"\") || components[0].equals(\" \")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"jinnhl"},"content":"                    throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"jinnhl"},"content":"                } else if (components.length \u003d\u003d 1 || components[1].equals(\"\") || components[1].equals(\" \")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"jinnhl"},"content":"                    throw new DukeException(\" ☹ OOPS!!! Please input a due date for this task\");","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"jinnhl"},"content":"                } else {}","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"jinnhl"},"content":"        } else if (request.equals(\"event\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"jinnhl"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"jinnhl"},"content":"                throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"jinnhl"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"jinnhl"},"content":"                String[] components \u003d arr[1].split(\"/at\", 2);","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"jinnhl"},"content":"                if (components[0].equals(\"\") || components[0].equals(\" \")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"jinnhl"},"content":"                    throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"jinnhl"},"content":"                } else if (components.length \u003d\u003d 1 || components[1].equals(\"\") || components[1].equals(\" \")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"jinnhl"},"content":"                    throw new DukeException(\" ☹ OOPS!!! Please input a due date for this task\");","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"jinnhl"},"content":"                } else {}","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"jinnhl"},"content":"        } else if (request.equals(\"bye\") || request.equals(\"list\")) {}","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"jinnhl"},"content":"        else {","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"jinnhl"},"content":"            throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n \" +","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"jinnhl"},"content":"                    \"                         Please add a valid request\");","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":89}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"    protected String dateInfo;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"    protected DateParse date;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"    protected TimeParse time;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Event class","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the Event","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"     * @param dateInfo Information for which this task is due","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public Event(String description, String dateInfo) {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"        String[] str \u003d dateInfo.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        this.date \u003d new DateParse(str[0]);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"        this.time \u003d new TimeParse(str[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"        this.dateInfo \u003d this.date.toString() + \" \" + this.time.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    public String whatType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"        return \"E\";","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"     * toString method specific for Event class,","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"     * inherits toString() fromTask class while adding additional information","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"     * Like the type of task, [E], and date information","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.dateInfo + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":32}},{"path":"src/main/java/ReadFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":" * This class reads the content of a txt file from a predetermined path","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":" * Referenced from topic W3.3c","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"public class ReadFile {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    public static final String ADDRESS \u003d \"data/duke.txt\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    public static final String PARENTADDRESS \u003d \"data/\";","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    public ReadFile(ArrayList\u003cTask\u003e store) throws FileNotFoundException {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"        if (Files.notExists(Path.of(PARENTADDRESS))) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"            throw new FileNotFoundException(\"Please initialise parent folder at [project_root]/data/\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"                    \" and place the input file duke.txt inside\");","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"        } else if (Files.notExists(Path.of(ADDRESS))) {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"            throw new FileNotFoundException(\"Duke requires an input file called duke.txt inside of data folder.\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"                    \"Please create and try running Duke again.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"        File f \u003d new File(ADDRESS);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"            String[] inputLine \u003d s.nextLine().split(\"\\\\| \", 4);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"            Task curr;","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"            switch(inputLine[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"                case \"T \" :","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"                    curr \u003d new Todo(inputLine[2]);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"                case \"D \" :","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"                    String strD \u003d inputLine[2];","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"                    curr \u003d new Deadline(strD.substring(0, strD.length() - 1), inputLine[3]);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"                case \"E \" :","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"                    String strE \u003d inputLine[2];","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"                    curr \u003d new Event(strE.substring(0, strE.length() - 1), inputLine[3]);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"                default:","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"                    curr \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"            switch (inputLine[1]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"                case \"1 \" :","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"                    curr.setMark();","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"                case \"0 \" :","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"            store.add(curr);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":54}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Task class, set isDone to false by default","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the task","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"    public void setMark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"        isDone \u003d true; // Set the value of isDone to true","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"    public void setUnmark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"        isDone \u003d false; // Set the value of isDone to false","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"    public abstract String whatType();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"jinnhl":31}},{"path":"src/main/java/TimeParse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":" * This class parse a varying 4 digit military time into a 12 hour LocalTime object.","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"public class TimeParse {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"    private String timeStr;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public TimeParse(String str) {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        this.timeStr \u003d str.substring(0, 2) + \":\" + str.substring(2);","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"        time \u003d LocalTime.parse(timeStr);","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        this.helper();","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"    private LocalTime helper() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"        return time;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"     * Constructor for Todo class","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"     * @param description Name of the to-do task","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public String whatType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"        return \"T\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"     * toString method specific for Todo class,","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"     * inherits toString() fromTask class while adding additional information","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"     * Like the type of task, [T]","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":24}},{"path":"src/main/java/WriteFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":" * This class writes a txt file to a predetermined path","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":" * Referenced from topic W3.3c","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"public class WriteFile {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"jinnhl"},"content":"    public static final String ADDRESS \u003d \"data/duke.txt\";","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"jinnhl"},"content":"    public WriteFile(ArrayList\u003cTask\u003e store) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jinnhl"},"content":"        FileWriter fw \u003d new FileWriter(ADDRESS);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"jinnhl"},"content":"        for (Task curr : store) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jinnhl"},"content":"            String str \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jinnhl"},"content":"            String suffix \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"jinnhl"},"content":"            switch(curr.whatType()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"jinnhl"},"content":"                case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jinnhl"},"content":"                    str \u003d \"T | \";","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"jinnhl"},"content":"                    suffix \u003d curr.description;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jinnhl"},"content":"                case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"jinnhl"},"content":"                    str \u003d \"D | \";","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jinnhl"},"content":"                    Deadline tempD \u003d (Deadline) curr;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"jinnhl"},"content":"                    suffix \u003d tempD.description + \" | \" + tempD.dateInfo;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"jinnhl"},"content":"                case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"jinnhl"},"content":"                    str \u003d \"E | \";","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"jinnhl"},"content":"                    Event tempE \u003d (Event) curr;","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"jinnhl"},"content":"                    suffix \u003d tempE.description + \" | \" + tempE.dateInfo;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"jinnhl"},"content":"            switch(curr.getStatusIcon()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"jinnhl"},"content":"                case \"X\":","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"jinnhl"},"content":"                    str \u003d str + \"1 | \";","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"jinnhl"},"content":"                case \" \":","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"jinnhl"},"content":"                    str \u003d str + \"0 | \";","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"jinnhl"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"jinnhl"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"jinnhl"},"content":"            fw.write(str + suffix + System.lineSeparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"jinnhl"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"jinnhl"},"content":"        fw.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"jinnhl"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"jinnhl"},"content":"//","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"jinnhl"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"jinnhl"},"content":"//        String file2 \u003d \"../../../data/duke.txt\";","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"jinnhl"},"content":"//        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"jinnhl"},"content":"//            writeToFile(file2, \"first line\" + System.lineSeparator() + \"second line\");","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"jinnhl"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"jinnhl"},"content":"//            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"jinnhl"},"content":"//        }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"jinnhl"},"content":"//    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"jinnhl"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"jinnhl"},"content":"","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jinnhl":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinnhl"},"content":"todo read book","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"jinnhl"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"jinnhl"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jinnhl"},"content":"mark 2","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jinnhl"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jinnhl"},"content":"todo join sports club","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jinnhl"},"content":"mark 4","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jinnhl"},"content":"todo borrow book","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jinnhl"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"jinnhl":9}}]
