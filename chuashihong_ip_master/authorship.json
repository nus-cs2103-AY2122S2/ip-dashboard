[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"D | 1 | a  | 2022-01-12","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"T | 0 | 1","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"T | 0 | sdfa","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import java.util.*;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"            System.out.println(\"No path exist\");","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        String lines \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"        String endline \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Hello!!! I am Duke, a new born chatbot\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"How may I serve you?\");","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"        while (true) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"            storage.saveFile(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Bye! See you again\");","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"                    break;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Here are all your tasks:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"                        System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines + \"\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"                    try {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"                        Task markTask \u003d tasks.get(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"                        if (markTask.isDone \u003d\u003d true) {","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(\"You have already done this task!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(markTask.markAsDone());","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"                            continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"Good Job! You have marked this task as done!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(markTask.markAsDone());","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"                        continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"                        throw new DukeException(\"You have entered invalid task or that task does not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"                    try {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"                        Task markTask \u003d tasks.get(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"                        if (markTask.isDone \u003d\u003d false) {","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(\"This task is already in undone status\");","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(markTask.markAsUndone());","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"                            continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"OK, I have marked this as not done yet:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(markTask.markAsUndone());","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"                        continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"                        throw new DukeException(\"You have entered invalid task or that task does not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"                        throw new TodoException(\"☹ OOPS!!! The description of a todo cannot be empty.(please insert again)\");","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"                    String todoDesription \u003d input.substring(5);","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"                    Task todo \u003d new Todo(todoDesription);","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"                    tasks.add(todo);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Got it, I have added a TODO task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(todo.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"                        throw new DeadlineException(\"Emm, what is your task again? (please insert again)\");","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"                    String[] split1 \u003d input.split(\"/by \");","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"                    if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"                        throw new DeadlineException(\"You need to tell me your deadline date\\n e.g deadline \u003cyourtask\u003e /by \u003cdeadline date\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"                    String deadlineDesription \u003d split1[0].substring(9);","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"                    String deadlineDate \u003d split1[1];","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"                    Task deadline \u003d new Deadline(deadlineDesription, deadlineDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Got it, I have added a DEADLINE task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(deadline.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"event\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"                        throw new EventException(\"The format should be: event \u003cdescription\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"                    String[] split1 \u003d input.split(\"/at \");","lastModifiedDate":"2022-01-21"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"                    if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"                        throw new EventException(\"You need to tell me your event date\\n e.g event \u003cdescription\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"                    String eventDesription \u003d split1[0].substring(6);","lastModifiedDate":"2022-01-21"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"                    String eventDate \u003d split1[1];","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"                    Task event \u003d new Event(eventDesription, eventDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"                    tasks.add(event);","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Got it, I have added an EVENT task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(event.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"                    try {","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"                        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(\"Which task are you deleting? Insert a number like this: delete \u003ctask number\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"                            continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"                        if (parts.length \u003e 2) {","lastModifiedDate":"2022-01-21"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"                            throw new NumberFormatException();","lastModifiedDate":"2022-01-21"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"                        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"                        Task taskToBeDelete \u003d tasks.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"Okay, I have removed this task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(taskToBeDelete);","lastModifiedDate":"2022-01-21"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"                        tasks.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"                        continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"                        throw new DeleteException(\"This task does not exist, there are \" + tasks.size() + \" tasks now\");","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"                    catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"                        throw new DeleteException(\"format must be: delete \u003ctask number\u003e , other format is not acceptable\");","lastModifiedDate":"2022-01-21"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-21"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-21"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"            new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"chuashihong":173}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" * A type of tasks, have a specific date(deadline)","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    protected String by;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * Transform the task into the format of data, to be stored into file data","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @return A formatted string","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        String bool;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        if(this.isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"0\";","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        return \"D | \" + bool + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":43}},{"path":"src/main/java/duke/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * Exception class handling deadline task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class DeadlineException extends DukeException{","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public DeadlineException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":11}},{"path":"src/main/java/duke/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Exception class handling delete task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class DeleteException extends DukeException{","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public DeleteException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import javax.swing.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.util.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class Duke {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"     * A task taking chatbot","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    private String lines \u003d \"____________________________\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"            \"            ________________________________\";","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    private String endline \u003d \"___________________________\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"            \"            _________________________________\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"            System.out.println(\"No path exist\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"     * Main method to activate chatbot","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        while (true) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"            storage.saveFile(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"                    ui.bye();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                    ui.list(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"                    ui.mark(tasks, parts);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"                    ui.unmark(tasks, parts);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"                    ui.todo(tasks, parts, input);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"                    ui.event(tasks,parts,input);","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"                    ui.event(tasks,parts,input);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"                    ui.delete(tasks,parts);","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"            new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":89}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Exception class handling all kind of Duke exception","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * A type of tasks, have a specific ddate","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    protected String at;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * Transform the task into the format of data, to be stored into file data","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @return A formatted string","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        String bool;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        if(this.isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"0\";","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        return \"E | \" + bool + \" | \" + this.description + \" | \" + this.at;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":43}},{"path":"src/main/java/duke/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * Exception class handling event task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public EventException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":11}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import java.io.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" * Storage class that helps to save or load existing data from local site","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"     * Will load the data if it exist, if it does not exist, it will create a new file named \"tasks.txt\"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     * @return An array of loaded tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        // TODO: 26/1/2022","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            File path \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"            File directory \u003d new File(\"data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"                System.out.println(\"directory ./data/ created\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"                File data \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"                data.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"                System.out.println(\"then, file ./data/tasks is also created\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"                return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"                if (path.createNewFile()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"file ./data/tasks.txt created\");","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"normal\");","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                    result \u003d loadFile(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"                    return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"                return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        } catch(IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"     * Method to load file line by line and translate them into list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"     * @param path file path to the data","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"     * @return An array of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    public ArrayList\u003cTask\u003e loadFile(File path) throws FileNotFoundException, IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        FileReader reader \u003d new FileReader(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        BufferedReader br \u003d new BufferedReader(reader);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        while(br.ready()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"            String[] task \u003d br.readLine().split(\" \\\\| \");","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"            boolean done;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"            if (task[1].equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"                done \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"                done \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"            switch (task[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"            case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"                result.add(new Todo(task[2], done));","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"                result.add(new Deadline(task[2], task[3], done));","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"            case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"                result.add(new Event(task[2], task[3], done));","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"     * Write current list of tasks into the file","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"    public void saveFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"        for (int i \u003d 0; i \u003ctaskList.size() ; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"            fileWriter.write(taskList.get(i).dataFormatOfTask() + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        fileWriter.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":99}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * A class that store the information about a task","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        return this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    public String markAsDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        return this.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public String markAsUndone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        return this.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        return null;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":47}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * A class that stores a lot of tasks as one array","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    public int size() {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    public void add(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        this.taskList.add(new Task(description));","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public void markAsUndone(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        this.taskList.get(index).markAsUndone();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":45}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * A type of tasks, do not have date","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"        super(description,isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     * Transform the task into the format of data, to be stored into file data","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * @return A formatted string","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        String bool;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        if(this.isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"0\";","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        return \"T | \" + bool + \" | \" + this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":34}},{"path":"src/main/java/duke/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Exception class handling todo task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class TodoException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public TodoException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" * User Interface class, print beautiful output to user","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    private String lines \u003d \"____________________________\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"            \"________________________________\";","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    private String endline \u003d \"___________________________\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"            \"_________________________________\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     * constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Hello!!! I am Duke, a new born chatbot\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"How may I serve you?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * print bye message","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public void bye() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Bye! See you again\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"     * print list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"     * @param tasks current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    public void list(TaskList tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Here are all your tasks:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        System.out.println(lines + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"     * Mark task as done","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"     * @param tasks current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"     * @param parts User\u0027s input (split into parts)","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    public void mark(TaskList tasks, String[] parts) throws DukeException, IndexOutOfBoundsException {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"            Task markTask \u003d tasks.get(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"            System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"            if (markTask.isDone \u003d\u003d true) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"                System.out.println(\"You have already done this task!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"                System.out.println(markTask.markAsDone());","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"                System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"            System.out.println(\"Good Job! You have marked this task as done!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"            System.out.println(markTask.markAsDone());","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"            System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"            throw new DukeException(\"You have entered invalid task or that task does not exist!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"     * Mark task as undone","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"     * @param tasks current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"     * @param parts User\u0027s input (split into parts)","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"    public void unmark(TaskList tasks, String[] parts) throws DukeException, IndexOutOfBoundsException {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"            Task markTask \u003d tasks.get(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"            System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"            if (markTask.isDone \u003d\u003d false) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"                System.out.println(\"This task is already in undone status\");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"                System.out.println(markTask.markAsUndone());","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"                System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"            System.out.println(\"OK, I have marked this as not done yet:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"            System.out.println(markTask.markAsUndone());","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"            System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"            throw new DukeException(\"You have entered invalid task or that task does not exist!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"     * Add a todo task","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"     * @param tasks Current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"     * @param parts User\u0027s input (split into parts)","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"     * @param input User\u0027s original input","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"     * @throws TodoException","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"    public void todo(TaskList tasks, String[] parts, String input) throws TodoException {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"            throw new TodoException(\"☹ OOPS!!! The description of a todo cannot be empty.(please insert again)\");","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"        String todoDesription \u003d input.substring(5);","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"        Task todo \u003d new Todo(todoDesription);","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"        System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Got it, I have added a TODO task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"        System.out.println(todo.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"        System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"     * Add a deadline task","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"     * @param tasks Current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"     * @param parts User\u0027s input (split into parts)","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"     * @param input User\u0027s original input","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"     * @throws DeadlineException","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"    public void deadline(TaskList tasks, String[] parts, String input) throws DeadlineException {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"            throw new DeadlineException(\"Emm, what is your task again? (please insert again)\");","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"        String[] split1 \u003d input.split(\"/by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"        if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"            throw new DeadlineException(\"You need to tell me your deadline date\\n e.g deadline \u003cyourtask\u003e /by \u003cdeadline date\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"        String deadlineDesription \u003d split1[0].substring(9);","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"        String deadlineDate \u003d split1[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"        Task deadline \u003d new Deadline(deadlineDesription, deadlineDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"        System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Got it, I have added a DEADLINE task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"        System.out.println(deadline.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"        System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"     * Add an event task","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"     * @param tasks Current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"     * @param parts User\u0027s input (split into parts)","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"     * @param input User\u0027s original input","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"     * @throws DeadlineException","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"    public void event(TaskList tasks, String[] parts, String input) throws EventException {","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"            throw new EventException(\"The format should be: event \u003cdescription\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"        String[] split1 \u003d input.split(\"/at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"        if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"            throw new EventException(\"You need to tell me your event date\\n e.g event \u003cdescription\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"        String eventDesription \u003d split1[0].substring(6);","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"        String eventDate \u003d split1[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"        Task event \u003d new Event(eventDesription, eventDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"        tasks.add(event);","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"        System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Got it, I have added an EVENT task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"        System.out.println(event.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"        System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"     * Delete a task","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"     * @param tasks Current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"     * @param parts User\u0027s input (split into parts)","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"     * @throws DeleteException","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"    public void delete(TaskList tasks, String[] parts) throws DeleteException{","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"                System.out.println(\"Which task are you deleting? \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"                        \"Insert a number like this: delete \u003ctask number\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"chuashihong"},"content":"            if (parts.length \u003e 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"chuashihong"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"chuashihong"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"chuashihong"},"content":"            Task taskToBeDelete \u003d tasks.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"chuashihong"},"content":"            System.out.println(lines);","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"chuashihong"},"content":"            System.out.println(\"Okay, I have removed this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"chuashihong"},"content":"            System.out.println(taskToBeDelete);","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"chuashihong"},"content":"            tasks.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"chuashihong"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"chuashihong"},"content":"            System.out.println(endline);","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"chuashihong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"chuashihong"},"content":"            throw new DeleteException(\"This task does not exist, there are \" + tasks.size() + \" tasks now\");","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"chuashihong"},"content":"        catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"chuashihong"},"content":"            throw new DeleteException(\"format must be: delete \u003ctask number\u003e , other format is not acceptable\");","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":195}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    public void test_deadlineFormat() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"D | 1 | week3_project | 2022-01-12\",","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"                new Deadline(\"week3_project\", \"2022-01-12\", true ).dataFormatOfTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":14}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":9}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    public void testdataFormatOfTask1() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"T | 0 | doing project\",","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"                new Todo(\"doing project\").dataFormatOfTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    public void testdataFormatOfTask2() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"T | 1 | doing project\",","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"                new Todo(\"doing project\", true).dataFormatOfTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"blah","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"todo task1","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"todo task2 task2","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"todo","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"deadline dltask1 /by date1","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"deadline dltask2 /by","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"deadline dltask3","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"deadline","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"event ev1 /at evdate1","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"event ev2 /at","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"event ev3","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"event","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":16}}]
