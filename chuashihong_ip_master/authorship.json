[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    protected String by;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":14}},{"path":"src/main/java/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"public class DeadlineException extends DukeException{","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    public DeadlineException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":6}},{"path":"src/main/java/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"public class DeleteException extends DukeException{","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"    public DeleteException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import java.util.*;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"        String lines \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"        String endline \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"Hello!!! I am Duke, a new born chatbot\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"        System.out.println(\"How may I serve you?\");","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        while (true) {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"                String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Bye! See you again\");","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"                    break;","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Here are all your tasks:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"                    for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"                        System.out.println((i + 1) + \".\" + allTasks.get(i).toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"//                for(Task t :allTasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"//                    System.out.println(\"1. \" + t.getDescription());","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"//                }","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines + \"\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                    try {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"                        Task markTask \u003d allTasks.get(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"                        if (markTask.isDone \u003d\u003d true) {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(\"You have already done this task!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(markTask.markAsDone());","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"                            continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"Good Job! You have marked this task as done!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(markTask.markAsDone());","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                        continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"                        throw new DukeException(\"You have entered invalid task or that task does not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"                    try {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"                        Task markTask \u003d allTasks.get(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"                        if (markTask.isDone \u003d\u003d false) {","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(\"This task is already in undone status\");","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(markTask.markAsUndone());","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"                            continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"OK, I have marked this as not done yet:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(markTask.markAsUndone());","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"                        continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"                        throw new DukeException(\"You have entered invalid task or that task does not exist!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"//                String todoDesription \u003d Arrays.toString(Arrays.copyOfRange(parts,1,parts.length));","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"                        throw new TodoException(\"☹ OOPS!!! The description of a todo cannot be empty.(please insert again)\");","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"                    String todoDesription \u003d input.substring(5);","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"                    Task todo \u003d new Todo(todoDesription);","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"                    allTasks.add(todo);","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Got it, I have added a TODO task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(todo.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Now you have \" + allTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"                        throw new DeadlineException(\"Emm, what is your task again? (please insert again)\");","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"                    String[] split1 \u003d input.split(\"/by \");","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"                    if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"                        throw new DeadlineException(\"You need to tell me your deadline date\\n e.g deadline \u003cyourtask\u003e /by \u003cdeadline date\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"                    String deadlineDesription \u003d split1[0].substring(9);","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"                    String deadlineDate \u003d split1[1];","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"                    Task deadline \u003d new Deadline(deadlineDesription, deadlineDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"                    allTasks.add(deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Got it, I have added a DEADLINE task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(deadline.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Now you have \" + allTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"event\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"                        throw new EventException(\"The format should be: event \u003cdescription\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"                    String[] split1 \u003d input.split(\"/at \");","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"                    if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"                        throw new EventException(\"You need to tell me your event date\\n e.g event \u003cdescription\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"                    String eventDesription \u003d split1[0].substring(6);","lastModifiedDate":"2022-01-21"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"                    String eventDate \u003d split1[1];","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"                    Task event \u003d new Event(eventDesription, eventDate);","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"                    allTasks.add(event);","lastModifiedDate":"2022-01-21"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Got it, I have added an EVENT task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(event.toString());","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"Now you have \" + allTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"                    continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"                if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"                    try {","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"                        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"                            System.out.println(\"Which task are you deleting? Insert a number like this: delete \u003ctask number\u003e\");","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"                            continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"                        if (parts.length \u003e 2) {","lastModifiedDate":"2022-01-21"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"                            throw new NumberFormatException();","lastModifiedDate":"2022-01-21"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"                        }","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"                        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"                        Task taskToBeDelete \u003d allTasks.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"Okay, I have removed this task:\");","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(taskToBeDelete);","lastModifiedDate":"2022-01-21"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"                        allTasks.remove(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(\"Now you have \" + allTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"                        System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"                        continue;","lastModifiedDate":"2022-01-21"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"                        throw new DeleteException(\"This task does not exist, there are \" + allTasks.size() + \" tasks now\");","lastModifiedDate":"2022-01-21"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"//                  catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"//                        throw new DeleteException(\"You need to delete like this: delete \u003ctask number\u003e , do not put extra wording\");","lastModifiedDate":"2022-01-21"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"                    catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"                        throw new DeleteException(\"format must be: delete \u003ctask number\u003e , other format is not acceptable\");","lastModifiedDate":"2022-01-21"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-21"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-21"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"//            System.out.println(lines);","lastModifiedDate":"2022-01-21"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"//            allTasks.add(new Task(input));","lastModifiedDate":"2022-01-21"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"//            System.out.println(\"added: \" + input);","lastModifiedDate":"2022-01-21"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"//            System.out.println(endline);","lastModifiedDate":"2022-01-21"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"chuashihong":161}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    protected String at;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":14}},{"path":"src/main/java/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    public EventException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        return this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    public String markAsDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"        return this.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    public String markAsUndone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        return this.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":33}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":11}},{"path":"src/main/java/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"public class TodoException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"    public TodoException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"blah","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"todo task1","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"todo task2 task2","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"todo","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"deadline dltask1 /by date1","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"deadline dltask2 /by","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"deadline dltask3","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"deadline","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"event ev1 /at evdate1","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"event ev2 /at","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"event ev3","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"event","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":16}}]
