[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"chuashihong":17}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"T | 0 | a new task","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"D | 0 | do project  | 2022-02-18","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"E | 0 | welfare event  | 2022-02-19","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"chuashihong":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"Duke is a task manager which, designed using Java, and has a chatting GUI which makes it easy and fast to learn to use!","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"![Ui](Ui.png)","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"## Quick start","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/chuashihong/ip/releases).","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"3. Copy the file to the folder you want to use as the _home folder_.","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`list`** and pressing Enter will list all the tasks.\u003cbr\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"## Features","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"### Add task","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"You can add task by typing","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"todo \u003cyour task description\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"event \u003cyour task description\u003e /at \u003cevent-date\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"deadline \u003cyour task description\u003e /by \u003cevent-date\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"depends on what type of task you want to add","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"### See all task","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"You can see all your current task by typing","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"### Mark/ Unmark","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"You can mark task as done by typing","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"mark \u003ctask-number\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"unmark \u003ctask-number\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"## Some other feature","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"### `delete \u003ctask-number\u003e` - Delete the task you do not want to track anymore!","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"Delete the task number, will show the remaining task available.","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"### `find \u003ckeyword\u003e` - Find the task that contains the keyword in its description","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"Return list of task that contains the keywords","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"# Download now and try it out!","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"### Add task","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"You can add task by typing","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"todo \u003cyour task description\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"event \u003cyour task description\u003e /at \u003cevent-date\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"deadline \u003cyour task description\u003e /by \u003cevent-date\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"depends on what type of task you want to add","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"### See all task","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"You can see all your current task by typing","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"### Mark/ Unmark","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"You can mark task as done by typing","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"mark \u003ctask-number\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"unmark \u003ctask-number\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"## Some other feature","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"### `delete \u003ctask-number\u003e` - Delete the task you do not want to track anymore!","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"Delete the task number, will show the remaining task available.","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"### `find","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"\u003ckeyword\u003e` - Find the task that contains the keyword in its description","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"Return list of task that contains the keywords","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"# Download now and try it out!","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"-":29,"chuashihong":74}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * Execeute the exit command","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * @param ui ui class that helps to print suitable command","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that manage saving and loading data","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException an error message","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error saving to the file","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @return a response to user input","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        String result \u003d ui.bye();","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     * Checks if this command is a goodbye command.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     * @return false.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        return true;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":" * An abstract class Command","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    protected String input;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public Command(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    public Command() {","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * Execute the command according to the user\u0027s input","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"     * @param ui ui class that helps to print suitable command","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that manage saving and loading data","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     * Check if the command is ByeCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     * @return false by default, only when it is bye, it returns true","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        return false;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":41}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"//import duke.dukeexceptions.DeadlineException;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.extension.CheckDuplicate;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * Add a deadline command to the task list, and save it to the file","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @param ui ui class that helps to print suitable command","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that manage saving and loading data","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException an error message","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error saving to the file","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     * @return a response to user input","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"            return \"Emm, what is your task again? (please insert again)\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        String[] split1 \u003d input.split(\"/by \");","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            return \"You need to tell me your deadline date\\n \"","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"                                                + \"e.g deadline \u003cyourtask\u003e /by \u003cdeadline date\u003e\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        String deadlineDesription \u003d split1[0].substring(9);","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        String deadlineDate \u003d split1[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        Task deadlineTask \u003d new Deadline(deadlineDesription, deadlineDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        Task duplicated \u003d CheckDuplicate.checkDuplicate(deadlineTask, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        if (!duplicated.equals(deadlineTask)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"            result +\u003d \"This task has been added before!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"            result +\u003d duplicated.toString();","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"            assert duplicated.getDescription().equals(deadlineTask.getDescription());","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"            result +\u003d \"\\n please enter another task\";","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"        taskList.add(deadlineTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        result +\u003d ui.showDeadlineTaskAdded(deadlineTask, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":60}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     * Delete a task in task list and save it to the data file","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * @param ui ui class that helps to print suitable command","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that manage saving and loading data","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException an error message","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error saving to the file","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @return a response to user input","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"                return ui.showWhichTaskIsBeingDeleted();","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"            if (parts.length \u003e 2) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"                return \"You have entered too many arguments!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"            Task taskToBeDelete \u003d taskList.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            taskList.remove(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            result +\u003d ui.showDeletedTask(taskToBeDelete, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            storage.saveFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"            return \"This task does not exist, there are \" + taskList.size() + \" tasks now\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            return \"format must be: delete \u003ctask number\u003e , other format is not acceptable\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":49}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"//import duke.dukeexceptions.EventException;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.extension.CheckDuplicate;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * Add an event task to the task list, and save it to the data file","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @param ui ui class that helps to print suitable command","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that manage saving and loading data","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException an error message","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error saving to the file","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"     * @return a respinse to user input","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"            return \"The format should be: eventTask \u003cdescription\u003e /at \u003cdate\u003e\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        String[] split1 \u003d input.split(\"/at \");","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            return \"You need to tell me your eventTask date\\n e.g eventTask \u003cdescription\u003e /at \u003cdate\u003e\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        String eventDesription \u003d split1[0].substring(6);","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        String eventDate \u003d split1[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        Task eventTask \u003d new Event(eventDesription, eventDate);","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        Task duplicated \u003d CheckDuplicate.checkDuplicate(eventTask, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        if (!duplicated.equals(eventTask)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            result +\u003d \"This task has been added before!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"            result +\u003d duplicated.toString();","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"            result +\u003d \"\\n please enter another task\";","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        taskList.add(eventTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        result +\u003d ui.showEventTaskAdded(eventTask, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":56}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     * Find the keyword from the user\u0027s input and any matched task will be listed","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     *  @param taskList currentTaskList","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * @param ui       ui class that helps to print suitable command","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * @param storage  storage that manage saving and loading data","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @return a response to user input","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        String keywords \u003d input.substring(5);","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        ArrayList\u003cString\u003e searchedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            if (taskList.get(i).toString().contains(keywords)) {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"                searchedTaskList.add((i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        result +\u003d ui.showFoundTask(searchedTaskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"chuashihong":38}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    public InvalidCommand(String input) {","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public InvalidCommand() {","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        super();","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * Execute the command according to the user\u0027s input","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * @param ui       ui class that helps to print suitable command","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @param storage  storage that manage saving and loading data","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"chuashihong":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"     * Execeute the command according to the user\u0027s input","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     * @param ui ui class that helps to print suitable command","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that manage saving and loading data","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException an error message","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * @return a string of response","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"        return ui.showAllTasks(taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * Marks a task as done","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @param ui User interface to print output","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that helps to save data into the file","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException an error message","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error saving to the file","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"            Task markTask \u003d taskList.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"            if (markTask.isDone()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                result +\u003d ui.showMarkTaskAsAlreadyDone(markTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"                result +\u003d ui.showMarkTaskAsDone(markTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            storage.saveFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"            return \"You have entered invalid task or that task does not exist!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":46}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.TodoException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.extension.CheckDuplicate;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * Add a todo task to the task list, and save it to the data file","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @param taskList currentTaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * @param ui ui class that helps to print suitable command","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that manage saving and loading data","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException an error message","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error saving to the file","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"     * @return a response to user input","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"            return \"☹ OOPS!!! The description of a todoTask cannot be empty.(please insert again)\";","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        String todoDesription \u003d input.substring(5);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        Task todoTask \u003d new Todo(todoDesription);","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        Task duplicated \u003d CheckDuplicate.checkDuplicate(todoTask, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        if (!duplicated.equals(todoTask)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"            result +\u003d \"This task has been added before!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"            result +\u003d duplicated.toString();","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"            result +\u003d \"\\n please enter another task\";","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        taskList.add(todoTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        result +\u003d ui.showTodoTaskAdded(todoTask, taskList);","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":52}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.UnmarkException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        super(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * Marks a task as done","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * @param ui User interface to print output","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * @param storage storage that helps to save data into the file","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @return a response to user","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            Task markTask \u003d taskList.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"            if (!markTask.isDone()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"                result +\u003d ui.showMarkTaskAsAlreadyUndone(markTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"                result +\u003d markTask.markAsDone();","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                result +\u003d ui.showMarkTaskAsUndone(markTask);","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"            storage.saveFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            throw new UnmarkException(\"You have entered invalid task or that task does not exist!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":44}},{"path":"src/main/java/duke/dukeexceptions/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * Exception class handling deadline task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public DeadlineException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":11}},{"path":"src/main/java/duke/dukeexceptions/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Exception class handling delete task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class DeleteException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public DeleteException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/main/java/duke/dukeexceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Exception class handling all kind of Duke exception","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/main/java/duke/dukeexceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * Exception class handling event task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public EventException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":11}},{"path":"src/main/java/duke/dukeexceptions/MarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Exception class handling mark task exception","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class MarkException extends DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public MarkException(String errorMessage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/main/java/duke/dukeexceptions/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"//solution below adapted from https://stackify.com/specify-handle-exceptions-java/","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" * Exception class handling todo task exception","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class TodoException extends DukeException {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public TodoException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":11}},{"path":"src/main/java/duke/dukeexceptions/UnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Exception class handling mark task exception","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class UnmarkException extends DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public UnmarkException(String errorMessage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/main/java/duke/extension/CheckDuplicate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.extension;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import java.util.Locale;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":" * an extension to check if the task added is duplicated with the existing tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"public class CheckDuplicate {","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    public static Task checkDuplicate(Task task,TaskList taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"        String descriptionToBeChecked \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        Task t \u003d checkIfTaskContainsInTaskList(taskList, descriptionToBeChecked);","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        if (t !\u003d null) return t;","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"        return task;","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * Check if there is duplicated task in tasklists, duplicated","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * means the description and the type of the task are the same","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @param descriptionToBeChecked the description of the task","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * @return","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    private static Task checkIfTaskContainsInTaskList(TaskList taskList, String descriptionToBeChecked) {","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"            String currentDescription \u003d t.getDescription().toLowerCase();","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"            if (descriptionToBeChecked.equals(currentDescription)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"                return t;","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        return null;","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"chuashihong":35}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"chuashihong":61}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import java.util.concurrent.TransferQueue;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DeadlineException;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"public class Duke {","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     * A task taking chatbot.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"     * @param filePath the data file","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"            System.out.println(\"No path exist\");","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"    public String getResponse(String input) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        String response \u003d Parser.parseCommand(input, this.taskList, this.ui, this.storage);","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        return response;","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"chuashihong":42}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"chuashihong":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    private Image userImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    private Image dukeImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"            stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        stage.setResizable(true);","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"        scrollPane.setFitToWidth(false);","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"            try {","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"                handleUserInput();","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"            try {","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"                handleUserInput();","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-13"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-13"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"    private void handleUserInput() throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"                DialogBox.getUserDialog(userText, userImg),","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"                DialogBox.getDukeDialog(dukeText, dukeImg)","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"    private String getResponse(String input) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"        return duke.getResponse(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"chuashihong":146}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"//import duke.main.DialogBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     * initializes the scrollpane.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello I\u0027m pikachu!\", dukeImage));","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        String response \u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"chuashihong":65}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.io.File;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DeadlineException;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":" * Storage class that helps to save or load existing data from local site.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":" *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"     * Will load the data if it exist, if it does not exist, it will create","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"     * a new file named \"tasks.txt\".","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     * @return An array of loaded tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error loading the file","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"            File path \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            File directory \u003d new File(\"data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"                System.out.println(\"directory ./data/ created\");","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"                File data \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"                data.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                System.out.println(\"then, file ./data/tasks is also created\");","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"                return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                if (path.createNewFile()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"file ./data/tasks.txt created\");","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"                    System.out.println(\"normal\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"                    result \u003d loadFile(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"                    return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"                return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        } catch (IOException | DeadlineException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"     * Method to load file line by line and translate them into list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"     * @param path file path to the data","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"     * @return An array of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"     * @throws FileNotFoundException the file is missing","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error loading the file","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"    public ArrayList\u003cTask\u003e loadFile(File path) throws FileNotFoundException, IOException, DeadlineException {","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"        FileReader reader \u003d new FileReader(path);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"        BufferedReader br \u003d new BufferedReader(reader);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        while (br.ready()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"            String[] task \u003d br.readLine().split(\" \\\\| \");","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"            boolean done;","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"            done \u003d task[1].equals(\"1\");","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"            switch (task[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"            case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"                result.add(new Todo(task[2], done));","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"                result.add(new Deadline(task[2], task[3], done));","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"            case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"                result.add(new Event(task[2], task[3], done));","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"            default:","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"     * Write current list of tasks into the file","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error loading the file","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"    public void saveFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"        writeAllTaskToFile(taskList, fileWriter);","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"        fileWriter.close();","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"     * Write all current tasks to the data file","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"     * @param fileWriter the file writer to the data.","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"     * @throws IOException error writing the file","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"    private void writeAllTaskToFile(TaskList taskList, FileWriter fileWriter) throws IOException {","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"            fileWriter.write(taskList.get(i).dataFormatOfTask() + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":123}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":" * A class that stores a lot of tasks as one array","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public int size() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    public void add(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"        this.taskList.add(new Task(description));","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    public void markAsUndone(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"        this.taskList.get(index).markAsUndone();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        return taskList;","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":52}},{"path":"src/main/java/duke/parser/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.parser;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * Actions according to the available commands in Duke.","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public enum Action {","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    BYE,","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    LIST,","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    MARK,","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    UNMARK,","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"    TODO,","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    DEADLINE,","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    EVENT,","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    DELETE,","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    FIND,","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"chuashihong":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.command.*;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.main.Storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"public class Parser {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"     * Parse the user\u0027s commmand","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     * @param input user input","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"     * @return a respond to user","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     * @throws DukeException DukeException","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    public static String parseCommand(String input,TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"            String userCommand \u003d parts[0];","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            Action action \u003d Parser.getAction(userCommand);","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"            switch (action) {","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            case BYE:","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"                command \u003d new ByeCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"            case LIST:","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"                command \u003d new ListCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"            case MARK:","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"                command \u003d new MarkCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"            case UNMARK:","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"                command \u003d new UnmarkCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"            case TODO:","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"                command \u003d new TodoCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"            case DEADLINE:","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"                command \u003d new DeadlineCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"            case EVENT:","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"                command \u003d new EventCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"            case DELETE:","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"                command \u003d new DeleteCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"            case FIND:","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"                command \u003d new FindCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"                command \u003d new InvalidCommand();","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        } catch (IllegalArgumentException | NullPointerException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        } finally {","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"            return command.execute(taskList, ui, storage);","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"    //This method is credited to Janald Ho (link attached from below)","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    //https://github.com/janald99/ip/blob/master/src/main/java/duke/parser/Parser.java","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"     * Gets Action from input string.","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"     * @param command input string.","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"     * @return the Action.","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"     * @throws IllegalArgumentException exception when not one of enum types.","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"     * @throws NullPointerException exception when input string is null.","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"    public static Action getAction(String command) throws IllegalArgumentException, NullPointerException {","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"        return Action.valueOf(command.toUpperCase());","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"//    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"//     * Parse the user\u0027s commmand","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"//     * @param input user input","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"//     * @return a Command class","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"//     * @throws DukeException DukeException","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"//     */","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"//    public static Command parseUserInput(String input) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"//        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"//        switch (parts[0]) {","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"//        case \"bye\":","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"//            return new ByeCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"//        case \"list\":","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"//            return new ListCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"//        case \"mark\":","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"//            return new MarkCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"//        case \"unmark\":","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"//            return new UnmarkCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"//        case \"todo\":","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"//            return new TodoCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"//        case \"deadline\":","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"//            return new DeadlineCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"//        case \"event\":","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"//            return new EventCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"//        case \"delete\":","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"//            return new DeleteCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"//        case \"find\":","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"//            return new FindCommand(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"//        default:","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"//            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"//        }","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"//    }","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"chuashihong":107}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DeadlineException;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":" * A type of tasks, have a specific date(deadline)","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    protected String by;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * Constructor.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     * @param description description","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * @param by deadline date","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * @throws DeadlineException deadline exception","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    public Deadline(String description, String by) throws DeadlineException {","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            this.by \u003d by;","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"            this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"            throw new DeadlineException(\"Sorry I am stupid, you need to tell me the date as this format:Year-Month-Day \"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"                                                + \"e.g: 2022-02-15\");","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     * Constructor when loading data.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     * @param description description","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"     * @param by deadline date","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"     * @throws DeadlineException deadline exception","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    public Deadline(String description, String by, boolean isDone) throws DeadlineException {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"            this.by \u003d by;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"            this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            throw new DeadlineException(\"Sorry I am stupid, you need to tell me the date as this format:Year-Month-Day\"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"                                                + \" e.g: 2022-02-15\");","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"     * Transform the task into the format of data, to be stored into file data","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"     * @return A formatted string","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        String bool;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"0\";","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        return \"D | \" + bool + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DeadlineException;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":" * A type of tasks, have a specific ddate","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    protected String at;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * Constructor.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * @param description description","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * @param at date","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     * @throws DeadlineException deadline exception","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"    public Event(String description, String at) throws DeadlineException {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"            this.at \u003d at;","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"            this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"            throw new DeadlineException(\"Sorry I am stupid, you need to tell me the date as this format:Year-Month-Day \"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"                                                + \"e.g: 2022-02-15\");","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     * Constructor when loading data.","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"     * @param description description","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"     * @param at date","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"     * @throws DeadlineException deadline exception","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"    public Event(String description, String at, boolean isDone) throws DeadlineException {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"            this.at \u003d at;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"            this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"            throw new DeadlineException(\"Sorry I am stupid, you need to tell me the date as this format:Year-Month-Day \"","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"                                                + \"e.g: 2022-02-15\");","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"     * Transform the task into the format of data, to be stored into file data","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"     * @return A formatted string","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"        String bool;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"0\";","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        return \"E | \" + bool + \" | \" + this.description + \" | \" + this.at;","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":72}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * A class that store the information about a task","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"     * Constructor.","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"     * @param description description","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"     * Constructor when loading data.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * @param description description","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"        return this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"     * Mark task as done.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"     * @return the task description","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"    public String markAsDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"        return this.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"     * Mark task as undone.","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"     * @return the task description","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"    public String markAsUndone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"        return this.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        return isDone;","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"        return null;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":66}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":" * A type of tasks, do not have date","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"        super(description);","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"     * Transform the task into the format of data, to be stored into file data","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"     * @return A formatted string","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"    public String dataFormatOfTask() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"        String bool;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"            bool \u003d \"0\";","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        return \"T | \" + bool + \" | \" + this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":34}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"package duke.ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.main.TaskList;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":" * User Interface class, print beautiful output to user","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"public class Ui {","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"     * constructor","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"    public Ui() {","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"chuashihong"},"content":"     * Prints bye message","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"chuashihong"},"content":"    public String bye() {","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Bye! See you again\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"chuashihong"},"content":"     * Show all current tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"chuashihong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"chuashihong"},"content":"    public String showAllTasks(TaskList taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Here are all your tasks:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"chuashihong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"chuashihong"},"content":"//            System.out.println((i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"chuashihong"},"content":"            result +\u003d (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the task is already done","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"chuashihong"},"content":"     * @param markTask current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"chuashihong"},"content":"    public String showMarkTaskAsAlreadyUndone(Task markTask) {","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"You have already done this task!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"chuashihong"},"content":"        result +\u003d markTask.markAsUndone();","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the task is marked as done","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"chuashihong"},"content":"     * @param markTask current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"chuashihong"},"content":"    public String showMarkTaskAsUndone(Task markTask) {","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Good Job! You have marked this task as done!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"chuashihong"},"content":"        result +\u003d markTask.markAsUndone();","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the task is not done yet","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"chuashihong"},"content":"     * @param markTask current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"chuashihong"},"content":"    public String showMarkTaskAsAlreadyDone(Task markTask) {","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"You have already done this task!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"chuashihong"},"content":"        result +\u003d markTask.markAsDone();","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the task is marked as undone","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"chuashihong"},"content":"     * @param markTask current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"chuashihong"},"content":"    public String showMarkTaskAsDone(Task markTask) {","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Good Job! You have marked this task as done!\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"chuashihong"},"content":"        result +\u003d markTask.markAsDone();","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the todo task is added","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"chuashihong"},"content":"     * @param todo the task to be added","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":99,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"chuashihong"},"content":"    public String showTodoTaskAdded(Task todo, TaskList taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Got it, I have added a TODO task:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"chuashihong"},"content":"        result +\u003d todo.toString() + \u0027\\n\u0027;","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":108,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the deadline task is added","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"chuashihong"},"content":"     * @param deadline the task to be added","lastModifiedDate":"2022-02-13"},{"lineNumber":112,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":113,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":115,"author":{"gitId":"chuashihong"},"content":"    public String showDeadlineTaskAdded(Task deadline, TaskList taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":117,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Got it, I have added a DEADLINE task:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":118,"author":{"gitId":"chuashihong"},"content":"        result +\u003d deadline.toString() + \u0027\\n\u0027;","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":120,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":121,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":122,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":123,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":124,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the event task is added","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"chuashihong"},"content":"     * @param event the task to be added","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"chuashihong"},"content":"    public String showEventTaskAdded(Task event, TaskList taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Got it, I have added an EVENT task:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":132,"author":{"gitId":"chuashihong"},"content":"        result +\u003d event.toString() + \u0027\\n\u0027;","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":134,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":135,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":136,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":137,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":138,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"chuashihong"},"content":"     * Tells the user that the task is deleted","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"chuashihong"},"content":"     * @param taskToBeDelete a task to be deleted","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"chuashihong"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"chuashihong"},"content":"    public String showDeletedTask(Task taskToBeDelete, TaskList taskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":146,"author":{"gitId":"chuashihong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":147,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Okay, I have removed this task:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":148,"author":{"gitId":"chuashihong"},"content":"        result +\u003d taskToBeDelete + \"\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"chuashihong"},"content":"        result +\u003d \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":150,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":153,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":154,"author":{"gitId":"chuashihong"},"content":"     * Tells the user how to delete a task correctly.","lastModifiedDate":"2022-02-13"},{"lineNumber":155,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":156,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":157,"author":{"gitId":"chuashihong"},"content":"    public String showWhichTaskIsBeingDeleted() {","lastModifiedDate":"2022-02-13"},{"lineNumber":158,"author":{"gitId":"chuashihong"},"content":"        return \"Which task are you deleting? \"","lastModifiedDate":"2022-02-13"},{"lineNumber":159,"author":{"gitId":"chuashihong"},"content":"                                   + \"Insert a number like this: delete \u003ctask number\u003e\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":160,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":161,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":162,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":163,"author":{"gitId":"chuashihong"},"content":"     * Shows error message","lastModifiedDate":"2022-02-13"},{"lineNumber":164,"author":{"gitId":"chuashihong"},"content":"     * @param message the error message","lastModifiedDate":"2022-02-13"},{"lineNumber":165,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":166,"author":{"gitId":"chuashihong"},"content":"    public String showError(String message) {","lastModifiedDate":"2022-02-13"},{"lineNumber":167,"author":{"gitId":"chuashihong"},"content":"        return message;","lastModifiedDate":"2022-02-13"},{"lineNumber":168,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":169,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":170,"author":{"gitId":"chuashihong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":171,"author":{"gitId":"chuashihong"},"content":"     * Shows found task using find command","lastModifiedDate":"2022-02-13"},{"lineNumber":172,"author":{"gitId":"chuashihong"},"content":"     * @param searchedTaskList founded task list, a string array","lastModifiedDate":"2022-02-13"},{"lineNumber":173,"author":{"gitId":"chuashihong"},"content":"     * @return a string of message","lastModifiedDate":"2022-02-13"},{"lineNumber":174,"author":{"gitId":"chuashihong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":175,"author":{"gitId":"chuashihong"},"content":"    public String showFoundTask(ArrayList\u003cString\u003e searchedTaskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":176,"author":{"gitId":"chuashihong"},"content":"        if (searchedTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-13"},{"lineNumber":177,"author":{"gitId":"chuashihong"},"content":"            return \"There are no matching tasks in your list\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":178,"author":{"gitId":"chuashihong"},"content":"        } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":179,"author":{"gitId":"chuashihong"},"content":"            String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":180,"author":{"gitId":"chuashihong"},"content":"            result \u003d showAllSearchedKeywords(searchedTaskList, result);","lastModifiedDate":"2022-02-13"},{"lineNumber":181,"author":{"gitId":"chuashihong"},"content":"            return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":182,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":183,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":184,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":185,"author":{"gitId":"chuashihong"},"content":"    private String showAllSearchedKeywords(ArrayList\u003cString\u003e searchedTaskList, String result) {","lastModifiedDate":"2022-02-13"},{"lineNumber":186,"author":{"gitId":"chuashihong"},"content":"        for (String s : searchedTaskList) {","lastModifiedDate":"2022-02-13"},{"lineNumber":187,"author":{"gitId":"chuashihong"},"content":"            result +\u003d s + \"\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":188,"author":{"gitId":"chuashihong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":189,"author":{"gitId":"chuashihong"},"content":"        return result;","lastModifiedDate":"2022-02-13"},{"lineNumber":190,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":191,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"chuashihong":191}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"chuashihong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"chuashihong":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.dukeexceptions.DeadlineException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"    public void test_deadlineFormat() throws DeadlineException {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"D | 1 | week3_project | 2022-01-12\",","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"                new Deadline(\"week3_project\", \"2022-01-12\", true).dataFormatOfTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":14}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":10}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"    public void testdataFormatOfTask1() {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"T | 0 | doing project\",","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"                new Todo(\"doing project\").dataFormatOfTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"    public void testdataFormatOfTask2() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"        assertEquals(\"T | 1 | doing project\",","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"chuashihong"},"content":"                new Todo(\"doing project\", true).dataFormatOfTask());","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"chuashihong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"chuashihong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"chuashihong":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"chuashihong"},"content":"blah","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"chuashihong"},"content":"todo task1","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"chuashihong"},"content":"todo task2 task2","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"chuashihong"},"content":"todo","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"chuashihong"},"content":"deadline dltask1 /by date1","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"chuashihong"},"content":"deadline dltask2 /by","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"chuashihong"},"content":"deadline dltask3","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"chuashihong"},"content":"deadline","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"chuashihong"},"content":"event ev1 /at evdate1","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"chuashihong"},"content":"event ev2 /at","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"chuashihong"},"content":"event ev3","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"chuashihong"},"content":"event","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"chuashihong"},"content":"list","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"chuashihong":16}}]
