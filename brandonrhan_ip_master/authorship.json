[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"# BH","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"\u003e Have you ever forget an important task? Try BH!","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"### BH is a task recording application which could help you to remember all your tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"**What BH can do:**","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"- Record different kind of task(Todo, Event, Deadline)","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"- Mark or unmark a task","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"- Find all tasks related to a key word","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"- Check your tasks on any day","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"brandonrhan":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"checkstyle {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"    implementation \u0027org.testng:testng:7.5\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.2\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-params:5.8.2\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    implementation \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-migrationsupport:5.8.2\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"    archiveBaseName \u003d \"BH\"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brandonrhan":26,"-":44}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"ret\u003d0","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    fi","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"done","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"exit $ret","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"brandonrhan":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"awk \u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"    BEGIN {","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"        ret \u003d 1","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    END {","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        exit ret","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"\u0027","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"brandonrhan":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"awk \u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"    BEGIN {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"            ret \u003d 1","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    END {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        exit ret","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"\u0027","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"brandonrhan":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    fi","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"done","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"exit $ret","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"brandonrhan":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"# BH","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"\u003e Have you ever forget an important task? Try BH!","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"### BH is a task recording application which could help you to remember all your tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"**What BH can do:**","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"- Record different kind of task(Todo, Event, Deadline)","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"- Mark or unmark a task","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"- Find all tasks related to a key word","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"- Check your tasks on any day","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"### Todo","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"- Adds a Todo task to the taskList.","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"- Format: todo d/DETAIL","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"- Example: todo eat breakfast","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"### Deadline","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"- Adds a Deadline task to the taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"- Format: deadline d/DETAIL /by t/TIME","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"- Example: deadline submit homework /by 2022-02-18","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"### Event","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"- Adds a Event task to the taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"- Format: event d/DETAIL /at t/TIME","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"- Example: event Test1 /at 2022-02-18","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"### List","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"- Checks the current taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"- Format: list","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"### Mark","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"- Marks a task to be done","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"- Format: mark i/INDEX","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"- Example: mark 1","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"### Unmark","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"- Unmarks a task to be not done","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"- Format: unmark i/INDEX","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"- Example: unmark 1","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"### Delete","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"- Deletes a task from the taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"- Format: delete i/INDEX","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"- Example: delete 1","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"### Check","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"- Checks for task on a date","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"- Format: check d/DATE","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"- Example: check 2022-02-18","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"### Find","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"- Finds task related to a keyword","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"- Format: find w/WORD","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"- Example: find test","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"### Tag","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"- Adds a tag to a task","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"- Format: tag i/INDEX t/TAG","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"- Example: tag 1 fun","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"### Untag","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"- Removes all tags of a task","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"- Format: untag i/INDEX","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"- Example: untag 1","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"### Bye","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"- Exists the app","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"- Format: bye","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"brandonrhan":59,"-":15}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"import gui.Main;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"public class Launcher {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"brandonrhan":12}},{"path":"src/main/java/duke/BH.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" * Represents a chatbot called BH","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" * It is able to read input and proceed with different kind of task and save all the tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"public class BH {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    private static final Path FILEPATH \u003d Paths.get(System.getProperty(\"user.home\"),","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"            \"Downloads\", \"NUS\", \"CS2103\", \"ip\", \"data\", \"duke.txt\");","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"    private static final Path DIRPATH \u003d Paths.get(System.getProperty(\"user.home\"),","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"            \"Downloads\", \"NUS\", \"CS2103\", \"ip\", \"data\");","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"    //\"/Users/brandonrhan/Downloads/NUS/CS2103/ip/data/duke.txt\";","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"    private Parser parser;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"     * Constructs a BH","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If the filepath is invalid","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    public BH() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"        this.storage \u003d new Storage(FILEPATH, DIRPATH);","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"        this.taskList \u003d new TaskList(this.storage.load());","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"        this.parser \u003d new Parser(this.ui, this.taskList, this.storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"     * Executes the input by parser","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"     * @param input User Command","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"     * @return Result after execution","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If invalid input is detected","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"    public String run(String input) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"        return this.parser.execute(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"     * creates a new BH object and start running the program","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"    public static class Duke {","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"        public BH bh;","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"        /**","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"         * Constructs a Duke","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"         *","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"         * @throws DukeException If read file wrongly","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"         */","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"        public Duke() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"            this.bh \u003d new BH();","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"        /**","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"         * Gets the response from BH","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"         *","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"         * @param input User command","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"         * @return Response from BH","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"         * @throws DukeException If invalid input is detected","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"         */","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"        public String getResponse(String input) throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"            return this.bh.run(input);","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"brandonrhan":78}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * The command to handle keyword bye","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    ByeCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * saves all tasks and says goodbye to user","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Bye message to users","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        this.storage.save(this.taskList.getArrayList());","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        return ui.sayBye();","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":26}},{"path":"src/main/java/duke/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * The command to handle keyword check","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    CheckCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * Checks for the task having the same date as input","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"     * @return All tasks having the same date as input","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        LocalDate date \u003d LocalDate.parse(detailArray[1]);","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        return ui.echo(this.taskList.checkDate(date));","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":28}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle user input","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    protected Ui ui;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    protected Storage storage;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    protected String detail;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    Command(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    abstract String runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":23}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Represent a deadline task","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" * It corresponds to a deadline represent by a string of task and the time","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"     * Construts a deadline","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     * @param task description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * @param time time of the deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    Deadline(String task, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"        super(task, \"D\", time);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"     * Overrides Task.saveFormat by adding the time of deadline","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard saving format","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        return super.saveFormat() + \" ### \" + this.time;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"     * Overrides Task.toString() by adding the date and convert into standard format","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard printing format","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"        return super.toString() + \"(by: \" + this.date.format(FORMATTER) + \")\" + \"  \" +  this.tag;","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":41}},{"path":"src/main/java/duke/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * The command to handle keyword deadline","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    DeadlineCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Creates a deadline and adds into the taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the new deadline and total number of task in taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        String taskAndTime \u003d detailArray[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        String[] arr \u003d taskAndTime.split(\"/by\");","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        String task \u003d arr[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        String time \u003d arr[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"        Task newTask \u003d new Deadline(task, time);","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"        this.taskList.addToList(newTask);","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        return ui.echo(\"Task added:\" + newTask.toString() + \"\\n\"","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"                + \"Now you have \" + this.taskList.getListSize() + \" tasks in the list\");","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":32}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * The command to handle keyword delete","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    DeleteCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Deletes a task from taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the task deleted","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        int index \u003d Integer.parseInt(detailArray[1]) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        if (index \u003c this.taskList.getListSize()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"Okay, I have remove this task:\\n\"","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"                    + this.taskList.deleteTask(index));","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"Index out of range\");","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * create a new BH object and start running the program","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    private BH bh;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of Duke","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If read file wrongly","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"    public Duke() throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"        this.bh \u003d new BH();","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"     * Gets the response from BH","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     * @param input User command","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"     * @return Response from BH","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If invalid input is detected","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        return this.bh.run(input);","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"brandonrhan":27,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * DukeException is used to handle exception in Duke","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"     * Constructs a DukeException","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"     * @param error Error message","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    public DukeException(String error) {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        super(error);","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":19}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Represents a event task","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" * It corresponds to a event represent by a string of task and the time","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of event","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     * @param task description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * @param time time of the event","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    public Event(String task, String time) {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"        super(task, \"E\", time);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"     * Override Task.saveFormat by adding the time of deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard saving format","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        return super.saveFormat() + \" ### \" + this.time;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"     * Override Task.toString() by adding the date and convert into standard format","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard printing format","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"        return super.toString() + \"(at: \" + this.date.format(FORMATTER) + \")\" + \"  \" +  this.tag;","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":42}},{"path":"src/main/java/duke/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * The command to handle keyword event","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    EventCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Creates a event and adds into the taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the new event and total number of task in taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        String taskAndTime \u003d detailArray[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        String[] arr \u003d taskAndTime.split(\"/at\");","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        String task \u003d arr[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        String time \u003d arr[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"        Task newTask \u003d new Event(task, time);","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"        this.taskList.addToList(newTask);","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        return ui.echo(\"Task added:\" + newTask.toString() + \"\\n\"","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"                + \"Now you have \" + this.taskList.getListSize() + \" tasks in the list\");","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":32}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword find","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    FindCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Finds all task contains the keyword","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return String of tasks contain the keyword","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        String word \u003d detailArray[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        return ui.echo(this.taskList.checkWord(word));","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":26}},{"path":"src/main/java/duke/HiCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword hi","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class HiCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    HiCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Greets the user","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return A greeting message","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        return ui.greet();","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":24}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword list","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    ListCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Returns the whole taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return String contains all the tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        return ui.echo(this.taskList.getList());","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":24}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword mark","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    MarkCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Marks the task as done","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the task","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        int index \u003d Integer.parseInt(detailArray[1]) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        if (index \u003c this.taskList.getListSize()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"You have finish: ! \\n\" + this.taskList.mark(index));","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"Index out of range\");","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Executes user commands","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class Parser {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     * Constructs a Parser","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     * @param ui the ui of Duke","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @param taskList the tasklist to store all the tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     * @param storage the storage to save all the tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    Parser(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"     * Executes the user input and return the result after running the corresponding commands","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"     * @param input User command","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"     * @return Result after the execution of user command","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If wrong input is detected","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"    String execute(String input) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"        assert(input.length() \u003e 0);","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"            String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"            String commandType \u003d inputArray[0].toLowerCase();","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"            switch (commandType) {","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"            case \"hi\":","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"                return new HiCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"                return new ByeCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"            case \"list\":","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"                return new ListCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"                return new MarkCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"                return new UnmarkCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"                return new TodoCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"                return new DeadlineCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"            case \"event\":","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"                return new EventCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"                return new DeleteCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"            case \"check\":","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"                return new CheckCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"            case \"find\":","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"                return new FindCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"            case \"tag\":","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"                return new TagCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"            case \"untag\":","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"                return new UntagCommand(this.ui, this.taskList, this.storage, input).runCommand();","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"            default:","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"                return ui.sayWrongInput();","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"            throw new DukeException(ui.echo(\"Duke exception!!!\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"brandonrhan":75}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"import java.io.File;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":" * Storage class is used for storing data and loading data","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    private final File file;","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     * Constructs a Storage","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"     * @param filePath the filepath used to store data and load data","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    Storage(Path filePath, Path dirPath) throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"            if (!filePath.toFile().exists()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"                dirPath.toFile().mkdirs();","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"            this.file \u003d filePath.toFile();","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"            this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"            throw new DukeException(\"Loading error\");","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"     * Loads all data in the filepath","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"     * Returns a list containing all task saved in the filepath","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"     * @return ArrayList contains all tasks saved in the filepath","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If there is error when reading data","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"    ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"            FileReader reader \u003d new FileReader(this.file);","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"            String input \u003d bufferedReader.readLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"            while (input !\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"                this.list.add(createTaskByType(input));","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"                input \u003d bufferedReader.readLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"            return this.list;","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"            throw new DukeException(\"Loading error\");","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"     * Creates a different task object according user input","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"     * @param input Details of the task to be created","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"     * @return A Todo, Event or DeadLine object","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If the input is not valid","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"    private Task createTaskByType(String input) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"        Task newTask;","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"        String[] task \u003d input.split(\" ### \");","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"        String type \u003d task[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"        String status \u003d task[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"        String thing \u003d task[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"            newTask \u003d new Todo(thing);","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"brandonrhan"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"brandonrhan"},"content":"            newTask \u003d new Deadline(thing, task[3]);","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"brandonrhan"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"brandonrhan"},"content":"            newTask \u003d new Event(thing, task[3]);","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"brandonrhan"},"content":"            throw new DukeException(\"Loading error\");","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"brandonrhan"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"brandonrhan"},"content":"            newTask.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"brandonrhan"},"content":"        return newTask;","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"brandonrhan"},"content":"     * Saves all tasks in the list to the filepath","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"brandonrhan"},"content":"     * @param saveList the list to be save","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"brandonrhan"},"content":"    void save(ArrayList\u003cTask\u003e saveList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"brandonrhan"},"content":"            FileWriter writer \u003d new FileWriter(this.file);","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"brandonrhan"},"content":"            BufferedWriter br \u003d new BufferedWriter(writer);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"brandonrhan"},"content":"            for (int i \u003d 0; i \u003c saveList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"brandonrhan"},"content":"                br.write(saveList.get(i).saveFormat());","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"brandonrhan"},"content":"                br.newLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"brandonrhan"},"content":"            br.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"brandonrhan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"brandonrhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"brandonrhan":111}},{"path":"src/main/java/duke/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword tag","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    TagCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Tags the given task","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the tagged task","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 3);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        int index \u003d Integer.parseInt(detailArray[1]) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        String tagDetail \u003d \"#\" + detailArray[2];","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        if (index \u003c this.taskList.getListSize()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"The following task is tagged\" + this.taskList.tagTask(index, tagDetail));","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"Index out of range\");","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":31}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * Represent a task to complete","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    public boolean isDone;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    public String task;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    public String type;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    public String time;","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"    public LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"    public String tag;","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of task","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"     * @param task Description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     * @param type Type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    Task(String task, String type) {","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"        this.time \u003d this.date.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"        this.tag \u003d \" \";","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"     * Constructs a task","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"     * @param task Description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"     * @param type Type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"     * @param time time of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"    Task(String task, String type, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"        String timeArr[] \u003d time.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"        this.date \u003d LocalDate.parse(timeArr[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"        this.tag \u003d \" \";","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"     * Checks if the description of task contains certain word","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"     * @param word The word wish to check","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"     * @return Boolean of whether the word is contained in task","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"    boolean containsWord(String word) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"        return this.task.contains(word);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"     * Marks the task as done","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"    void mark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"     * Unmarks the task as not done","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"    void unMark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"     * Returns the date of the task","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"brandonrhan"},"content":"     * @return Date of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"brandonrhan"},"content":"    LocalDate getDate() {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"brandonrhan"},"content":"        return this.date;","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"brandonrhan"},"content":"     * Returns the task to standard saving format","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"brandonrhan"},"content":"     * @return String in standard saving format","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"brandonrhan"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"brandonrhan"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"brandonrhan"},"content":"            return this.type + \" ### 1 ### \" + this.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"brandonrhan"},"content":"            return this.type + \" ### 0 ### \" + this.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"brandonrhan"},"content":"     * Adds tag to the task","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"brandonrhan"},"content":"     * @param tag the tag to be added","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"brandonrhan"},"content":"    public void tag(String tag) {","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"brandonrhan"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":108,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"brandonrhan"},"content":"     * Removes all tags of the task","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"brandonrhan"},"content":"    public void untag() {","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"brandonrhan"},"content":"        this.tag \u003d \" \";","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"brandonrhan"},"content":"     * Returns a String to represent the task","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"brandonrhan"},"content":"     * @return String contains type of task, isDone status and description of task","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"brandonrhan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"brandonrhan"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"brandonrhan"},"content":"            return \"[\" + this.type + \"] [X] \" + this.task + \"   \";","lastModifiedDate":"2022-02-14"},{"lineNumber":124,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"brandonrhan"},"content":"            return \"[\" + this.type + \"] [ ] \" + this.task + \"   \";","lastModifiedDate":"2022-02-14"},{"lineNumber":126,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":128}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * List to store all the tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"public class TaskList {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Constructs a TaskList","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @param list Old list of tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"    void addToList(Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        this.list.add(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    Task deleteTask(int index) {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        Task task \u003d this.list.get(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"        this.list.remove(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"        return task;","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"     * Gets all task in the taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"     * @return String contains all tasks in the list","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"    String getList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"        String s \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"        for (int i \u003d 0; i \u003c this.getListSize(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"            s \u003d s + (i + 1) + \". \" + this.list.get(i);","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"            if (i !\u003d this.getListSize() - 1) {","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"                s \u003d s + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"        return s;","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"    ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"        return this.list;","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"    int getListSize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"        return this.list.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"    String mark(int index) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"        this.list.get(index).mark();","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"        assert(this.list.get(index).isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"    String unMark(int index) {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"        this.list.get(index).unMark();","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"        assert(!this.list.get(index).isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"    String tagTask(int index, String tagDetail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"        this.list.get(index).tag(tagDetail);","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"    String untagTask(int index) {","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"        this.list.get(index).untag();","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"brandonrhan"},"content":"     * Checks all task in the list having same date as the input","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"brandonrhan"},"content":"     * @param date the date to check","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"brandonrhan"},"content":"     * @return String of all tasks on the same date","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"brandonrhan"},"content":"    String checkDate(LocalDate date) {","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"brandonrhan"},"content":"        String validDates \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"brandonrhan"},"content":"        for (int i \u003d 0; i \u003c this.getListSize(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"brandonrhan"},"content":"            Task currTask \u003d this.list.get(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"brandonrhan"},"content":"            if (currTask.getDate().equals(date)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"brandonrhan"},"content":"                validDates +\u003d currTask.toString() + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"brandonrhan"},"content":"        return validDates;","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"brandonrhan"},"content":"     * Checks all tasks in the list contains the input word","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"brandonrhan"},"content":"     * @param word The word to check","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"brandonrhan"},"content":"     * @return String of all tasks contains the word","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"brandonrhan"},"content":"    String checkWord(String word) {","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"brandonrhan"},"content":"        String validTasks \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"brandonrhan"},"content":"        for (int i \u003d 0; i \u003c this.getListSize(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"brandonrhan"},"content":"            if (this.list.get(i).containsWord(word)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"brandonrhan"},"content":"                validTasks +\u003d this.list.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"brandonrhan"},"content":"        return validTasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"brandonrhan":111}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Represent a todo task","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" * It corresponds to a task todo with a string of task and the time","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of Todo","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"     * @param task description of task","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    Todo(String task) {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        super(task, \"T\"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"     * Represents a Todo object using String","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     * @return String contains detail of the Todo","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    public String toString() {","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"        return super.toString() + \"  \" + this.tag;","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":30}},{"path":"src/main/java/duke/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword todo","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    TodoCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Creates a Todo and adds into taskList","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the new Todo","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        String task \u003d detailArray[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        Task newTask \u003d new Todo(task);","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        this.taskList.addToList(newTask);","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        return ui.echo(\"Task added: \" + newTask.toString() + \"\\n\"","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"                + \"Now you have \" + this.taskList.getListSize() + \" tasks in the list\");","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Deals with interactions with the user","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    private static final String LINE \u003d \"\\n------------------------------------------------\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    private static final String USER_LINE \u003d \"\\n**************************************************\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    private static final String LOGO \u003d \" ____         _   _     \\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"            + \"|  _ \\\\       | | | |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"            + \"| |_| |      | |-| |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"            + \"| |_| |  _   | |-| |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"            + \"|____/  |_|  |_| |_|\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     * Returns a line","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"     * @return A String of line","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    public String getLine() {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        return LINE;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"     * Returns the logo and greet user","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    public String greet() {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"        return echo(\"Hello, I am B.H. How can I help you?\");","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"     * Returns goodbye message","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"     * @return Goodbye message","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"    public static String sayBye() {","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"        return echo(\"GoodBye! Thanks for using B.H!\");","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"     * Returns wrong input warning","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"     * @return Wrong input warning","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"    public String sayWrongInput() {","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"        return echo(\"Wrong input, please try again\");","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"     * Surrounds the input with two lines","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"     * @param input String to be surrounded","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"     * @return String of input surrounded with two lines","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"    public static String echo(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"        return LINE + input + LINE;","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"     * Surrounds the input with two lines of stars","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"     * @param input String to be surrounded","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"     * @return String of input surrounded with two lines","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"    public static String userEcho(String input) {","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"        return USER_LINE + input + USER_LINE;","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"brandonrhan":72}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword unmark","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    UnmarkCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Unmarks the given task","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the given task","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 2);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        int index \u003d Integer.parseInt(detailArray[1]) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        if (index \u003c this.taskList.getListSize()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"Oh no! \\n\" + this.taskList.unMark(index));","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"Index out of range\");","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":30}},{"path":"src/main/java/duke/UntagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Command to handle keyword untag","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    UntagCommand(Ui ui, TaskList taskList, Storage storage, String detail) {","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        super(ui, taskList, storage, detail);","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * Removes all the tags of the given task","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * @return Details of the given task","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    String runCommand() {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"        String[] detailArray \u003d detail.split(\" \", 3);","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        int index \u003d Integer.parseInt(detailArray[1]) - 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        if (index \u003c this.taskList.getListSize()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"The following task is untagged\" + this.taskList.untagTask(index));","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"            return ui.echo(\"Index out of range\");","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"brandonrhan":30}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package gui;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"    private void flip() {","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"        return new DialogBox(Ui.userEcho(text), img);","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"        db.flip();","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"        return db;","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"brandonrhan":66}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package gui;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    public Main() throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"     * Starts the GUI","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"     * @param stage the stage of the GUI","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"            stage.show();","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"brandonrhan":43}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package gui;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":" *","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":" * @author brandonrhan","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":" * @version 0.0.0","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bh2.jpeg\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bh.png\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"     * Initializes BH and greets users","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.echo(\"Hi, how can I help you?\"), dukeImage));","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"     * sets duke","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"     * @param d the duke object to be set","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing BH\u0027s reply and then appends them to","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"    private void handleUserInput() throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"        );","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"        if (response.equals(Ui.sayBye())) {","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"            delay.play();","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"brandonrhan":77}},{"path":"src/main/java/test/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"import duke.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import org.testng.annotations.Test;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"public class EventTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"        Event event \u003d new Event(\"zoom meeting\", \" 2022-01-22\");","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        assertEquals(\"[E] [ ] zoom meeting(at: Jan 22 2022)\", event.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        Event event \u003d new Event(\"zoom meeting\", \" 2022-02-11\");","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"        assertEquals(\"E ### 0 ### zoom meeting ###  2022-02-11\", event.saveFormat());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"brandonrhan":20}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"        \u003cInsets bottom\u003d\"0.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"0.0\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"brandonrhan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"brandonrhan":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"deadline return book /by Sunday 2pm","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"todo eat dinner","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":10}}]
