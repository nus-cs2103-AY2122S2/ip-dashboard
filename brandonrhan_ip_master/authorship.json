[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"import duke.BH;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" * create a new BH object and start running the program","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"        BH bh \u003d new BH();","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"        bh.run();","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"brandonrhan":10,"-":3}},{"path":"src/main/java/duke/BH.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" * Represent a chatbot called BH","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":" * It is able to read input and proceed with different kind of task and save all the tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"public class BH {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    private static String filePath \u003d \"/Users/brandonrhan/Downloads/NUS/CS2103/ip/data/duke.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     * constructor of BH","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException if the filepath is invalid","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    public BH() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        this.list \u003d this.storage.load();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"     * continue reading input until a bye is detected","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"     * if input starts with list, print out all tasks in the list","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"     * if input starts with mark, mark the task as done","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"     * if input starts with unmark, unmark the task as not done","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"     * if input starts with todo, deadline or event, create a corresponding task and add to list","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"     * if input starts with delete, delete the corresponding task","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"     * if input starts with check, check all the task on the same date","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException if wrong input is detected","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"        this.ui.greet();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"            while (true) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"                String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"                String s1 \u003d inputArray[0].toLowerCase();","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"                if (s1.equals(\"bye\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(ui.getLine() + \"GoodBye! Thanks for using B.H!\" + ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"                    this.storage.save(this.list);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"                    break;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"list\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(ui.getLine() + this.getList() + ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"mark\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"                    int index \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"                    if (index \u003c this.getListSize()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"                        System.out.println(ui.getLine() + \"Well done! \\n\" + this.mark(index) + ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"                    } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"                        System.out.println(\"Index out of range\");","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"unmark\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"                    int index \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(\"Oh no! \\n\" + this.unMark(index));","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"todo\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"                    String task \u003d inputArray[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"                    Task newTask \u003d new Todo(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"                    this.addToList(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(ui.getLine() + \"Task added: \" + newTask.toString() + \"\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"                            \"Now you have \" + this.getListSize() + \" tasks in the list\" + ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"deadline\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"                    String s \u003d inputArray[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"                    String[] arr \u003d s.split(\"/by\");","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"                    String task \u003d arr[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"                    String time \u003d arr[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"                    Task newTask \u003d new Deadline(task, time);","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"                    this.addToList(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(ui.getLine() + \"Task added:\" + newTask.toString() + \"\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"                            \"Now you have \" + this.getListSize() + \" tasks in the list\" + ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"event\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"                    String s \u003d inputArray[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"brandonrhan"},"content":"                    String[] arr \u003d s.split(\"/at\");","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"brandonrhan"},"content":"                    String task \u003d arr[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"brandonrhan"},"content":"                    String time \u003d arr[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"brandonrhan"},"content":"                    Task newTask \u003d new Event(task, time);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"brandonrhan"},"content":"                    this.addToList(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(ui.getLine() + \"Task added:\" + newTask.toString() + \"\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"brandonrhan"},"content":"                            \"Now you have \" + this.getListSize() + \" tasks in the list\" + ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"delete\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"brandonrhan"},"content":"                    int index \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(ui.getLine() + \"Okay, I have remove this task:\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"brandonrhan"},"content":"                            this.deleteTask(index) + ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"check\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"brandonrhan"},"content":"                    LocalDate date \u003d LocalDate.parse(inputArray[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"brandonrhan"},"content":"                    this.checkDate(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"brandonrhan"},"content":"                } else if (s1.equals(\"find\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"brandonrhan"},"content":"                    String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"brandonrhan"},"content":"                    String word \u003d arr[1];","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"brandonrhan"},"content":"                    this.checkWord(word);","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"brandonrhan"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"brandonrhan"},"content":"                    System.out.println(\"Wrong input, please check again\");","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"brandonrhan"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"brandonrhan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"brandonrhan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"brandonrhan"},"content":"            throw new DukeException(\"Duke exception!!!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"brandonrhan"},"content":"     * check all task in the list and print out all having same date as the input","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"brandonrhan"},"content":"     * @param date the date to check","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"brandonrhan"},"content":"    void checkDate(LocalDate date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"brandonrhan"},"content":"        System.out.println(ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"brandonrhan"},"content":"        for (int i \u003d 0; i \u003c this.getListSize(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"brandonrhan"},"content":"            Task currTask \u003d this.list.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"brandonrhan"},"content":"            if (currTask.getDate().equals(date)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"brandonrhan"},"content":"                System.out.println(currTask.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"brandonrhan"},"content":"        System.out.println(ui.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"brandonrhan"},"content":"    void checkWord(String word) {","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"brandonrhan"},"content":"        System.out.println(ui.getLine());","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"brandonrhan"},"content":"        for (int i \u003d 0; i \u003c this.getListSize(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"brandonrhan"},"content":"            if (this.list.get(i).containsWord(word)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"brandonrhan"},"content":"                System.out.println(this.list.get(i).toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"brandonrhan"},"content":"        System.out.println(ui.getLine());","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"brandonrhan"},"content":"    private void addToList(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"brandonrhan"},"content":"        this.list.add(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"brandonrhan"},"content":"    private Task deleteTask(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"brandonrhan"},"content":"        Task task \u003d  this.list.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"brandonrhan"},"content":"        this.list.remove(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"brandonrhan"},"content":"        return task;","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"brandonrhan"},"content":"    private String getList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"brandonrhan"},"content":"        String s \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"brandonrhan"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"brandonrhan"},"content":"            s \u003d s + (i + 1) + \". \" + list.get(i) + \"\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"brandonrhan"},"content":"        return s;","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":151,"author":{"gitId":"brandonrhan"},"content":"     * Returns number of task in the list","lastModifiedDate":"2022-01-28"},{"lineNumber":152,"author":{"gitId":"brandonrhan"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"brandonrhan"},"content":"     * @return numer of task in the list","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"brandonrhan"},"content":"    int getListSize() {","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"brandonrhan"},"content":"        return this.list.size();","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"brandonrhan"},"content":"    private String mark(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":160,"author":{"gitId":"brandonrhan"},"content":"        this.list.get(index).mark();","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"brandonrhan"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"brandonrhan"},"content":"    private String unMark(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":165,"author":{"gitId":"brandonrhan"},"content":"        this.list.get(index).unMark();","lastModifiedDate":"2022-01-28"},{"lineNumber":166,"author":{"gitId":"brandonrhan"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":168,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":168}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Represent a deadline task","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" * It corresponds to a deadline represent by a string of task and the time","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"     * Construtor of deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"     * @param task description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"     * @param time time of the deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    Deadline(String task, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"        super(task, \"D\", time);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     * Override Task.saveFormat by adding the time of deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard saving format","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    String saveFormat() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        return super.saveFormat() + \" ### \" + this.time;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"     * Override Task.toString() by adding the date and convert into standard format","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard printing format","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"        return super.toString() + \"(by: \" + this.date.format(formatter) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":35}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * DukeException is used to handle exception in Duke","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"     * @param error Error message","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    public DukeException(String error) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"        super(error);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Represent a event task","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" * It corresponds to a event represent by a string of task and the time","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of event","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"     * @param task description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"     * @param time time of the event","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    Event(String task, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"        super(task, \"E\", time);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     * Override Task.saveFormat by adding the time of deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard saving format","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"    String saveFormat() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        return super.saveFormat() + \" ### \" + this.time;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"     * Override Task.toString() by adding the date and convert into standard format","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"     * @return String in the standard printing format","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"        return super.toString() + \"(at: \" + this.date.format(formatter) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":36}},{"path":"src/main/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"public class EventTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"        Event event \u003d new Event(\"zoom meeting\", \" 2022-01-22\");","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"        assertEquals(\"[E] [ ] zoom meeting(at: Jan 22 2022)\", event.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"        Event event \u003d new Event(\"zoom meeting\", \" 2022-02-11\");","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"        assertEquals(\"E ### 0 ### zoom meeting ###  2022-02-11\", event.saveFormat());","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"brandonrhan":20}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.io.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * Storage class is used for storing data and loading data","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of Storage","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     * @param filePath the filepath used to store data and load data","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"    Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"     * Load all data in the filepath","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     * Return a list containing all task saved in the filepath","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"     * @return ArrayList contains all tasks saved in the filepath","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"     * @throws DukeException If there is error when reading data","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"            FileReader reader \u003d new FileReader(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"            String input \u003d bufferedReader.readLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"            while (input !\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"                String[] task \u003d input.split(\" ### \");","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"                String type \u003d task[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"                String status \u003d task[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"                String thing \u003d task[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"                    Task newTask \u003d new Todo(thing);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"                        newTask.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"                    this.list.add(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"                    Task newTask \u003d new Deadline(thing, task[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"                        newTask.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"                    this.list.add(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"                    Task newTask \u003d new Event(thing, task[3]);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"                        newTask.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"                    this.list.add(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"                input \u003d bufferedReader.readLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"            return this.list;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"        } catch (IOException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"            throw new DukeException(\"Loading error\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"     * Save all tasks in the list to the filepath","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"     * @param saveList the list to be save","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"    void save(ArrayList\u003cTask\u003e saveList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"            BufferedWriter br \u003d new BufferedWriter(writer);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"            for (int i \u003d 0; i \u003c saveList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"                br.write(saveList.get(i).saveFormat());","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"                br.newLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"brandonrhan"},"content":"            br.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"brandonrhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"brandonrhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"brandonrhan":84}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":" * Represent a task to complete","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"    boolean isDone;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"    protected final String task;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"    protected final String type;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    protected final String time;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    protected static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of task","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"     * @param task Description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"     * @param type Type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    Task(String task, String type) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"        this.time \u003d this.date.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of task","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"brandonrhan"},"content":"     * @param task Description of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"brandonrhan"},"content":"     * @param type Type of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"brandonrhan"},"content":"     * @param time time of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"brandonrhan"},"content":"    Task(String task, String type, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"brandonrhan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"brandonrhan"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"brandonrhan"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"brandonrhan"},"content":"        String timeArr[] \u003d time.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"brandonrhan"},"content":"        this.date \u003d LocalDate.parse(timeArr[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"brandonrhan"},"content":"     * Check if the description of task contains certain word","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"brandonrhan"},"content":"     * @param word The word wish to check","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"brandonrhan"},"content":"     * @return Boolean of whether the word is contained in task","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"brandonrhan"},"content":"    boolean containsWord(String word) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"brandonrhan"},"content":"        return this.task.contains(word);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"brandonrhan"},"content":"     * Mark the task as done","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"brandonrhan"},"content":"    void mark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"brandonrhan"},"content":"     * Unmark the task as not done","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"brandonrhan"},"content":"    void unMark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"brandonrhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"brandonrhan"},"content":"     * Return the date of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"brandonrhan"},"content":"     * @return Date of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"brandonrhan"},"content":"    LocalDate getDate() {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"brandonrhan"},"content":"        return this.date;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"brandonrhan"},"content":"     * Return the task to standard saving format","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"brandonrhan"},"content":"     * @return String in standard saving format","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"brandonrhan"},"content":"    String saveFormat() {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"brandonrhan"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"brandonrhan"},"content":"            return this.type + \" ### 1 ### \" + this.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"brandonrhan"},"content":"            return this.type + \" ### 0 ### \" + this.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"brandonrhan"},"content":"     * If the task is done, return a string contains type of task + [X] + description of task","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"brandonrhan"},"content":"     * Else change the [X] to [ ]","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"brandonrhan"},"content":"     * @return String contains type of task, isDone status and description of task","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"brandonrhan"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"brandonrhan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"brandonrhan"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"brandonrhan"},"content":"            return \"[\" + this.type + \"] [X] \" + this.task;","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"brandonrhan"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"brandonrhan"},"content":"            return \"[\" + this.type + \"] [ ] \" + this.task;","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"brandonrhan"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":101}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Represent a todo task","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" * It corresponds to a task todo with a string of task and the time","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"     * Constructor of Todo","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"     * @param task description of task","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"    Todo(String task) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"        super(task, \"T\");","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":16}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":" * Deals with interactions with the user","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"    static String line \u003d \"\\n---------------------\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"    static String logo \u003d \" ____         _   _     \\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"            + \"|  _ \\\\       | | | |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"            + \"| |_| |      | |-| |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"brandonrhan"},"content":"            + \"| |_| |  _   | |-| |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"brandonrhan"},"content":"            + \"|____/  |_|  |_| |_|\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"brandonrhan"},"content":"     * Return a line","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"brandonrhan"},"content":"     * @return A String of line","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"brandonrhan"},"content":"    String getLine() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"brandonrhan"},"content":"        return line;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"brandonrhan"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"brandonrhan"},"content":"     * Print the logo and greet user","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"brandonrhan"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"brandonrhan"},"content":"    void greet() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"brandonrhan"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"brandonrhan"},"content":"        System.out.println(\"Hello, I am B.H. How can I help you?\\n\" + logo + this.getLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"brandonrhan"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"brandonrhan"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"brandonrhan":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandonrhan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"brandonrhan"},"content":"deadline return book /by Sunday 2pm","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"brandonrhan"},"content":"todo eat dinner","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"brandonrhan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"brandonrhan"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"brandonrhan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"brandonrhan"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"brandonrhan"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"brandonrhan"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"brandonrhan"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"brandonrhan":10}}]
