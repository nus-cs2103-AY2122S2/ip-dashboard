{"authorDailyContributionsMap":{"cheehongw":[{"date":"2022-01-18","commitResults":[{"hash":"6194c649b8b8b9ecbf34488fbab00943da13224b","messageTitle":"Add greet, echo and exit","messageBody":"as per Duke level 1 requirements.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":6}}}]},{"date":"2022-01-19","commitResults":[{"hash":"20968ea710939be79a9c28c3648a6515917dc615","messageTitle":"Implement `list` and `add`","messageBody":"as per Duke Level 2 specifications.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":20}}},{"hash":"17493a1ee6fccddfdbb57dc30859eb1005becf73","messageTitle":"Add Task","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}},{"hash":"a48f7fcd597bae5937452d658ecccd8707022820","messageTitle":"Add `mark`, `unmark`","messageBody":"Add ability to mark and unmark tasks as done, as per Duke level 3\nrequirements\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":2}}},{"hash":"760e6a38c91e56add1d3ecfa290852397f865898","messageTitle":"Split `Task` into `ToDo`, `Event` and `Deadline`","messageBody":"Tasks are of 3 specific types as mentioned in subject header.\nAdd functionality in Duke to handle the addition of these 3 types of\ntasks, as per level 4 requirements.\n","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":17}}},{"hash":"e0c30c837d75ad60650fb68e23f32a38a43578ba","messageTitle":"Add automated text UI testing","messageBody":"as per `A-TextUiTesting` requirements\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"bat":{"insertions":5,"deletions":1}}}]},{"date":"2022-01-20","commitResults":[{"hash":"410111e1441a04a6cbbe5a818438846347995aec","messageTitle":"Add error handling for Duke","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":124,"deletions":80}}},{"hash":"7bb72cca473fab93bf7a107a0ab312db523b7aff","messageTitle":"Implement `delete`","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":13,"deletions":1}}}]},{"date":"2022-01-26","commitResults":[{"hash":"b162dd6d824ebbda0b33eb28d8effaee35849af7","messageTitle":"Add ability to save tasks to hard disk","messageBody":"Currenly, Tasks are not preserved across sessions of Duke.\n\nTo preserve state across sessions of Duke, the taskList has to be\nwritten to memory.\n\nNow, any commands that modify the list of tasks will be written to the hard\ndisk.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":153,"deletions":35}}},{"hash":"11b079273f0d45558d0fd0dc4f171ed4ca4d0955","messageTitle":"Use Date/Time instead of String for dates","messageBody":"Currently, the dates for `Deadline` and `Event` are stored as strings.\n\nWe should aim to represent this as a DateTime class instead of a String.\n\nThis change stores dates and time as `java.time.LocalDate` and `java.time.LocalTime` objects respectively.\n","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":6}}},{"hash":"4b69fdd9173552821d3900ca48304bcfb508dcde","messageTitle":"Merge Level 7 and Level 8 features","messageBody":"After merging level-7 and level-8 to master, the features were\nincompatible with each other.\n\nThis commit ensures these two features are compatible with each other.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":51,"deletions":36}}}]},{"date":"2022-01-27","commitResults":[{"hash":"09e1d4d159ceeefee96dce720d574983cfa09cb7","messageTitle":"Add Ui class to deal with interaction with user.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":23}}},{"hash":"9cebfe7966172b0e9992fce3fb2ffc5e6f910b78","messageTitle":"Refactor list of tasks into separate class","messageBody":"Previously, an `ArrayList\u003cTask\u003e` was used to contain the list of tasks.\nMethods were then declared to manipulate the items in `ArrayList`\n\nHowever, this is not good practice of encapsulation.\n\nThus, behaviour involving manipulating the list of tasks and\nthe `ArrayList\u003cTask\u003e` instance have been refactored into their separate\nclass.\n","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":65}}},{"hash":"e74d1602619b82854138985c85b4bec06c8d56c5","messageTitle":"Rename DukeEngine.java to Parser.java","messageBody":"To meet A-MoreOOP\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":13}}},{"hash":"dfb9b70a0b5248a7f1c2e1ac0114155895839f64","messageTitle":"Put classes into package","messageBody":"Two packages have been created: `duke` and `duke.task`. The latter\nconsists of `Task.java` and its subclasses. The former contains all\nother `.java` file.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}}]},{"date":"2022-01-28","commitResults":[{"hash":"1cbe286ae6d827f8f7ea70f60bf8539c10a9dc84","messageTitle":"Add junit tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":1}}},{"hash":"870440048f0fbf299091d9a58e2c1773fdd271cf","messageTitle":"Fix .gitignore weirdness","messageBody":"somehow `/data/` is still being tracked even though it is added into\n`.gitignore`\n\nhopefully this will fix it\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"adce22818e1d44b374e0152653c9695fbc1ebc16","messageTitle":"Fix directory not generating.","messageBody":"Previously, the `data/` directory was not being autogenerated if it doesn\u0027t exist on\nthe system.\n\nThis fixes that by calling `mkdir` if the directory doesn\u0027t exist\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"5a904bbbe120ffdb487843c6009b1c5210fdb03d","messageTitle":"Fix runtest.bat to work with packages","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":2,"deletions":2}}},{"hash":"c17415505ba4b4c671fedc1f98e1775b362612a2","messageTitle":"Add JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":222,"deletions":15}}},{"hash":"815693687c0e6cca0049d645413cec853dea5225","messageTitle":"Enforce Coding Standards.","messageBody":"Ensure source code is compliant with coding standards.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"b972f405c4e4050dddebe1f7e6f4b9810e1fc1cb","messageTitle":"Implement `Find`","messageBody":"User can now search for tasks matching a provided keyword.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}}]},{"date":"2022-02-05","commitResults":[{"hash":"8626380870d372446975e12ab0a340f134f85a3c","messageTitle":"Configure `build.gradle` to run Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"1e12d2bf06025b01c4e24107f3babdba21f42b47","messageTitle":"Update unit tests to be compliant with checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":6}}},{"hash":"639f87a96ea3f62260c19312db63a6501159b9c8","messageTitle":"Fix style in files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":37}}}]},{"date":"2022-02-08","commitResults":[{"hash":"5cea5699fa4ec17eec84770983c954de9ce89d2e","messageTitle":"Level-10 JavaFX tutorial part 1","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0},"java":{"insertions":29,"deletions":1}}},{"hash":"a0a6bebb90d62b51bf8448b23ff88b63d533d992","messageTitle":"level-10 tutorial part 3","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":138,"deletions":4}}},{"hash":"a04861c297f9b94fc31276ac919d3f5f58ef0eaa","messageTitle":"JavaFX tut 4","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":118,"deletions":122}}},{"hash":"d05d0334c86daef32528b29fb086558bfe3ca62b","messageTitle":"Exercise 1 of JavaFX tut 4","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2},"java":{"insertions":1,"deletions":0}}},{"hash":"019ba077565065814781a7883e5433626b42923e","messageTitle":"Add GUI to Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":29}}}]},{"date":"2022-02-11","commitResults":[{"hash":"22ee9faa602b52a8a134a2c2db0ee35d0b4ad3d5","messageTitle":"Refactor parsing of object instances from savefile","messageBody":"Currently, object instances stored in the savefile are parsed and\nconverted within Storage.\n\nThis behaviour should be encapsulated by their respective objects, since\neach type has their own unique representation in the savefile.\nFurthermore, this behaviour is the inverse of `toFileFormat()`, and\nshould be placed together with said method.\n\nLet\u0027s,\n* extract and encapsulate code relevant to converting objects from\ntheir savefile representation underneath their own class in a method\ncalled `fromFileFormat`.\n* create a CorruptedSaveException to indicate errors with converting\n  from the savefile.\n\nCurrently, this change affects `Deadline`, `Event` and `Todo` objects.\n","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":10}}},{"hash":"e96b6977bfc90136fb83163d95ef118bc24d4ac1","messageTitle":"Group index-based commands in inputHandler","messageBody":"Currently, index based commands from the user such as `mark`,`unmark`\nand `delete` have duplicated code within inputHandler. For example, all\nindex-based commands will need to check for a valid TaskList index\nbefore proceeding with the operation specified by the user command.\n\nGrouping index-based commands will help improve code quality.\n\nLets,\n* extract relevant to index-based commands into a separate method\n`indexNumberOperation` to handle index-based commands. Doing so will\nmake addition of future index-based commands easier as well.\n* throw an `InvalidItemNumberException` instead of `DukeException` to\n  represent the exceptional case where the user supplies an invalid item\n  number.\n\nWith the addition of `InvalidItemNumberException` and\n`CorruptedSaveException` from previous commits, there will be a new\npackage `duke.exceptions` to contain all Duke-related exceptions.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":19}}},{"hash":"8b9ff4b835a8977e23a803e89e03891dd7905aa5","messageTitle":"Add output Queue to buffer Duke\u0027s output messages","messageBody":"Instead of having a call-response model when a user inputs a command,\nuse a queue to buffer the output messages by Duke. The application will\nthen print all messages in the queue until it is empty.\n\nThis will allow a command to generate multiple distinct output messages.\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":113}}},{"hash":"d46fe1687df307e1b86fbb6b80c200df7c79fd92","messageTitle":"Rename package`duke.task` to `duke.tasks`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":15}}},{"hash":"c15b063b089a370b63f4be4133bb4319a3626ea1","messageTitle":"Make JavaFX work with outputQueue","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":10}}},{"hash":"b659d22263399a5ef8fa48cdfdacbabb9e42700e","messageTitle":"Add assertions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}}]},{"date":"2022-02-19","commitResults":[{"hash":"ebee1c5697fdab1abc7ab6dce4176e6d88d74d4b","messageTitle":"Add equals method for each type of Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":11}}},{"hash":"020e0a4747ebee44161f5e09d7dbf97240939c2a","messageTitle":"Add detection of duplicates (C-DetectDuplicates)","messageBody":"Duke now blocks the addition of a duplicated task.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}},{"hash":"ec0d58493c5f0f5af2c1f146640ace6d20f6cf07","messageTitle":"Improve code quality.","messageBody":"Refactor magic strings in TaskList.java into named constants.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":11}}},{"hash":"e5f2d3ccd3b31b33905455d4efe0ffad8ff5c38c","messageTitle":"Enforce checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":87}}},{"hash":"d440de58339c6809f730316346afbeebf29e3fbf","messageTitle":"Improve GUI, move GUI files into subpackage","messageBody":"Added a title to the Java GUI window, added a box around messages.\nTried to put profile pictures into circles but not very successful.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":1},"java":{"insertions":18,"deletions":3}}},{"hash":"b40effcc6353c8549c4940010da9bd0449ddc117","messageTitle":"Add userguide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":106,"deletions":15}}},{"hash":"c7ddca8b8e275521fa19552f1031b79b65486e0b","messageTitle":"Fix storage bug causing tasks to not be saved.","messageBody":"Event and Deadline with both date and time are not stored correctly,\nresulting in a parse error when reading from the savefile.\n\nChanges were made to `toFileFormat` of the 2 classes to fix this bug.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"7c4fa8f46d456f26c4cbe6f9b92fc0511ec5aa21","messageTitle":"Fix dialogbox resizing bug","messageBody":"Long labels in dialogbox gets resized when the scrollPane activates.\n\nSee discussion here:\nhttps://github.com/nus-cs2103-AY2122S2/forum/issues/145\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":0,"deletions":2}}},{"hash":"0af5b2b33c103148b01e55be788155982e381fdc","messageTitle":"Update readme to include pictures","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":0}}},{"hash":"922f64decc877b5ec7a835a51cb9a25b889b70a7","messageTitle":"Enforce checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2022-02-20","commitResults":[{"hash":"11647e27690a6bb066a395e650d03f0b6351a282","messageTitle":"Update docs to include release link","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"e0253d646f41acc33bc0e488c2b2f389860f6c4d","messageTitle":"Update README.md","messageBody":"Fix table formatting issue with github pages","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":11,"deletions":10}}}]}]},"authorFileTypeContributionMap":{"cheehongw":{"java":1243,"md":107,"fxml":36,"sh":0,"bat":6,"gradle":15,"txt":13}},"authorContributionVariance":{"cheehongw":24707.707},"authorDisplayNameMap":{"cheehongw":"CS2103-W16-2 WONG..HONG"}}
