[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"cheehongw":15}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"    private void flip() {","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"    ","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":"        db.flip();","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"cheehongw"},"content":"        return db;","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"    ","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import duke.output.BooleanOutput;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"import duke.output.Output;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"public class Duke {","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"    /** Represents whether or not the parser is accepting userinput. */","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    private boolean isPolling \u003d true;","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"        d.run();","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    private void run() {","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"        Ui.printMessage(Ui.GREETING_MESSAGE);","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"        while (isPolling) {","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"            Output output \u003d parser.inputHandler(input);","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"            if (output instanceof BooleanOutput) {","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"                BooleanOutput o \u003d (BooleanOutput) output;","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"                isPolling \u003d o.getBoolean();","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"            Ui.printMessage(output.toString());","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"    ","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"        Output output \u003d parser.inputHandler(input);","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"        if (output instanceof BooleanOutput) {","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"            BooleanOutput o \u003d (BooleanOutput) output;","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"            isPolling \u003d o.getBoolean();","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"        return output.getMessage();","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"cheehongw":38}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cheehongw":7}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"public class Launcher {","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"            fxmlLoader.setRoot(new MainWindow());","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"            stage.show();","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"        );","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import duke.output.BooleanOutput;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import duke.output.Output;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"import duke.output.TextOutput;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":" * Encapsulates the logic to parse and understand inputs by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    public Parser() {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"            tasks \u003d Storage.readSaveFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"            Ui.printMessage(Ui.CORRUPTED_SAVE_MESSAGE);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"     * Handles user commands and delegates them to their corresponding methods.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"     * @param input The text input by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"    public Output inputHandler(String input) {","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"        String[] commandArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"        String command \u003d commandArgs[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"        String commandDetails \u003d commandArgs.length \u003d\u003d 2 ? commandArgs[1] : null;","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"        String replyMessage \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"            switch (command) {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"                return byeMessage();","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"            case \"list\":","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"                replyMessage \u003d tasks.listItems();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"                ","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"                assertValidItemNumber(commandDetails);","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"                replyMessage \u003d tasks.markItem(Integer.parseInt(commandDetails));","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"                Storage.updateTaskFile(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"cheehongw"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"                assertValidItemNumber(commandDetails);","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"                replyMessage \u003d tasks.unmarkItem(Integer.parseInt(commandDetails));","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"                Storage.updateTaskFile(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"cheehongw"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"cheehongw"},"content":"                //Fall Through","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":"            case \"deadline\": ","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"cheehongw"},"content":"                //Fall Through","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"            case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"cheehongw"},"content":"                assertNonEmptyDetails(commandDetails);","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"cheehongw"},"content":"                Task task \u003d createTask(command, commandDetails);","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"cheehongw"},"content":"                replyMessage \u003d tasks.addTask(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"cheehongw"},"content":"                Storage.updateTaskFile(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"cheehongw"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"cheehongw"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"                assertValidItemNumber(commandDetails);","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"cheehongw"},"content":"                replyMessage \u003d tasks.deleteItem(Integer.parseInt(commandDetails));","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"                Storage.updateTaskFile(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"cheehongw"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"cheehongw"},"content":"            case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"cheehongw"},"content":"                replyMessage \u003d tasks.find(commandDetails);","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"cheehongw"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"cheehongw"},"content":"                ","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"cheehongw"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"                replyMessage \u003d Ui.UNKNOWN_COMMAND_MESSAGE;","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"cheehongw"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"cheehongw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"cheehongw"},"content":"            replyMessage \u003d e.getMessage();","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"cheehongw"},"content":"            replyMessage \u003d Ui.mergeMessages(ioException.toString(), Ui.READ_WRITE_ERROR_MESSAGE);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"        return new TextOutput(replyMessage);","lastModifiedDate":"2022-02-08"},{"lineNumber":92,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"cheehongw"},"content":"     * Creates a Task based on user-specified parameters.","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"cheehongw"},"content":"     * @param command The type of task to be created.","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"cheehongw"},"content":"     * @param commandDetails The user-specified parameters for different types of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"cheehongw"},"content":"     * @return A Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"cheehongw"},"content":"     * @throws DukeException if user-specified parameters do not meet the expected format.","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"cheehongw"},"content":"    public Task createTask(String command, String commandDetails) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"cheehongw"},"content":"        String[] taskArgs \u003d null;","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"cheehongw"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"cheehongw"},"content":"            return new ToDo(commandDetails);","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"cheehongw"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"cheehongw"},"content":"            taskArgs \u003d commandDetails.split(\" /by \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"cheehongw"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"cheehongw"},"content":"            taskArgs \u003d commandDetails.split(\" /at \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"cheehongw"},"content":"        if (taskArgs.length \u003c 2) {","lastModifiedDate":"2022-02-05"},{"lineNumber":114,"author":{"gitId":"cheehongw"},"content":"            throw new DukeException(String.format(","lastModifiedDate":"2022-02-05"},{"lineNumber":115,"author":{"gitId":"cheehongw"},"content":"            \"Missing details for %s!\", command));","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":117,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"cheehongw"},"content":"        return command.equals(\"deadline\") ","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"cheehongw"},"content":"            ? new Deadline(taskArgs[0], taskArgs[1])","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"cheehongw"},"content":"            : new Event(taskArgs[0], taskArgs[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":123,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"cheehongw"},"content":"     * The action to be taken when a bye command is issued.","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003e Sets the parser to stop accepting user input. \u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"cheehongw"},"content":"     * @return The bye message output.","lastModifiedDate":"2022-02-08"},{"lineNumber":129,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"cheehongw"},"content":"    public Output byeMessage() {","lastModifiedDate":"2022-02-08"},{"lineNumber":131,"author":{"gitId":"cheehongw"},"content":"        return new BooleanOutput(\"Bye. Hope to see you again soon!\", false);","lastModifiedDate":"2022-02-08"},{"lineNumber":132,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":134,"author":{"gitId":"cheehongw"},"content":"    private void assertNonEmptyDetails(String details) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"cheehongw"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"cheehongw"},"content":"            throw new DukeException(\"Missing details!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":137,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":138,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"cheehongw"},"content":"    private boolean isNumeric(String string) {","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"cheehongw"},"content":"            Integer.parseInt(string);","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"cheehongw"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"cheehongw"},"content":"            return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"cheehongw"},"content":"        return true;","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"cheehongw"},"content":"    private void assertValidItemNumber(String str) throws DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"cheehongw"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"cheehongw"},"content":"            throw new DukeException(\"Missing item number!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":152,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":153,"author":{"gitId":"cheehongw"},"content":"        ","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"cheehongw"},"content":"        if (!isNumeric(str)) {","lastModifiedDate":"2022-02-05"},{"lineNumber":155,"author":{"gitId":"cheehongw"},"content":"            throw new DukeException(","lastModifiedDate":"2022-02-05"},{"lineNumber":156,"author":{"gitId":"cheehongw"},"content":"            \"Please specify a numerical value for the item number instead of \\\"\" + str + \"\\\"!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":158,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"cheehongw"},"content":"        int itemNumber \u003d Integer.parseInt(str);","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"cheehongw"},"content":"        if (!tasks.isValidItemNumber(itemNumber)) {","lastModifiedDate":"2022-02-05"},{"lineNumber":162,"author":{"gitId":"cheehongw"},"content":"            throw new DukeException(","lastModifiedDate":"2022-02-05"},{"lineNumber":163,"author":{"gitId":"cheehongw"},"content":"            \"Please specify a valid item number\");","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"cheehongw":166}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"    private static final String FILEPATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"    private static final String DIR_PATH \u003d \"data/\";","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"     * Generate a file at the given directory if it does not exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"     * @param filePath The file to be created.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"     * @param dirPath The directory where the file should be.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"     * @return The created file.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"    private static File createFileIfNotExist(String filePath, String dirPath) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"        dir.mkdir();","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"        file.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"        return file;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"     * Stores the list of tasks in the hard drive.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"     * @param taskList The list of tasks to be written.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"    public static void updateTaskFile (TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"        String tempFilePath \u003d FILEPATH + \".new\";","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"        File file \u003d Storage.createFileIfNotExist(tempFilePath, DIR_PATH);","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"        FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"        ","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":"            fw.write(task.toFileFormat());","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"        fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"        Files.move(Paths.get(tempFilePath), Paths.get(FILEPATH), REPLACE_EXISTING);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"cheehongw"},"content":"     * Reads and retrieve the contents of the save file in the hard disk.","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"cheehongw"},"content":"     * @return The list of tasks stored in the file.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"     * @throws DukeException If the contents of the file cannot be restored correctly.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"cheehongw"},"content":"    public static TaskList readSaveFile() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"cheehongw"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"cheehongw"},"content":"        File f \u003d new File(FILEPATH);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"cheehongw"},"content":"        Scanner s \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"cheehongw"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"                String packet \u003d s.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"cheehongw"},"content":"                String[] packetSections \u003d packet.split(\" \\\\| \");","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"cheehongw"},"content":"                String taskName \u003d packetSections[2];","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"cheehongw"},"content":"                boolean isDone \u003d Integer.parseInt(packetSections[1]) \u003d\u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"cheehongw"},"content":"                switch (packetSections[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"cheehongw"},"content":"                case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"cheehongw"},"content":"                    tasks.addTask(new ToDo(taskName, isDone));","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"cheehongw"},"content":"                case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"cheehongw"},"content":"                    String deadlineString \u003d packetSections[3];","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"cheehongw"},"content":"                    tasks.addTask(new Deadline(taskName, isDone, deadlineString));","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"cheehongw"},"content":"                case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"                    String startDateString \u003d packetSections[3];","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"                    tasks.addTask(new Event(taskName, isDone, startDateString));","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"cheehongw"},"content":"                default:","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"cheehongw"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"cheehongw"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"cheehongw"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"cheehongw"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"cheehongw"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"cheehongw"},"content":"        } finally {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"cheehongw"},"content":"            if (s !\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"cheehongw"},"content":"                s.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"cheehongw"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"        return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"cheehongw"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"cheehongw":107}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    /** Instantiates an empty task list */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"    /** Instantiates a list of tasks */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"     * @return A success message.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %s task(s) in the list\",","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"                task, tasks.size());","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"     * @param itemNumber The index of the item in the list (1-based index).","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"     * @return A success message for the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"    public String deleteItem(int itemNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"        Task task \u003d tasks.remove(itemNumber - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %s task(s) in the list\",","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"                task, tasks.size());","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"     * Marks a task in the TaskList as complete.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"     * @param itemNumber The index of the item in the list (1-based index).","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"     * @return A success message for the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"    public String markItem(int itemNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"        Task task \u003d tasks.get(itemNumber - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"        task.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"        return \"Nice! I\u0027ve marked this as done:\\n  \" + task;","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"     * Marks a task in the TaskList as incomplete.","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"     * @param itemNumber The index of the item in the list (1-based index).","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"     * @return A success message for the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"cheehongw"},"content":"    public String unmarkItem(int itemNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"cheehongw"},"content":"        Task task \u003d tasks.get(itemNumber - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"cheehongw"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"cheehongw"},"content":"     * Checks if a given number points an existing item in the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"cheehongw"},"content":"     * @param itemNum The index of the item in the list (1-based index).","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"     * @return boolean indicating whether item is valid or not.","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"    public boolean isValidItemNumber(int itemNum) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"cheehongw"},"content":"        return itemNum \u003e 0 \u0026\u0026 itemNum \u003c\u003d tasks.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"cheehongw"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"cheehongw"},"content":"     * @return Size of the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"cheehongw"},"content":"    public int size() {","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"     * @return The list of tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"cheehongw"},"content":"        return this.tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":95,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"cheehongw"},"content":"     * Finds the list of tasks that contains the given keyword and lists them out.","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"cheehongw"},"content":"     * @param searchText The keyword to search for.","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"cheehongw"},"content":"     * @return A list of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"cheehongw"},"content":"    public String find(String searchText) {","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"cheehongw"},"content":"        TaskList matchedTasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"cheehongw"},"content":"        ","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"        for(Task task : tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"cheehongw"},"content":"            if (task.toFileFormat().contains(searchText)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"cheehongw"},"content":"                matchedTasks.addTask(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"cheehongw"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"cheehongw"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"cheehongw"},"content":"        return Ui.mergeMessages(message, matchedTasks.listItems());","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"cheehongw"},"content":"     * Loops through the list and lists out all items in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"cheehongw"},"content":"     * @return A string representation of all items in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"cheehongw"},"content":"    public String listItems() {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"cheehongw"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"cheehongw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"cheehongw"},"content":"            sb.append(\"There is nothing in the list!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"cheehongw"},"content":"        ","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"cheehongw"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"cheehongw"},"content":"            sb.append(i + \". \").append(tasks.get(i - 1)).append(\"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"cheehongw"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"cheehongw"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"cheehongw":133}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":" * Utility class that deals with common messages and outputs to terminal.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"    public static final String LINE \u003d \"----------------------------------------\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    public static final String GREETING_MESSAGE \u003d \"Wow! Hello! I\u0027m Duke.\\nWhat can I do for you?\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"    public static final String UNKNOWN_COMMAND_MESSAGE \u003d \"OoPs! I don\u0027t know what that means :P\";","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    public static final String READ_WRITE_ERROR_MESSAGE \u003d \"Something went wrong with the hard disk!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    public static final String CORRUPTED_SAVE_MESSAGE \u003d ","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"            \"File is corrupted and Duke is unable to restore data from previous sessions.\\n\" ","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"            + \"Resetting contents of save-file.\";","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"     * Wraps messages generated by Duke with fancy text UI elements and prints them to console.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"        System.out.println(chatBox(message));","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"     * Wraps a given text in a box to be printed","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"     * @param givenText The given text","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"     * @return Modified text.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"    public static String chatBox(String givenText) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"        StringBuilder box \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"        box.append(LINE);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"        box.append(newLineAfter(givenText));","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"        box.append(LINE);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"        return box.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"     * Ends a given string with a \u0027\\n\u0027 character if it does not have one.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"     * @param text The String to be modified.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"     * @return The modified string.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    public static String newLineAfter(String text) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"        if (text.charAt(text.length() - 1) !\u003d \u0027\\n\u0027) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"            return text + \u0027\\n\u0027;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"        ","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"        return text;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"cheehongw"},"content":"     * Concatenates 2 message separated by a blank line.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"     * @param m1 The first message.","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"     * @param m2 The second message.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"     * @return Concatenated message.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"cheehongw"},"content":"    public static String mergeMessages(String m1, String m2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"cheehongw"},"content":"        return newLineAfter(m1) + \"\\n\" + m2;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"cheehongw":64}},{"path":"src/main/java/duke/output/BooleanOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke.output;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"public class BooleanOutput extends Output {","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"    private boolean bool;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"    ","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"    public BooleanOutput(String text, boolean bool) {","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"        super(text);","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"        this.bool \u003d bool;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    public boolean getBoolean() {","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"        return bool;","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    public String getMessage() {","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"        return this.text;","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":19}},{"path":"src/main/java/duke/output/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke.output;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":" * Encapsulates the output of a Duke command.","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"public abstract class Output {","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    protected String text;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    Output(String text) {","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    ","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    public abstract String getMessage();","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    public String toString() {","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"        return getMessage();","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":19}},{"path":"src/main/java/duke/output/TextOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke.output;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"public class TextOutput extends Output {","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"    public TextOutput(String text) {","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"        super(text);","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"    public String getMessage() {","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"        return this.text;","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":13}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":" * Represents a Deadline which is a kind of Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":" * Encapsulates an additional LocalDate and LocalTime attribute","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":" * which represents the deadline of the Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"     * Creates a new Deadline that is marked as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003eAccepts a deadlineDate string with pattern \"yyyy-MM-dd\" or \"yyyy-MM-dd HHmm\".\u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"     * @param deadlineDate The string representation of the deadline.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"     * @throws DukeException If deadlineDate does not have the expected pattern.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"    public Deadline(String task, String deadlineDate) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"        super(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"        String[] datetime \u003d deadlineDate.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"            deadline \u003d LocalDate.parse(datetime[0], DATE_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"            time \u003d datetime.length \u003d\u003d 1 ? null : LocalTime.parse(datetime[1], TIME_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"            throw new DukeException(\"Invalid date/time format!\" ","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"                    + \" Expected date and/or time in the following formats: \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"                    + \"yyyy-mm-dd | Example: 2022-06-26\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"                    + \"yyyy-mm-dd HHmm | Example: 2022-06-26 2359\");","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"     * Creates a new Deadline that is marked as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"     * @param deadline Represents the date by which the task is due. ","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"     * @param time Represents the time (if any) by which the task is due. ","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"    public Deadline(String task, LocalDate deadline, LocalTime time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"        super(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"     * Constructor to create a Deadline instance.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003eThis constructor accepts an additional isDone boolean to initialize ","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"cheehongw"},"content":"     * a task that has been marked/unmarked as done. \u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003eAccepts a deadlineDate string with pattern \"yyyy-MM-dd HHmm\" or \"yyyy-MM-dd\".\u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"cheehongw"},"content":"     * @param isDone Marks the task as done if true.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"cheehongw"},"content":"     * @param deadlineDate The string representation of the deadline.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"cheehongw"},"content":"     * @throws DukeException If deadlineDate does not have the expected pattern.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"cheehongw"},"content":"    public Deadline (String task, boolean isDone, String deadlineDate) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"        this(task, deadlineDate);","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"cheehongw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"cheehongw"},"content":"     * Formats a Deadline instance to be stored in an external file.","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"cheehongw"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"cheehongw"},"content":"        Integer i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"cheehongw"},"content":"        String deadlineString \u003d deadline.format(DATE_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"cheehongw"},"content":"        String timeString \u003d time \u003d\u003d null ? \"\" : \" \" + time.format(TIME_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"D | %d | %s | %s%s\\n\", ","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"                i, this.task, deadlineString, timeString);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"     * Returns the string representation of a Deadline.","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"cheehongw"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"cheehongw"},"content":"        String date \u003d this.deadline.format(dateFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"cheehongw"},"content":"        String time \u003d this.time \u003d\u003d null ? \"\" : \" \" + this.time.format(timeFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"[D]%s %s (by: %s%s)\", this.statusString(), this.task, date, time);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cheehongw":99}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":" * Represents an Event which is a kind of Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":" * Encapsulates an additional LocalDate and LocalTime attribute","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":" * which represents when the Event occur.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    private LocalDate startDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"     * Creates a new Event that is marked as not done by default.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003eAccepts a startDateString with pattern \"yyyy-MM-dd\" or \"yyyy-MM-dd HHmm\".\u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"     * @param startDateString The string representation of when the event occurs.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"     * @throws DukeException If startDateString does not have the expected pattern.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"    public Event (String task, String startDateString) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"        super(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"        String[] datetime \u003d startDateString.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"        ","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"            startDate \u003d LocalDate.parse(datetime[0], DATE_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"            time \u003d datetime.length \u003d\u003d 1 ? null : LocalTime.parse(datetime[1], TIME_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"            throw new DukeException(\"Invalid date/time format!\" ","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"                    + \" Expected date and/or time in the following formats: \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"                    + \"yyyy-mm-dd | Example: 2022-06-26\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"                    + \"yyyy-mm-dd HHmm | Example: 2022-06-26 2359\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"     * Creates a new Event that is marked as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"     * @param startDate Represents the date at which the event occurs. ","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"     * @param time Represents the time (if any) by which the event occurs. ","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"    public Event(String task, LocalDate startDate, LocalTime time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":"        super(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"cheehongw"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"cheehongw"},"content":"     * Constructor to create an Event instance.","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003eThis constructor accepts an additional isDone boolean to initialize ","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":"     * a task that has been marked/unmarked as done. \u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003eAccepts a startDate string with pattern \"yyyy-MM-dd HHmm\" or \"yyyy-MM-dd\".\u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"cheehongw"},"content":"     * @param isDone Marks the task as done if true.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"cheehongw"},"content":"     * @param startDate The string representation of when the event occurs.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"cheehongw"},"content":"     * @throws DukeException If startDate does not have the expected pattern.","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"    public Event (String task, boolean isDone, String startDate) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"cheehongw"},"content":"        this(task, startDate);","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"cheehongw"},"content":"     * Formats an Event instance to be stored in an external file.","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"cheehongw"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"cheehongw"},"content":"        Integer i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"cheehongw"},"content":"        String startDateString \u003d startDate.format(DATE_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"cheehongw"},"content":"        String timeString \u003d time \u003d\u003d null ? \"\" : \" \" + time.format(TIME_FORMATTER);","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"E | %d | %s | %s%s\\n\", ","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"cheehongw"},"content":"                i, this.task, startDateString, timeString);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"cheehongw"},"content":"     * Returns the string representation of an Event.","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"cheehongw"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"cheehongw"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"cheehongw"},"content":"        String date \u003d this.startDate.format(dateFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"cheehongw"},"content":"        String time \u003d this.time \u003d\u003d null ? \"\" : \" \" + this.time.format(timeFormatter);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"[E]%s %s (at: %s%s)\", this.statusString(), this.task, date, time);","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cheehongw":99}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":" * Abstract class representing a Task","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    /** Denotes whether or not this task is done */","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    /** Description of the task */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"    protected String task;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    protected Task(String task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    protected Task(String task, boolean isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"     * Returns the string representation of whether a task is done or not.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"     * @return \"[X]\" if done, \"[ ]\"\" if undone","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"    public String statusString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    public abstract String toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cheehongw":47}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":" * Represents a task which is to be done.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"     * Creates a new ToDo that is marked as not done by default.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    public ToDo(String task) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"        super(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"     * Constructor to create a ToDo instance.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"     * \u003cp\u003eThis constructor accepts an additional isDone boolean to initialize ","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"     * a task that has been marked/unmarked as done.\u003c/p\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"     * ","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"     * @param task The description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"     * @param isDone Marks the task as done if true.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"    public ToDo(String task, boolean isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"        super(task, isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"     * Formats a ToDo instance to be stored in an external file.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"        Integer i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"T | %d | %s\\n\", i, this.task);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"     * Returns the string representation of a ToDo.","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"        return String.format(\"[T]%s %s\", this.statusString(), this.task);","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cheehongw":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"cheehongw":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"    public void byeMessage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"cheehongw":12}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    public void createFileIfNotExists() {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"cheehongw":9}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    public void newTaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"        assertEquals(tasks.size(), 0);","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"        taskArray.add(new TaskStub());","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"        tasks \u003d new TaskList(taskArray);","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"    public void addTask() {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"        tasks.addTask(new TaskStub());","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"cheehongw"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"cheehongw":30}},{"path":"src/test/java/duke/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"    static final String STUB \u003d \"I AM A TASK_STUB\";","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"    public TaskStub() {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"        super(STUB);","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"        return STUB;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"        return STUB;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"cheehongw":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"test","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"todo foofoofoo","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"event barbarbar /at idk when!","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"event !!!!!!","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"mark 500","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"unmark exception!!","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"delete","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"delete 500","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cheehongw":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"REM activate correct java version (otherwise just ignore the error)","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"call java11","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"java -version","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"cheehongw":6}}]
