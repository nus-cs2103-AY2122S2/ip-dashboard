[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"javafx {","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"    version \u003d \"11\"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ovidharshini":7,"-":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"    private DialogBox(String text, Image img, userType user) {","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"        dialog.setStyle(\"-fx-font-size: 15\");","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"        double x \u003d displayPicture.getX() + displayPicture.getFitWidth() / 2;","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"        double y \u003d displayPicture.getY() + displayPicture.getFitHeight() / 2;","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"        double radius \u003d Math.min(displayPicture.getFitWidth(), displayPicture.getFitHeight()) / 2;","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"        displayPicture.setClip(new Circle(x, y, radius));","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"    private void flip() {","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"    public static DialogBox getUserDialog(String text, Image img, userType user) {","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"        return new DialogBox(text, img, user);","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"    public static DialogBox getDukeDialog(String text, Image img, userType user) {","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"        var db \u003d new DialogBox(text, img, user);","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"        db.flip();","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"        return db;","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"ovidharshini":68}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":" * The Duke program implements a simple task bot with CRUD functionality.","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":" * The program can add three different types of tasks (todo, deadline,","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":" * event), mark tasks as done, and delete tasks.","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"     * Marks Task as complete.","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"     * @param input index of task","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     * @return generic update message string","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"     * @throws Exception if an exception occurs in the saving of","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"     * data to the file at filePath","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"    public String doHandler(String input) throws Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"        int i \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\",","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"                \"\")) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"        assert i \u003c\u003d tasks.length() \u0026\u0026 i \u003e\u003d 1 : \"index of item should be within scope of tasklist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"      ","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"        tasks.get(i).markComplete();","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"        assert tasks.get(i).getStatusIcon().equals(\"X\") : \"task should be marked done\";","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showUpdateMessage();","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"     * Marks Task as incomplete.","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"     * @param input index of task","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"     * @return generic update message string","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"     * @throws Exception if an exception occurs in the saving of","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"     * data to the file at filePath","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"    public String undoHandler(String input) throws Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"        int i \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\",","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"                \"\")) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"        assert i \u003c\u003d tasks.length() \u0026\u0026 i \u003e\u003d 1 : \"index of item should be within scope of tasklist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"      ","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"        tasks.get(i).markIncomplete();","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"        assert tasks.get(i).getStatusIcon().equals(\" \") : \"task should be marked incomplete\";","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showUpdateMessage();","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"     * Deletes Task at a specified index from tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"     * @param input index of task","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"     * @return string of list of tasks and deletion message.","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"     * @throws Exception if an exception occurs in the saving of","lastModifiedDate":"2022-02-21"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"     * data to the file at filePath","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"ovidharshini"},"content":"    public String deleteHandler(String input) throws Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"ovidharshini"},"content":"        int i \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\",","lastModifiedDate":"2022-02-21"},{"lineNumber":71,"author":{"gitId":"ovidharshini"},"content":"                \"\")) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"ovidharshini"},"content":"        assert i \u003c\u003d tasks.length() \u0026\u0026 i \u003e\u003d 1 : \"index of item should be within scope of tasklist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"ovidharshini"},"content":"        tasks.remove(i);","lastModifiedDate":"2022-02-21"},{"lineNumber":74,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"ovidharshini"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showDeleteMessage(tasks);","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"ovidharshini"},"content":"     * Returns a string of the list of Tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":81,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of list of tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"ovidharshini"},"content":"    public String listHandler() {","lastModifiedDate":"2022-02-21"},{"lineNumber":85,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showListMessage(tasks);","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":89,"author":{"gitId":"ovidharshini"},"content":"     * Adds a Todo to tasks and returns string about the addition.","lastModifiedDate":"2022-02-21"},{"lineNumber":90,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"ovidharshini"},"content":"     * @param input description of Todo","lastModifiedDate":"2022-02-21"},{"lineNumber":92,"author":{"gitId":"ovidharshini"},"content":"     * @return string stating that Todo has been added.","lastModifiedDate":"2022-02-21"},{"lineNumber":93,"author":{"gitId":"ovidharshini"},"content":"     * @throws Exception if an exception occurs in the saving of","lastModifiedDate":"2022-02-21"},{"lineNumber":94,"author":{"gitId":"ovidharshini"},"content":"     * data to the file at filePath","lastModifiedDate":"2022-02-21"},{"lineNumber":95,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":96,"author":{"gitId":"ovidharshini"},"content":"    public String todoHandler(String input) throws Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":97,"author":{"gitId":"ovidharshini"},"content":"        Todo t \u003d new Todo(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"ovidharshini"},"content":"        tasks.add(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":100,"author":{"gitId":"ovidharshini"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showTodoMessage() + t;","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":105,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":106,"author":{"gitId":"ovidharshini"},"content":"     * Finds tasks with matching keywords in tasklist and returns them.","lastModifiedDate":"2022-02-21"},{"lineNumber":107,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":108,"author":{"gitId":"ovidharshini"},"content":"     * @param input keyword to search for","lastModifiedDate":"2022-02-21"},{"lineNumber":109,"author":{"gitId":"ovidharshini"},"content":"     * @return string stating that matching tasks are found.","lastModifiedDate":"2022-02-21"},{"lineNumber":110,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":111,"author":{"gitId":"ovidharshini"},"content":"    public String findHandler(String input) {","lastModifiedDate":"2022-02-21"},{"lineNumber":112,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showFindMessage() + tasks.find(input).toString();","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":116,"author":{"gitId":"ovidharshini"},"content":"     * Adds a Deadline task to tasks and returns string about the addition.","lastModifiedDate":"2022-02-21"},{"lineNumber":117,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":118,"author":{"gitId":"ovidharshini"},"content":"     * @param input string containing description and dateTime of task","lastModifiedDate":"2022-02-21"},{"lineNumber":119,"author":{"gitId":"ovidharshini"},"content":"     * @return  string stating that a Deadline task has been added.","lastModifiedDate":"2022-02-21"},{"lineNumber":120,"author":{"gitId":"ovidharshini"},"content":"     * @throws Exception if an exception occurs in the saving of","lastModifiedDate":"2022-02-21"},{"lineNumber":121,"author":{"gitId":"ovidharshini"},"content":"     * data to the file at filePath","lastModifiedDate":"2022-02-21"},{"lineNumber":122,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":123,"author":{"gitId":"ovidharshini"},"content":"    public String deadlineHandler(String input) throws Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":124,"author":{"gitId":"ovidharshini"},"content":"        String datetime \u003d input.replaceAll(\".* by \", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"ovidharshini"},"content":"        input \u003d input.replaceAll(\" by .*\", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":127,"author":{"gitId":"ovidharshini"},"content":"        Deadline d \u003d new Deadline(input, datetime);","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"ovidharshini"},"content":"        tasks.add(d);","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":130,"author":{"gitId":"ovidharshini"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showDeadlineMessage() + d;","lastModifiedDate":"2022-02-21"},{"lineNumber":132,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":135,"author":{"gitId":"ovidharshini"},"content":"     * Adds an Event task to tasks and returns string about the addition.","lastModifiedDate":"2022-02-21"},{"lineNumber":136,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":137,"author":{"gitId":"ovidharshini"},"content":"     * @param input string containing description and dateTime of task","lastModifiedDate":"2022-02-21"},{"lineNumber":138,"author":{"gitId":"ovidharshini"},"content":"     * @return  string stating that an Event task has been added.","lastModifiedDate":"2022-02-21"},{"lineNumber":139,"author":{"gitId":"ovidharshini"},"content":"     * @throws Exception if an exception occurs in the saving of","lastModifiedDate":"2022-02-21"},{"lineNumber":140,"author":{"gitId":"ovidharshini"},"content":"     * data to the file at filePath","lastModifiedDate":"2022-02-21"},{"lineNumber":141,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":142,"author":{"gitId":"ovidharshini"},"content":"    public String eventHandler(String input) throws Exception {","lastModifiedDate":"2022-02-21"},{"lineNumber":143,"author":{"gitId":"ovidharshini"},"content":"        String time \u003d input.replaceAll(\".* at \", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"ovidharshini"},"content":"        input \u003d input.replaceAll(\" at .*\", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"ovidharshini"},"content":"        Event e \u003d new Event(input, time);","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"ovidharshini"},"content":"        tasks.add(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"ovidharshini"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showEventMessage() + e;","lastModifiedDate":"2022-02-21"},{"lineNumber":149,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":152,"author":{"gitId":"ovidharshini"},"content":"     * Returns \u0027EXIT\u0027 string to signal program termination.","lastModifiedDate":"2022-02-21"},{"lineNumber":153,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":154,"author":{"gitId":"ovidharshini"},"content":"     * @return goodbye signal","lastModifiedDate":"2022-02-21"},{"lineNumber":155,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":156,"author":{"gitId":"ovidharshini"},"content":"    public String byeHandler() {","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"ovidharshini"},"content":"        return Ui.showByeMessage() + \"EXIT\";","lastModifiedDate":"2022-02-21"},{"lineNumber":158,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":161,"author":{"gitId":"ovidharshini"},"content":"     * Returns response to indecipherable input.","lastModifiedDate":"2022-02-21"},{"lineNumber":162,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":163,"author":{"gitId":"ovidharshini"},"content":"     * @param input string to respond to","lastModifiedDate":"2022-02-21"},{"lineNumber":164,"author":{"gitId":"ovidharshini"},"content":"     * @return generic strings indicative of incorrect input.","lastModifiedDate":"2022-02-21"},{"lineNumber":165,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":166,"author":{"gitId":"ovidharshini"},"content":"    public String defaultHandler(String input) {","lastModifiedDate":"2022-02-21"},{"lineNumber":167,"author":{"gitId":"ovidharshini"},"content":"        return input.equals(\"\")","lastModifiedDate":"2022-02-21"},{"lineNumber":168,"author":{"gitId":"ovidharshini"},"content":"                ? Ui.showEmptyMessage()","lastModifiedDate":"2022-02-21"},{"lineNumber":169,"author":{"gitId":"ovidharshini"},"content":"                : Ui.showDefaultMessage();","lastModifiedDate":"2022-02-21"},{"lineNumber":170,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":173,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":174,"author":{"gitId":"ovidharshini"},"content":"     * Determines Duke\u0027s responses to user input.","lastModifiedDate":"2022-02-21"},{"lineNumber":175,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":176,"author":{"gitId":"ovidharshini"},"content":"     * @param input user input","lastModifiedDate":"2022-02-21"},{"lineNumber":177,"author":{"gitId":"ovidharshini"},"content":"     * @return string of Duke\u0027s response.","lastModifiedDate":"2022-02-21"},{"lineNumber":178,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":179,"author":{"gitId":"ovidharshini"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":180,"author":{"gitId":"ovidharshini"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":181,"author":{"gitId":"ovidharshini"},"content":"            String command \u003d Parser.parse(input, tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":182,"author":{"gitId":"ovidharshini"},"content":"            input \u003d Parser.handleInput(input);","lastModifiedDate":"2022-02-18"},{"lineNumber":183,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":184,"author":{"gitId":"ovidharshini"},"content":"            switch (command) {","lastModifiedDate":"2022-02-18"},{"lineNumber":185,"author":{"gitId":"ovidharshini"},"content":"            case \"list\":","lastModifiedDate":"2022-02-18"},{"lineNumber":186,"author":{"gitId":"ovidharshini"},"content":"                return listHandler();","lastModifiedDate":"2022-02-21"},{"lineNumber":187,"author":{"gitId":"ovidharshini"},"content":"            case \"do\":","lastModifiedDate":"2022-02-18"},{"lineNumber":188,"author":{"gitId":"ovidharshini"},"content":"                return doHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":189,"author":{"gitId":"ovidharshini"},"content":"            case \"undo\":","lastModifiedDate":"2022-02-18"},{"lineNumber":190,"author":{"gitId":"ovidharshini"},"content":"                return undoHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":191,"author":{"gitId":"ovidharshini"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-18"},{"lineNumber":192,"author":{"gitId":"ovidharshini"},"content":"                return deleteHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":193,"author":{"gitId":"ovidharshini"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-18"},{"lineNumber":194,"author":{"gitId":"ovidharshini"},"content":"                return todoHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":195,"author":{"gitId":"ovidharshini"},"content":"            case \"find\":","lastModifiedDate":"2022-02-18"},{"lineNumber":196,"author":{"gitId":"ovidharshini"},"content":"                return findHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":197,"author":{"gitId":"ovidharshini"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-18"},{"lineNumber":198,"author":{"gitId":"ovidharshini"},"content":"                return deadlineHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":199,"author":{"gitId":"ovidharshini"},"content":"            case \"event\":","lastModifiedDate":"2022-02-18"},{"lineNumber":200,"author":{"gitId":"ovidharshini"},"content":"                return eventHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":201,"author":{"gitId":"ovidharshini"},"content":"            case \"bye\":","lastModifiedDate":"2022-02-18"},{"lineNumber":202,"author":{"gitId":"ovidharshini"},"content":"                return byeHandler();","lastModifiedDate":"2022-02-18"},{"lineNumber":203,"author":{"gitId":"ovidharshini"},"content":"            default:","lastModifiedDate":"2022-02-18"},{"lineNumber":204,"author":{"gitId":"ovidharshini"},"content":"                return defaultHandler(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":205,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":206,"author":{"gitId":"ovidharshini"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":207,"author":{"gitId":"ovidharshini"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-18"},{"lineNumber":208,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":209,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":210,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":212,"author":{"gitId":"ovidharshini"},"content":"     * Constructor for Duke specifying UI and Storage.","lastModifiedDate":"2022-02-21"},{"lineNumber":213,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":214,"author":{"gitId":"ovidharshini"},"content":"     * It loads Tasks from a file into tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":215,"author":{"gitId":"ovidharshini"},"content":"     * If there is an error with loading Tasks from the specified file, it","lastModifiedDate":"2022-02-18"},{"lineNumber":216,"author":{"gitId":"ovidharshini"},"content":"     * initializes tasks to bean empty TaskList.","lastModifiedDate":"2022-02-18"},{"lineNumber":217,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":218,"author":{"gitId":"ovidharshini"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-18"},{"lineNumber":219,"author":{"gitId":"ovidharshini"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":220,"author":{"gitId":"ovidharshini"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-18"},{"lineNumber":221,"author":{"gitId":"ovidharshini"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-18"},{"lineNumber":222,"author":{"gitId":"ovidharshini"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":223,"author":{"gitId":"ovidharshini"},"content":"            System.out.println(Ui.showLoadingError());","lastModifiedDate":"2022-02-18"},{"lineNumber":224,"author":{"gitId":"ovidharshini"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-18"},{"lineNumber":225,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":226,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ovidharshini":225,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"public class Launcher {","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"ovidharshini":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"    private final static String FILEPATH \u003d \"../../../../data/tasks.txt\";","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    private final Duke duke \u003d new Duke(FILEPATH);","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"            stage.setTitle(\"The Traveller\u0027s Handbook\");","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"            stage.show();","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"ovidharshini":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"        showWelcomeMessage();","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"                DialogBox.getUserDialog(input, userImage, userType.USER),","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"                DialogBox.getDukeDialog(response, dukeImage, userType.DUKE)","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"        );","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"        if (response.length() \u003e\u003d 4) {","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"            String lastFourLetters \u003d response.substring(response.length() - 4);","lastModifiedDate":"2022-02-21"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"            if (lastFourLetters.equals(\"EXIT\")){","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"                Platform.exit();","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"                System.exit(0);","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"        String response \u003d Ui.showWelcome();","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"ovidharshini"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"ovidharshini"},"content":"                DialogBox.getDukeDialog(response, dukeImage, userType.DUKE)","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"ovidharshini"},"content":"        );","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"ovidharshini"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"ovidharshini":74}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":" * Represents a class that validates and interprets user input with a","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" * pre-generated list of allowable input formats.","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":" * Note: Current allowable formats are \"list\", \"bye\", \"do X\", \"undo X\",","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":" * \"delete X\", \"todo S\", \"deadline S by T\", \"event S at T\", \"find W\",","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":" * where X is an integer, S is a string descriptor of the task, W is a","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":" * singular keyword and T is a string descriptor of the date(s) and/or","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":" * time(s) associated with the task.","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"public class Parser {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"     * Extracts the non-command contents of a given input string.","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"     * Strips the string of leading whitespaces and removes the first word.","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"     * @param input input string","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"     * @return input consisting of the non-command contents of the input string","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"    public static String handleInput(String input) {","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"            input \u003d input.substring(input.indexOf(\" \"));","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"        return input;","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"     * Validates input format and extracts command.","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"     * Note: Current allowable formats are \"list\", \"bye\", \"do X\", \"undo X\",","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"     * \"delete X\", \"todo S\", \"find W\", \"deadline S by T\", \"event S at T\",","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"     * where X is an integer, S is a string descriptor of the task, W is a","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"     * singular keyword and T is a string descriptor of the date(s) and/or","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"     * time(s) associated with the task.","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"     * @param input input string to be parsed","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"     * @return command from input string if input is of a valid format,","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"     * \"\" otherwise","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"    public static String parse(String input, TaskList tasklist) throws Exception {","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"        String command \u003d input.replaceAll(\" .*\", \"\");","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"        if (input.equals(\"bye\") || input.equals(\"list\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"            return command;","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"        // Handle do, undo, delete","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"        String firstWord \u003d input.replaceAll(\" .*\", \"\");","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"        input \u003d input.substring(firstWord.length()).trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"        case \"do\":","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"        case \"undo\":","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"            int index \u003d Integer.parseInt(input);","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"            input \u003d input.replaceAll(\".* \", \"\");","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"            if (input.matches(\"[0-9]+\") \u0026\u0026","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"ovidharshini"},"content":"                     index \u003c\u003d tasklist.length() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"ovidharshini"},"content":"                assert index \u003c\u003d tasklist.length() \u0026\u0026 index \u003e\u003d 1 : \"index not within range\";","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"ovidharshini"},"content":"                return command;","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"ovidharshini"},"content":"            ","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"ovidharshini"},"content":"            throw new Exception(\"You need to specify the task you want to \"","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"ovidharshini"},"content":"                    + firstWord + \" by its index :c\");","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"ovidharshini"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"ovidharshini"},"content":"            if (input.equals(\"\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"ovidharshini"},"content":"                throw new Exception(\"Oops, you need to mention what the \"","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"ovidharshini"},"content":"                        + \"task is :c\");","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"ovidharshini"},"content":"            return command;","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"ovidharshini"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"ovidharshini"},"content":"            if (!input.contains(\" by \")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"ovidharshini"},"content":"                throw new Exception(\"Oops, you need to format deadline tasks \"","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"ovidharshini"},"content":"                        + \"as \\\"deadline X by Y\\\" :c\");","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"ovidharshini"},"content":"            String lastWord \u003d input.substring(input.lastIndexOf(\" \") + 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"ovidharshini"},"content":"            if (lastWord.equals(\"by\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"ovidharshini"},"content":"                return \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"ovidharshini"},"content":"            return command;","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"ovidharshini"},"content":"        case \"event\":","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"ovidharshini"},"content":"            if (!input.contains(\" at \")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"ovidharshini"},"content":"                throw new Exception(\"Oops, you need to format event tasks \"","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"ovidharshini"},"content":"                        + \"as \\\"event X at Y\\\" :c\");","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":98,"author":{"gitId":"ovidharshini"},"content":"            String finalWord \u003d input.substring(input.lastIndexOf(\" \") + 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"ovidharshini"},"content":"            if (finalWord.equals(\"at\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"ovidharshini"},"content":"                return \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"ovidharshini"},"content":"            return command;","lastModifiedDate":"2022-02-10"},{"lineNumber":103,"author":{"gitId":"ovidharshini"},"content":"        case \"find\":","lastModifiedDate":"2022-02-10"},{"lineNumber":104,"author":{"gitId":"ovidharshini"},"content":"            if (input.equals(\"\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"ovidharshini"},"content":"                throw new Exception(\"Oops, you need to mention what \"","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"ovidharshini"},"content":"                        + \"the keyword is :c\");","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"ovidharshini"},"content":"            if (input.contains(\" \")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"ovidharshini"},"content":"                throw new Exception(\"Oops, you can only search for \"","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"ovidharshini"},"content":"                        + \"one keyword at a time :c\");","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":112,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"ovidharshini"},"content":"            return command;","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"ovidharshini"},"content":"        default:","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"ovidharshini"},"content":"            return \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":118,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":118}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import java.io.File;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":" * Represents a storage space for tasks on hard-drive.","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":" * It handles the loading of tasks from a file and saving","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":" * of tasks to the same file.","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"public class Storage {","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"    private String filePath;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"     * Suppresses any unused warnings from a given boolean result.","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"     * @param result variable to suppress warnings from","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    //@@author Eric Lange-reused","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"    //Reused from https://stackoverflow.com/questions/27904329/warning-file-mkdir-is-ignored#answer-54341862","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"    // with minor modifications","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"    @SuppressWarnings(\"unused\")","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"    private static void ignoreResult(boolean result) {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the Storage object with a given file path.","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * It parses input from the specified file and saves the list of Tasks from","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * the specified file, if any. If file does not exist, it creates the file.","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Note: any missing parent directories in the specified file path are","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * created prior to file creation.","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param filePath path of the specified file from the current directory","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IOException if an exception occurs in the creation/access of","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * the specified file","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws RuntimeException if file at specified path contains data in a","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * non-standard format","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Storage(String filePath) throws IOException {","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        //make preceding directories, if any are not found","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ignoreResult(data.getParentFile().mkdirs());","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // If file does not exist, create new file and return","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (data.createNewFile()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            assert data.exists() : \"file should be created if it does not exist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assert data.exists() : \"file should exist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Scanner fileReader \u003d new Scanner(data);","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            String line \u003d fileReader.nextLine();","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            String[] tmp \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            boolean isDone \u003d tmp[1].trim().equals(\"D\");","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            switch (tmp[0].trim()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            case \"T\":","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                assert tmp.length \u003e 2 : \"tmp[2] should exist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                todoHandler(tmp, isDone);","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            case \"D\":","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                assert tmp.length \u003e 3 : \"tmp[2], tmp[3] should exist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                deadlineHandler(tmp, isDone);","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            case \"E\":","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                assert tmp.length \u003e 3 : \"tmp[2], tmp[3] should exist\";","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                eventHandler(tmp, isDone);","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                throw new RuntimeException(\"Corrupted data in data file at \"","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        + filePath);","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        fileReader.close();","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds Todo to tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param arr array of data [Type, isDone, description]","lastModifiedDate":"2022-02-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param isDone bool indicating if Todo is marked complete","lastModifiedDate":"2022-02-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void todoHandler(String[] arr, Boolean isDone) {","lastModifiedDate":"2022-02-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Todo t \u003d new Todo(arr[2].trim());","lastModifiedDate":"2022-02-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            t.markComplete();","lastModifiedDate":"2022-02-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assert t.getStatusIcon().equals(\"X\") : \"task should be complete\";","lastModifiedDate":"2022-02-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        tasks.add(t);","lastModifiedDate":"2022-02-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Adds Deadline to tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param arr array of data [Type, isDone, description, dateTime]","lastModifiedDate":"2022-02-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param isDone bool indicating if Deadline is marked complete","lastModifiedDate":"2022-02-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void deadlineHandler(String[] arr, Boolean isDone) {","lastModifiedDate":"2022-02-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Deadline d \u003d new Deadline(arr[2].trim(), arr[3].trim());","lastModifiedDate":"2022-02-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            d.markComplete();y","lastModifiedDate":"2022-02-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assert d.getStatusIcon().equals(\"X\") : \"task should be complete\";","lastModifiedDate":"2022-02-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        tasks.add(d);","lastModifiedDate":"2022-02-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Adds Event to tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @param arr array of data [Type, isDone, description, dateTime]","lastModifiedDate":"2022-02-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @param isDone bool indicating if Deadline is marked complete","lastModifiedDate":"2022-02-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void eventHandler(String[] arr, Boolean isDone) {","lastModifiedDate":"2022-02-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Event e \u003d new Event(arr[2].trim(), arr[3].trim());","lastModifiedDate":"2022-02-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            e.markComplete();","lastModifiedDate":"2022-02-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            assert e.getStatusIcon().equals(\"X\") : \"task should be complete\";","lastModifiedDate":"2022-02-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        tasks.add(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Retrieves and returns Tasks saved from the storage file.","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @return ArrayList of saved Tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-02-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Updates the list of Tasks saved on hard-drive at filePath.","lastModifiedDate":"2022-02-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * This overwrites the existing file at filePath.","lastModifiedDate":"2022-02-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Note: File creation is to be handled via load() prior this method as","lastModifiedDate":"2022-02-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * this assumes that filePath is valid and that the file exists at filePath.","lastModifiedDate":"2022-02-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @param tasks TaskList of Tasks to be saved on hard-drive","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @throws IOException if an exception occurs in the saving of","lastModifiedDate":"2022-02-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * data to the file at filePath","lastModifiedDate":"2022-02-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2022-02-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2022-02-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assert data.exists() : \"file was not created at start of program\";","lastModifiedDate":"2022-02-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        FileWriter f;","lastModifiedDate":"2022-02-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        f \u003d new FileWriter(data, false);","lastModifiedDate":"2022-02-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        boolean isFirst \u003d true;","lastModifiedDate":"2022-02-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            String s \u003d isFirst ? \"\" : \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            f.write(s + tasks.get(i).writeToFile());","lastModifiedDate":"2022-02-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            isFirst \u003d false;","lastModifiedDate":"2022-02-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        f.close();","lastModifiedDate":"2022-02-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":38,"-":136}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":" * Represents a UI class that deals with user input and application output.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"public class Ui {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"     * Returns a welcome message.","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"     * @return welcome message.","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    public static String showWelcome() {","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"        return \"Hello, traveller! My name in Paimon.\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"                + \"How can I helping you today?\";","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"     * Returns a generic error message about failed data loading from a file.","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"     * @return error message about data loading errors.","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"        return \"An error occurred with processing the data file\";","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"     * Returns a specific error message about some exception in the program.","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"     * @param s string describing error","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"     * @return string describing error","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"    public String showError(String s) {","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"        return s;","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"     * Returns an error handling message for empty strings.","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"    public static String showEmptyMessage() {","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"        return \"Paimon cannot read minds!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"     * Returns string of list of tasks and number of tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"     * @param tasks current TaskList","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"    public static String showListMessage(TaskList tasks) {","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"        return \"Hmm... Paimon keeps a clear record in her \"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"                + \"diary.\\n\" + tasks.toString();","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"     * Returns generic message for task update.","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"     * @return string stating that task is updated.","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"    public static String showUpdateMessage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"        return \"Task successfully updated.\";","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"ovidharshini"},"content":"     * Returns task deletion message and resulting list of tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":71,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":72,"author":{"gitId":"ovidharshini"},"content":"     * @param tasks TaskList of tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"ovidharshini"},"content":"     * @return string of list of tasks and deletion message.","lastModifiedDate":"2022-02-21"},{"lineNumber":74,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"ovidharshini"},"content":"    public static String showDeleteMessage(TaskList tasks) {","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"ovidharshini"},"content":"        return \"Noted, the task has been scrubbed off the \"","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"ovidharshini"},"content":"                + \"list!\\n\" + tasks.toString();","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":81,"author":{"gitId":"ovidharshini"},"content":"     * Returns message for the addition of a Todo.","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"ovidharshini"},"content":"     * @return string stating that a Todo task has been added.","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":85,"author":{"gitId":"ovidharshini"},"content":"    public static String showTodoMessage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"ovidharshini"},"content":"        return \"Got it! I have noted down the following task \"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"ovidharshini"},"content":"                + \"in your list.\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":88,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":89,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":90,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"ovidharshini"},"content":"     * Returns generic message for finding tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":92,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":93,"author":{"gitId":"ovidharshini"},"content":"     * @return string stating that matching tasks are found.","lastModifiedDate":"2022-02-21"},{"lineNumber":94,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":95,"author":{"gitId":"ovidharshini"},"content":"    public static String showFindMessage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":96,"author":{"gitId":"ovidharshini"},"content":"        return \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":97,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":98,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":99,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":100,"author":{"gitId":"ovidharshini"},"content":"     * Returns message for the addition of a Deadline task.","lastModifiedDate":"2022-02-21"},{"lineNumber":101,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"ovidharshini"},"content":"     * @return string stating that a Deadline task has been added.","lastModifiedDate":"2022-02-21"},{"lineNumber":103,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":104,"author":{"gitId":"ovidharshini"},"content":"    public static String showDeadlineMessage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":105,"author":{"gitId":"ovidharshini"},"content":"        return \"Got it! I have noted down the following task in\"","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"ovidharshini"},"content":"                + \" your list. \\nRemember the deadline!\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":107,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":108,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":109,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":110,"author":{"gitId":"ovidharshini"},"content":"     * Returns message for the addition of an Event task.","lastModifiedDate":"2022-02-21"},{"lineNumber":111,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":112,"author":{"gitId":"ovidharshini"},"content":"     * @return string stating that an Event task has been added.","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":114,"author":{"gitId":"ovidharshini"},"content":"    public static String showEventMessage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":115,"author":{"gitId":"ovidharshini"},"content":"        return \"Got it! I have noted down the following task in\"","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"ovidharshini"},"content":"                + \" your list.\\nDo be there on time!\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":117,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":118,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":119,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":120,"author":{"gitId":"ovidharshini"},"content":"     * Returns message for the end of the program.","lastModifiedDate":"2022-02-21"},{"lineNumber":121,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":122,"author":{"gitId":"ovidharshini"},"content":"     * @return string to end program.","lastModifiedDate":"2022-02-21"},{"lineNumber":123,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":124,"author":{"gitId":"ovidharshini"},"content":"    public static String showByeMessage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":125,"author":{"gitId":"ovidharshini"},"content":"        return \"Bye, hope to see you again soon!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":127,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":128,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":129,"author":{"gitId":"ovidharshini"},"content":"     * Returns generic message for indecipherable input.","lastModifiedDate":"2022-02-21"},{"lineNumber":130,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":131,"author":{"gitId":"ovidharshini"},"content":"     * @return generic message about unclear input.","lastModifiedDate":"2022-02-21"},{"lineNumber":132,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":133,"author":{"gitId":"ovidharshini"},"content":"    public static String showDefaultMessage() {","lastModifiedDate":"2022-02-21"},{"lineNumber":134,"author":{"gitId":"ovidharshini"},"content":"        return \"That went over Paimon\u0027s head a little...\";","lastModifiedDate":"2022-02-21"},{"lineNumber":135,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":136,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":136}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":" * Represents a task that occurs at a particular date and/or time.","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":" * Note: the allowable formats for date and time to be interpreted","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":" * correctly by Deadline is YYYY/MM/DD (with ./| being valid separators)","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" * and HHMM.","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"public class Deadline extends TaskWithDateTime {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"     * Constructor for Event specifying description, dateTime string.","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"     * @param description description of Deadline","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"     * @param by dateTime string associated with Deadline","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"        super(description, by);","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     * Default toString method that returns formatted Deadline.","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of the description, dateTime and completeness","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"     * status of Deadline with a Deadline marker.","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"        String s \u003d \"[D]\" + super.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"        return s.replace(\" (at: \", \" (by: \");","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"     * Parses contents of Deadline into a csv-like format.","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"     * Delimiter is \u0027|\u0027.","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of Deadline, its dateTime, completion status","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"     * and a Deadline marker.","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"        return \"D | \" + super.writeToFile();","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ovidharshini":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":" * Represents a task that occurs at a particular date and/or time.","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":" * Note: the allowable formats for date and time to be interpreted correctly","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":" * by Event is YYYY/MM/DD (with * ./| being valid separators) and HHMM.","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"public class Event extends TaskWithDateTime {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"     * Constructor for Event specifying description, dateTime string.","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"     * @param description description of Event","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"     * @param at dateTime string associated with Event","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"        super(description, at);","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"     * Default toString method that returns formatted Event.","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of the description, dateTime and completeness","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"     * status of Event with an Event marker.","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"     * Parses contents of Event into a csv-like format.","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"     * Delimiter is \u0027|\u0027.","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of Event, its dateTime, completion status","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"     * and an Event marker.","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"        return \"E | \" + super.writeToFile();","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ovidharshini":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":" * Represents a task and consists of its description and completeness status.","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"public class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"    private String description;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"    private boolean isDone;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"     * Constructor for Task specifying description.","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"     * @param description description of task","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"     * Marks Task as complete.","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"    public void markComplete() {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"     * Marks Task as incomplete.","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"     * Note: this is true by default for all Task objects.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"    public void markIncomplete() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"     * Returns the state of completeness of Task.","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"     * @return \"X\" if Task is completed, \" \" otherwise.","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"     * Default toString method that returns the description of Task.","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"     * Includes completion status.","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of the description and completeness status","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"     * of Task.","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"     * Parses contents of Task into a csv-like format delimited by \u0027|\u0027.","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of Task and its completion status.","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"        String s \u003d (isDone) ? \"D\" : \"N\";","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"        return s + \" | \" + description;","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"ovidharshini":67}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"import java.util.List;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" * Represents a collection of tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"public class TaskList {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"     * Empty constructor for TaskList.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"     * Constructor for TaskList specifying a list of Tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     * @param tasks list of Tasks to be initialized","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"     * Returns the length of TaskList.","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"     * @return number of elements in tasks.","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"    public int size() {","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"     * Retrieves and returns Task at a given index in TaskList.","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"     * @param i index of Task to be retrieved in TaskList","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"     * @return Task at a given index in tasks.","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"    public Task get(int i) {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"        if (i \u003c size() \u0026\u0026 i \u003e\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"            return tasks.get(i);","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"        return null;","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"     * Deletes Task at a given index in TaskList.","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"     * @param i index of task to be removed","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"    public void remove(int i) {","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"        if (i \u003c size() \u0026\u0026 i \u003e\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"            tasks.remove(i);","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"     * Appends Task to end of TaskList.","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"ovidharshini"},"content":"     * @param t Task to be added","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"ovidharshini"},"content":"    public void add(Task t) {","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"ovidharshini"},"content":"        tasks.add(t);","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"ovidharshini"},"content":"     * Returns matching occurrences of a given word in tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"ovidharshini"},"content":"     * @param word keyword to be searched for","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"ovidharshini"},"content":"     * @return TaskList of the Tasks containing the specified word","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"ovidharshini"},"content":"    public TaskList find(String word) {","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"ovidharshini"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"ovidharshini"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"ovidharshini"},"content":"            if (task.toString().contains(word)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":85,"author":{"gitId":"ovidharshini"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":89,"author":{"gitId":"ovidharshini"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"ovidharshini"},"content":"     * Default toString method that returns list of all tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":94,"author":{"gitId":"ovidharshini"},"content":"     * Note: It appends list of tasks with a string denoting the number","lastModifiedDate":"2022-02-21"},{"lineNumber":95,"author":{"gitId":"ovidharshini"},"content":"     * of tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":96,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of all Tasks in TaskList and number of","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"ovidharshini"},"content":"     * Tasks in TaskList delimited by newlines.","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"ovidharshini"},"content":"    public String toString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"ovidharshini"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"ovidharshini"},"content":"            return  \"You now have 0 tasks on your list.\";","lastModifiedDate":"2022-02-21"},{"lineNumber":103,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":105,"author":{"gitId":"ovidharshini"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-02-21"},{"lineNumber":106,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":107,"author":{"gitId":"ovidharshini"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-21"},{"lineNumber":108,"author":{"gitId":"ovidharshini"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-02-21"},{"lineNumber":109,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":110,"author":{"gitId":"ovidharshini"},"content":"            str.append(\"  \")","lastModifiedDate":"2022-02-21"},{"lineNumber":111,"author":{"gitId":"ovidharshini"},"content":"                    .append(index)","lastModifiedDate":"2022-02-21"},{"lineNumber":112,"author":{"gitId":"ovidharshini"},"content":"                    .append(\". \")","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"ovidharshini"},"content":"                    .append(tasks.get(i))","lastModifiedDate":"2022-02-21"},{"lineNumber":114,"author":{"gitId":"ovidharshini"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":115,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"ovidharshini"},"content":"        str.append(\"You have \")","lastModifiedDate":"2022-02-21"},{"lineNumber":118,"author":{"gitId":"ovidharshini"},"content":"                .append(tasks.size())","lastModifiedDate":"2022-02-21"},{"lineNumber":119,"author":{"gitId":"ovidharshini"},"content":"                .append(\" tasks on your list.\");","lastModifiedDate":"2022-02-21"},{"lineNumber":120,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":121,"author":{"gitId":"ovidharshini"},"content":"        return str.toString();","lastModifiedDate":"2022-02-21"},{"lineNumber":122,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":123}},{"path":"src/main/java/duke/task/TaskWithDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":" * Represents a task with an associated date and/or time.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":" * Note: the allowable formats for date and time to be interpreted correctly","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":" * by TaskWithDateTime is YYYY/MM/DD (with ./| being valid separators) and HHMM.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"public class TaskWithDateTime extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"    private LocalDate day;","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"    private String dateTime;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"     * Constructor for TaskWithDateTime.","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"     * Specifies description and dateTime.","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"     * @param description description of task","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"     * @param dateTime datetime associated with task in string format","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    public TaskWithDateTime(String description, String dateTime) {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"        super(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"        dateTime \u003d dateTime.trim();","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"        extractTime(extractDate());","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"ovidharshini"},"content":"     * Formats date in dateTime correctly (if any).","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"     * Dates detected are of the format YYYYMMDD delimited by -|/.","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"ovidharshini"},"content":"     * and are changed to MMM d yyyy format.","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"ovidharshini"},"content":"     * @return string with date removed.","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"ovidharshini"},"content":"    public String extractDate(){","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"ovidharshini"},"content":"        String regexDate \u003d \"\\\\d{4}[-|/.]\\\\d{2}[-|/.]\\\\d{2}\";","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"ovidharshini"},"content":"        Matcher m \u003d Pattern.compile(regexDate).matcher(dateTime);","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"ovidharshini"},"content":"        String strWithoutDate \u003d dateTime;","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"ovidharshini"},"content":"        // If specified date format is found","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"ovidharshini"},"content":"        if (m.find()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"ovidharshini"},"content":"            strWithoutDate \u003d strWithoutDate.replace(m.group(0), \"\");","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"ovidharshini"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"ovidharshini"},"content":"                day \u003d LocalDate.parse(m.group(0).replaceAll(\"[./|]\", \"-\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"ovidharshini"},"content":"                dateTime \u003d dateTime.replace(m.group(0),","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"ovidharshini"},"content":"                        day.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"ovidharshini"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"ovidharshini"},"content":"                // Set date to the next day if date is invalid","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"ovidharshini"},"content":"                dateTime \u003d dateTime.replace(m.group(0),","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"ovidharshini"},"content":"                        LocalDate.now().plus(1, ChronoUnit.DAYS).toString());","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"ovidharshini"},"content":"        return strWithoutDate;","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":72,"author":{"gitId":"ovidharshini"},"content":"     * Formats time in dateTime correctly (if any).","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"ovidharshini"},"content":"     * Time detected is of the format HHMM, and is changed to HH:MM.","lastModifiedDate":"2022-02-21"},{"lineNumber":74,"author":{"gitId":"ovidharshini"},"content":"     * Note: input string must not contain any dates or other four","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"ovidharshini"},"content":"     * contiguous digits.","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"ovidharshini"},"content":"     * @param str time string associated with task","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"ovidharshini"},"content":"    public void extractTime(String str) {","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"ovidharshini"},"content":"        String regexTime \u003d \"\\\\d{4}\";","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"ovidharshini"},"content":"        Matcher m \u003d Pattern.compile(regexTime).matcher(str);","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"ovidharshini"},"content":"        // If specified time format is found","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"ovidharshini"},"content":"        if (m.find()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"ovidharshini"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"ovidharshini"},"content":"                LocalTime timeOfDay \u003d LocalTime.parse(m.group(0).substring(0, 2)","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"ovidharshini"},"content":"                        + \":\" + m.group(0).substring(2));","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"ovidharshini"},"content":"                dateTime \u003d dateTime.replace(m.group(0), timeOfDay.toString());","lastModifiedDate":"2022-02-21"},{"lineNumber":89,"author":{"gitId":"ovidharshini"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"ovidharshini"},"content":"                // Set time to an hour from now if time is invalid","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"ovidharshini"},"content":"                dateTime \u003d dateTime.replace(m.group(0),","lastModifiedDate":"2022-02-21"},{"lineNumber":92,"author":{"gitId":"ovidharshini"},"content":"                        LocalTime.now().plus(1, ChronoUnit.HOURS).toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"ovidharshini"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"ovidharshini"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"ovidharshini"},"content":"     * Default toString method that returns formatted TaskWithDateTime.","lastModifiedDate":"2022-02-21"},{"lineNumber":99,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of description, dateTime and completion","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"ovidharshini"},"content":"     * status of the TaskWithDateTime object.","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"ovidharshini"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"ovidharshini"},"content":"        return super.toString() + \" (at: \" + dateTime.trim() + \")\";","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":108,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"ovidharshini"},"content":"     * Parses contents of TaskWithDateTime into a csv-like format.","lastModifiedDate":"2022-02-21"},{"lineNumber":110,"author":{"gitId":"ovidharshini"},"content":"     * Delimiter is \u0027|\u0027.","lastModifiedDate":"2022-02-21"},{"lineNumber":111,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of TaskWithDateTime, its completion","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"ovidharshini"},"content":"     * status and associated dateTime.","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"ovidharshini"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":117,"author":{"gitId":"ovidharshini"},"content":"        return super.writeToFile() + \" | \" + dateTime.trim();","lastModifiedDate":"2022-02-01"},{"lineNumber":118,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":119,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"ovidharshini":119}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":" * Represents a todo - a task with a description and no time limit.","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":" *","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":" * @author  Elumalai Oviya Dharshini","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":" * @version 1.0","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"     * Constructor for Todo specifying Task with description.","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"     * @param description description of Todo","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"        super(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"     * Default toString method that returns the description of Todo.","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"     * Includes completion status and Todo marker.","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of the description and completeness","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"ovidharshini"},"content":"     * status of Todo with a Todo marker.","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ovidharshini"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"ovidharshini"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ovidharshini"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"ovidharshini"},"content":"     * Parses contents of Todo into a csv-like format delimited by \u0027|\u0027.","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"ovidharshini"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"ovidharshini"},"content":"     * @return formatted string of Todo, its completion status and Todo marker","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"ovidharshini"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"ovidharshini"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"ovidharshini"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"ovidharshini"},"content":"        return \"T | \" + super.writeToFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ovidharshini":41}},{"path":"src/main/java/duke/userType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"public enum userType {","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"    USER,","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"    DUKE;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"ovidharshini":6}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"ovidharshini":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"ovidharshini":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"    public void testParsing() {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"hi\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"todo\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"todo \"));","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"event \"));","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"event birthday at\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"event birthday at \"));","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"event\", Parser.parse(\"event birthday at 1500\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"deadline cs2103t week 3 ip tasks by\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"\", Parser.parse(\"deadline cs2103t week 3 ip tasks by \"));","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"deadline\", Parser.parse(\"deadline cs2103t week 3 ip tasks by 2022/01/27 2359\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":22}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"        Deadline d \u003d new Deadline(\"read a book\",\"2022/12/01 2359\");","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"[D][ ] read a book (by: Dec 1 2022 23:59)\", d.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"    public void testWriteToFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"        Deadline d \u003d new Deadline(\"read a book\",\"2022/12/01 2359\");","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"        d.markComplete();","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"D | D | read a book | Dec 1 2022 23:59\", d.writeToFile());","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":20}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"public class EventTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"        Event e \u003d new Event(\"read a book\",\"2022/12/01 2359\");","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"[E][ ] read a book (at: Dec 1 2022 23:59)\", e.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"    public void testWriteToFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"        Event e \u003d new Event(\"read a book\",\"2022/12/01 2359\");","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"        e.markComplete();","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"E | D | read a book | Dec 1 2022 23:59\", e.writeToFile());","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":20}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"package duke.task;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"public class TodoTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"[T][ ] read a book\", new Todo(\"read a book\").toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"ovidharshini"},"content":"    public void testWriteToFile() {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"ovidharshini"},"content":"        Todo t \u003d new Todo(\"read a book\");","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"ovidharshini"},"content":"        t.markComplete();","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"ovidharshini"},"content":"        assertEquals(\"T | D | read a book\", t.writeToFile());","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"ovidharshini"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"ovidharshini"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"ovidharshini":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ovidharshini"},"content":"todo take down Stormterror","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"ovidharshini"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"event windtrace festival at last week of January","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"ovidharshini"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"ovidharshini"},"content":"deadline pull for Shenqi by 25 Jan 2022","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"ovidharshini"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"ovidharshini"},"content":"do 1","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"ovidharshini"},"content":"do 2","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"ovidharshini"},"content":"do 3","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"ovidharshini"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ovidharshini"},"content":"undo 1","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"ovidharshini"},"content":"bye","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ovidharshini":13}}]
