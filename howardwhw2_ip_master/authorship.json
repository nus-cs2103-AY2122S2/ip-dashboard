[{"path":"src/main/java/van/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * AddCommand abstracts the adding of the different types of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"    private Task newTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"     * Constructs a AddCommand object to encapsulate the task to be added","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     * @param newTask new task to be added to list","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"     * Calls the methods needed in order to add a new task to the list","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"     * @param ui       Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"     * @param storage  Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"    public boolean executeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"        ui.taskMessage(newTask, taskList.getTaskCount());","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"     * Gets the string representation of the task details","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"     * @return String containing the details about the new task","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"    public String toString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"        return newTask.getStatus();","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":42}},{"path":"src/main/java/van/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * Interface for all types of Commands","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public interface Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"     * Calls all the methods from ui, tasklist and storage in order","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"     * to execute the different command types.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     * @param ui       Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     * @param storage  Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"    boolean executeCommand(Ui ui, TaskList taskList, Storage storage);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":19}},{"path":"src/main/java/van/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":" * extends task to represent deadlines","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     * Creates an deadline object with the description of the deadline and","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     * the date to be done by","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"     * @param description description about the deadline","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"     * @param date        deadline of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"     * Generates string for type of task, completion status","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"     * ,date and description for storage.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"     * @return string with details of deadline for storage","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"    public String saveStatus() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"        return \"D|\" + super.getCompletion() + \"|\" + description + \"|\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"          date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"     * Generates string for type of task, completion status","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"     * ,date and description for printing by ui.","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"     * @return string with details of deadline for printing","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"        return \"[D]\" + super.getStatus() + \" (by:\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"howardwhw2"},"content":"          date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"howardwhw2":47}},{"path":"src/main/java/van/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * DeleteCommand abstracts the deletion of tasks from the list","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"    private int taskNumber;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"     * Creates a DeleteCommand object to delete a certain task","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     * @param taskNumber number of task to be deleted","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"     * Calls the methods needed in order to delete a task","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"     * @param ui       Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"     * @param storage  Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"    public boolean executeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"            if (taskNumber \u003e taskList.getTaskCount()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"                throw new VanException(\"Task number out of range\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"            taskList.deleteTask(taskNumber);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"        } catch (VanException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"            System.out.println(ex);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":37}},{"path":"src/main/java/van/DisplayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * DisplayCommand abstracts the displaying of all tasks currently in the listw","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class DisplayCommand implements Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"     * Calls the methods needed in order to print all tasks in the list","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     * @param ui       Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     * @param storage  Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"    public boolean executeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"        ui.printList(taskList.getList());","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":20}},{"path":"src/main/java/van/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":" * extends task to represent events","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     * Creates an event object with the description of the event and","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     * the date of the event","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"     * @param description description about the event","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"     * @param date        date that the event is held","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"    public Event(String description, LocalDateTime date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"     * Generates string for type of task, completion status","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"     * ,date and description for storage.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"     * @return string with details of event for storage","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"    public String saveStatus() {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"        return \"E|\" + super.getCompletion() + \"|\" + description + \"|\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"          date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"     * Generates string for type of task, completion status","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"     * ,date and description for printing by ui.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"     * @return string with details of event for printing","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"howardwhw2"},"content":"        return \"[E]\" + super.getStatus() + \" (at:\" +","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"howardwhw2"},"content":"          date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"howardwhw2":48}},{"path":"src/main/java/van/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * ExitCommand abstracts commands to save and close the chat bot","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"     * Calls the methods needed in order to save existing tasks and","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"     * close the chat bot","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     * @param ui       Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     * @param storage  Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"    public boolean executeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"        ui.printDivider();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"        storage.saveTasks(taskList.getList());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"        ui.exitMessage();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"        return true;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":23}},{"path":"src/main/java/van/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":" * Abstracts commands that finds particular keywords in existing tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    public String keyword;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     * Creates FindCommand object containing the keyword to be found","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     * @param keyword keyword to be found","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"     * Calls the methods needed in order to find a keyword","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"     * @param ui Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"     * @param storage Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"    public boolean executeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"        ArrayList\u003cTask\u003e currentTasks \u003d taskList.getList();","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"        for (int i \u003d 0; i \u003c currentTasks.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"            String[] words \u003d Parser.parseDescription(currentTasks.get(i));","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"            for (int j \u003d 0; j \u003c words.length; j++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"                if(keyword.equals(words[j])) {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"                    results.add(currentTasks.get(i));","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"        ui.printResults(results, keyword);","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"        return false;","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"howardwhw2":44}},{"path":"src/main/java/van/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * Abstracts the concept of the command having errors","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"    private String message;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"     * Constructs a InvalidCommand object containing the problem with","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     * the inputted command.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     * @param message string indicating the problem with the command inputted","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"     * Calls the methods needed in order to display the error with the command","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"     * @param ui       Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"     * @param storage  Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"    public boolean executeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"        ui.invalidMessage(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":31}},{"path":"src/main/java/van/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * Abstracts commands that change the completion status of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    private int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     * Constructs a MarkCommand object to change completion status of task","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     * @param isDone status to change completion status of task to","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     * @param index  index number of task status to be changed","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"    public MarkCommand(boolean isDone, int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"     * Calls the methods needed in order to change completion status of task","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"     * @param ui       Ui object to handle print tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"     * @param taskList TaskList object that handles managing of the list of tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"     * @param storage  Storage object that handles loading and saving of list","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"     * @return returns true only when command executed is an ExitCommand","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"    public boolean executeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"            if (index \u003e taskList.getTaskCount()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"                throw new VanException(\"Task number out of range\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"            if (isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"                taskList.markDone(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"                taskList.markUndone(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"        } catch (VanException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"            System.out.println(ex);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":44}},{"path":"src/main/java/van/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    public static Command parseCommand(String parameter) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"        String[] taskArguments;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"        Command output \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"        String[] parameters \u003d parameter.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"            switch (parameters[0].toLowerCase()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"                case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"                    output \u003d new DisplayCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"                    if (parameters.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use: deadline \u003ctask\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"                    taskArguments \u003d parameters[1].split(\" /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"                    if (taskArguments.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use: deadline \u003ctask\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"                    try {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"                        LocalDateTime date \u003d LocalDateTime.parse(taskArguments[1], dateFormat);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new AddCommand(new Deadline(taskArguments[0], date));","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid date format. \"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"                          + \"Please use dd-MM-YYYY HH:mm e.g. 20-10-2022 1800\");","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"                case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"                    if (parameters.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use: event \u003ctask\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"                    taskArguments \u003d parameters[1].split(\" /at \");","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"                    if (taskArguments.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use: event \u003ctask\u003e /at \u003cdate\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"howardwhw2"},"content":"                    try {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"howardwhw2"},"content":"                        LocalDateTime date \u003d LocalDateTime.parse(taskArguments[1], dateFormat);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new AddCommand(new Event(taskArguments[0], date));","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"howardwhw2"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid date format. \"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"howardwhw2"},"content":"                          + \"Please use dd-MM-YYYY HH:mm e.g. 20-10-2022 1800\");","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"howardwhw2"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"howardwhw2"},"content":"                    if (parameters.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use: deadline \u003ctask\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"howardwhw2"},"content":"                    output \u003d new AddCommand(new ToDo(parameters[1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"howardwhw2"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"howardwhw2"},"content":"                    if (parameters.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use mark \u003ctask number\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"howardwhw2"},"content":"                    try {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new MarkCommand(true, Integer.parseInt(parameters[1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"howardwhw2"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new InvalidCommand(\"Please use integer numbers e.g. 1, 2\");","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"howardwhw2"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"howardwhw2"},"content":"                    if (parameters.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use mark \u003ctask number\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"howardwhw2"},"content":"                    try {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new MarkCommand(false, Integer.parseInt(parameters[1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"howardwhw2"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new InvalidCommand(\"Please use integer numbers e.g. 1, 2\");","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"howardwhw2"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"howardwhw2"},"content":"                    if (parameters.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use delete \u003ctask number\u003e\");","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"howardwhw2"},"content":"                    try {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new DeleteCommand(Integer.parseInt(parameters[1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"howardwhw2"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"howardwhw2"},"content":"                        output \u003d new InvalidCommand(\"Please use integer numbers e.g. 1, 2\");","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"howardwhw2"},"content":"                case \"find\":","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"howardwhw2"},"content":"                    if (parameters.length !\u003d 2) {","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"howardwhw2"},"content":"                        throw new VanException(\"Invalid format. Please use find \u003ckeyword\u003e\");","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"howardwhw2"},"content":"                    }","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"howardwhw2"},"content":"                    output \u003d new FindCommand(parameters[1]);","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"howardwhw2"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"howardwhw2"},"content":"                    output \u003d new ExitCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"howardwhw2"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"howardwhw2"},"content":"                default:","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"howardwhw2"},"content":"                    output \u003d new InvalidCommand(\"Invalid Command\");","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"howardwhw2"},"content":"        } catch (VanException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"howardwhw2"},"content":"            output \u003d new InvalidCommand(ex.getError());","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"howardwhw2"},"content":"        return output;","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"howardwhw2"},"content":"    public static ArrayList\u003cTask\u003e parseArray(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"howardwhw2"},"content":"        LocalDateTime date;","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"howardwhw2"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"howardwhw2"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"howardwhw2"},"content":"        if (taskList !\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"howardwhw2"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"howardwhw2"},"content":"                String fileLine \u003d taskList.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"howardwhw2"},"content":"                String[] taskDetail \u003d fileLine.split(\"\\\\|\");","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"howardwhw2"},"content":"                switch (taskDetail[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"howardwhw2"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"howardwhw2"},"content":"                        date \u003d LocalDateTime.parse(taskDetail[3], dateFormat);","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"howardwhw2"},"content":"                        tasks.add(new Event(taskDetail[2], date));","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"howardwhw2"},"content":"                        if (taskDetail[1].equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"howardwhw2"},"content":"                            tasks.get(i).setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"howardwhw2"},"content":"                        }","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"howardwhw2"},"content":"                        break;","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"howardwhw2"},"content":"                    case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"howardwhw2"},"content":"                        date \u003d LocalDateTime.parse(taskDetail[3], dateFormat);","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"howardwhw2"},"content":"                        tasks.add(new Deadline(taskDetail[2], date));","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"howardwhw2"},"content":"                        if (taskDetail[1].equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"howardwhw2"},"content":"                            tasks.get(i).setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"howardwhw2"},"content":"                        }","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"howardwhw2"},"content":"                        break;","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"howardwhw2"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"howardwhw2"},"content":"                        tasks.add(new ToDo(taskDetail[2]));","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"howardwhw2"},"content":"                        if (taskDetail[1].equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"howardwhw2"},"content":"                            tasks.get(i).setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"howardwhw2"},"content":"                        }","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"howardwhw2"},"content":"                        break;","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"howardwhw2"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"howardwhw2"},"content":"        return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":143,"author":{"gitId":"howardwhw2"},"content":"    public static String[] parseDescription(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"howardwhw2"},"content":"        String[] keywords \u003d task.getDescription().split(\" \");","lastModifiedDate":"2022-01-29"},{"lineNumber":145,"author":{"gitId":"howardwhw2"},"content":"        return keywords;","lastModifiedDate":"2022-01-29"},{"lineNumber":146,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":147}},{"path":"src/main/java/van/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"    private ArrayList\u003cString\u003e tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    private File file;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"            if (file.isFile()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"                Scanner fileInput \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"                while (fileInput.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"                    this.tasks.add(fileInput.nextLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"            System.out.println(\"Invalid file path. \" + e);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"    public ArrayList\u003cString\u003e getTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"        return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e newTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"            PrintWriter writer \u003d new PrintWriter(file);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"            for (int i \u003d 0; i \u003c newTasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"                writer.print(newTasks.get(i).saveStatus() + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"            writer.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":44}},{"path":"src/main/java/van/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * Abstraction for all the kinds of tasks to be added to the list","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     * Creates a Task object that encapsulates the description of the","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     * details of the task as well as whether the task has been completed.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"     * @param description description of the task. e.g. attend a meeting","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"     * Constructs a string detailing the description of the task and its","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"     * completion status","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"     * @return String containing details of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"        return done ? \"[X] \" + description : \"[ ] \" + description;","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"     * Returns String for completion status of task for storage purposes","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"     * @return \"1\" if task is completed and \"0\" if not","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"    public String getCompletion() {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"        return done ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"     * returns the description of the task for storage purposes","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"     * @return description of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"howardwhw2"},"content":"    public String saveStatus() {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"howardwhw2"},"content":"        return description;","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"howardwhw2"},"content":"     * changes status of the task to be completed","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"howardwhw2"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"howardwhw2"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"howardwhw2"},"content":"     * changes the status of the task to be incomplete","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"howardwhw2"},"content":"    public void setunDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"howardwhw2"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"howardwhw2"},"content":"     * Returns description of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"howardwhw2"},"content":"     * @return returns the description of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"howardwhw2"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"howardwhw2"},"content":"        return description;","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"howardwhw2":71}},{"path":"src/main/java/van/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"    private int counter;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"        this.counter \u003d this.tasks.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"    public void markDone(int taskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"        this.tasks.get(taskNumber - 1).setDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"    public void markUndone(int taskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"        this.tasks.get(taskNumber - 1).setunDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"        this.tasks.remove(taskNumber - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"        return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":37}},{"path":"src/main/java/van/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":" * extends task to represent to do tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"     * generates a to do object with the description of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"     * @param description description of the to do task","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"     * Generates string for type of task, completion status","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"     * and description for storage.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"     * @return string with details of to do for storage","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"    public String getStatus() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"        return \"[T]\" + super.getStatus();","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"     * Generates string for type of task, completion status","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"     * and description for printing by ui.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"     * @return string with details of to do for printing","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"    public String saveStatus() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"        return \"T|\" + super.getCompletion() + \"|\" + description;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"howardwhw2":38}},{"path":"src/main/java/van/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    private Scanner userInput;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    public Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\"Hello I am Van\");","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\"How may i assist you\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"        this.userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"    public String standBy() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"        this.printDivider();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"        String command \u003d userInput.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"        return command;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"    public void exitMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\"Bye\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"    public void printDivider() {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"howardwhw2"},"content":"    public void invalidMessage(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"howardwhw2"},"content":"        this.printDivider();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"howardwhw2"},"content":"    public void taskMessage(Task task, int count) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"howardwhw2"},"content":"        this.printDivider();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\"Task added\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\" \" + task.getStatus());","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(count + \" tasks pending\");","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"howardwhw2"},"content":"    public void printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"howardwhw2"},"content":"        this.printDivider();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\"Pending tasks:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"howardwhw2"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"howardwhw2"},"content":"            System.out.println(i + 1 + \". \" + taskList.get(i).getStatus());","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"howardwhw2"},"content":"    public void printResults(ArrayList\u003cTask\u003e taskList, String keyword) {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"howardwhw2"},"content":"        this.printDivider();","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"howardwhw2"},"content":"        System.out.println(\"Tasks containing \" + keyword + \":\");","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"howardwhw2"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"howardwhw2"},"content":"            System.out.println(i + 1 + \". \" + taskList.get(i).getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":57}},{"path":"src/main/java/van/Van.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"public class Van {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"        Storage storage \u003d new Storage(\"storage.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"        TaskList taskList \u003d new TaskList(Parser.parseArray(storage.getTasks()));","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"        while (!(isExit)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"            Command nextCommand \u003d Parser.parseCommand(ui.standBy());","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"            isExit \u003d nextCommand.executeCommand(ui, taskList, storage);","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":14}},{"path":"src/main/java/van/VanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"public class VanException extends Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"    private String error;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"    public VanException(String str) {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"        error \u003d str;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    public String getError() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"        return error;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":13}},{"path":"src/test/java/van/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"package van;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"  @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"  public void deadLineTester() {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"    Command deadLine \u003d Parser.parseCommand(\"deadline eat /by 22-10-2022 18:00\");","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"    assertEquals(\"[D][ ] eat (by:Oct 22 2022 1800)\"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"      , deadLine.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"  }","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"howardwhw2"},"content":"  @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"howardwhw2"},"content":"  public void eventTester() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"    Command eventTest \u003d Parser.parseCommand(\"event sleep /at 12-01-2022 06:00\");","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"howardwhw2"},"content":"    assertEquals(\"[E][ ] sleep (at:Jan 12 2022 0600)\",","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"howardwhw2"},"content":"      eventTest.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"howardwhw2"},"content":"  }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"howardwhw2"},"content":"  @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"howardwhw2"},"content":"  public void toDoTester() {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"howardwhw2"},"content":"    Command toDoTest \u003d Parser.parseCommand(\"todo study\");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"howardwhw2"},"content":"    assertEquals(\"[T][ ] study\", toDoTest.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"howardwhw2"},"content":"  }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"howardwhw2"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"howardwhw2"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"howardwhw2":29}},{"path":"storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"D|1|eat|20-01-2022 18:00","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"E|0|eat|20-01-2022 18:00","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"T|1|sleep","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"howardwhw2":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"howardwhw2"},"content":"todo eat lunch","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"howardwhw2"},"content":"deadline eat lunch /by sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"howardwhw2"},"content":"event lunch meeting /at sunday 2-10pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"howardwhw2"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"howardwhw2"},"content":"todo eat lunch","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"howardwhw2"},"content":"deadline eat lunch /by sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"howardwhw2"},"content":"event lunch meeting /at sunday 2-10pm","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"howardwhw2"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"howardwhw2"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"howardwhw2"},"content":"mark 5","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"howardwhw2"},"content":"unmark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"howardwhw2"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"howardwhw2"},"content":"delete 3","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"howardwhw2"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"howardwhw2"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"howardwhw2":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"howardwhw2"},"content":"java -classpath ..\\bin Van \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"howardwhw2":1,"-":20}}]
