[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanchinkiat99":15,"-":46}},{"path":"data/tutu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"1. [D][ ] deadline say hi (by: Aug 9 2020, 6:00 PM)","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"2. [T][ ] say hi","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"3. [E][X] event say hi (at: Aug 8 2020, 8:00 AM, from 8:00 AM to 9:00 AM)","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"tanchinkiat99":3}},{"path":"src/main/java/tutu/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanchinkiat99":61}},{"path":"src/main/java/tutu/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanchinkiat99":12}},{"path":"src/main/java/tutu/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"    private Tutu duke \u003d new Tutu();","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"            stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanchinkiat99":31}},{"path":"src/main/java/tutu/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.File;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.data.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":" * Controller for tutu.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"    private Tutu duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    private Storage store;","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tanjiro.jpg\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/zenitsu.jpg\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"    public MainWindow() {}","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"     * Initializes the chat box interface.","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Mr. Tutu!\\nWhat can I do for you?\", dukeImage)","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        this.store \u003d new Storage(\"./data\");","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"            File f \u003d store.initialize();","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"    public void setDuke(Tutu d) {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"        String response \u003d duke.getResponse(input, store);","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanchinkiat99":72}},{"path":"src/main/java/tutu/Tutu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.data.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.data.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.exception.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.task.Deadline;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.task.Event;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.task.ToDo;","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.user.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"/** Represents a todo list that takes in command inputs from the user. */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"public class Tutu {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    /** TaskList object that stores the tasks added */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"    /** Exit message */","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"    /** Response message for invalid user input */","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String INVALID_INPUT \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    public String getResponse(String input, Storage store) {","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"            switch (Parser.checkFunction(input)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"            case BYE:","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"                response \u003d EXIT_MESSAGE;","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"            case LIST:","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"                response \u003d store.list();","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"            case MARK:","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"                int i \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"                taskList.mark(i);","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"                store.update(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"                int j \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"                taskList.unmark(j);","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"                store.update(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"            case TODO:","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"                ToDo t \u003d new ToDo(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"                response \u003d taskList.add(t);","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"                store.update(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"                Deadline dl \u003d new Deadline(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"                response \u003d taskList.add(dl);","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"                store.update(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"            case EVENT:","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"                Event e \u003d new Event(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"                response \u003d taskList.add(e);","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"                store.update(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"            case DELETE:","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"                response \u003d taskList.delete(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"                store.update(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"            case FIND:","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"                response \u003d taskList.find(input);","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"                throw new InvalidInputException(INVALID_INPUT);","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"        } catch (InvalidInputException | IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"            return String.valueOf(e);","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"        return response;","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"tanchinkiat99":73}},{"path":"src/main/java/tutu/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.data;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"    private String path;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    private File file;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor to create a Storage object.","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"     * @param path Path to file.","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"        this.file \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"     * Creates file to store task list if file does not exist.","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws IOException If file or directory search fails.","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    public File initialize() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        Path p \u003d Paths.get(\"./data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        File f \u003d new File(\"./data/tutu.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        if (!Files.exists(p)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"            File path \u003d new File(\"./data\");","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"            path.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"        f.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        this.file \u003d f;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"        return f;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"     * Updates the list of items in TaskList object.","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"     * @param items TaskList object containing list of tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"    public void update(TaskList items) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"        FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        for (int i \u003d 1; i \u003c\u003d items.taskNumber(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"            fw.write(i + \". \" + items.retrieve(i).isDone() + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"        fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"     * Lists the tasks currently stored in the data file.","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"     * @return String containing current tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"    public String list() {","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"        String tasks \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"            Scanner reader \u003d new Scanner(this.file);","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"                String task \u003d reader.nextLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"                tasks +\u003d (\"\\n\" + task);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"            reader.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"            System.err.println(\"File was not found\");","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"        return tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tanchinkiat99":73}},{"path":"src/main/java/tutu/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.data;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.exception.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.task.Task;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"/** Represents a TaskList object to store the tasks. */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"    /** Stores the tasks added as Task objects in an ArrayList object. */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    /** Minimum size of input for delete function */","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"    private static final int MINIMUM_DELETE_INPUT_LENGTH \u003d 8;","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    /** Minimum size of input for find function */","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"    private static final int MINIMUM_FIND_INPUT_LENGTH \u003d 6;","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    /** Response message for out of range index input */","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String OUT_OF_RANGE \u003d \"Oops! Index is out of range\";","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    /** Response message for empty delete input */","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String EMPTY_DELETE_INPUT \u003d \"☹ OOPS!!! Please include the task you want to delete.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    /** Response message for empty find input */","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String EMPTY_FIND_INPUT \u003d \"Please input a keyword!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"    /** Response message for 0 matches for find command */","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String NO_TASKS_FOUND \u003d \"No matching tasks were found...\";","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor to create a TaskList Object.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"        this.items \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"     * Returns the number of tasks in the TaskList object.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"    public int taskNumber() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        return items.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"     * Retrieves the task at a specified index.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"     * @param i Index of task to be retrieved.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Task object representing the task at index i.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"    public Task retrieve(int i) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"        assert (i \u003e 0);","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        return items.get(i - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"     * Adds a task to be stored in the TaskList object.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"     * @param task Command input from user with description of task to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"     * @return String containing added task.","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"    public String add(Task task) {","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"        items.add(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"                task.isDone(), items.size(), items.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"tanchinkiat99"},"content":"     * Removes a specified task from the TaskList object.","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"tanchinkiat99"},"content":"     * @param cmd Command input from user specifying index of task to be removed.","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"tanchinkiat99"},"content":"     * @return String containing deleted task.","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws InvalidInputException If the index input from user is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"tanchinkiat99"},"content":"    public String delete(String cmd) throws InvalidInputException {","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"tanchinkiat99"},"content":"        if (cmd.length() \u003c MINIMUM_DELETE_INPUT_LENGTH) {","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(EMPTY_DELETE_INPUT);","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"tanchinkiat99"},"content":"        int i \u003d Integer.parseInt(cmd.substring(7));","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"tanchinkiat99"},"content":"        if (i \u003e items.size()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(OUT_OF_RANGE);","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"tanchinkiat99"},"content":"        String deleted \u003d items.get(i - 1).isDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"tanchinkiat99"},"content":"        items.remove(i - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"tanchinkiat99"},"content":"        return String.format(\"Noted. I have removed this task:\\n%sYou now have %d task%s in the list.\",","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"tanchinkiat99"},"content":"                deleted, items.size(), items.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"tanchinkiat99"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"tanchinkiat99"},"content":"     * @param i Index of task that user wants to mark as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"tanchinkiat99"},"content":"     * @return String containing marked task.","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"tanchinkiat99"},"content":"    public String mark(int i) {","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"tanchinkiat99"},"content":"        if (i \u003e taskNumber()) {","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"tanchinkiat99"},"content":"            return OUT_OF_RANGE;","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"tanchinkiat99"},"content":"        Task done \u003d items.get(i - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"tanchinkiat99"},"content":"        done.setDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"tanchinkiat99"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + done.isDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"tanchinkiat99"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"tanchinkiat99"},"content":"     * @param i Index of task that user wants to mark as not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"tanchinkiat99"},"content":"     * @return String containing unmarked task.","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"tanchinkiat99"},"content":"    public String unmark(int i) {","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"tanchinkiat99"},"content":"        if (i \u003e taskNumber()) {","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"tanchinkiat99"},"content":"            return OUT_OF_RANGE;","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"tanchinkiat99"},"content":"        Task undone \u003d items.get(i - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"tanchinkiat99"},"content":"        undone.setNotDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"tanchinkiat99"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + undone.isDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"tanchinkiat99"},"content":"     * Finds the tasks matching a keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"tanchinkiat99"},"content":"     * @param cmd Command input by user containing keyword to match tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"tanchinkiat99"},"content":"     * @return String containing matching tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws InvalidInputException If user input is invalid.","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"tanchinkiat99"},"content":"    public String find(String cmd) throws InvalidInputException {","lastModifiedDate":"2022-02-13"},{"lineNumber":117,"author":{"gitId":"tanchinkiat99"},"content":"        if (cmd.length() \u003c MINIMUM_FIND_INPUT_LENGTH) {","lastModifiedDate":"2022-02-13"},{"lineNumber":118,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(EMPTY_FIND_INPUT);","lastModifiedDate":"2022-02-13"},{"lineNumber":119,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":120,"author":{"gitId":"tanchinkiat99"},"content":"        String key \u003d cmd.substring(5);","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"tanchinkiat99"},"content":"        ArrayList\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"tanchinkiat99"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"tanchinkiat99"},"content":"            if (items.get(i).isMatch(key)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"tanchinkiat99"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"tanchinkiat99"},"content":"                matches.add(index + \". \" + items.get(i).isDone());","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"tanchinkiat99"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"tanchinkiat99"},"content":"            return NO_TASKS_FOUND;","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"tanchinkiat99"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"tanchinkiat99"},"content":"            String list \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"tanchinkiat99"},"content":"            for (int j \u003d 0; j \u003c matches.size(); j++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"tanchinkiat99"},"content":"                list +\u003d (\"\\n\" + matches.get(j));","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"tanchinkiat99"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"tanchinkiat99"},"content":"            return list;","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanchinkiat99":138}},{"path":"src/main/java/tutu/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"/** Represents an Exception that is thrown when the user input is invalid. */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor to create an InvalidInputException object.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"     * @param message Command input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tanchinkiat99":12}},{"path":"src/main/java/tutu/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.exception.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"/** Represents a Deadline task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    /** Date and time of deadline of task */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"    /** Minimum size of input */","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    private static final int MINIMUM_INPUT_LENGTH \u003d 10;","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"    /** Error message for empty task description */","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String EMPTY_INPUT_RESPONSE \u003d \"☹ OOPS!!! The description of a \" +","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"            \"deadline cannot be empty.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    /** Error message for missing deadline */","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String DEADLINE_MISSING \u003d \"Please include the deadline!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor to create a Deadline object.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"     * @param task Command input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws InvalidInputException If input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"    public Deadline(String task) throws InvalidInputException {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"        super(task);","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"        if (super.task.length() \u003c MINIMUM_INPUT_LENGTH) {","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(EMPTY_INPUT_RESPONSE);","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        String[] ss \u003d super.task.split(\" /by \");","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        if (ss.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(DEADLINE_MISSING);","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        super.task \u003d ss[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        // Create a String array with String values of date and time as elements","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"        String[] dateTime \u003d ss[1].split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"        // Store the date","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"        LocalDate d \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"        // Parse and store the time","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"        int hour \u003d Integer.parseInt(dateTime[1].substring(0, 2));","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        int minutes \u003d Integer.parseInt(dateTime[1].substring(2));","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"        LocalDateTime dt \u003d d.atTime(hour, minutes);","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"        this.deadline \u003d dt;","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"     * Returns a description of the task, whether it is done and the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Description of task and deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"    public String isDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", super.done ? \"X\" : \" \", super.task,","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")));","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tanchinkiat99":60}},{"path":"src/main/java/tutu/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.exception.InvalidInputException;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"/** Represents an Event task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    /** Start date and time of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"    private LocalDateTime event;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    /** End date and time of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"    private LocalDateTime end;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"    /** Minimum size of input */","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    private static final int MINIMUM_INPUT_LENGTH \u003d 6;","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"    /** Error message for empty task description */","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String EMPTY_INPUT_RESPONSE \u003d \"☹ OOPS!!! The description of an \" +","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"            \"event cannot be empty.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"    /** Error message for missing date and time */","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String DATE_TIME_MISSING \u003d \"Please include the date and time of event!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor to create an Event object.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"     * @param task Command input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws InvalidInputException If input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"    public Event(String task) throws InvalidInputException {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"        super(task);","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"        if (task.length() \u003c MINIMUM_INPUT_LENGTH) {","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(EMPTY_INPUT_RESPONSE);","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"        // Create a String array with date and time as elements","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"        String[] ss \u003d super.task.split(\" /at \");","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        if (ss.length \u003c 2) {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(DATE_TIME_MISSING);","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"        super.task \u003d ss[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"        String[] dateTime \u003d ss[1].split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"        LocalDate d \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"        LocalDateTime dt \u003d d.atTime(Integer.parseInt(dateTime[1].substring(0, 2)),","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"                Integer.parseInt(dateTime[1].substring(2)));","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"        this.event \u003d dt;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"        this.end \u003d d.atTime(Integer.parseInt(dateTime[3].substring(0, 2)),","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"                Integer.parseInt(dateTime[3].substring(2)));","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"tanchinkiat99"},"content":"     * Returns a description of the task, whether it is done, start date and time and end time.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Description of task and event time.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"tanchinkiat99"},"content":"    public String isDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"tanchinkiat99"},"content":"        return String.format(\"[E][%s] %s (at: %s, from %s to %s)\", super.done ? \"X\" : \" \", super.task,","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"tanchinkiat99"},"content":"                this.event.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")),","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"tanchinkiat99"},"content":"                this.event.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"tanchinkiat99"},"content":"                this.end.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tanchinkiat99":61}},{"path":"src/main/java/tutu/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"/** Represents a task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"    /** Description of task */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"    protected String task;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"    /** Boolean to represent if the task is done */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor to create a Task object.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"     * @param task String command input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"    public Task(String task) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"     * Returns a description of the task and showing if it is done.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Description of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"    public String isDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        return String.format(\"[%s] %s\", this.done ? \"X\" : \" \", this.task);","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"     * Determines if task description contains keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"     * @param key Keyword input by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Boolean value indicating if task contains keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"    public boolean isMatch(String key) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"        return this.task.contains(key);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tanchinkiat99":49}},{"path":"src/main/java/tutu/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.exception.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"/** Represents a ToDo task. */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"    /** Minimum size of input */","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"    private static final int MINIMUM_INPUT_LENGTH \u003d 6;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"    /** Error message for empty task description */","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"    private static final String EMPTY_INPUT_RESPONSE \u003d \"☹ OOPS!!! The description of a \" +","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"            \"todo cannot be empty.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"     * Constructor to create a ToDo object","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"     * @param task Command input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws InvalidInputException If input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"    public ToDo(String task) throws InvalidInputException {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"        super(task);","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"        if (super.task.length() \u003c MINIMUM_INPUT_LENGTH) {","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(EMPTY_INPUT_RESPONSE);","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"        super.task \u003d super.task.substring(5);","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"     * Returns a description of the task and whether it is done.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Description of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"    public String isDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        return String.format(\"[T][%s] %s\", super.done ? \"X\" : \" \", super.task);","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tanchinkiat99":34}},{"path":"src/main/java/tutu/user/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.user;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.exception.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"    public enum Function {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"     * Parses the input String command by user.","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"     * @param cmd Command input by user.","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"     * @return Function value indicating which command should be executed.","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    public static Function checkFunction(String cmd) throws InvalidInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.BYE;","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.LIST;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.length() \u003e 3 \u0026\u0026 cmd.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.length() \u003e 5 \u0026\u0026 cmd.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.UNMARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.length() \u003e 3 \u0026\u0026 cmd.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.length() \u003e 7 \u0026\u0026 cmd.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.length() \u003e 4 \u0026\u0026 cmd.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.length() \u003e 5 \u0026\u0026 cmd.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.DELETE;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"        } else if (cmd.length() \u003e 4 \u0026\u0026 cmd.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"            return Function.FIND;","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"            throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tanchinkiat99":40}},{"path":"src/main/java/tutu/user/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.user;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"    private Scanner sc;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"    public Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    public String read() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    public void displayError(Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"        System.err.println(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tanchinkiat99":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanchinkiat99":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"tutu.MainWindow\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"tanchinkiat99":19}},{"path":"src/test/java/tutu/data/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"package tutu.data;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.exception.InvalidInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"import tutu.task.ToDo;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"tanchinkiat99"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"tanchinkiat99"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"tanchinkiat99"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"tanchinkiat99"},"content":"    public void addAndRemoveTest() throws InvalidInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"tanchinkiat99"},"content":"        ToDo t \u003d new ToDo(\"todo say hello\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"tanchinkiat99"},"content":"        taskList.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"tanchinkiat99"},"content":"        assertEquals(1, taskList.taskNumber());","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"tanchinkiat99"},"content":"        String task \u003d taskList.retrieve(1).isDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"tanchinkiat99"},"content":"        assertEquals(\"[T][ ] say hello\", task);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"tanchinkiat99"},"content":"        taskList.delete(\"delete 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"tanchinkiat99"},"content":"        assertEquals(0, taskList.taskNumber());","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"tanchinkiat99"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"tanchinkiat99"},"content":"    public void markAndUnmarkTest() throws InvalidInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"tanchinkiat99"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"tanchinkiat99"},"content":"        ToDo t \u003d new ToDo(\"todo say hello\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"tanchinkiat99"},"content":"        taskList.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"tanchinkiat99"},"content":"        String task \u003d taskList.retrieve(1).isDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"tanchinkiat99"},"content":"        assertEquals(\"[T][ ] say hello\", task);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"tanchinkiat99"},"content":"        taskList.mark(1);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"tanchinkiat99"},"content":"        String marked \u003d taskList.retrieve(1).isDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"tanchinkiat99"},"content":"        assertEquals(\"[T][X] say hello\", marked);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"tanchinkiat99"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"tanchinkiat99"},"content":"        taskList.unmark(1);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"tanchinkiat99"},"content":"        String unmarked \u003d taskList.retrieve(1).isDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"tanchinkiat99"},"content":"        assertEquals(\"[T][ ] say hello\", unmarked);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"tanchinkiat99"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"tanchinkiat99"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"tanchinkiat99":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanchinkiat99"},"content":"todo brush my teeth","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"tanchinkiat99"},"content":"event wash my clothes /at 12pm-1pm","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"tanchinkiat99"},"content":"deadline submit my essay /by Monday 4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"tanchinkiat99"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"tanchinkiat99"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"tanchinkiat99"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"tanchinkiat99"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"tanchinkiat99"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"tanchinkiat99":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanchinkiat99"},"content":"java -classpath ..\\bin Tutu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanchinkiat99":1,"-":20}}]
