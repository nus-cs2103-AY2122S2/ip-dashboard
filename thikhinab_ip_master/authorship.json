[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Tasks that is required to be done before a specific","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" * date/time. Inherits from Task.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"     * String representation of the deadline.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    protected String by;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a deadline task.","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     * @param description text description of the deadline.","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * @param by date/time deadline is due.","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string to represent deadline with","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     * description and due date/time","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string respresting the Deadline","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":" * Runs a Personal Assistant Chatbot which helps users","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" * keep track of tasks and other things. The current","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" * iteration of the Chatbot is named Luca.","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     * Logo of the Chatbot.","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    public static final String logo \u003d \"888      888     888  .d8888b.         d8888 \\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"            + \"888      888     888 d88P  Y88b       d88888 \\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"            + \"888      888     888 888    888      d88P888 \\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"            + \"888      888     888 888            d88P 888 \\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"            + \"888      888     888 888           d88P  888 \\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"            + \"888      888     888 888    888   d88P   888 \\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"            + \"888      Y88b. .d88P Y88b  d88P  d8888888888 \\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"            + \"88888888  \\\"Y88888P\\\"   \\\"Y8888P\\\"  d88P     888 \\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     * The divder line used to wrap string before output.","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    private static final String dividerLine \u003d \"___________________\"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"            + \"_________________________________________\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * List to store items. There will be no more than 100 items.","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     * Returns the string containing the task text on the list with","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     * formatting.","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string with list text","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    private static String listToString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"        Task task;","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"            task \u003d list.get(i);","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"            stringBuilder.append((i + 1) + \".\" + task.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"            if (i !\u003d list.size() - 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"        return formatString(stringBuilder.toString());","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"     * Formats the string by indenting with 4 spaces","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"     * and wrapping the string with divider lines.","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"     * @param input string to be formatted.","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"     * @return indented string with divider lines.","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"    private static String formatString(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"        String temp \u003d dividerLine + input + \"\\n\" + dividerLine;","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        String indented \u003d temp.replaceAll(\"(?m)^\", \"    \");","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        return indented;","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"     * Changes the task status to done.","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"     * @param point 1-based index of the task in the list.","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"     * @return formatted success response string.","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"     * @see Task","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"    private static String markTask(int point) {","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d list.get(point - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"        task.markAsDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"        return Duke.formatString(\"Great! I have marked this task as done:\\n \"","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"                + task.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"     * Changes the task status to not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"     * @param point 1-based index of the task in the list.","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string stating task not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"     * @see Task","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"    private static String unmarkTask(int point) {","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d list.get(point - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"        return Duke.formatString(\"OK, I\u0027ve marked this task as not done yet:\\n \"","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"                + task.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"     * Creates and adds a ToDo task to the list.","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to parse.","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string with ToDo task.","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"    private static String addToDo(String[] tokens) {","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"            stringBuilder.append(tokens[i]);","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"            if (i !\u003d tokens.length - 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"                stringBuilder.append(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"        ToDo task \u003d new ToDo(stringBuilder.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"        list.add(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"        return Duke.formatString(\"Got it! I\u0027ve added this ToDo task:\\n \"","lastModifiedDate":"2022-01-19"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"                + task.toString() + \"\\nNow you have \" + list.size()","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"                + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"     * Creates and add a Deadline task.","lastModifiedDate":"2022-01-19"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":121,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to parse.","lastModifiedDate":"2022-01-19"},{"lineNumber":122,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string with Deadline Task.","lastModifiedDate":"2022-01-19"},{"lineNumber":123,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if due date/time is empty.","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"thikhinab"},"content":"    private static String addDeadline(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"thikhinab"},"content":"        Boolean foundKeyword \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"thikhinab"},"content":"        String by \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"thikhinab"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":130,"author":{"gitId":"thikhinab"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"thikhinab"},"content":"            if (tokens[i].equals(\"/by\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"thikhinab"},"content":"                description \u003d stringBuilder.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"thikhinab"},"content":"                stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":134,"author":{"gitId":"thikhinab"},"content":"                foundKeyword \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"thikhinab"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"thikhinab"},"content":"                stringBuilder.append(tokens[i]);","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"thikhinab"},"content":"                if (i !\u003d tokens.length - 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":138,"author":{"gitId":"thikhinab"},"content":"                    stringBuilder.append(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":139,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":140,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":141,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":142,"author":{"gitId":"thikhinab"},"content":"        if (!foundKeyword) {","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Due date/time of deadline cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":144,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":145,"author":{"gitId":"thikhinab"},"content":"        by \u003d stringBuilder.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":146,"author":{"gitId":"thikhinab"},"content":"        Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2022-01-19"},{"lineNumber":147,"author":{"gitId":"thikhinab"},"content":"        list.add(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":148,"author":{"gitId":"thikhinab"},"content":"        return Duke.formatString(\"Got it! I\u0027ve added this Deadline task:\\n \"","lastModifiedDate":"2022-01-19"},{"lineNumber":149,"author":{"gitId":"thikhinab"},"content":"                + task.toString() + \"\\nNow you have \" + list.size()","lastModifiedDate":"2022-01-19"},{"lineNumber":150,"author":{"gitId":"thikhinab"},"content":"                + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":151,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":152,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"thikhinab"},"content":"     * Creates and adds a Event.","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to parse.","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string with Event task.","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"thikhinab"},"content":"     * @throws IllegalArgumentException if Event date/time is empty.","lastModifiedDate":"2022-01-19"},{"lineNumber":159,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":160,"author":{"gitId":"thikhinab"},"content":"    private static String addEvent(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":161,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":162,"author":{"gitId":"thikhinab"},"content":"        Boolean foundKeyword \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":163,"author":{"gitId":"thikhinab"},"content":"        String at \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"thikhinab"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"thikhinab"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"thikhinab"},"content":"            if (tokens[i].equals(\"/at\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":167,"author":{"gitId":"thikhinab"},"content":"                description \u003d stringBuilder.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"thikhinab"},"content":"                stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":169,"author":{"gitId":"thikhinab"},"content":"                foundKeyword \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":170,"author":{"gitId":"thikhinab"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":171,"author":{"gitId":"thikhinab"},"content":"                stringBuilder.append(tokens[i]);","lastModifiedDate":"2022-01-19"},{"lineNumber":172,"author":{"gitId":"thikhinab"},"content":"                if (i !\u003d tokens.length - 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":173,"author":{"gitId":"thikhinab"},"content":"                    stringBuilder.append(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":174,"author":{"gitId":"thikhinab"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":175,"author":{"gitId":"thikhinab"},"content":"                    at \u003d stringBuilder.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":176,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":177,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":178,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":179,"author":{"gitId":"thikhinab"},"content":"        if (!foundKeyword) {","lastModifiedDate":"2022-01-19"},{"lineNumber":180,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Start-End date/time of event \"","lastModifiedDate":"2022-01-19"},{"lineNumber":181,"author":{"gitId":"thikhinab"},"content":"                    + \"cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":182,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":183,"author":{"gitId":"thikhinab"},"content":"        at \u003d stringBuilder.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":184,"author":{"gitId":"thikhinab"},"content":"        Event task \u003d new Event(description, at);","lastModifiedDate":"2022-01-19"},{"lineNumber":185,"author":{"gitId":"thikhinab"},"content":"        list.add(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":186,"author":{"gitId":"thikhinab"},"content":"        return Duke.formatString(\"Got it! I\u0027ve added this Event task:\\n \"","lastModifiedDate":"2022-01-19"},{"lineNumber":187,"author":{"gitId":"thikhinab"},"content":"                + task.toString() + \"\\nNow you have \" + list.size()","lastModifiedDate":"2022-01-19"},{"lineNumber":188,"author":{"gitId":"thikhinab"},"content":"                + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":189,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":190,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":191,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":192,"author":{"gitId":"thikhinab"},"content":"     * Deletes the task from the list.","lastModifiedDate":"2022-01-19"},{"lineNumber":193,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":194,"author":{"gitId":"thikhinab"},"content":"     * @param point 1-based index of the task in the list.","lastModifiedDate":"2022-01-19"},{"lineNumber":195,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string stating task is deleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":196,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":197,"author":{"gitId":"thikhinab"},"content":"    private static String deleteTask(int point) {","lastModifiedDate":"2022-01-19"},{"lineNumber":198,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d list.get(point - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":199,"author":{"gitId":"thikhinab"},"content":"        list.remove(point - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":200,"author":{"gitId":"thikhinab"},"content":"        return Duke.formatString(\"Noted. I\u0027ve removed this task:\\n \"","lastModifiedDate":"2022-01-19"},{"lineNumber":201,"author":{"gitId":"thikhinab"},"content":"                + task.toString() + \"\\nNow you have \" + list.size()","lastModifiedDate":"2022-01-19"},{"lineNumber":202,"author":{"gitId":"thikhinab"},"content":"                + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":203,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":204,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":205,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":206,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":207,"author":{"gitId":"thikhinab"},"content":"     * Runs the Personal Assistant Chatbot where","lastModifiedDate":"2022-01-18"},{"lineNumber":208,"author":{"gitId":"thikhinab"},"content":"     * the user can input commands.","lastModifiedDate":"2022-01-18"},{"lineNumber":209,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":210,"author":{"gitId":"thikhinab"},"content":"     * @param args initial arguments.","lastModifiedDate":"2022-01-18"},{"lineNumber":211,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":213,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":214,"author":{"gitId":"thikhinab"},"content":"        String startPrompt \u003d \"Hi! I\u0027m Luca\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":215,"author":{"gitId":"thikhinab"},"content":"                + \"How may I help you?\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":216,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":217,"author":{"gitId":"thikhinab"},"content":"        System.out.println(Duke.formatString(\"\\n\" + logo + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":218,"author":{"gitId":"thikhinab"},"content":"                + startPrompt));","lastModifiedDate":"2022-01-18"},{"lineNumber":219,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":220,"author":{"gitId":"thikhinab"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":221,"author":{"gitId":"thikhinab"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":222,"author":{"gitId":"thikhinab"},"content":"        String[] tokens \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2022-01-19"},{"lineNumber":223,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":224,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":225,"author":{"gitId":"thikhinab"},"content":"        while (!tokens[0].equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":226,"author":{"gitId":"thikhinab"},"content":"            try {","lastModifiedDate":"2022-01-19"},{"lineNumber":227,"author":{"gitId":"thikhinab"},"content":"                if (tokens[0].equals(\"list\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":228,"author":{"gitId":"thikhinab"},"content":"                    System.out.println(Duke.listToString());","lastModifiedDate":"2022-01-18"},{"lineNumber":229,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":230,"author":{"gitId":"thikhinab"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":231,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! Please indicate \"","lastModifiedDate":"2022-01-19"},{"lineNumber":232,"author":{"gitId":"thikhinab"},"content":"                                + \"the task to be marked.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":233,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":234,"author":{"gitId":"thikhinab"},"content":"                    try {","lastModifiedDate":"2022-01-19"},{"lineNumber":235,"author":{"gitId":"thikhinab"},"content":"                        System.out.println(Duke.markTask(Integer.parseInt(tokens[1])));","lastModifiedDate":"2022-01-19"},{"lineNumber":236,"author":{"gitId":"thikhinab"},"content":"                    } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-19"},{"lineNumber":237,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! Please input an \"","lastModifiedDate":"2022-01-19"},{"lineNumber":238,"author":{"gitId":"thikhinab"},"content":"                                + \"integer with the mark command.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":239,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":240,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":241,"author":{"gitId":"thikhinab"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":242,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! Please indicate \"","lastModifiedDate":"2022-01-19"},{"lineNumber":243,"author":{"gitId":"thikhinab"},"content":"                                + \"the task to be unmasked.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":244,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":245,"author":{"gitId":"thikhinab"},"content":"                    try {","lastModifiedDate":"2022-01-19"},{"lineNumber":246,"author":{"gitId":"thikhinab"},"content":"                        System.out.println(Duke.unmarkTask(Integer.parseInt(tokens[1])));","lastModifiedDate":"2022-01-19"},{"lineNumber":247,"author":{"gitId":"thikhinab"},"content":"                    } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-19"},{"lineNumber":248,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! Please input an \"","lastModifiedDate":"2022-01-19"},{"lineNumber":249,"author":{"gitId":"thikhinab"},"content":"                                + \"integer with the unmark command.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":250,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":251,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":252,"author":{"gitId":"thikhinab"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":253,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! The description of \"","lastModifiedDate":"2022-01-19"},{"lineNumber":254,"author":{"gitId":"thikhinab"},"content":"                                + \"ToDo cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":255,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":256,"author":{"gitId":"thikhinab"},"content":"                    System.out.println(Duke.addToDo(tokens));","lastModifiedDate":"2022-01-19"},{"lineNumber":257,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":258,"author":{"gitId":"thikhinab"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":259,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! The description of \"","lastModifiedDate":"2022-01-19"},{"lineNumber":260,"author":{"gitId":"thikhinab"},"content":"                                + \"Deadline cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":261,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":262,"author":{"gitId":"thikhinab"},"content":"                    System.out.println(Duke.addDeadline(tokens));","lastModifiedDate":"2022-01-19"},{"lineNumber":263,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"event\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":264,"author":{"gitId":"thikhinab"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":265,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! The description of \"","lastModifiedDate":"2022-01-19"},{"lineNumber":266,"author":{"gitId":"thikhinab"},"content":"                                + \"Event cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":267,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":268,"author":{"gitId":"thikhinab"},"content":"                    System.out.println(Duke.addEvent(tokens));","lastModifiedDate":"2022-01-19"},{"lineNumber":269,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":270,"author":{"gitId":"thikhinab"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":271,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! Please indicate \"","lastModifiedDate":"2022-01-19"},{"lineNumber":272,"author":{"gitId":"thikhinab"},"content":"                                + \"the task to be deleted.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":273,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":274,"author":{"gitId":"thikhinab"},"content":"                    try {","lastModifiedDate":"2022-01-19"},{"lineNumber":275,"author":{"gitId":"thikhinab"},"content":"                        System.out.println(Duke.deleteTask(Integer.parseInt(tokens[1])));","lastModifiedDate":"2022-01-19"},{"lineNumber":276,"author":{"gitId":"thikhinab"},"content":"                    } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-19"},{"lineNumber":277,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidArgumentException(\":-( OOPS!!! Please input an \"","lastModifiedDate":"2022-01-19"},{"lineNumber":278,"author":{"gitId":"thikhinab"},"content":"                                + \"integer with the delete command.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":279,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":280,"author":{"gitId":"thikhinab"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":281,"author":{"gitId":"thikhinab"},"content":"                    throw new UnkownCommandException();","lastModifiedDate":"2022-01-19"},{"lineNumber":282,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":283,"author":{"gitId":"thikhinab"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2022-01-19"},{"lineNumber":284,"author":{"gitId":"thikhinab"},"content":"                System.out.println(Duke.formatString(dukeException.getMessage()));","lastModifiedDate":"2022-01-19"},{"lineNumber":285,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":286,"author":{"gitId":"thikhinab"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":287,"author":{"gitId":"thikhinab"},"content":"            tokens \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2022-01-19"},{"lineNumber":288,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":289,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":290,"author":{"gitId":"thikhinab"},"content":"        System.out.println(Duke.formatString(\"Bye. See you again soon!\"));","lastModifiedDate":"2022-01-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"thikhinab":288,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Exceptions that are specific to the Duke ChatBot.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" * Inherits from Exception.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a DukeException.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"     * @param errorMessage message describing the error.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Tasks that has as specific start time and end times.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"     * String representation of the event start and","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"     * end dates/times.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    protected String at;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a deadline task.","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     * @param description text description of the Event.","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * @param at start and end dates/times.","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string to represent Event with","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     * description and at dates/times.","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string representing the Event.","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":33}},{"path":"src/main/java/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Exception to handle cases where invalid arguments are passed","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" * along with a command.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a EmptyException.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"     * @param errorMessage message describing the error.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Represents the tasks the user stores and","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" * keeps track whether the task is done.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"     * String to represent about the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     * Boolean to keep track whether task is done.","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * Type of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    public TaskType type;","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     * Contrustor to create Task object.","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     * @param description string representing the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     * Outputs the icon representing the","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     * status of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     * @return status Icon as string.","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     * Returns the text description of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"     * @return text description.","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"        return this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"     * Sets the task as done. Sets isDone","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"     * to true.","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"     * Sets the task as undone. Sets isDone","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"     * to false.","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"     * Outputs the type of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"     * @return TaskType representing the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"    public TaskType getType() {","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"        return this.type;","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"     * Outputs a string description of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"     * @return description of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":86}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Represents the type of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"    TODO,","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"    DEADLINE,","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    EVENT","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":8}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Tasks that does not have any date/time attached to it.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"     * Contrustor to create a deadline task.","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     * @param description text description of the ToDo.","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string representation of ToDo with","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     * description.","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string representing ToDo.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":25}},{"path":"src/main/java/UnkownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":" * Exception to handle cases where the command entered","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":" * is unknown/invalid.","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"public class UnkownCommandException extends DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a UnknownCommandException.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    public UnkownCommandException() {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"todo buy book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"todo buy groceries","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"deadline project-1 /by Friday","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"event staff meeting /at Monday 3-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"unmark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"mark two","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"unmark","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"todo","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"deadline return book","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"event Tim\u0027s Birthday","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":16}}]
