[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"# Luca project template","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"3. After that, locate the `src/main/java/luca/luca.Luca.java` file, right-click it, and choose `Run luca.Luca.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"   ","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"   888      888     888  .d8888b.         d8888","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"   888      888     888 d88P  Y88b       d88888","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"   888      888     888 888    888      d88P888","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"   888      888     888 888            d88P 888","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"   888      888     888 888           d88P  888","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"   888      888     888 888    888   d88P   888","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"   888      Y88b. .d88P Y88b  d88P  d8888888888","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"   88888888  \"Y88888P\"   \"Y8888P\"  d88P     888","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"   ```","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thikhinab":16,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"    mainClassName \u003d \"luca.Launcher\"","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    archiveBaseName \u003d \"luca\"","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thikhinab":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"Luca is a chat bot that helps users manage their tasks. It is optimized for users who are familiar with the Command Line Interface (CLI). However, the application leverages the advantages of a GUI.","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"## Quick Start","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"1.    Make sure that java 11 or above is installed in your computer.","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"2.  Download the latest version of `luca.jar` from [here](https://github.com/thikhinab/ip/releases).","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"3. Copy the file to a folder you want to use as the home folder for your chat bot.","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"4. Open the Command Prompt/Terminal in the home folder of the chat bot.","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"5. Run the command `java -jar luca.jar` to launch the application.","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"Creates and tracks a todo task.  ","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"Format: `todo DESCRIPTION`  ","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"Example: `todo read Da Vinci Code`","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"Creates and tracks a deadline task.  ","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"Format: `deadline DESCRIPTION /by yyyy-mm-dd [HHMM]`","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"-  input time must be in 24-hour format (e.g `2359`  is 11:59 pm)","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"-  `deadline return book /by 2022-02-20 `","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"- `deadline submit assignment /by 2022-02-24 2359`","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"### Adding a event task: `event`","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"Creates and tracks an event task.  ","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"Format: `event DESCRIPTION /at yyyy-mm-dd HHMM HHMM`","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"- input time must be in 24-hour format","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"- both start and end times are required","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"- default due time is 6:00 am","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"Example: `event team meeting /at 2022-02-26 1600 1700`","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"Lists out all the recorded tasks.  ","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"Format: `list`","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"Deletes a task that is being tracked:  ","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"Format: `delete INDEX`  ","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"- Deletes task at a specified `INDEX`","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"-  `INDEX` refers to the positive index of the task in the displayed list","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"Example: `delete 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"### Marking a task as done:`mark`","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"Marks a specified task as done.  ","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"- Marks task at a specified `INDEX` as completed.","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"-  `INDEX` refers to the positive index of the task in the displayed list","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"Example: `mark 2`","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"### Unmarking a task as done: `unmark`","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"Unmarks a specified task as done.  ","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"- Marks task at a specified `INDEX` as incomplete.","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"-  `INDEX` refers to the positive index of the task in the displayed list","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"Example: `unmark 3`","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"### Sort list of tasks: `sort`","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"Lists sorted deadlines and events either by descending, or the ascending order.  ","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"Format: `sort TASK_TYPE [ORDER]`","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"- Supported `TASK_TYPE` are: `deadline` and `event`","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"- Keywords for `ORDER`: `ascending`, `descending`, `asc` and `desc`","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"- Default order is ascending","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"- `sort deadline`","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"- `sort event ascending`","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\t ","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"thikhinab":60,"-":17}},{"path":"src/main/java/luca/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" * Responsible for launching the GUI for Luca.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"     * Launches the GUI for Luca.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     * @param args arguments inputted.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"thikhinab":18}},{"path":"src/main/java/luca/Luca.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.command.Command;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.parser.Parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" * Runs a Personal Assistant Chat bot.","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"public class Luca {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /** Prefix to identify for error messages */","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    public static final String ERROR_PREFIX \u003d \"ERROR:\";","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /** Handles loading and saving of tasks. */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    /** Temporary store of list of tasks. */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create duke.Duke and load task from","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     * storage.","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * @param filePath file path of task data file.","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    public Luca(String filePath) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"            tasks \u003d TaskList.of(storage.load());","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"            tasks \u003d TaskList.emptyList();","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"     * Parses the user input, creates and executes a command.","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     * Outputs the response string accordingly.","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * @param input user input.","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     * @return response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"        String response;","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"            String fullCommand \u003d input;","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"            Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"            response \u003d command.execute(tasks, storage);","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"            response \u003d ERROR_PREFIX + exception.getMessage();","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"        assert response.length() \u003e 0 : \"Empty response from chat bot.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"        return response;","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"thikhinab":59}},{"path":"src/main/java/luca/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import luca.ui.MainWindow;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":" * Set up the GUI for Luca using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /** Luca chat bot used for logic. */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    private Luca luca \u003d new Luca(\"/data/Luca.txt\");","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/view/Stylesheet.css\").toExternalForm());","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLuca(luca);","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"thikhinab":34}},{"path":"src/main/java/luca/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" * Class representing the functionality of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    /** Keeps track of the Type of command. */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    private CommandType commandType;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create Command object","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     * Executes the command functionality.","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * @return string response.","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if there is an error when executing.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     * Returns the type of Command.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     * @return CommandType of command.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        return commandType;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * Outputs whether the command is an Exit Command.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     * @return True if command is Exit, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    public Boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"        return commandType.equals(CommandType.EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":50}},{"path":"src/main/java/luca/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" * Represents the type of command.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"public enum CommandType {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    EXIT,","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"    MARK,","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"    UNMARK,","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    CREATE_TODO,","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    CREATE_DEADLINE,","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    CREATE_EVENT,","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    LIST,","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    DELETE,","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    FIND,","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    SORT","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":17}},{"path":"src/main/java/luca/command/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.task.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when creating a Deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"public class CreateDeadlineCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    /** Deadline task created. */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create CreateDeadlineCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     * Creates a Deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"     * @param description string describing the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     * @param by the due Date/Time for deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    public CreateDeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.CREATE_DEADLINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"        deadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     * Adds the Deadline task to task list, saves task list to file and","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     * returns the response message.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     * @return string output of the execution.","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     * @throw DukeException if there is a File I/O exception thrown when saving file.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        taskList.add(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        return (\"Got it! I\u0027ve added this Deadline task:\\n \" + deadline + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"                + taskList.sizeDescription());","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":46}},{"path":"src/main/java/luca/command/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.task.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when creating an Event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"public class CreateEventCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    /** Event task created. */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    private Event event;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create CreateEventCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     * @param description string describing the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"     * @param start the start date-time of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     * @param end the end date-time of the event.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    public CreateEventCommand(String description, LocalDateTime start,","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"                              LocalDateTime end) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.CREATE_EVENT);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"        event \u003d new Event(description, start, end);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     * Adds the Event task to task list, saves task list to file and","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     * returns response message.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     * @return response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"     * @throw DukeException if there is File I/O exception when saving file.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"        taskList.add(event);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"        return \"Got it! I\u0027ve added this Event task:\\n \" + event + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"                + taskList.sizeDescription();","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":47}},{"path":"src/main/java/luca/command/CreateToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.task.ToDo;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when creating a ToDoo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"public class CreateToDoCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    /** ToDo task created. */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    private ToDo toDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create CreateToDoCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * Creates a ToDo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     * @param description string describing the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    public CreateToDoCommand(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.CREATE_TODO);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"        toDo \u003d new ToDo(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     * Adds the ToDo task to task list, saves task list to file and","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * returns the response message.","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     * @return response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     * @throw DukeException if there is a File I/O exception thrown when saving file.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        taskList.add(toDo);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        return \"Got it! I\u0027ve added this ToDo task:\\n \" + toDo + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"                + taskList.sizeDescription();","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":43}},{"path":"src/main/java/luca/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import luca.parser.exceptions.InvalidArgumentException;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when deleting a task.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /** 1-based index of task to be deleted. */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    private int point;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create Delete Command.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     * @param point 1-based index of task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    public DeleteCommand(int point) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"        this.point \u003d point;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     * Deletes tasks pointed out, saves the task list and returns","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * out appropriate response message.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     * @return response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     * @throw DukeException if there is a File I/O exception or when point is invalid.","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"There are no tasks to be deleted.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        if (point \u003e taskList.size() || point \u003c\u003d 0) {","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"The index given is invalid.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d taskList.remove(point - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"        return \"Noted. I\u0027ve removed this task:\\n \" + task","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"                + \"\\n\" + taskList.sizeDescription();","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":50}},{"path":"src/main/java/luca/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when exiting the chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create ExitCommand.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.EXIT);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * Outputs the exit message.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"     * @return response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"        return \"Bye. See you again soon!\";","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":28}},{"path":"src/main/java/luca/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.util.List;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import luca.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    /** Keyword used for search. */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    private String keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create FindCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.FIND);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     * Loops through the list of tasks and outputs string of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"     * containing the keyword in the description.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * @retrun response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"        List\u003cTask\u003e list \u003d taskList.stream()","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"            return \"Sorry, I was unable to find any matching tasks.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"        stringBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"        IntStream.range(0, list.size())","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"                .forEach(index -\u003e stringBuilder.append(\"\" + (index + 1) + \".\"","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"                        + list.get(index).toString() + \"\\n\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"thikhinab":52}},{"path":"src/main/java/luca/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when listing out all the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create List Command.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.LIST);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     * Returns the string containing list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     * @param taskList Task list loaded to the chat bot.","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     * @return list of tasks as a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    private static String listToString(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"            return \"There are no tasks on your list.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"        IntStream.range(0, taskList.size())","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"                .forEach(index -\u003e stringBuilder.append((index + 1) + \".\"","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"                        + taskList.get(index).toString() + \"\\n\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"     * Returns string with the list of tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     * @return response string/","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"        String output \u003d listToString(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        return output;","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":52}},{"path":"src/main/java/luca/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when marking a task.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    /** 1-based index of the task in the list. */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    private int pointer;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a Mark Command.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     * @param pointer 1-based index of the task in the list.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    public MarkCommand(int pointer) {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.MARK);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        this.pointer \u003d pointer;","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * Marks the task as done, saves changes to file and returns response message.","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     * @return response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if I/O error or Invalid argument.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d taskList.markTaskAsDone(pointer);","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        return \"Great! I have marked this task as done:\\n \" + task;","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":40}},{"path":"src/main/java/luca/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.util.List;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import luca.task.Deadline;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import luca.task.Event;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import luca.task.Task;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskType;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":" * Sorts the given type of tasks either by ascending or the descending order.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    /** Type of the task to be sorted. */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    private TaskType taskType;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    /** Records the order of the sort command: ascending or descending. */","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    private Boolean isAscending;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     * Creates a sort command.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * @param taskType type of task.","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     * @param isAscending order of the sort.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public SortCommand(TaskType taskType, Boolean isAscending) {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.SORT);","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"        this.isAscending \u003d isAscending;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     * Filters the tasks by deadline and outputs the deadline by ascending order.","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     * @return sorted list of Deadlines.","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    private List\u003cDeadline\u003e getSortedDeadline(TaskList taskList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"        List\u003cDeadline\u003e deadlines \u003d taskList.stream().filter(task -\u003e task.getType() \u003d\u003d taskType)","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"                .map(task -\u003e (Deadline) task)","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"                .sorted(Comparator.comparing(Deadline::getBy))","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        return deadlines;","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"     * Filters the tasks by Events and outputs the deadline by ascending order.","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"     * @return sorted list of Events.","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"    private List\u003cEvent\u003e getSortedEvents(TaskList taskList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"        List\u003cEvent\u003e events \u003d taskList.stream().filter(task -\u003e task.getType() \u003d\u003d taskType)","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"                .map(task -\u003e (Event) task)","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"                .sorted(Comparator.comparing(Event::getStart))","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        return events;","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"     * Returns the string containing list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"     * @param sortedTasks task","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"     * @return list of tasks as a string.","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"    private String formatTasks(List\u003c? extends Task\u003e sortedTasks) {","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"        String taskTypeString \u003d ((taskType \u003d\u003d TaskType.DEADLINE) ? \"deadlines\" : \"events\");","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"        String order \u003d isAscending ? \"ascending\" : \"descending\";","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"        if (sortedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"            return \"There are no \" + taskTypeString + \" in your list:\\n\";","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"        stringBuilder.append(\"Here are the \" + taskTypeString + \" in the \" + order + \" order:\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"        IntStream.range(0, sortedTasks.size())","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"                .forEach(index -\u003e stringBuilder.append((index + 1) + \".\"","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"                        + sortedTasks.get(index).toString() + \"\\n\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"     * Sorts the specified type of task by the given order and outputs","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"     * the formatter result.","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"     * @return sorted list of tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"        List\u003c? extends Task\u003e sortedTasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"        assert (taskType \u003d\u003d TaskType.DEADLINE || taskType \u003d\u003d TaskType.EVENT) : \"Sort Task type is invalid.\";","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"        if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"            sortedTasks \u003d getSortedDeadline(taskList);","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"            sortedTasks \u003d getSortedEvents(taskList);","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"        // reverses the order of tasks if specified to be descending","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"        if (!isAscending) {","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"            Collections.reverse(sortedTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"        return formatTasks(sortedTasks);","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"thikhinab":118}},{"path":"src/main/java/luca/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import luca.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":" * Responsible for the functionality needed when un-marking a Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    /** 1-based index of the task in the list. */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    private int pointer;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a UnmarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     * @param pointer 1-based index of the task in the list.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    public UnmarkCommand(int pointer) {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"        super(CommandType.UNMARK);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        this.pointer \u003d pointer;","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * Marks the task as done, saves changes to file and returns response message.","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * @param storage storage used by chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     * @return response string.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if I/O error or Invalid argument.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d taskList.unmarkTaskAsDone(pointer);;","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n \" + task;","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":40}},{"path":"src/main/java/luca/common/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.common;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" * Exceptions that are specific to the duke.Duke ChatBot.","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":" * Inherits from Exception.","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a DukeException.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     * @param errorMessage message describing the error.","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":17}},{"path":"src/main/java/luca/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.command.Command;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.command.CreateDeadlineCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import luca.command.CreateEventCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import luca.command.CreateToDoCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import luca.command.DeleteCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import luca.command.ExitCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import luca.command.FindCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import luca.command.ListCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import luca.command.MarkCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import luca.command.SortCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import luca.command.UnmarkCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import luca.parser.exceptions.InvalidArgumentException;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"import luca.parser.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"import luca.parser.exceptions.UnkownCommandException;","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskType;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":" *  Parses the user input.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    /** Error message when the event date time format is invalid. */","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    private static final String INVALID_EVENT_ERROR_MESSAGE \u003d \"Please enter the date and \"","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"            + \"start and end times in the following format:\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"            + \" yyyy-mm-dd HHMM HHMM in the 24 hour format.\";","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    /** Error message when the Deadline date time format is invalid. */","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    private static final String INVALID_DEADLINE_ERROR_MESSAGE \u003d \"Please enter the date/time in \"","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"            + \"the following format:\\n yyyy-mm-dd [HHMM] in the 24 hour format.\";","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    /** Default time given for deadline if not time was inputted. */","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    private static final String DEFAULT_DEADLINE_TIME \u003d \"T06:00:00\";","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    /** Defines the common lower bound for input tokens. */","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    private static final int COMMON_LOWER_BOUND \u003d 2;","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"    /** Defines the common upper bound for input tokens. */","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    private static final int COMMON_UPPER_BOUND \u003d 3;","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"     * Checks whether the input tokens surpasses the lower bounds needed for command.","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"     * @param length length of input tokens.","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"     * @param bounds number of tokens needed to define the command.","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"     * @param errorDescription description given for the error.","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if the number of input tokens less than bounds.","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"    private static void checkCommandLowerBound(int length, int bounds, String errorDescription)","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"        if (length \u003c bounds) {","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! \" + errorDescription);","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"     * Checks whether the input tokens surpasses the upper bounds needed for command.","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"     * @param length length of input tokens.","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"     * @param bounds number of tokens needed to define the command.","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"     * @param errorDescription description given for the error.","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if the number of input tokens more than bounds.","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"    private static void checkCommandUpperBound(int length, int bounds, String errorDescription)","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"        if (length \u003c bounds) {","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! \" + errorDescription);","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates Mark command.","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"     * @return Mark Command.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if there are invalid arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"    private static Command parseMarkCommand(String[] tokens) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND,","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"                \"Please indicate the task to be marked.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"            int point \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"            return new MarkCommand(point);","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Please input an \"","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"                    + \"integer with the mark command.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates Unmark command.","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"     * @return Unmark Command.","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if there are invalid arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"    private static Command parseUnmarkCommand(String[] tokens) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND,","lastModifiedDate":"2022-02-14"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"                \"Please indicate the task to be unmarked.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"            int point \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"            return new UnmarkCommand(point);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Please input an \"","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"                    + \"integer with the unmark command.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates a CreateToDoCommand.","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"     * @return CreateToDoCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if there are invalid arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"thikhinab"},"content":"    private static Command parseTodoCommand(String[] tokens) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND,","lastModifiedDate":"2022-02-14"},{"lineNumber":123,"author":{"gitId":"thikhinab"},"content":"                \"The description of ToDo cannot be empty.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":124,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"thikhinab"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"thikhinab"},"content":"            stringBuilder.append(tokens[i] + \" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"thikhinab"},"content":"        String description \u003d stringBuilder.toString().trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"thikhinab"},"content":"        return new CreateToDoCommand(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates Delete Command.","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"thikhinab"},"content":"     * @return DeleteCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"thikhinab"},"content":"     * @throws if there are invalid arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"thikhinab"},"content":"    private static Command parseDeleteCommand(String[] tokens) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND,","lastModifiedDate":"2022-02-14"},{"lineNumber":141,"author":{"gitId":"thikhinab"},"content":"                \"Please indicate the task to be deleted.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"thikhinab"},"content":"            int point \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"thikhinab"},"content":"            return new DeleteCommand(point);","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"thikhinab"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Please input an \"","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"thikhinab"},"content":"                    + \"integer with the delete command.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates CreateDeadlineCommand.","lastModifiedDate":"2022-02-09"},{"lineNumber":153,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"thikhinab"},"content":"     * @return CreateDeadlineCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if there are invalid arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"thikhinab"},"content":"    private static Command parseDeadlineCommand(String[] tokens) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND,","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"thikhinab"},"content":"                \"The description of deadline cannot be empty.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"thikhinab"},"content":"        Boolean hasFoundKeyword \u003d false;","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"thikhinab"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"thikhinab"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"thikhinab"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"thikhinab"},"content":"            if (!hasFoundKeyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":167,"author":{"gitId":"thikhinab"},"content":"                if (tokens[i].equals(\"/by\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"thikhinab"},"content":"                    description \u003d stringBuilder.toString().trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"thikhinab"},"content":"                    hasFoundKeyword \u003d true;","lastModifiedDate":"2022-02-14"},{"lineNumber":170,"author":{"gitId":"thikhinab"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"thikhinab"},"content":"                    stringBuilder.append(tokens[i] + \" \");","lastModifiedDate":"2022-02-14"},{"lineNumber":172,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"thikhinab"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"thikhinab"},"content":"                try {","lastModifiedDate":"2022-02-03"},{"lineNumber":175,"author":{"gitId":"thikhinab"},"content":"                    if (i \u003d\u003d tokens.length - 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"thikhinab"},"content":"                        dateTime \u003d LocalDateTime.parse(tokens[i] + DEFAULT_DEADLINE_TIME);","lastModifiedDate":"2022-02-05"},{"lineNumber":177,"author":{"gitId":"thikhinab"},"content":"                    } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"thikhinab"},"content":"                        dateTime \u003d parseDateTime(tokens[i], tokens[i + 1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":180,"author":{"gitId":"thikhinab"},"content":"                    i++;","lastModifiedDate":"2022-02-03"},{"lineNumber":181,"author":{"gitId":"thikhinab"},"content":"                } catch (NumberFormatException | DateTimeParseException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"thikhinab"},"content":"                    throw new InvalidDateTimeFormatException(INVALID_DEADLINE_ERROR_MESSAGE);","lastModifiedDate":"2022-02-05"},{"lineNumber":183,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"thikhinab"},"content":"                break;","lastModifiedDate":"2022-02-14"},{"lineNumber":185,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"thikhinab"},"content":"        if (!hasFoundKeyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":188,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Due date/time of deadline cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":191,"author":{"gitId":"thikhinab"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-02-18"},{"lineNumber":192,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Description of deadline cannot be empty.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":193,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":194,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":195,"author":{"gitId":"thikhinab"},"content":"        assert description.length() \u003e 0 : \"Description is missing.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":196,"author":{"gitId":"thikhinab"},"content":"        assert dateTime !\u003d null : \"Date and Time is missing.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":197,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":198,"author":{"gitId":"thikhinab"},"content":"        return new CreateDeadlineCommand(description, dateTime);","lastModifiedDate":"2022-01-26"},{"lineNumber":199,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":202,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":203,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates a CreateEventCommand.","lastModifiedDate":"2022-02-09"},{"lineNumber":205,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":206,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"thikhinab"},"content":"     * @return CreateEventCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if there are invalid arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"thikhinab"},"content":"    private static Command parseEventCommand(String[] tokens) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND,","lastModifiedDate":"2022-02-14"},{"lineNumber":212,"author":{"gitId":"thikhinab"},"content":"                \"The description of event cannot be empty.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":213,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":214,"author":{"gitId":"thikhinab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":215,"author":{"gitId":"thikhinab"},"content":"        Boolean hasFoundKeyword \u003d false;","lastModifiedDate":"2022-02-14"},{"lineNumber":216,"author":{"gitId":"thikhinab"},"content":"        LocalDateTime start \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":217,"author":{"gitId":"thikhinab"},"content":"        LocalDateTime end \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":218,"author":{"gitId":"thikhinab"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":219,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":220,"author":{"gitId":"thikhinab"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":221,"author":{"gitId":"thikhinab"},"content":"            if (!hasFoundKeyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":222,"author":{"gitId":"thikhinab"},"content":"                if (tokens[i].equals(\"/at\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":223,"author":{"gitId":"thikhinab"},"content":"                    description \u003d stringBuilder.toString().trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":224,"author":{"gitId":"thikhinab"},"content":"                    hasFoundKeyword \u003d true;","lastModifiedDate":"2022-02-14"},{"lineNumber":225,"author":{"gitId":"thikhinab"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":226,"author":{"gitId":"thikhinab"},"content":"                    stringBuilder.append(tokens[i] + \" \");","lastModifiedDate":"2022-02-14"},{"lineNumber":227,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":228,"author":{"gitId":"thikhinab"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":229,"author":{"gitId":"thikhinab"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":230,"author":{"gitId":"thikhinab"},"content":"                    if (i \u003e tokens.length - 3) {","lastModifiedDate":"2022-01-26"},{"lineNumber":231,"author":{"gitId":"thikhinab"},"content":"                        throw new InvalidDateTimeFormatException(INVALID_EVENT_ERROR_MESSAGE);","lastModifiedDate":"2022-02-05"},{"lineNumber":232,"author":{"gitId":"thikhinab"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":233,"author":{"gitId":"thikhinab"},"content":"                    start \u003d parseDateTime(tokens[i], tokens[i + 1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":234,"author":{"gitId":"thikhinab"},"content":"                    end \u003d parseDateTime(tokens[i], tokens[i + 2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":235,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":236,"author":{"gitId":"thikhinab"},"content":"                } catch (NumberFormatException | DateTimeParseException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":237,"author":{"gitId":"thikhinab"},"content":"                    throw new InvalidDateTimeFormatException(INVALID_EVENT_ERROR_MESSAGE);","lastModifiedDate":"2022-02-05"},{"lineNumber":238,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":239,"author":{"gitId":"thikhinab"},"content":"                break;","lastModifiedDate":"2022-02-14"},{"lineNumber":240,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":241,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":242,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":243,"author":{"gitId":"thikhinab"},"content":"        if (start \u003d\u003d null || end \u003d\u003d null) {","lastModifiedDate":"2022-02-09"},{"lineNumber":244,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidDateTimeFormatException(INVALID_EVENT_ERROR_MESSAGE);","lastModifiedDate":"2022-02-09"},{"lineNumber":245,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":246,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":247,"author":{"gitId":"thikhinab"},"content":"        if (!hasFoundKeyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":248,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Start-End date/time of event \"","lastModifiedDate":"2022-01-26"},{"lineNumber":249,"author":{"gitId":"thikhinab"},"content":"                    + \"cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":250,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":251,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":252,"author":{"gitId":"thikhinab"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-02-18"},{"lineNumber":253,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Description of event cannot be empty.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":254,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":255,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":256,"author":{"gitId":"thikhinab"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":257,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\":-( OOPS!!! Start time cannot be after the end time.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":258,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":259,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":260,"author":{"gitId":"thikhinab"},"content":"        assert description.length() \u003e 0 : \"Description is missing.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":261,"author":{"gitId":"thikhinab"},"content":"        return new CreateEventCommand(description, start, end);","lastModifiedDate":"2022-01-26"},{"lineNumber":262,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":263,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":264,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":265,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates LocalDateTime object.","lastModifiedDate":"2022-02-09"},{"lineNumber":266,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":267,"author":{"gitId":"thikhinab"},"content":"     * @param stringDate date as a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":268,"author":{"gitId":"thikhinab"},"content":"     * @param stringTime time as a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":269,"author":{"gitId":"thikhinab"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2022-01-26"},{"lineNumber":270,"author":{"gitId":"thikhinab"},"content":"     * @throws NumberFormatException if integer is not given","lastModifiedDate":"2022-02-14"},{"lineNumber":271,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":272,"author":{"gitId":"thikhinab"},"content":"    private static LocalDateTime parseDateTime(String stringDate, String stringTime)","lastModifiedDate":"2022-01-26"},{"lineNumber":273,"author":{"gitId":"thikhinab"},"content":"            throws NumberFormatException, DateTimeParseException {","lastModifiedDate":"2022-02-14"},{"lineNumber":274,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":275,"author":{"gitId":"thikhinab"},"content":"        int time \u003d Integer.parseInt(stringTime);","lastModifiedDate":"2022-02-14"},{"lineNumber":276,"author":{"gitId":"thikhinab"},"content":"        assert time \u003e 0 : \"Value given for time is negative.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":277,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":278,"author":{"gitId":"thikhinab"},"content":"        String hours;","lastModifiedDate":"2022-01-26"},{"lineNumber":279,"author":{"gitId":"thikhinab"},"content":"        String minutes;","lastModifiedDate":"2022-01-26"},{"lineNumber":280,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":281,"author":{"gitId":"thikhinab"},"content":"        if (time / 100 \u003e 9) {","lastModifiedDate":"2022-01-26"},{"lineNumber":282,"author":{"gitId":"thikhinab"},"content":"            hours \u003d Integer.toString(time / 100);","lastModifiedDate":"2022-01-26"},{"lineNumber":283,"author":{"gitId":"thikhinab"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":284,"author":{"gitId":"thikhinab"},"content":"            hours \u003d \"0\" + (time / 100);","lastModifiedDate":"2022-01-26"},{"lineNumber":285,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":286,"author":{"gitId":"thikhinab"},"content":"        if (time % 100 \u003e 9) {","lastModifiedDate":"2022-01-26"},{"lineNumber":287,"author":{"gitId":"thikhinab"},"content":"            minutes \u003d Integer.toString(time % 100);","lastModifiedDate":"2022-01-26"},{"lineNumber":288,"author":{"gitId":"thikhinab"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":289,"author":{"gitId":"thikhinab"},"content":"            minutes \u003d \"0\" + (time % 100);","lastModifiedDate":"2022-01-26"},{"lineNumber":290,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":291,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":292,"author":{"gitId":"thikhinab"},"content":"        return LocalDateTime.parse(stringDate + \"T\" + hours + \":\" + minutes + \":00\");","lastModifiedDate":"2022-01-26"},{"lineNumber":293,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":294,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":295,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":296,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates a FindCommand.","lastModifiedDate":"2022-02-09"},{"lineNumber":297,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":298,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-01-28"},{"lineNumber":299,"author":{"gitId":"thikhinab"},"content":"     * @return FindCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":300,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if there are incorrect number of arguments.","lastModifiedDate":"2022-02-09"},{"lineNumber":301,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":302,"author":{"gitId":"thikhinab"},"content":"    private static Command parseFindCommand(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2022-01-28"},{"lineNumber":303,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND, \"Please enter only one keyword \"","lastModifiedDate":"2022-02-14"},{"lineNumber":304,"author":{"gitId":"thikhinab"},"content":"                + \"following the find command\");","lastModifiedDate":"2022-01-28"},{"lineNumber":305,"author":{"gitId":"thikhinab"},"content":"        return new FindCommand(tokens[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":306,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":307,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":308,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":309,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates a ListCommand.","lastModifiedDate":"2022-02-18"},{"lineNumber":310,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":311,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-02-18"},{"lineNumber":312,"author":{"gitId":"thikhinab"},"content":"     * @return ListCommand.","lastModifiedDate":"2022-02-18"},{"lineNumber":313,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if there are incorrect number of arguments.","lastModifiedDate":"2022-02-18"},{"lineNumber":314,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":315,"author":{"gitId":"thikhinab"},"content":"    private static Command parseListCommand(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2022-02-18"},{"lineNumber":316,"author":{"gitId":"thikhinab"},"content":"        if (tokens.length !\u003d 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":317,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"Command \\\"list\\\" does not need any other keywords.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":318,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":319,"author":{"gitId":"thikhinab"},"content":"        return new ListCommand();","lastModifiedDate":"2022-02-18"},{"lineNumber":320,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":321,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":322,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":323,"author":{"gitId":"thikhinab"},"content":"     * Parses input tokens and creates a ExitCommand.","lastModifiedDate":"2022-02-18"},{"lineNumber":324,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":325,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-02-18"},{"lineNumber":326,"author":{"gitId":"thikhinab"},"content":"     * @return ExitCommand.","lastModifiedDate":"2022-02-18"},{"lineNumber":327,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if there are incorrect number of arguments.","lastModifiedDate":"2022-02-18"},{"lineNumber":328,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":329,"author":{"gitId":"thikhinab"},"content":"    private static Command parseExitCommand(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2022-02-18"},{"lineNumber":330,"author":{"gitId":"thikhinab"},"content":"        if (tokens.length !\u003d 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":331,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"Command \\\"bye\\\" does not need any other keywords.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":332,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":333,"author":{"gitId":"thikhinab"},"content":"        return new ExitCommand();","lastModifiedDate":"2022-02-18"},{"lineNumber":334,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":335,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":336,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":337,"author":{"gitId":"thikhinab"},"content":"     * Parses input token and create","lastModifiedDate":"2022-02-09"},{"lineNumber":338,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":339,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input tokens to be parsed.","lastModifiedDate":"2022-02-09"},{"lineNumber":340,"author":{"gitId":"thikhinab"},"content":"     * @return SortCommand.","lastModifiedDate":"2022-02-09"},{"lineNumber":341,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if number of arguments are incorrect,","lastModifiedDate":"2022-02-09"},{"lineNumber":342,"author":{"gitId":"thikhinab"},"content":"     *                                  invalid arguments or unkown keywords.","lastModifiedDate":"2022-02-09"},{"lineNumber":343,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":344,"author":{"gitId":"thikhinab"},"content":"    private static Command parseSortCommand(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2022-02-09"},{"lineNumber":345,"author":{"gitId":"thikhinab"},"content":"        String errorDescription \u003d \"Please enter the task type and order following the sort command\"","lastModifiedDate":"2022-02-14"},{"lineNumber":346,"author":{"gitId":"thikhinab"},"content":"                + \" eg: sort deadline desc\";","lastModifiedDate":"2022-02-14"},{"lineNumber":347,"author":{"gitId":"thikhinab"},"content":"        checkCommandLowerBound(tokens.length, COMMON_LOWER_BOUND, errorDescription);","lastModifiedDate":"2022-02-14"},{"lineNumber":348,"author":{"gitId":"thikhinab"},"content":"        checkCommandUpperBound(tokens.length, COMMON_UPPER_BOUND, errorDescription);","lastModifiedDate":"2022-02-14"},{"lineNumber":349,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":350,"author":{"gitId":"thikhinab"},"content":"        TaskType taskType;","lastModifiedDate":"2022-02-09"},{"lineNumber":351,"author":{"gitId":"thikhinab"},"content":"        switch (tokens[1].toLowerCase()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":352,"author":{"gitId":"thikhinab"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-09"},{"lineNumber":353,"author":{"gitId":"thikhinab"},"content":"            taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-02-09"},{"lineNumber":354,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":355,"author":{"gitId":"thikhinab"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-09"},{"lineNumber":356,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"Sorry! Todo tasks cannot be sorted date/time.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":357,"author":{"gitId":"thikhinab"},"content":"        case \"event\":","lastModifiedDate":"2022-02-09"},{"lineNumber":358,"author":{"gitId":"thikhinab"},"content":"            taskType \u003d TaskType.EVENT;","lastModifiedDate":"2022-02-09"},{"lineNumber":359,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":360,"author":{"gitId":"thikhinab"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":361,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"Sorry! Unknown task type: \" + tokens[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":362,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":363,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":364,"author":{"gitId":"thikhinab"},"content":"        Boolean isAscending \u003d true;","lastModifiedDate":"2022-02-09"},{"lineNumber":365,"author":{"gitId":"thikhinab"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":366,"author":{"gitId":"thikhinab"},"content":"            // By default creates a new SortCommand with ascending order, if order not specified.","lastModifiedDate":"2022-02-09"},{"lineNumber":367,"author":{"gitId":"thikhinab"},"content":"            return new SortCommand(taskType, isAscending);","lastModifiedDate":"2022-02-09"},{"lineNumber":368,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":369,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":370,"author":{"gitId":"thikhinab"},"content":"        String order \u003d tokens[2].toLowerCase();","lastModifiedDate":"2022-02-09"},{"lineNumber":371,"author":{"gitId":"thikhinab"},"content":"        if (order.equals(\"desc\") || order.equals(\"descending\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":372,"author":{"gitId":"thikhinab"},"content":"            isAscending \u003d false;","lastModifiedDate":"2022-02-09"},{"lineNumber":373,"author":{"gitId":"thikhinab"},"content":"        } else if (order.equals(\"asc\") || order.equals(\"ascending\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":374,"author":{"gitId":"thikhinab"},"content":"            isAscending \u003d true;","lastModifiedDate":"2022-02-09"},{"lineNumber":375,"author":{"gitId":"thikhinab"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":376,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"Sorry! Unknown order: \" + tokens[2]);","lastModifiedDate":"2022-02-09"},{"lineNumber":377,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":378,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":379,"author":{"gitId":"thikhinab"},"content":"        return new SortCommand(taskType, isAscending);","lastModifiedDate":"2022-02-09"},{"lineNumber":380,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":381,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":382,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":383,"author":{"gitId":"thikhinab"},"content":"     * Parses through the command and creates a command accordingly.","lastModifiedDate":"2022-02-14"},{"lineNumber":384,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":385,"author":{"gitId":"thikhinab"},"content":"     * @param input user input string.","lastModifiedDate":"2022-01-26"},{"lineNumber":386,"author":{"gitId":"thikhinab"},"content":"     * @return Command to be run.","lastModifiedDate":"2022-01-26"},{"lineNumber":387,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException thrown when incorrect format of invalid arguments are used.","lastModifiedDate":"2022-01-26"},{"lineNumber":388,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":389,"author":{"gitId":"thikhinab"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":390,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":391,"author":{"gitId":"thikhinab"},"content":"        assert input.length() \u003e 0 : \"Empty input string.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":392,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":393,"author":{"gitId":"thikhinab"},"content":"        String[] tokens \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2022-01-26"},{"lineNumber":394,"author":{"gitId":"thikhinab"},"content":"        Command command;","lastModifiedDate":"2022-01-28"},{"lineNumber":395,"author":{"gitId":"thikhinab"},"content":"        switch (tokens[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":396,"author":{"gitId":"thikhinab"},"content":"        case \"list\":","lastModifiedDate":"2022-01-28"},{"lineNumber":397,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseListCommand(tokens);","lastModifiedDate":"2022-02-18"},{"lineNumber":398,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":399,"author":{"gitId":"thikhinab"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":400,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseMarkCommand(tokens);","lastModifiedDate":"2022-01-28"},{"lineNumber":401,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":402,"author":{"gitId":"thikhinab"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":403,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseUnmarkCommand(tokens);","lastModifiedDate":"2022-01-28"},{"lineNumber":404,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":405,"author":{"gitId":"thikhinab"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-28"},{"lineNumber":406,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseTodoCommand(tokens);","lastModifiedDate":"2022-01-28"},{"lineNumber":407,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":408,"author":{"gitId":"thikhinab"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-28"},{"lineNumber":409,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseDeadlineCommand(tokens);","lastModifiedDate":"2022-01-28"},{"lineNumber":410,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":411,"author":{"gitId":"thikhinab"},"content":"        case \"event\":","lastModifiedDate":"2022-01-28"},{"lineNumber":412,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseEventCommand(tokens);","lastModifiedDate":"2022-01-28"},{"lineNumber":413,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":414,"author":{"gitId":"thikhinab"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-28"},{"lineNumber":415,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseDeleteCommand(tokens);","lastModifiedDate":"2022-01-28"},{"lineNumber":416,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":417,"author":{"gitId":"thikhinab"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-28"},{"lineNumber":418,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseExitCommand(tokens);","lastModifiedDate":"2022-02-18"},{"lineNumber":419,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":420,"author":{"gitId":"thikhinab"},"content":"        case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":421,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseFindCommand(tokens);","lastModifiedDate":"2022-01-28"},{"lineNumber":422,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":423,"author":{"gitId":"thikhinab"},"content":"        case \"sort\":","lastModifiedDate":"2022-02-09"},{"lineNumber":424,"author":{"gitId":"thikhinab"},"content":"            command \u003d parseSortCommand(tokens);","lastModifiedDate":"2022-02-09"},{"lineNumber":425,"author":{"gitId":"thikhinab"},"content":"            break;","lastModifiedDate":"2022-02-09"},{"lineNumber":426,"author":{"gitId":"thikhinab"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":427,"author":{"gitId":"thikhinab"},"content":"            throw new UnkownCommandException();","lastModifiedDate":"2022-01-26"},{"lineNumber":428,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":429,"author":{"gitId":"thikhinab"},"content":"        return command;","lastModifiedDate":"2022-01-28"},{"lineNumber":430,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":431,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":431}},{"path":"src/main/java/luca/parser/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.parser.exceptions;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" * Exception to handle cases where invalid arguments are passed","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" * along with a command.","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a InvalidArgumentException.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     * @param errorMessage message describing the error.","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":19}},{"path":"src/main/java/luca/parser/exceptions/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.parser.exceptions;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" * Exception thrown when the user inputs the data and time invalid format.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"public class InvalidDateTimeFormatException extends DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create InvalidDateTimeFormatException","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     * @param errorMessage message describing the error.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    public InvalidDateTimeFormatException(String errorMessage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"thikhinab":18}},{"path":"src/main/java/luca/parser/exceptions/UnkownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.parser.exceptions;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" * Exception to handle cases where the command entered","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" * is unknown/invalid.","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"public class UnkownCommandException extends DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a UnknownCommandException.","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    public UnkownCommandException() {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":17}},{"path":"src/main/java/luca/storage/FileIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" * Exception raised when running to IOException when","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" * reading or writing to file.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"public class FileIoException extends DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     * Constructor for FileIOException.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     * @param errorMessage message describing error.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    FileIoException(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"        super(\"OOPS! File I/O error: \" + errorMessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"thikhinab":18}},{"path":"src/main/java/luca/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import luca.storage.exceptions.InvalidFileSyntaxException;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import luca.task.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import luca.task.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import luca.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskType;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"import luca.task.ToDo;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":" * Class which handles loading and saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    /** File used for storage. */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    private final File storageFile;","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    /** Constructor to create Storage object. */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"        Path path \u003d Paths.get(currentDir, filePath);","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"        storageFile \u003d new File(path.toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"     * Creates the file and necessary folder to store tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"     * @throws FileIoException if unable to create file or folder.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"    private void createFile() throws FileIoException {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"            storageFile.getParentFile().mkdir();","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"            storageFile.createNewFile();","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"            throw new FileIoException(exception.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"     * Parses tokens to identify and mark or unmark tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"     * @param task  task to be marked or unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"     * @param tokens tokens to parsed.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidFileSyntaxException If syntax is unknown.","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"    private void parseMarkSyntax(Task task, String[] tokens) throws InvalidFileSyntaxException {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"        assert tokens.length \u003e 1 : \"Incorrect number of tokens to parse.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        tokens[1] \u003d tokens[1].trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        if (tokens[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"        } else if (tokens[1].equals(\"0\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidFileSyntaxException(\"Failed to load task: invalid task mark syntax\");","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"     * Parses input and create a ToDo task.","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"     * @return ToDo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"    private Task parseTodoTask(String[] tokens) {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"        return new ToDo(tokens[2].trim());","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"     * Parses input and create Event task.","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"     * @return Event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"    private Task parseEventTask(String[] tokens) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"        return new Event(tokens[2].trim(),","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"                LocalDateTime.parse(tokens[3].trim()),","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"                LocalDateTime.parse(tokens[4].trim()));","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"     * Parses input and create Deadline task.","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"     * @param tokens input to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"     * @return Deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"    private Task parseDeadlineTask(String[] tokens) {","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"        return new Deadline(tokens[2].trim(),","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"                LocalDateTime.parse(tokens[3].trim()));","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"     * Reads and loads the Task from the File.","lastModifiedDate":"2022-02-14"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"     * Outputs the list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"     * @return ArrayList of loaded Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"     * @throws DukeException if there is wrong syntax or I/O error.","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"            if (!storageFile.exists()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"                createFile();","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(storageFile));","lastModifiedDate":"2022-02-01"},{"lineNumber":121,"author":{"gitId":"thikhinab"},"content":"            String line;","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"thikhinab"},"content":"            String[] tokens;","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"thikhinab"},"content":"            Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"thikhinab"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"thikhinab"},"content":"                tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"thikhinab"},"content":"                tokens[0] \u003d tokens[0].trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"thikhinab"},"content":"                if (tokens[0].equals(\"T\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"thikhinab"},"content":"                    task \u003d parseTodoTask(tokens);","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"D\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"thikhinab"},"content":"                    task \u003d parseDeadlineTask(tokens);","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"thikhinab"},"content":"                } else if (tokens[0].equals(\"E\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"thikhinab"},"content":"                    task \u003d parseEventTask(tokens);","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"thikhinab"},"content":"                } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"thikhinab"},"content":"                    throw new InvalidFileSyntaxException(\"Failed to load task: invalid task type\");","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"thikhinab"},"content":"                parseMarkSyntax(task, tokens);","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"thikhinab"},"content":"                taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"thikhinab"},"content":"            bufferedReader.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"thikhinab"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"thikhinab"},"content":"            createFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"thikhinab"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"thikhinab"},"content":"            throw new FileIoException(exception.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"thikhinab"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"thikhinab"},"content":"     * Saves the tasks from task list to the file stored locally.","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"thikhinab"},"content":"     * @throws FileIoException if unable to create or write to file.","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"thikhinab"},"content":"    public void saveToFile(TaskList taskList) throws FileIoException {","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"thikhinab"},"content":"            if (!storageFile.exists()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":157,"author":{"gitId":"thikhinab"},"content":"                createFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"thikhinab"},"content":"            FileWriter writer \u003d new FileWriter(storageFile);","lastModifiedDate":"2022-02-01"},{"lineNumber":160,"author":{"gitId":"thikhinab"},"content":"            Task task;","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"thikhinab"},"content":"            TaskType type;","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"thikhinab"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"thikhinab"},"content":"                task \u003d taskList.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"thikhinab"},"content":"                type \u003d task.getType();","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"thikhinab"},"content":"                switch (type) {","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"thikhinab"},"content":"                case TODO:","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"thikhinab"},"content":"                    ToDo toDo \u003d (ToDo) task;","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"thikhinab"},"content":"                    writer.write(toDo.getStorageString());","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"thikhinab"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"thikhinab"},"content":"                case DEADLINE:","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"thikhinab"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"thikhinab"},"content":"                    writer.write(deadline.getStorageString());","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"thikhinab"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"thikhinab"},"content":"                case EVENT:","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"thikhinab"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"thikhinab"},"content":"                    writer.write(event.getStorageString());","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"thikhinab"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"thikhinab"},"content":"                default:","lastModifiedDate":"2022-02-01"},{"lineNumber":179,"author":{"gitId":"thikhinab"},"content":"                    throw new FileIoException(\"Unable to write task: invalid task type.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":180,"author":{"gitId":"thikhinab"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"thikhinab"},"content":"            writer.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"thikhinab"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"thikhinab"},"content":"            throw new FileIoException(exception.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":185,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":187}},{"path":"src/main/java/luca/storage/exceptions/InvalidFileSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.storage.exceptions;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" *  Exception thrown when file follows and incorrect format","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" *  or syntax.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"public class InvalidFileSyntaxException extends DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     * Constructs a InvalidFileSyntaxException.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     * @param errorMessage message describing the error.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    public InvalidFileSyntaxException(String errorMessage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"thikhinab":19}},{"path":"src/main/java/luca/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" * Tasks that is required to be done before a specific","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" * date/time.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    /** String representation of the deadline. */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a deadline task.","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * @param description text description of the deadline.","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     * @param by date/time deadline is due.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * Outputs the due date-time of the Deadline.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * @return due date-time.","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"        return by;","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     * Outputs the deadline of the task as formatted string.","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"     * @return deadline as a string.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    public String getFormattedBy() {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"h:mm a MMM dd yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string of deadline using LocalDateTime that","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"     * can be parsed by Java.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"     * @return deadline as string convenient to be parsed.","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"    public String byToString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        return by.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"     * Outputs the storage string/format for the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"     * @return string formatted for storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"    public String getStorageString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"        return \"D | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription()","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"                + \" | \" + byToString() + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string to represent deadline with","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"     * description and due date/time.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string representing the Deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedBy() + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":74}},{"path":"src/main/java/luca/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":" * Tasks that has as specific start time and end times.","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"    /** String representation of the event start dates/times. */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /** String representation of the event end dates/times. */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     * @param description text description of the Event.","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     * @param start start dates/times.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"     * @param end end dates/times.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"        this.start \u003d start;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     * Outputs the start date-time of the event.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     * @return start date-time.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"        return start;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     * Outputs the end date-time of the event.","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * @return end date-time.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"        return end;","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"     * Outputs the start and end times of event in a","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"     * formatted manner.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"     * @return the start and end time of Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"    public String getFormattedAt() {","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"        return start.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \" - \"","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"h:mm a MMM dd yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string of start date/time using LocalDateTime such that","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"     * can be parsed by Java.","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"     * @return deadline as string convenient to be parsed.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"    public String startToString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"        return start.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string of end date/time using LocalDateTime such that","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"     * can be parsed by Java.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"     * @return deadline as string convenient to be parsed.","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"    public String endToString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"        return end.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"     * Outputs the storage string/format for the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"     * @return string formatted for storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"    public String getStorageString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"        return \"E | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription()","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"                + \" | \" + startToString() + \" | \" + endToString() + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string to represent Event with","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"     * description and at dates/times.","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string representing the Event.","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getFormattedAt() + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":99}},{"path":"src/main/java/luca/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" * Represents the tasks the user stores and","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":" * keeps track whether the task is done.","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"    /** String to represent about the task. */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    /** Boolean to keep track whether task is done. */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    /** Type of task. */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    private TaskType type;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create Task object.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     * @param description string representing the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * Outputs boolean to show whether task is done or not.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"     * @return true if task is done, false otherwise.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    protected boolean getIsDone() {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"        return isDone;","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"     * Outputs the icon representing the","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     * status of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * @return status Icon as string.","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"     * Returns the text description of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"     * @return text description.","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"        return description;","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"     * Sets the task as done. Sets isDone","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"     * to true.","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"     * Sets the task as undone. Sets isDone","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"     * to false.","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"     * Outputs the type of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"     * @return TaskType representing the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"    public TaskType getType() {","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        return type;","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"     * Outputs a string description of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"     * @return description of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":91}},{"path":"src/main/java/luca/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.parser.exceptions.InvalidArgumentException;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" * Class containing the list of Tasks loaded to the chat bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /** List of task. */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create TaskList object with loaded task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     * @param taskList list of tasks as an array list.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    private TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * Creates a new TaskList from a list of Tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    public static TaskList of(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"        return taskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     * Creates a new Task list from the given tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"     * @param tasks tasks to be added to the list.","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    public static TaskList of(Task... tasks) {","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e(Arrays.asList(tasks));","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        TaskList taskList \u003d new TaskList(arrayList);","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"        return taskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"    public static TaskList emptyList() {","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"        return taskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"     * Retrieves the task at particular index.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"     * @param index index to retrieve task from.","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"     * @return task at index.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"     * @return size of list.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"    public int size() {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"     * @param task task to be added to the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"     * Removes the task at particular index.","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"     * @param index the index to remove task from.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"     * @return task removed.","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"        return taskList.remove(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"     * Outputs a stream of tasks.","lastModifiedDate":"2022-02-05"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"        return taskList.stream();","lastModifiedDate":"2022-02-05"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"    /** Retrieves the task pointed to, marks it as done and outputs","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"     * the task.","lastModifiedDate":"2022-02-05"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"     * @param pointer 1-based index of the task.","lastModifiedDate":"2022-02-05"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"     * @return task which is marked as done.","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if the pointer is not in valid range.","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"    public Task markTaskAsDone(int pointer) throws InvalidArgumentException {","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"There are no tasks to be marked.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"        if (pointer \u003c\u003d 0 || pointer \u003e this.size()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"            if (this.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"                throw new InvalidArgumentException(\"Only valid index to be marked is 1.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"            } else {","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"                throw new InvalidArgumentException(\"Invalid pointer: Please enter a value between 1 and \"","lastModifiedDate":"2022-02-05"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"                        + size() + \".\");","lastModifiedDate":"2022-02-05"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d this.get(pointer - 1);","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"thikhinab"},"content":"        task.markAsDone();","lastModifiedDate":"2022-02-05"},{"lineNumber":122,"author":{"gitId":"thikhinab"},"content":"        return task;","lastModifiedDate":"2022-02-05"},{"lineNumber":123,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":124,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":125,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"thikhinab"},"content":"     * Retrieves the task pointed to, unmarks it as done and outputs","lastModifiedDate":"2022-02-05"},{"lineNumber":127,"author":{"gitId":"thikhinab"},"content":"     * the task.","lastModifiedDate":"2022-02-05"},{"lineNumber":128,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"thikhinab"},"content":"     * @param pointer 1-based index of the task.","lastModifiedDate":"2022-02-05"},{"lineNumber":130,"author":{"gitId":"thikhinab"},"content":"     * @return task which is unmarked as done.","lastModifiedDate":"2022-02-05"},{"lineNumber":131,"author":{"gitId":"thikhinab"},"content":"     * @throws InvalidArgumentException if the pointer is not in valid range.","lastModifiedDate":"2022-02-05"},{"lineNumber":132,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":133,"author":{"gitId":"thikhinab"},"content":"    public Task unmarkTaskAsDone(int pointer) throws InvalidArgumentException {","lastModifiedDate":"2022-02-05"},{"lineNumber":134,"author":{"gitId":"thikhinab"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"thikhinab"},"content":"            throw new InvalidArgumentException(\"There are no tasks to be unmarked.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"thikhinab"},"content":"        if (pointer \u003c\u003d 0 || pointer \u003e this.size()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"thikhinab"},"content":"            if (this.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"thikhinab"},"content":"                throw new InvalidArgumentException(\"Only valid index to be unmarked is 1.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"thikhinab"},"content":"            } else {","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"thikhinab"},"content":"                throw new InvalidArgumentException(\"Invalid pointer: Please enter a value between 1 and \"","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"thikhinab"},"content":"                        + size() + \".\");","lastModifiedDate":"2022-02-05"},{"lineNumber":144,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":145,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d this.get(pointer - 1);","lastModifiedDate":"2022-02-05"},{"lineNumber":147,"author":{"gitId":"thikhinab"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-02-05"},{"lineNumber":148,"author":{"gitId":"thikhinab"},"content":"        return task;","lastModifiedDate":"2022-02-05"},{"lineNumber":149,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":150,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"thikhinab"},"content":"     * Outputs string describing the number of task in","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"thikhinab"},"content":"     * the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"thikhinab"},"content":"     * @return string with number of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"thikhinab"},"content":"    public String sizeDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"thikhinab"},"content":"        return \"Now you have \" + size() + (size() \u003d\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"thikhinab"},"content":"                + \" in the list.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"thikhinab":161}},{"path":"src/main/java/luca/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" * Represents the type of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"    TODO,","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"    DEADLINE,","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"    EVENT","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":10}},{"path":"src/main/java/luca/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":" * Tasks that does not have any date/time attached to it.","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"     * Constructor to create a deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"     * @param description text description of the ToDo.","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     * Outputs the storage string/format for the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"     * @return string formatted for storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    public String getStorageString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        return \"T | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * Outputs the string representation of ToDo with","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     * description.","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * @return formatted string representing ToDo.","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":36}},{"path":"src/main/java/luca/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"import luca.Luca;","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":" * Controller for DialogBox containing text and image.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        dialog.getStyleClass().add(\"dialog\");","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"     * Outputs the Dialog Box with User image and input text.","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"     * @param text user input text.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"     * @param img user image.","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"     * @return User Dialog Box.","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        dialogBox.dialog.setFont(Font.font(\"Comic Sans Ms\", FontWeight.BOLD, 11));","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"        dialogBox.dialog.setTextFill(Color.WHITE);","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"        dialogBox.dialog.getStyleClass().add(\"user-dialog\");","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"        return dialogBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"     * Outputs Dialog Box with Luca image and response text.","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"     * @param text Response text.","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"     * @param img Luca image.","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"     * @return Luca Response Dialog Box.","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"    public static DialogBox getLucaDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        String[] messages \u003d text.split(Luca.ERROR_PREFIX, 2);","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"        DialogBox dialogBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"        if (messages.length \u003d\u003d 2) { // Error message","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"            dialogBox \u003d new DialogBox(messages[1], img);","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"            dialogBox.dialog.setTextFill(Color.ORANGE);","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"            dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"            dialogBox.dialog.setTextFill(Color.WHITE);","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"        dialogBox.dialog.setFont(Font.font(\"Comic Sans Ms\", 11));","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"        dialogBox.dialog.getStyleClass().add(\"luca-dialog\");","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"        dialogBox.flip();","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"        return dialogBox;","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"     * Outputs the welcome Dialog box.","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"     * @param img image of Luca.","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"     * @return welcome Dialog Box.","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"    public static DialogBox getLucaWelcome(Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"        return getLucaDialog(\"Hi! I am Luca!\\nHow may I help you?\", img);","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"thikhinab":103}},{"path":"src/main/java/luca/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package luca.ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import luca.Luca;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":" * Controller for MainWindow.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    /** Chat bot used for the logic. */","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    private Luca luca;","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    /** Image used to represent user. */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    /** Image used to represent the chat bot. */","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    private Image lucaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/luca.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * Binds the scroll pane to the dialog container and inserts","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     * dialog box with welcome message.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"                DialogBox.getLucaWelcome(lucaImage));","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        dialogContainer.getStyleClass().add(\"dialog-container\");","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"     * Sets the Luca Chat bot.","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"     * @param luca Luca chat bot running the logic.","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"    public void setLuca(Luca luca) {","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"        this.luca \u003d luca;","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"     *  Creates two dialog box, one with user input text and other with","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"     *  chat bot response. Finally clears up the input text field.","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"        String response \u003d luca.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"                DialogBox.getLucaDialog(response, lucaImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"            PauseTransition exitTransition \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"            exitTransition.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"            exitTransition.play();","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"thikhinab":81}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"  /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"  fitHeight\u003d\"60\" fitWidth\u003d\"60\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"thikhinab":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"luca.ui.MainWindow\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"thikhinab":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.task.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":" * Tests the Deadline class.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"     * Correct format of marked Deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    public void toString_markedDeadline_success() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"        Deadline deadline \u003d new Deadline(\"deadline1\",","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"                LocalDateTime.parse(\"2022-02-27T18:00\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"        deadline.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"        assertEquals(deadline.toString(),","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"                \"[D][X] deadline1 (by: 6:00 PM Feb 27 2022)\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thikhinab":24}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.task.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" * Tests the Event class.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"public class EventTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     * Correct format of marked Event.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    public void toString_markedEvent_success() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"        Event event \u003d new Event(\"event1\",","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"                LocalDateTime.parse(\"2022-02-27T18:00\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"                LocalDateTime.parse(\"2022-02-27T19:00\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"        event.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        assertEquals(event.toString(),","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"                \"[E][X] event1 (at: 6:00 PM - 7:00 PM Feb 27 2022)\");","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thikhinab":26}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import luca.command.ListCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import luca.common.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import luca.parser.Parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import luca.parser.exceptions.UnkownCommandException;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":" * Test the parser class.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    private static final ByteArrayOutputStream OUT \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    private static final PrintStream SYSTEM_OUT \u003d System.out;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    @BeforeAll","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    public static void setUpStream() {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"        System.setOut(new PrintStream(OUT));","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    @AfterAll","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    public static void restoreStream() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"        System.setOut(SYSTEM_OUT);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public void parseTokens_listCommand_success() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"            assertEquals(Parser.parse(\"list\").getCommandType(),","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"                    new ListCommand().getCommandType());","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"    public void parseTokens_unkownCommand_exceptionThrown() {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"        UnkownCommandException thrown \u003d assertThrows(UnkownCommandException.class, () -\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"            Parser.parse(\"hello\").getCommandType());","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        Assertions.assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"            thrown.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thikhinab":55}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import luca.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import luca.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import luca.task.ToDo;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" * Tests the TaskList class.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     * Size description varying for 1 task.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    public void sizeDescription_oneTask_success() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d new ToDo(\"Test\");","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"        TaskList taskList \u003d TaskList.of(task);","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"        assertEquals(taskList.sizeDescription(), \"Now you have 1 task in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     * Size description varying with 2 task.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    public void sizeDescription_twoTask_success() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"        Task task1 \u003d new ToDo(\"Test1\");","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"        Task task2 \u003d new ToDo(\"Test2\");","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"        TaskList taskList \u003d TaskList.of(task1, task2);","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"        assertEquals(taskList.sizeDescription(), \"Now you have 2 tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"thikhinab":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"todo buy book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"todo buy groceries","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"deadline project-1 /by 2022-01-27","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"event staff meeting /at 2022-02-02 1800 1900","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"unmark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"blah","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"mark two","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"unmark","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"todo","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"deadline return book","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"event Tim\u0027s Birthday","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"thikhinab":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"javac  -cp ..\\src\\main\\java\\luca -Xlint:none -d ..\\bin ..\\src\\main\\java\\luca\\*.java","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"java -classpath ..\\bin luca.Luca \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thikhinab":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thikhinab":1,"-":37}}]
