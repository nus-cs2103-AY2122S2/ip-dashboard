[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"plugins {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"repositories {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"dependencies {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"test {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    testLogging {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        showExceptions true","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        showCauses true","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"application {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"shadowJar {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"checkstyle {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"run{","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"geraldneo567":61}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":":init","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":":win9xME_args","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":":execute","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":":end","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":":fail","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"exit /b 1","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":":mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":":omega","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"geraldneo567":103}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"public enum CommandType {","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"    TODO, DEADLINE, EVENT, DELETE, BYE, LIST, MARK, UNMARK, FIND, UPDATE","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":5}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import java.time.*;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * Represents a Deadline Task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" * a Task which contains a \u003ccode\u003eLocalDateTime\u003c/code\u003e field.","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    private String deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @param name Name of deadline task","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     * @param deadline Deadline in yyyy/mm/dd HHmm format","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        super(name, \"D\", deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        this.dateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    private String createDateString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mma\");","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"        String time \u003d dateTime.format(formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        String suffix \u003d getDayOfMonthSuffix(dateTime.getDayOfMonth());","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        return String.valueOf(dateTime.getDayOfMonth()) + suffix + \" \" +","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"                dateTime.getMonth().toString().substring(0,1) +","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"                dateTime.getMonth().toString().substring(1).toLowerCase()","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"                + \" \" + dateTime.getYear() + \", \" + time;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public void setTime(String time) {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        this.deadline \u003d time;","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        this.setExtension(deadline);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        System.out.println(this.saveString());","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        this.dateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    private String getDayOfMonthSuffix(int n) {","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"            return \"th\";","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        switch (n % 10) {","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"            case 1:  return \"st\";","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"            case 2:  return \"nd\";","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"            case 3:  return \"rd\";","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"            default: return \"th\";","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.createDateString() + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"geraldneo567":62}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private Label text;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"        text \u003d l;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    public DialogBox flip() {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        return this;","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"geraldneo567":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" * Represents an instance of the \u003ccode\u003eDuke\u003c/code\u003e chatbot, which","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * can then be run.","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    protected static Storage storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    protected static TaskList tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        Duke duke \u003d new Duke(\"../../../data/duke.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        assert !(duke \u003d\u003d null) : \"Duke should not be null\";","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        System.out.println(\"Hello\");","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        Duke.storage.save(Duke.tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"geraldneo567":25}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Represents an Event Task. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" * a Task which contains a \u003ccode\u003eString\u003c/code\u003e time field corresponding","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" * to when the event occurs.","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    private String time;","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"        super(name, \"E\", time);","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    public void setTime(String time) {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"        setExtension(time);","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"geraldneo567":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eParser\u003c/code\u003e which parses input strings","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" * to \u003ccode\u003eDuke\u003c/code\u003e and returns the appropriate enum type","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" * defining the command.","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"public class Parser {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    public Parser() {}","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"     * Parses input string to return appropriate enum type.","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @return The appropriate enum type.","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public CommandType parse(String input) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        assert !input.isEmpty() : \"Given input should not be empty\";","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        if (input.startsWith(\"bye\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.BYE;","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"list\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.LIST;","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.MARK;","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.TODO;","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"event\")){","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.FIND;","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"update\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"            return CommandType.UPDATE;","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(\"Invalid command\");","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"            return null;","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":48}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import java.io.File;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eStorage\u003c/code\u003e object to handle saving and loading.","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"public class Storage {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    private String filepath;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"     * Saves current tasklist as a file in specified filepath.","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     * @param tasklist","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    public void save(TaskList tasklist) {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"            List\u003cTask\u003e ls \u003d tasklist.getList();","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"            f.delete();","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"            f.createNewFile();","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"            for (Task t : ls) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"                fw.write(t.saveString() + \"\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"            fw.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"     * Loads contents of current saved file into tasklist.","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     * @return The list containing the pre-saved tasks.","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        File directory \u003d new File(\"../../../data/\");","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"            directory.mkdir();","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"            File saved \u003d new File(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"            if (!saved.exists()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"                saved.createNewFile();","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"                Scanner scan \u003d new Scanner(saved);","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"                while (scan.hasNextLine()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"                    String line \u003d scan.nextLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"                    String[] splitted \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"                    String firstToken \u003d splitted[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"                    String name \u003d splitted[2];","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"                    boolean completed \u003d splitted[1].equals(\"1\");","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"                    if (firstToken.equals(\"D\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"                        String timing \u003d splitted[3];","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"                        Deadline toAdd \u003d new Deadline(name, timing);","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"                        ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"                        if (completed) toAdd.setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"                    if (firstToken.equals(\"T\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"                        Todo toAdd \u003d new Todo(splitted[2]);","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"                        ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"                        if (completed) toAdd.setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"                    if (firstToken.equals(\"E\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"                        String timing \u003d splitted[3];","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"                        Event toAdd \u003d new Event(name, timing);","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"                        ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"                        if (completed) toAdd.setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"        } catch(IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"        return ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":87}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Represents a Task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" * a Task which may or may not contain an extension.","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public class Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    private boolean completed;","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    private String name;","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    private String type;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private String extension \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    public Task(String name, String type) {","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    public Task(String name, String type, String extension) {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        this.extension \u003d extension;","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    public String getName() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        return this.name;","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"     * Set a task as done.","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"     * Set a task as not done.","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    public void setExtension(String extension) {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        this.extension \u003d extension;","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"     * Converts a string to compact format to be saved in the file","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"     * @return The compacted string","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    public String saveString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"        int status \u003d completed \u003d\u003d true ? 1 : 0;","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        if (extension.isEmpty()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"            return this.type + \"|\" + status + \"|\" + name;","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"            return this.type + \"|\" + status + \"|\" + name + \"|\" + extension;","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"     * @return the name of the task, along with an [X] if completed, [] otherwise","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"        if (completed) {","lastModifiedDate":"2022-01-14"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2022-01-15"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"geraldneo567":80}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * Represents a List of Tasks, that will be saved to/loaded from","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" * when \u003ccode\u003eDuke\u003c/code\u003e is run.","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"public class TaskList {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private List\u003cTask\u003e ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    public TaskList(List\u003cTask\u003e ls) {","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"        this.ls \u003d ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        this.ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * Lists the string representation of all tasks currently in","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     * the list.","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    public void listTasks() {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"            System.out.println((i + 1) + \". \" + ls.get(i));","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    public String getTasksAsString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"            result \u003d result + (i + 1) + \". \" + ls.get(i) + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        return result;","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"     * Prints tasks in the list that has name containing the specified keyword.","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     * @param keyword","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    public void findAndPrintTasks(String keyword) {","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"            if (ls.get(i).getName().contains(keyword)) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"                System.out.println((i + 1) + \". \" + ls.get(i));","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    public String findAndGetTasks(String keyword) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"            if (ls.get(i).getName().contains(keyword)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"                result +\u003d (i + 1) + \". \" + ls.get(i) + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"        return result;","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    public void findAndSetName(String name, int index) {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"            ls.get(index - 1).setName(name);","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(\"Provided index is invalid\");","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"    public void findAndSetTime(String time, int index) {","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(\"Hi\");","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"            Task task \u003d ls.get(index - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"                deadline.setTime(time);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"                event.setTime(time);","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(\"Task is a todo\");","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(\"Provided index is invalid\");","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"     * Sets the task at specified index in the list as done.","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"     * @param index","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"     * @return The task that was affected.","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"    public Task setDone(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"        ls.get(index).setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"        return ls.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"     * Sets the task at specified index in the list as undone.","lastModifiedDate":"2022-01-21"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"     * @param index","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"     * @return The task that was affected.","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"    public Task setUndone(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"        ls.get(index).setUndone();","lastModifiedDate":"2022-01-21"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"        return ls.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"    public void addTask(Task toAdd) {","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"geraldneo567"},"content":"        ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":124,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"geraldneo567"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"     * @param index","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"     * @return The task that was removed.","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"        Task toRemove \u003d ls.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"        ls.remove(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"        return toRemove;","lastModifiedDate":"2022-01-21"},{"lineNumber":133,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":135,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"geraldneo567"},"content":"     * Obtain the current size of the list.","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"geraldneo567"},"content":"     * @return int containing size of the list","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":139,"author":{"gitId":"geraldneo567"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"geraldneo567"},"content":"        return ls.size();","lastModifiedDate":"2022-01-21"},{"lineNumber":141,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":142,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":143,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":144,"author":{"gitId":"geraldneo567"},"content":"     * Utility getter method to obtain the underlying list.","lastModifiedDate":"2022-01-21"},{"lineNumber":145,"author":{"gitId":"geraldneo567"},"content":"     * @return the underlying List of tasks.","lastModifiedDate":"2022-01-21"},{"lineNumber":146,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":147,"author":{"gitId":"geraldneo567"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":148,"author":{"gitId":"geraldneo567"},"content":"        return this.ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":149,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":150,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":151,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":151}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eTodo\u003c/code\u003e Task.","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"        super(name, \"T\");","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"geraldneo567":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"public class Ui extends Application {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    private Scene scene;","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    private String welcome \u003d \"Welcome to Duke! What can I do for you today? \\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    private Label label \u003d new Label(welcome);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    private TaskList taskList \u003d Duke.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton, label);","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        stage.show();","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"            handleUserInput();","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"        });","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"            handleUserInput();","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"        });","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"        // more code to be added here later","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"        this.label.setVisible(false);","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"        CommandType commandType \u003d parser.parse(userText);","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"        switch (commandType) {","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"        case LIST:","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"            response \u003d taskList.getTasksAsString();","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"        case MARK:","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"                String[] splitted \u003d userText.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"                int index \u003d Integer.valueOf(splitted[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"                Task set \u003d taskList.setDone(index - 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d set;","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"ERROR: The index you have provided is invalid\";","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"                String[] splitted \u003d userText.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"                int index \u003d Integer.valueOf(splitted[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"                Task unset \u003d taskList.setUndone(index - 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"OK, I\u0027ve marked this task as not done yet:  \\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d unset;","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"ERROR: The index you have provided is invalid\";","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"        case TODO:","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"geraldneo567"},"content":"                Task toAdd \u003d new Todo(userText.split(\"todo\")[1].trim());","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"                taskList.addTask(toAdd);","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d toAdd + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"                response \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"geraldneo567"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"geraldneo567"},"content":"                String[] splitted \u003d userText.split(\"deadline\")[1].split(\"/by\");","lastModifiedDate":"2022-01-30"},{"lineNumber":138,"author":{"gitId":"geraldneo567"},"content":"                Deadline toAdd \u003d new Deadline(splitted[0].trim(), splitted[1].trim());","lastModifiedDate":"2022-01-30"},{"lineNumber":139,"author":{"gitId":"geraldneo567"},"content":"                taskList.addTask(toAdd);","lastModifiedDate":"2022-01-30"},{"lineNumber":140,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":141,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d toAdd + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":143,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":144,"author":{"gitId":"geraldneo567"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":145,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Oops! The correct format is : `deadline /by \u003ctype time here\u003e`\";","lastModifiedDate":"2022-01-30"},{"lineNumber":146,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":147,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":148,"author":{"gitId":"geraldneo567"},"content":"        case EVENT:","lastModifiedDate":"2022-01-30"},{"lineNumber":149,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-01-30"},{"lineNumber":150,"author":{"gitId":"geraldneo567"},"content":"                String[] splitted \u003d userText.split(\"event\")[1].split(\"/at\");","lastModifiedDate":"2022-01-30"},{"lineNumber":151,"author":{"gitId":"geraldneo567"},"content":"                Event toAdd \u003d new Event(splitted[0].trim(), splitted[1].trim());","lastModifiedDate":"2022-01-30"},{"lineNumber":152,"author":{"gitId":"geraldneo567"},"content":"                taskList.addTask(toAdd);","lastModifiedDate":"2022-01-30"},{"lineNumber":153,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":154,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d toAdd + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":156,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":157,"author":{"gitId":"geraldneo567"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":158,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Oops! The correct format is : `event /at \u003ctype time here\u003e`\";","lastModifiedDate":"2022-01-30"},{"lineNumber":159,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":160,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":161,"author":{"gitId":"geraldneo567"},"content":"        case DELETE:","lastModifiedDate":"2022-01-30"},{"lineNumber":162,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-01-30"},{"lineNumber":163,"author":{"gitId":"geraldneo567"},"content":"                String[] splitted \u003d userText.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":164,"author":{"gitId":"geraldneo567"},"content":"                int index \u003d Integer.valueOf(splitted[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":165,"author":{"gitId":"geraldneo567"},"content":"                Task removedTask \u003d taskList.deleteTask(index - 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":166,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":167,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d removedTask + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":168,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":169,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":170,"author":{"gitId":"geraldneo567"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":171,"author":{"gitId":"geraldneo567"},"content":"               response +\u003d \"The index you have provided is invalid\";","lastModifiedDate":"2022-01-30"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"        case FIND:","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"geraldneo567"},"content":"            String[] splitted \u003d userText.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"geraldneo567"},"content":"            response +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":177,"author":{"gitId":"geraldneo567"},"content":"            taskList.findAndGetTasks(splitted[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-01-30"},{"lineNumber":179,"author":{"gitId":"geraldneo567"},"content":"        case UPDATE:","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"            String[] splittedString \u003d userText.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"geraldneo567"},"content":"            int index \u003d Integer.valueOf(splittedString[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"            String command \u003d splittedString[2];","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"geraldneo567"},"content":"            if (command.startsWith(\"name\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"geraldneo567"},"content":"                String name \u003d userText.split(\"name\")[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"geraldneo567"},"content":"                taskList.findAndSetName(name, index);","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Noted. I have updated the name of task \" + index + \" to \" + name + \".\";","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"geraldneo567"},"content":"            if (command.startsWith(\"time\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"geraldneo567"},"content":"                String time \u003d splittedString[3].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"geraldneo567"},"content":"                if (splittedString.length \u003d\u003d 5) {","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"geraldneo567"},"content":"                    time +\u003d \" \" + splittedString[4].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d \"Noted. I have updated the time of task \" + index + \" to \" + time + \".\";","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"geraldneo567"},"content":"                taskList.findAndSetTime(time, index);","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":197,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":198,"author":{"gitId":"geraldneo567"},"content":"        default:","lastModifiedDate":"2022-01-30"},{"lineNumber":199,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-01-30"},{"lineNumber":200,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":201,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":202,"author":{"gitId":"geraldneo567"},"content":"        Label userTextLabel \u003d new Label(userText);","lastModifiedDate":"2022-01-30"},{"lineNumber":203,"author":{"gitId":"geraldneo567"},"content":"        Label dukeTextLabel \u003d new Label(response);","lastModifiedDate":"2022-01-30"},{"lineNumber":204,"author":{"gitId":"geraldneo567"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":205,"author":{"gitId":"geraldneo567"},"content":"                new DialogBox(userTextLabel, new ImageView(user)),","lastModifiedDate":"2022-01-30"},{"lineNumber":206,"author":{"gitId":"geraldneo567"},"content":"                new DialogBox(dukeTextLabel, new ImageView(duke)).flip()","lastModifiedDate":"2022-01-30"},{"lineNumber":207,"author":{"gitId":"geraldneo567"},"content":"        );","lastModifiedDate":"2022-01-30"},{"lineNumber":208,"author":{"gitId":"geraldneo567"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":209,"author":{"gitId":"geraldneo567"},"content":"        /*","lastModifiedDate":"2022-01-30"},{"lineNumber":210,"author":{"gitId":"geraldneo567"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-01-30"},{"lineNumber":211,"author":{"gitId":"geraldneo567"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-01-30"},{"lineNumber":212,"author":{"gitId":"geraldneo567"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":213,"author":{"gitId":"geraldneo567"},"content":"                new DialogBox(userText, new ImageView(user)),","lastModifiedDate":"2022-01-30"},{"lineNumber":214,"author":{"gitId":"geraldneo567"},"content":"                new DialogBox(dukeText, new ImageView(duke))","lastModifiedDate":"2022-01-30"},{"lineNumber":215,"author":{"gitId":"geraldneo567"},"content":"        );","lastModifiedDate":"2022-01-30"},{"lineNumber":216,"author":{"gitId":"geraldneo567"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":217,"author":{"gitId":"geraldneo567"},"content":"         */","lastModifiedDate":"2022-01-30"},{"lineNumber":218,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":219,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":220,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":221,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":222,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":222}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;public class ParserTest {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":2}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"    public void sizeTest() {","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Todo(\"borrow book\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Deadline(\"borrow knife\", \"2012/03/04 0755\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Event(\"project meeting\", \"6PM\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"        assertEquals(3,tasklist.getSize());","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    public void markTest() {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Todo(\"0\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        tasklist.getList().get(0).setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        assertEquals(\"[T][X] 0\", tasklist.getList().get(0).toString().strip());","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"geraldneo567":1}}]
