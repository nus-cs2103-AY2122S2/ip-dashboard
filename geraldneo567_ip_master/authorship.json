[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"# Duke project","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"This is a chatbot with basic functionality to add, remove, update and delete tasks. It has a basic GUI written with JavaFX.","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"It saves added tasks to a file called `duke.txt` within the same folder, and loads from this file if it already exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"## Adding a Task","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"There are three types of Tasks: Todo, Deadline and Event.","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"To add a Todo: `todo \u003cTASKNAME\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"Example: `todo borrow book` adds the task `borrow book` to Duke.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"To add a Deadline: `deadline \u003cTASKNAME\u003e /by \u003cDEADLINE\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"The format for `DEADLINE` is `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"Example: `deadline read book /by 2012-12-12 1530` adds a deadline to ","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"`read book` by `12th December 2012, 3:30PM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"To add an Event: `event \u003cTASKNAME\u003e /at \u003cSTARTDATE\u003e \u003cENDDATE\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"The format for `STARTDATE` and `ENDDATE` is both `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"Example: `event house warming /at 2012-12-12 1530 2012-12-12 1700` adds an event","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"for `housewarming` which takes place from `12th December 2012, 3:30PM` to `12th December 2012, 5PM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"## Removing a Task","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"To remove a task, type `delete \u003ctaskID\u003e`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"Example: `delete 3` deletes the task at index 3 if it exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"## Viewing Tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"To view your list of tasks, simply type `list`.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"## Marking and Unmarking tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"To mark a task as done, type `mark \u003ctaskID\u003e`.    ","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"To unmark a task as done, type `unmark \u003ctaskID\u003e`.  ","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"Example: `mark 3` or `unmark 3` either marks or unmarks the task at index 3 respectively.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"## Finding tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"To find a task that has a name containing the specific keyword, type `find \u003ckeyword\u003e`.  ","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"Example: `find library` returns all the tasks that contain the keyword `library`.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"## Update task name","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"To update a task\u0027s name, type `update name \u003ctaskID\u003e \u003cNEWNAME\u003e`.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"Example: `update name 3 Borrow Book` updates the task name at index 3 to `Borrow Book`.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"## Update deadline","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"To update a Deadline, type `update deadline \u003ctaskID\u003e \u003cNEWDEADLINE\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"You only can use this command on tasks that are of `Deadline` type.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"The format for `NEWDEADLINE` is `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"Example: `update deadline 5 2012-12-12 0400` updates the deadline at index 5 to `12th December 2012, 4AM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"## Update event time","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"To update an Event timing, type `update event time \u003ctaskID\u003e \u003cSTARTTIMING\u003e \u003cENDTIMING\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"You only can use this command on tasks that are of `Event` type.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"The format for `STARTTIMING` and `ENDTIMING` is `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"Example: `update event time 4 2012-12-12 0400 2013-01-01 0600` updates the event at index 4","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"to start on `12th December 2012, 4AM` and end on `1st January 2013, 6AM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"## Exit and save tasks","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"To exit and save current tasks, simply type `bye`.","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":56}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"plugins {","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"repositories {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"dependencies {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"test {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    testLogging {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        showExceptions true","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        showCauses true","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"application {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"shadowJar {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"checkstyle {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"run{","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"geraldneo567":61}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"# Duke project","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"This is a chatbot with basic functionality to add, remove, update and delete tasks. It has a basic GUI written with JavaFX.","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"It saves added tasks to a file called `duke.txt` within the same folder, and loads from this file if it already exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"## Adding a Task","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"There are three types of Tasks: Todo, Deadline and Event.","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"To add a Todo: `todo \u003cTASKNAME\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"Example: `todo borrow book` adds the task `borrow book` to Duke.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"To add a Deadline: `deadline \u003cTASKNAME\u003e /by \u003cDEADLINE\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"The format for `DEADLINE` is `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"Example: `deadline read book /by 2012-12-12 1530` adds a deadline to ","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"`read book` by `12th December 2012, 3:30PM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"To add an Event: `event \u003cTASKNAME\u003e /at \u003cSTARTDATE\u003e \u003cENDDATE\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"The format for `STARTDATE` and `ENDDATE` is both `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"Example: `event house warming /at 2012-12-12 1530 2012-12-12 1700` adds an event","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"for `housewarming` which takes place from `12th December 2012, 3:30PM` to `12th December 2012, 5PM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"## Removing a Task","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"To remove a task, type `delete \u003ctaskID\u003e`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"Example: `delete 3` deletes the task at index 3 if it exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"## Viewing Tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"To view your list of tasks, simply type `list`.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"## Marking and Unmarking tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"To mark a task as done, type `mark \u003ctaskID\u003e`.    ","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"To unmark a task as done, type `unmark \u003ctaskID\u003e`.  ","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"Example: `mark 3` or `unmark 3` either marks or unmarks the task at index 3 respectively.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"## Finding tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"To find a task that has a name containing the specific keyword, type `find \u003ckeyword\u003e`.  ","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"Example: `find library` returns all the tasks that contain the keyword `library`.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"## Update task name","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"To update a task\u0027s name, type `update name \u003ctaskID\u003e \u003cNEWNAME\u003e`.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"Example: `update name 3 Borrow Book` updates the task name at index 3 to `Borrow Book`.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"## Update deadline","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"To update a Deadline, type `update deadline \u003ctaskID\u003e \u003cNEWDEADLINE\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"You only can use this command on tasks that are of `Deadline` type.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"The format for `NEWDEADLINE` is `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"Example: `update deadline 5 2012-12-12 0400` updates the deadline at index 5 to `12th December 2012, 4AM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"## Update event time","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"To update an Event timing, type `update event time \u003ctaskID\u003e \u003cSTARTTIMING\u003e \u003cENDTIMING\u003e`\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"You only can use this command on tasks that are of `Event` type.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"The format for `STARTTIMING` and `ENDTIMING` is `YYYY-MM-DD HHMM`.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"Example: `update event time 4 2012-12-12 0400 2013-01-01 0600` updates the event at index 4","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"to start on `12th December 2012, 4AM` and end on `1st January 2013, 6AM`.","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"## Exit and save tasks","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"To exit and save current tasks, simply type `bye`.","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"-":6,"geraldneo567":50}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"@rem","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"echo.","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"goto fail","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":":init","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":":win9xME_args","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":":execute","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":":end","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":":fail","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"exit /b 1","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":":mainEnd","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":":omega","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"geraldneo567":103}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" * Represents an instance of the \u003ccode\u003eDuke\u003c/code\u003e chatbot, which","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":" * can then be run.","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    public static Storage storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    public static TaskList tasks;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        assert !(duke \u003d\u003d null) : \"Duke should not be null\";","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        Duke.storage.save(Duke.tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"geraldneo567":26}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eByecommand\u003c/code\u003e which is called when the program exits.","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"        return \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":14}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * Interface representing a Command.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public interface Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    String execute(TaskList taskList) throws DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":11}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DeadlineException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DuplicateException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eDeadlineCommand\u003c/code\u003e which is called when the program adds a Deadline.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    private Deadline toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a DeadlineCommand which takes in the relevent Deadline.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    public DeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"            String[] splitted \u003d input.split(\"deadline\")[1].split(\"/by\");","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"            if (splitted.length !\u003d 2) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"                throw new DeadlineException();","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"            if (splitted[0].trim().equals(\"\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"                throw new DeadlineException();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"            Deadline toAdd \u003d new Deadline(splitted[0].trim(), splitted[1].trim());","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"            this.toAdd \u003d toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"            throw new DeadlineException();","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        if (tasks.containsTask(toAdd.getName())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"            throw new DuplicateException(toAdd.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        tasks.addTask(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d toAdd + \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        return response;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":53}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.IndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eDeleteCommand\u003c/code\u003e which is called when the program deletes a Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private int index;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for Delete Command which takes in the index to delete.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public DeleteCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length !\u003d 2) {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for delete. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: delete \u003cINDEX\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: delete 3\"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        if (!splitted[1].matches(\"\\\\d+$\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for delete. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: delete \u003cINDEX\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: delete 3\"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        this.index \u003d Integer.valueOf(splitted[1]);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"            throw new IndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        Task removedTask \u003d tasks.deleteTask(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d removedTask + \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        return response;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":48}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.EventException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DuplicateException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eEventCommand\u003c/code\u003e which is called when the program adds a Event.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    private Event toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for an EventCommand. Takes in the relevant Event.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    public EventCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        if (input.trim().equals(\"event\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"            throw new EventException();","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\"event\")[1].split(\"/at\");","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length !\u003d 2) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"            throw new EventException();","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"        String name \u003d splitted[0].trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"            throw new EventException();","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        String[] splittedTime \u003d splitted[1].trim().split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        if (splittedTime.length !\u003d 4) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"            throw new EventException();","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        String startTime \u003d splittedTime[0] + \" \" + splittedTime[1];","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        String endTime \u003d splittedTime[2] + \" \" + splittedTime[3];","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"            this.toAdd \u003d new Event(name, startTime, endTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException | DukeException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"            if (e instanceof DukeException) {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"                throw e;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"                throw new EventException();","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        if (tasks.containsTask(toAdd.getName())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"            throw new DuplicateException(toAdd.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        tasks.addTask(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d toAdd + \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"        return response;","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":63}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eFindCommand\u003c/code\u003e which is called to find a command matching a specified keyword.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    private String keyword;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for the Find command, which takes in the relevant keyword.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    public FindCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length !\u003d 2) {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for find. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: find \u003cKEYWORD\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: find library\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"                    \"This will print any tasks that have keyword library in them.\"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        this.keyword \u003d splitted[1];","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"            if (tasks.get(i).getName().contains(keyword)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"                response +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        if (response.equals(\"\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"            response \u003d \"Could not find any matching tasks.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        return \"These are the tasks found containing \" + keyword + \"\\n\" + response;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":41}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eListCommand\u003c/code\u003e which is called to list all entries.","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"            return \"Duke currently has no tasks!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"        return tasks.getTasksAsString();","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":17}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.IndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eMarkCommand\u003c/code\u003e which is called to mark a task as done..","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private int index;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for Mark Command, takes the index to mark as done.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public MarkCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length !\u003d 2) {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for mark. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: mark \u003cINDEX\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: mark 3\"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        if (!splitted[1].matches(\"\\\\d+$\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for mark. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: mark \u003cINDEX\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: mark 3\"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        this.index \u003d Integer.valueOf(splitted[1]);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"            throw new IndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        Task set \u003d tasks.setDone(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Nice! I\u0027ve marked this task as done: \\n\" + set;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        return response;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":46}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DuplicateException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eTodoCommand\u003c/code\u003e which is called to add a Todo task.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private Todo toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * Constructor which takes in the relevant Todo.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        this.toAdd \u003d new Todo(input.split(\"todo\")[1].trim());","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * Utility method to get the Task name.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     * @return the Todo name.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    public String getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        return this.toAdd.getName();","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        if (tasks.containsTask(toAdd.getName())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"            throw new DuplicateException(toAdd.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        tasks.addTask(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d toAdd + \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        return response;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":43}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.IndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eUnmarkCommand\u003c/code\u003e which is called to mark a task as Undone.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    private int index;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for UnmarkCommand, to mark a task as Undone.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    public UnmarkCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length !\u003d 2) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for unmark. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: unmark \u003cINDEX\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: unmark 3\"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        if (!splitted[1].matches(\"\\\\d+$\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for unmark. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: unmark \u003cINDEX\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: unmark 3\"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        this.index \u003d Integer.valueOf(splitted[1]);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"            throw new IndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        Task set \u003d tasks.setUndone(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        response +\u003d \"Ok, I\u0027ve marked this task as not done yet.: \\n\" + set;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        return response;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":47}},{"path":"src/main/java/duke/commands/UpdateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.IndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eUpdateDeadlineCommand\u003c/code\u003e which is called to update a Deadline.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"public class UpdateDeadlineCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    private int index;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    private String deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"     * Constructor which takes in the relevant index and deadline.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    public UpdateDeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length !\u003d 5) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for update deadline. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: update deadline \u003cindex\u003e \u003cYYYY-MM-DD\u003e \u003cHHMM\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: update deadline 3 2012-04-03 1500\\n changes the deadline of the Task at index 3\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"                    \" to 3rd April 2012 3PM.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        int index \u003d Integer.valueOf(splitted[2]);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        String newDeadline \u003d splitted[3] + \" \" + splitted[4];","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        this.deadline \u003d newDeadline;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"            throw new IndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        Task oldTask \u003d tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        if (oldTask instanceof Deadline) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"            Deadline oldDeadlineTask \u003d (Deadline) oldTask;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"                tasks.set(index - 1, new Deadline(oldDeadlineTask.getName(), deadline));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"                return \"Successfully altered the deadline. The new Deadline task at index \" + (index) + \"\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"                        + \"is \" +  tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"                throw new DukeException(\"Invalid format for update deadline. \\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"                        \"Correct format: update deadline \u003cindex\u003e \u003cYYYY-MM-DD\u003e \u003cHHMM\u003e\\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"                        \"Example: update deadline 3 2012-04-03 1500\\n changes the deadline of the Task at index 3\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"                        \" to 3rd April 2012 3PM.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"The indicated task is not of type Deadline.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":61}},{"path":"src/main/java/duke/commands/UpdateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.IndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eUpdateEventCommand\u003c/code\u003e which is called to alter an Event\u0027s timing.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"public class UpdateEventCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    private int index;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    private String start;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    private String end;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"     * Constructor taking the index and the new start/end timing in YYYY/MM/DD HHMM format.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    public UpdateEventCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length !\u003d 8) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for update event time. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: update event time \u003cindex\u003e \" +","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"                    \"\u003cFROM YYYY-MM-DD\u003e \u003cFROM HHMM\u003e \u003cTO YYYY-MM-DD\u003e \u003cTO HHMM\u003e\\n\");","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        int index \u003d Integer.valueOf(splitted[3]);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        String newStartTime \u003d splitted[4] + \" \" + splitted[5];","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        String newEndTime \u003d splitted[6] + \" \" + splitted[7];","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        this.start \u003d newStartTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        this.end \u003d newEndTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"            throw new IndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        Task oldTask \u003d tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        if (oldTask instanceof Event) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"            Event oldEventTask \u003d (Event) oldTask;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"                tasks.set(index - 1, new Event(oldEventTask.getName(), start, end));","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"                return \"Successfully altered the event. The new Event task at index \" + (index) + \"\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"                        + \"is \" +  tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"                throw new DukeException(\"Invalid format for update event. \\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"                        \"Correct format: update event time \u003cindex\u003e \" +","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"                        \"\u003cFROM YYYY-MM-DD\u003e \u003cFROM HHMM\u003e \u003cTO YYYY-MM-DD\u003e \u003cTO HHMM\u003e\\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"                        \"Example: update event time 3 2012-04-03 1500 2012-12-12 1600\\n \" +","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"                        \"means the event at index 3 now occurs on 12 Dec 2012 at 4PM\");","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"The indicated task is not of type Event.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":63}},{"path":"src/main/java/duke/commands/UpdateNameCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.IndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eUpdateNameCommand\u003c/code\u003e which is called to change the name of a task.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"public class UpdateNameCommand implements Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    private int index;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    private String newName;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"     * Constructor taking the relevant Index and the new name.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    public UpdateNameCommand(String input) throws DukeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        String[] splitted \u003d input.split(\" \");","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        if (splitted.length \u003c\u003d 3) {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Invalid format for update name. \\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"                    \"Correct format: update name \u003cindex\u003e \u003cnewname\u003e\\n\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"                    \"Example: update name 3 Borrow Book\\n changes the name of the Task at index 3\" +","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"                    \" to Borrow Book.\"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        int index \u003d Integer.valueOf(splitted[2]);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        String newName \u003d \"\";","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 3; i \u003c splitted.length; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"            newName +\u003d splitted[i] + \" \";","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        newName \u003d newName.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        if (newName.equals(\"\")) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Provided name cannot be empty!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"            throw new IndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        Task oldTask \u003d tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        if (newName.equals(oldTask.getName())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"The original task already has this name!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        if (oldTask instanceof Todo) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"            tasks.set(index - 1, new Todo(newName));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"            return \"The Todo at index \" + index + \" is successfully edited to \" + tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"        } else if (oldTask instanceof Deadline) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"            Deadline oldDeadline \u003d (Deadline) oldTask;","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"            Deadline newDeadline \u003d new Deadline(newName, oldDeadline.getDeadline());","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"            tasks.set(index - 1, newDeadline);","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"            return \"The Deadline at index \" + index + \" is successfully edited to \" + tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"        } else if (oldTask instanceof Event) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"            Event oldEvent \u003d (Event) oldTask;","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"            Event newEvent \u003d new Event(newName, oldEvent.getStartString(), oldEvent.getEndString());","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"            tasks.set(index - 1, newEvent);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"            return \"The Event at index \" + index + \" is successfully edited to \" + tasks.get(index - 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"Update name command failed. Please reset Duke.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":77}},{"path":"src/main/java/duke/commands/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.commands.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.UpdateDeadlineCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.UpdateEventCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.UpdateNameCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DeadlineException;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.EventException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eParser\u003c/code\u003e which parses input strings","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":" * to \u003ccode\u003eDuke\u003c/code\u003e and returns the appropriate Command.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"public class Parser {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"     * Default constructor.","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public Parser() {}","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"     * Parses input string to return appropriate enum type.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"     * @param input","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"     * @return The appropriate enum type.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        assert !input.isEmpty() : \"Given input should not be empty\";","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        if (input.startsWith(\"list\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"            return new FindCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"            return new EventCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"update name\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"            return new UpdateNameCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"update deadline\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"            return new UpdateDeadlineCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"update event time\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"            return new UpdateEventCommand(input);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        } else if (input.startsWith(\"bye\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(\"Invalid Command! See user guide for list of commands.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":76}},{"path":"src/main/java/duke/exceptions/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Representing a Deadline exception.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"    public DeadlineException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"        super(\"Invalid format for deadline. \\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"                \"Correct format: deadline \u003cname\u003e /by \u003cYYYY-MM-DD\u003e \u003cHHMM\u003e\\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"                \"Example: deadline read book /by 2012-03-04 1234\\n\");","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":12}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" * A generic exception thrown by Duke.","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"        super(message);","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    public Label getLabel() {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"        return new Label(super.getMessage());","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":17}},{"path":"src/main/java/duke/exceptions/DuplicateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Representing when there are duplicate names.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"public class DuplicateException extends DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"    public DuplicateException(String message) {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"        super(\"Duke already has a task with that name!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":10}},{"path":"src/main/java/duke/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Representing an Event exception.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"    public EventException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"        super(\"Invalid format for event. \\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"                \"Correct format: event \u003cname\u003e /at \u003cStart YYYY-MM-DD\u003e \u003cStart HHMM\u003e \u003cEnd YYYY-MM-DD\u003e \u003cEnd HHMM\u003e\\n\" +","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"                \"Example: event housewarming /at 2012-03-04 1200 2012-03-04 1700\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"        );","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":13}},{"path":"src/main/java/duke/exceptions/IndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Exception thrown when index is out of bounds.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"public class IndexException extends DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"    public IndexException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"        super(\"The provided index is invalid!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":10}},{"path":"src/main/java/duke/exceptions/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Exception thrown if parsing is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"public class ParseException extends DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"    public ParseException(String message) {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"        super(message);","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":13}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import java.io.File;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eStorage\u003c/code\u003e object to handle saving and loading.","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"public class Storage {","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    private String filepath;","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"     * Saves current tasklist as a file in specified filepath.","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"     * @param tasklist","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    public void save(TaskList tasklist) {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"            List\u003cTask\u003e ls \u003d tasklist.getList();","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"            f.delete();","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"            f.createNewFile();","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"            for (Task t : ls) {","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"                fw.write(t.saveString() + \"\\n\");","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"            fw.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"     * Loads contents of current saved file into tasklist.","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"     * @return The list containing the pre-saved tasks.","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        File directory \u003d new File(\"../../../data/\");","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"            directory.mkdir();","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"            File saved \u003d new File(filepath);","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"            if (!saved.exists()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"                saved.createNewFile();","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"            } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"                Scanner scan \u003d new Scanner(saved);","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"                while (scan.hasNextLine()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"                    String line \u003d scan.nextLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"                    String[] splitted \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"                    String firstToken \u003d splitted[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"                    String name \u003d splitted[2];","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"                    boolean completed \u003d splitted[1].equals(\"1\");","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"                    if (firstToken.equals(\"D\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"                        String timing \u003d splitted[3];","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"                        Deadline toAdd \u003d new Deadline(name, timing);","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"                        ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"                        if (completed) toAdd.setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"                    if (firstToken.equals(\"T\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"                        Todo toAdd \u003d new Todo(splitted[2]);","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"                        ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"                        if (completed) toAdd.setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"                    if (firstToken.equals(\"E\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"                        String startTiming \u003d splitted[3].split(\" \")[0] + \" \" + splitted[3].split(\" \")[1];","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"                        String endTiming \u003d splitted[3].split(\" \")[2] + \" \" + splitted[3].split(\" \")[3];","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"                        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"                            Event toAdd \u003d new Event(name, startTiming.trim(), endTiming.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"                            ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"                            if (completed) toAdd.setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"                            System.out.println(\"Could not load event successfully.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"                        }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"        } catch(IOException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"        return ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":100}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import java.time.*;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * Represents a Deadline Task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" * a Task which contains a \u003ccode\u003eLocalDateTime\u003c/code\u003e field.","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    private String deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @param name Name of deadline task","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     * @param deadline Deadline in yyyy-mm-dd HHmm format","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        super(name, \"D\", deadline);","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        this.dateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"     * Creates the relevant Date string using the deadline.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"     * @return appropriate date string.","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    private String createDateString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mma\");","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        String time \u003d dateTime.format(formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        String suffix \u003d getDayOfMonthSuffix(dateTime.getDayOfMonth());","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        return dateTime.getDayOfMonth() + suffix + \" \" +","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"                dateTime.getMonth().toString().substring(0,1) +","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"                dateTime.getMonth().toString().substring(1).toLowerCase()","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"                + \" \" + dateTime.getYear() + \", \" + time;","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"     * Utility method to get the suffix associated with the day of the month.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     * @param n","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"     * @return the correct suffix","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    private String getDayOfMonthSuffix(int n) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"            return \"th\";","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        switch (n % 10) {","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"            case 1:  return \"st\";","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"            case 2:  return \"nd\";","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"            case 3:  return \"rd\";","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"            default: return \"th\";","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        return this.deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.createDateString() + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"geraldneo567":67}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import java.time.*;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" * Represents a Event Task. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":" * a Task which contains 2 \u003ccode\u003eLocalDateTime\u003c/code\u003e fields for start and end respectively.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"public class Event extends Task {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    private String event;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"     * Constructor which takes in the name, the start and the end time in YYYY/MM/DD HHMM format.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"     * @param name","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"     * @param start","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     * @param end","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * @throws DukeException","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    public Event(String name, String start, String end) throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        super(name, \"E\", start + \" \" + end);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        this.event \u003d start + \" \" + end;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        this.startDateTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        this.endDateTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        if (!startDateTime.isBefore(endDateTime)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"            throw new DukeException(\"The start date/time must be before the end date/time.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public String getStartString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        return this.event.split(\" \")[0];","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    public String getEndString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        return this.event.split(\" \")[1];","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"     * Creates the relevant date string using the correct start and end time.","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"     * @param dateTime","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"     * @return appropriate date string.","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"    private String createDateString(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mma\");","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        String time \u003d dateTime.format(formatter);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        String suffix \u003d getDayOfMonthSuffix(dateTime.getDayOfMonth());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        return dateTime.getDayOfMonth() + suffix + \" \" +","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"                dateTime.getMonth().toString().substring(0,1) +","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"                dateTime.getMonth().toString().substring(1).toLowerCase()","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"                + \" \" + dateTime.getYear() + \", \" + time;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"     * Utility method to get the suffix associated with the day of the month.","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"     * @param n","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"     * @return the correct suffix","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    private String getDayOfMonthSuffix(int n) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"            return \"th\";","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"        switch (n % 10) {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        case 1:  return \"st\";","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        case 2:  return \"nd\";","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"        case 3:  return \"rd\";","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"        default: return \"th\";","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + this.createDateString(startDateTime) + \" to \" +","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"               this.createDateString(endDateTime) + \")\";","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":83}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Represents a Task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" * a Task which may or may not contain an extension.","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public class Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    private boolean completed;","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    private String name;","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"    private String type;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private String extension \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a Task which does not have an extension.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @param name","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     * @param type","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    public Task(String name, String type) {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a Task which has an extension.","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"     * @param name","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"     * @param type","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    public Task(String name, String type, String extension) {","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        this.extension \u003d extension;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public String getName() {","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        return this.name;","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"     * Set a task as done.","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-14"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"     * Set a task as not done.","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"     * Converts a string to compact format to be saved in the file","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"     * @return The compacted string","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"    public String saveString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"        int status \u003d completed \u003d\u003d true ? 1 : 0;","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        if (extension.isEmpty()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"            return this.type + \"|\" + status + \"|\" + name;","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"            return this.type + \"|\" + status + \"|\" + name + \"|\" + extension;","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"     * @return the name of the task, along with an [X] if completed, [] otherwise","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"        if (completed) {","lastModifiedDate":"2022-01-14"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2022-01-15"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2022-01-15"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"geraldneo567":86}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * Represents a List of Tasks, that will be saved to/loaded from","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" * when \u003ccode\u003eDuke\u003c/code\u003e is run.","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"public class TaskList {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private List\u003cTask\u003e ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * Constructor to build a Task List from an existing list of tasks","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * @param ls","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public TaskList(List\u003cTask\u003e ls) {","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        this.ls \u003d ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * Constructor to build an empty task list.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        this.ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"     * Checks if there is already a task with given name.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"     * @param name","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"     * @return true if there exists a task with given name, otherwise false","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    public boolean containsTask(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        for (Task t : ls) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"            if (t.getName().equals(name)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"                return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    public String getTasksAsString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"            result \u003d result + (i + 1) + \". \" + ls.get(i) + \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        return result;","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"     * Sets the task at specified index in the list as done.","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"     * @param index","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"     * @return The task that was affected.","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    public Task setDone(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"        ls.get(index).setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        return ls.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"     * Sets the task at specified index in the list as undone.","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"     * @param index","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"     * @return The task that was affected.","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"    public Task setUndone(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        ls.get(index).setUndone();","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        return ls.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"    public void addTask(Task toAdd) {","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"        ls.add(toAdd);","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"     * @param index","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"     * @return The task that was removed.","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"        Task toRemove \u003d ls.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"        ls.remove(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"        return toRemove;","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"     * Obtain the current size of the list.","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"     * @return int containing size of the list","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"        return ls.size();","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"     * Utility getter method to obtain the underlying list.","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"     * @return the underlying List of tasks.","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"        return this.ls;","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"    public Task get(int i) {","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"        return this.ls.get(i);","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"    public void set(int i, Task t) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"        this.ls.set(i, t);","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":116}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.tasks;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Represents a \u003ccode\u003eTodo\u003c/code\u003e Task.","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"     * Constructor which takes in the name of the Todo task.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"     * @param name","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"        super(name, \"T\");","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"geraldneo567":22}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    private Label text;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"        text \u003d l;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    public DialogBox flip() {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        return this;","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"geraldneo567":37}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.Duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"public class Ui extends Application {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    private TextField userInput;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    private Button sendButton;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    private Scene scene;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    private String welcome \u003d \"Welcome to Duke! What can I do for you today? \\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    private Label label \u003d new Label(welcome);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    private TaskList taskList \u003d Duke.tasks;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton, label);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        stage.show();","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"            handleUserInput();","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"        });","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"            handleUserInput();","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"        });","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"        // more code to be added here later","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"            this.label.setVisible(false);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"            String userText \u003d userInput.getText();","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"            String response \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"            Command command \u003d parser.parse(userText);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"            if (command instanceof ByeCommand) {","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"                Platform.exit();","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"            response \u003d command.execute(taskList);","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"            Label userTextLabel \u003d new Label(userText);","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"            Label dukeTextLabel \u003d new Label(response);","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"                    new DialogBox(userTextLabel, new ImageView(user)),","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"                    new DialogBox(dukeTextLabel, new ImageView(duke)).flip()","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"            userInput.clear();","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"geraldneo567"},"content":"                    new DialogBox(e.getLabel(), new ImageView(duke)).flip()","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"geraldneo567"},"content":"            );","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"            userInput.clear();","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"        /*","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"                new DialogBox(userText, new ImageView(user)),","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"                new DialogBox(dukeText, new ImageView(duke))","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"        );","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"geraldneo567"},"content":"        userInput.clear();","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"geraldneo567"},"content":"         */","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"geraldneo567":139}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.commands.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"public class ParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    public void todoParseTest() throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"        Command command \u003d parser.parse(\"todo borrow book\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"        assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        TodoCommand todo \u003d (TodoCommand) command;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        assertEquals(todo.getName(), \"borrow book\");","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    public void deadlineParseTest() throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        Command command \u003d parser.parse(\"deadline project report /by 2012-04-03 0555\");","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public void eventParseTest() throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        Command command \u003d parser.parse(\"event carnival /at 2012-04-03 0555 2012-05-03 0600\");","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        assertTrue(command instanceof EventCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":44}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    public void sizeTest() throws DukeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Todo(\"borrow book\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Deadline(\"borrow phone\", \"2012-03-04 0755\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Event(\"project meeting\", \"2012-03-04 0600\", \"2012-03-04 0700\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"        assertEquals(3,tasklist.getSize());","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    public void markTest() {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        tasklist.addTask(new Todo(\"0\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        tasklist.getList().get(0).setDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        assertEquals(\"[T][X] 0\", tasklist.getList().get(0).toString().strip());","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"geraldneo567":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"geraldneo567":1}}]
