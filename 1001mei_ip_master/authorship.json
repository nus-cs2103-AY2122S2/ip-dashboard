[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"1001mei":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"Duke is a **desktop app for managing tasks**, designed for best use through **command line interface**(CLI). It is fast to learn and easy to use.","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"  - [Adding a todo task](#adding-a-todo-task)","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"  - [Adding a deadline task](#adding-a-deadline-task)","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"  - [Adding an event task](#adding-an-event-task)","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"  - [Listing tasks](#listing-tasks)","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"  - [Finding tasks](#finding-tasks)","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"  - [Marking a task](#marking-a-task)","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"  - [Unmarking a task](#unmarking-a-task)","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"  - [Deleting a task](#deleting-a-task)","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"  - [Clearing all tasks](#clearing-all-tasks)","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"  - [Creating command alias](#creating-command-alias)","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"  - [Exiting the app](#exiting-the-app)","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"- [Usage summary](#usage-summary).","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"## Quick Start","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"1. Ensure you have [Java 11](https://www.oracle.com/java/technologies/downloads/#java11) or above installed on your computer.","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"2. Download Duke\u0027s latest version [here](https://github.com/1001mei/ip/releases).","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"5. Type your command in the dialog box and press Enter to execute it. Some examples you can try:","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    - `todo read book` : adds a todo task \"read book\"","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    - `mark 1` : marks the first task as done","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    - `list` : displays all tasks in the list","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    - `bye` : exits the app","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"6. Interested to know what other things you can do with Duke? Refer to the [Features](#features) section below.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"7. Prefer to learn command syntaxes first? Refer to the [Usage summary](#usage-summary) section below.","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"### Adding a todo task","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"Adds a todo task.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"Command format: `todo [task name]`","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"Example: `todo read book`","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"### Adding a deadline task","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"Adds a task that has a deadline.","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"Command format: `deadline [task name] /by [YYYY-MM-DD]`","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"Example: `deadline return book /by 2022-02-28`","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"### Adding an event task","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"Adds a task that is happening at a certain time.","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"Command format: `event [task name] /at [when]`","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"Example: `event team meeting /at tonight`","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"### Listing tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"Shows all tasks in the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"Command format: `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"### Finding tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"Finds all tasks that contains the specified keyword.","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"Command format: `find [keyword]`","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"Example: `find meet`","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"### Marking a task","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"Marks a task as done by its index.","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"Command format: `mark [task index]`","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"Example: `mark 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"1001mei"},"content":"### Unmarking a task","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"1001mei"},"content":"Unmarks a task as not done yet by its index.","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"1001mei"},"content":"Command format: `unmark [task index]`","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"1001mei"},"content":"Example: `unmark 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"1001mei"},"content":"### Deleting a task","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"1001mei"},"content":"Deletes a task by its index.","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"1001mei"},"content":"Command format: `delete [task index]`","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"1001mei"},"content":"Example: `delete 1`","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"1001mei"},"content":"### Clearing all tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"1001mei"},"content":"Clears all tasks in the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":98,"author":{"gitId":"1001mei"},"content":"Command format: `clear`","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"1001mei"},"content":"### Creating command alias","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"1001mei"},"content":"Creates a new command that is more convenient for you to refer to an existing Duke command.","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"1001mei"},"content":"Command format: `alias [new command name] [existing Duke command]`","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"1001mei"},"content":"Example: `alias d delete`","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"1001mei"},"content":"### Exiting the app","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"1001mei"},"content":"Saves all changes to disk and exits the app.","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"1001mei"},"content":"Command format: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"1001mei"},"content":"## Usage summary","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"1001mei"},"content":"| Command | Shortcut | Format | Example |","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"1001mei"},"content":"| --- | --- | --- | --- |","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"1001mei"},"content":"| todo | t | todo [task name] | todo read book |","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"1001mei"},"content":"| deadline | d | deadline [task name] /by [YYYY-MM-DD] | deadline return book /by 2022-03-31 |","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"1001mei"},"content":"| event | e | event [task name] /at [when] | event meeting /at tonight |","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"1001mei"},"content":"| list | ls | list | list |","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"1001mei"},"content":"| find | f | find [keyword] | find book |","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"1001mei"},"content":"| mark | m | mark [task index] | mark 2 |","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"1001mei"},"content":"| unmark | um | ummark [task index] | ummark 2 |","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"1001mei"},"content":"| delete | del | delete [task index] | delete 2 |","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"1001mei"},"content":"| clear | c | clear | clear |","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"1001mei"},"content":"| alias | a | alias [new command name] [existing Duke command] | alias d delete |","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"1001mei"},"content":"| bye | b | bye | bye |","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"1001mei"},"content":"\u003e Some notes/tips on command format:","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"1001mei"},"content":"\u003e - All commands are **case sensitive**.","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"1001mei"},"content":"\u003e - Words enclosed in [ ] brackets are parameters to be supplied by the user.\\","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"1001mei"},"content":"\u003e    e.g. in `todo [task name]`, `task name` is a parameter which can be supplied as `todo read book`.","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"1001mei"},"content":"\u003e - `task index` must be an integer. You can find the index of a task by calling the `list` command.","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"1001mei"},"content":"\u003e - You can always use the shortcut name to replace the full command name.\\","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"1001mei"},"content":"\u003e    e.g. `ls` is the same as `list`, `m 3` is the same as `mark 3`","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"1001mei"},"content":"\u003e - You can also create your own shortcut command using `alias` command if you wish.","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"1001mei":121,"-":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.command.SetupCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":" * This class is the main controller of the application.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"public class Duke {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     * Coordinates the interactions between various other classes to accomplish the logic","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"     * of the application.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    public Duke() {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"        new SetupCommand().execute(ui, taskList, storage);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public String getResponse() {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        return ui.getMessage();","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"            command.execute(ui, taskList, storage);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"            ui.showErrorMessage(exception.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"        return getResponse();","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"1001mei":46}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"1001mei":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"            stage.setOnCloseRequest(event -\u003e duke.getResponse(\"bye\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"1001mei":34}},{"path":"src/main/java/duke/command/AddDeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed adds a deadline task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class AddDeadlineTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     * @param date deadline of the task expressed in date.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public AddDeadlineTaskCommand(String description, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003eaddDeadlineTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to add a deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        taskList.addDeadlineTask(description, date);","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"        int taskIndex \u003d taskList.getNumberOfTasks() - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":47}},{"path":"src/main/java/duke/command/AddEventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed adds an event task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class AddEventTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    private final String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    private final String at;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param description description of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param at the time of the event expressed in a \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public AddEventTaskCommand(String description, String at) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003eaddEventTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to add an event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        taskList.addEventTask(description, at);","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        int taskIndex \u003d taskList.getNumberOfTasks() - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":45}},{"path":"src/main/java/duke/command/AddToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed adds a todo task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class AddToDoTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    private final String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    public AddToDoTaskCommand(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003eaddToDoTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to add a todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        taskList.addToDoTask(description);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        int taskIndex \u003d taskList.getNumberOfTasks() - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":42}},{"path":"src/main/java/duke/command/AliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed shows the newly created alias of command.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class AliasCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    private final String from;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    private final String to;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param from the new alias created.","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param to the actual command the new alias is referring to.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public AliasCommand(String from, String to) {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        this.from \u003d from;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"        this.to \u003d to;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * Shows user the result of aliasing a command.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Aliases created: \" + from + \" now refers to \" + to);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"1001mei":37}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed prepares the application for exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Prompts \u003ccode\u003eui\u003c/code\u003e to show goodbye message to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * After that, gets the formatted task list from \u003ccode\u003etaskList\u003c/code\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * and directs \u003ccode\u003estorage\u003c/code\u003e to store it into disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        storage.saveToFile(taskList.formatAsFileData());","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     * Checks if this command is a goodbye command.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     * @return true.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"    public boolean isBye() {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":40}},{"path":"src/main/java/duke/command/ClearTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed clears all tasks in the task list.","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class ClearTaskCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003eclear\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to clear all tasks.","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        taskList.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"All tasks cleared.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"1001mei":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a general command that is the superclass of all classes representing a specific command.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Carries out the actions correspond to this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public abstract void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * Checks if this command is a goodbye command.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * @return false.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    public boolean isBye() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":30}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed deletes a designated task from task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003edeleteTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to delete the designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Noted. I have deleted this task:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(deletedTask.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":43}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed finds all tasks in the task list that matches a keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final String keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param keyword keyword used to match tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * Finds all tasks in \u003ccode\u003etaskList\u003c/code\u003e that matches the designated keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display those tasks to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        ArrayList\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        int numberOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"            String taskDescription \u003d taskList.getDescriptionOfTaskAtIndex(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"                matches.add(taskDescription);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(\"There are no matching tasks in your list\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"            for (String description : matches) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"                ui.showMessage(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"1001mei":55}},{"path":"src/main/java/duke/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed displays to the user all tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     * Gets all tasks from \u003ccode\u003etaskList\u003c/code\u003e, then prompts \u003ccode\u003eui\u003c/code\u003e to display them.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"        int numberOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(\"Congratulations! There are no tasks in your list :)\");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"            return;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(String.format(\"%d. %s\", i + 1, taskList.getDescriptionOfTaskAtIndex(i)));","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":34}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed marks a designated task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public MarkTaskCommand(int taskIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003emarkTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to mark the designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        taskList.markTask(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":41}},{"path":"src/main/java/duke/command/SetupCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed prepares the application for getting commands from user.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class SetupCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Loads the data stored in disk (if any) into \u003ccode\u003etaskList\u003c/code\u003e.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to greet the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(storage.loadTasksFromFile());","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"            ui.showErrorMessage(exception.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"            taskList.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Hello! I am Duke.\");","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"How can I help you?\");","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":37}},{"path":"src/main/java/duke/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed unmarks a designated task as not done yet.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public UnmarkTaskCommand(int taskIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003emarkTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to unmark the designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        taskList.unmarkTask(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":41}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents exceptions specific to this application.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"     * @param errorMessage error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"1001mei":15}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    //@@author 1001mei-reused","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //with minor modifications.","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Class constructor.","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param text text to be displayed in this dialog box.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param img the image associated with this dialog box.","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Constructs a user DialogBox.","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param text text to be displayed in this dialog box.","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param img the image associated with this dialog box.","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @return A DialogBox with specified text and image.","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Constructs a Duke DialogBox.","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param text text to be displayed in this dialog box.","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param img the image associated with this dialog box.","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return A DialogBox with specified text and image.","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"1001mei":28,"-":58}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":" * Controller for duke.Launcher.duke.gui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     * Initializes the main window that shows up upon launching the application.","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"     * Sets the \u003ccode\u003eduke\u003c/code\u003e object.","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"     * @param duke a Duke object.","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getResponse(), dukeImage));","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"        boolean isQuitting \u003d input.equals(\"bye\");","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"        );","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"        if (isQuitting) {","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"1001mei":69}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"import duke.command.AddDeadlineTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"import duke.command.AddEventTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"import duke.command.AddToDoTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"import duke.command.AliasCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"import duke.command.ClearTaskCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"import duke.command.FindTaskCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"import duke.command.ListTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"import duke.command.MarkTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"import duke.command.UnmarkTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":" * This class acts as a parser that parses user inputs into specific commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    private static final int ARRAY_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    private static final String[] COMMANDS \u003d new String[]{","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        \"alias\", \"bye\", \"clear\", \"list\", \"find\", \"mark\",","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"        \"unmark\", \"delete\", \"todo\", \"deadline\", \"event\"};","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    private static final String[] COMMAND_SHORTCUTS \u003d new String[]{","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        \"a\", \"b\", \"c\", \"ls\", \"f\", \"m\", \"um\", \"del\", \"t\", \"d\", \"e\"};","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    private final HashSet\u003cString\u003e reservedCommands;","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    private final HashMap\u003cString, String\u003e aliases;","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"    public Parser() {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"        reservedCommands \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        reservedCommands.addAll(Arrays.asList(COMMANDS));","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"        aliases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c COMMAND_SHORTCUTS.length; i++) {","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"            aliases.put(COMMAND_SHORTCUTS[i], COMMANDS[i]);","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"     * Dispatches the input string entered by user to appropriate helper parser","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"     * matching the command type.","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"     * @param command the command entered by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"     * @return a command to be executed by the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003ecommand\u003c/code\u003e is invalid or its format is incorrect.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"        String[] commandTokens \u003d command.split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"        String primaryCommand \u003d Optional.ofNullable(aliases.get(commandTokens[0])).orElse(commandTokens[0]);","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"        String arguments \u003d commandTokens.length \u003e 1 ? commandTokens[1] : \"\";","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"        switch (primaryCommand) {","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"        case \"alias\":","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"            return parseAliasCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"            return parseByeCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"        case \"clear\":","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"            return parseClearCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"        case \"list\":","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"            return parseListCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"        case \"find\":","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"            return parseFindCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"            return parseMarkCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"1001mei"},"content":"            return parseUnmarkCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"1001mei"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"1001mei"},"content":"            return parseDeleteCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"1001mei"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"1001mei"},"content":"            return parseToDoCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"1001mei"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"1001mei"},"content":"            return parseDeadlineCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"1001mei"},"content":"        case \"event\":","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"1001mei"},"content":"            return parseEventCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"1001mei"},"content":"        default:","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"1001mei"},"content":"     * Parses an alias command.","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"1001mei"},"content":"     * @return an \u003ccode\u003eAliasCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when one or more arguments is missing or illegal.","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"1001mei"},"content":"    private Command parseAliasCommand(String arguments) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"1001mei"},"content":"        String[] aliasMapping \u003d arguments.split(\" \");","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"1001mei"},"content":"        if (aliasMapping.length !\u003d 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The alias command takes in exactly 2 arguments\");","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"1001mei"},"content":"        String from \u003d aliasMapping[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"1001mei"},"content":"        String to \u003d aliasMapping[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"1001mei"},"content":"        if (reservedCommands.contains(from)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Duke\u0027s original command cannot be changed\");","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"1001mei"},"content":"        } else if (!reservedCommands.contains(to)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Alias can only refer to Duke\u0027s original command\");","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"1001mei"},"content":"        aliases.put(from, to);","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"1001mei"},"content":"        return new AliasCommand(from, to);","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"1001mei"},"content":"     * Parses a bye command.","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"1001mei"},"content":"     * @param arguments not used.","lastModifiedDate":"2022-02-12"},{"lineNumber":120,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eByeCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"1001mei"},"content":"    private Command parseByeCommand(String arguments) {","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"1001mei"},"content":"        return new ByeCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":125,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":126,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":127,"author":{"gitId":"1001mei"},"content":"     * Parses a clear command.","lastModifiedDate":"2022-02-12"},{"lineNumber":128,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":129,"author":{"gitId":"1001mei"},"content":"     * @param arguments not used.","lastModifiedDate":"2022-02-12"},{"lineNumber":130,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eClearTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":131,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":132,"author":{"gitId":"1001mei"},"content":"    private Command parseClearCommand(String arguments) {","lastModifiedDate":"2022-02-12"},{"lineNumber":133,"author":{"gitId":"1001mei"},"content":"        return new ClearTaskCommand();","lastModifiedDate":"2022-02-02"},{"lineNumber":134,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":135,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":136,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":137,"author":{"gitId":"1001mei"},"content":"     * Parses a list command.","lastModifiedDate":"2022-02-12"},{"lineNumber":138,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":139,"author":{"gitId":"1001mei"},"content":"     * @param arguments not used.","lastModifiedDate":"2022-02-12"},{"lineNumber":140,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eListTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":141,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":142,"author":{"gitId":"1001mei"},"content":"    private Command parseListCommand(String arguments) {","lastModifiedDate":"2022-02-12"},{"lineNumber":143,"author":{"gitId":"1001mei"},"content":"        return new ListTaskCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":145,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":146,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":147,"author":{"gitId":"1001mei"},"content":"     * Parses a find command.","lastModifiedDate":"2022-02-12"},{"lineNumber":148,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":149,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":150,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eFindTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":151,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":152,"author":{"gitId":"1001mei"},"content":"    private Command parseFindCommand(String arguments) {","lastModifiedDate":"2022-02-12"},{"lineNumber":153,"author":{"gitId":"1001mei"},"content":"        return new FindTaskCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":154,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":155,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":156,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":157,"author":{"gitId":"1001mei"},"content":"     * Parses a mark command.","lastModifiedDate":"2022-02-12"},{"lineNumber":158,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":159,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":160,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eMarkTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":161,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when the argument is missing or is not a number.","lastModifiedDate":"2022-02-12"},{"lineNumber":162,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":163,"author":{"gitId":"1001mei"},"content":"    private Command parseMarkCommand(String arguments) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":164,"author":{"gitId":"1001mei"},"content":"        if (arguments.equals(\"\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":165,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Seems like the command is incomplete\");","lastModifiedDate":"2022-02-12"},{"lineNumber":166,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":167,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":168,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":169,"author":{"gitId":"1001mei"},"content":"            int indexOfTaskToMark \u003d Integer.parseInt(arguments) - ARRAY_INDEX_OFFSET;","lastModifiedDate":"2022-02-12"},{"lineNumber":170,"author":{"gitId":"1001mei"},"content":"            return new MarkTaskCommand(indexOfTaskToMark);","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"1001mei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":172,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The index of task to mark is not a valid integer\");","lastModifiedDate":"2022-02-12"},{"lineNumber":173,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":174,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":175,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":176,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":177,"author":{"gitId":"1001mei"},"content":"     * Parses an unmark command.","lastModifiedDate":"2022-02-12"},{"lineNumber":178,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":179,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":180,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eUnmarkTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":181,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when the argument is missing or is not a number.","lastModifiedDate":"2022-02-12"},{"lineNumber":182,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":183,"author":{"gitId":"1001mei"},"content":"    private Command parseUnmarkCommand(String arguments) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":184,"author":{"gitId":"1001mei"},"content":"        if (arguments.equals(\"\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":185,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Seems like the command is incomplete\");","lastModifiedDate":"2022-02-12"},{"lineNumber":186,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":187,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":188,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":189,"author":{"gitId":"1001mei"},"content":"            int indexOfTaskToMark \u003d Integer.parseInt(arguments) - ARRAY_INDEX_OFFSET;","lastModifiedDate":"2022-02-12"},{"lineNumber":190,"author":{"gitId":"1001mei"},"content":"            return new UnmarkTaskCommand(indexOfTaskToMark);","lastModifiedDate":"2022-02-12"},{"lineNumber":191,"author":{"gitId":"1001mei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":192,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The index of task to unmark is not a valid integer\");","lastModifiedDate":"2022-02-12"},{"lineNumber":193,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":194,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":195,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":196,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":197,"author":{"gitId":"1001mei"},"content":"     * Parses a delete command.","lastModifiedDate":"2022-02-12"},{"lineNumber":198,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":199,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":200,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eDeleteTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":201,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when the argument is missing or is not a number.","lastModifiedDate":"2022-02-12"},{"lineNumber":202,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"1001mei"},"content":"    private Command parseDeleteCommand(String arguments) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":204,"author":{"gitId":"1001mei"},"content":"        if (arguments.equals(\"\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":205,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Seems like the command is incomplete\");","lastModifiedDate":"2022-02-12"},{"lineNumber":206,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":207,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":208,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":209,"author":{"gitId":"1001mei"},"content":"            int indexOfTaskToDelete \u003d Integer.parseInt(arguments) - ARRAY_INDEX_OFFSET;","lastModifiedDate":"2022-02-12"},{"lineNumber":210,"author":{"gitId":"1001mei"},"content":"            return new DeleteTaskCommand(indexOfTaskToDelete);","lastModifiedDate":"2022-01-25"},{"lineNumber":211,"author":{"gitId":"1001mei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":212,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The index of task to unmark is not a valid integer\");","lastModifiedDate":"2022-02-12"},{"lineNumber":213,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":214,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":215,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":216,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":217,"author":{"gitId":"1001mei"},"content":"     * Parses a todo command.","lastModifiedDate":"2022-02-12"},{"lineNumber":218,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":219,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":220,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eAddToDoTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":221,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":222,"author":{"gitId":"1001mei"},"content":"    private Command parseToDoCommand(String arguments) {","lastModifiedDate":"2022-02-12"},{"lineNumber":223,"author":{"gitId":"1001mei"},"content":"        return new AddToDoTaskCommand(arguments);","lastModifiedDate":"2022-02-12"},{"lineNumber":224,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":225,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":226,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":227,"author":{"gitId":"1001mei"},"content":"     * Parses a deadline command.","lastModifiedDate":"2022-02-12"},{"lineNumber":228,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":229,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":230,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eAddDeadlineTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":231,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when the arguments are missing or in incorrect format.","lastModifiedDate":"2022-02-12"},{"lineNumber":232,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":233,"author":{"gitId":"1001mei"},"content":"    private Command parseDeadlineCommand(String arguments) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":234,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":235,"author":{"gitId":"1001mei"},"content":"            String[] deadlineTokens \u003d arguments.split(\" /by \");","lastModifiedDate":"2022-02-12"},{"lineNumber":236,"author":{"gitId":"1001mei"},"content":"            String description \u003d deadlineTokens[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":237,"author":{"gitId":"1001mei"},"content":"            LocalDate date \u003d LocalDate.parse(deadlineTokens[1]);","lastModifiedDate":"2022-02-12"},{"lineNumber":238,"author":{"gitId":"1001mei"},"content":"            return new AddDeadlineTaskCommand(description, date);","lastModifiedDate":"2022-02-12"},{"lineNumber":239,"author":{"gitId":"1001mei"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":240,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The date provided is invalid(or in wrong format)\");","lastModifiedDate":"2022-01-25"},{"lineNumber":241,"author":{"gitId":"1001mei"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":242,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Seems like the command is incomplete\");","lastModifiedDate":"2022-02-12"},{"lineNumber":243,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":244,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":245,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":246,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":247,"author":{"gitId":"1001mei"},"content":"     * Parses an event command.","lastModifiedDate":"2022-02-12"},{"lineNumber":248,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":249,"author":{"gitId":"1001mei"},"content":"     * @param arguments arguments to this command.","lastModifiedDate":"2022-02-12"},{"lineNumber":250,"author":{"gitId":"1001mei"},"content":"     * @return a \u003ccode\u003eAddEventTaskCommand\u003c/code\u003e instance.","lastModifiedDate":"2022-02-12"},{"lineNumber":251,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when the arguments are missing or in incorrect format.","lastModifiedDate":"2022-02-12"},{"lineNumber":252,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":253,"author":{"gitId":"1001mei"},"content":"    private Command parseEventCommand(String arguments) throws DukeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":254,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":255,"author":{"gitId":"1001mei"},"content":"            String[] eventTokens \u003d arguments.split(\" /at \");","lastModifiedDate":"2022-02-12"},{"lineNumber":256,"author":{"gitId":"1001mei"},"content":"            String description \u003d eventTokens[0];","lastModifiedDate":"2022-02-12"},{"lineNumber":257,"author":{"gitId":"1001mei"},"content":"            String at \u003d eventTokens[1];","lastModifiedDate":"2022-02-12"},{"lineNumber":258,"author":{"gitId":"1001mei"},"content":"            return new AddEventTaskCommand(description, at);","lastModifiedDate":"2022-02-12"},{"lineNumber":259,"author":{"gitId":"1001mei"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":260,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Seems like the command is incomplete\");","lastModifiedDate":"2022-01-25"},{"lineNumber":261,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":262,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":263,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":263}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import static java.nio.file.StandardOpenOption.CREATE;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import static java.nio.file.StandardOpenOption.TRUNCATE_EXISTING;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import static java.nio.file.StandardOpenOption.WRITE;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":" * This class acts as the interface between the application and the disk storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    private final Path path;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    public Storage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        filePath \u003d \"tasks.txt\";","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     * Gets the data stored in designated disk location.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     * @return an array of task records read from the disk file.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when the disk file cannot be read or its file format is incorrect.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"    public String[] loadTasksFromFile() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"            return new String[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"            BufferedReader bufferReader \u003d new BufferedReader(Files.newBufferedReader(path));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            int numberOfTasks \u003d Integer.parseInt(bufferReader.readLine());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"            assert numberOfTasks \u003e\u003d 0 : numberOfTasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            String[] data \u003d new String[numberOfTasks];","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"            for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"                data[i] \u003d bufferReader.readLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"            return data;","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"        } catch (NumberFormatException | AssertionError e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Encounter incorrect file format when reading \" + filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Failed to load tasks from \" + filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"     * Stores the task data into a designated disk location.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"     * @param data an array of task records to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when unable to create (or write to) the disk file.","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"    public void saveToFile(String... data) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"            BufferedWriter bufferedWriter \u003d Files.newBufferedWriter(","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"                    path, CREATE, TRUNCATE_EXISTING, WRITE);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"            bufferedWriter.write(String.valueOf(data.length));","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"            for (int i \u003d 0; i \u003c data.length; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"                bufferedWriter.write(data[i]);","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"1001mei"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"1001mei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Failed to write tasks to \" + filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":84}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":" * Represents a deadline task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"    private LocalDate by;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * @param description description of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param date deadline of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        by \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        return \"D,\" + super.toFileFormat() + \",\" + by + \",\" + getStatusIcon();","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents an event task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    private String at;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     * @param description description of this event.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * @param at the time of this event.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        return \"E,\" + super.toFileFormat() + \",\" + at + \",\" + getStatusIcon();","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents a task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    private String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     * Returns the icon representing the status (done/not done) of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * @return the icon representing the status (done/not done) of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        return (isDone ? \"X\" : \" \"); // mark task that is done with X","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public void mark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"     * Unmarks this task as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"        return description;","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a list of tasks that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    private int numberOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        numberOfTasks \u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * Populates this task list with the task data stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param data data read from storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException upon encountering incorrect format of data record.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    public void populateWith(String[] data) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"            for (int i \u003d 0; i \u003c data.length; i++) {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"                String[] tokens \u003d data[i].split(\",\");","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"                String taskType \u003d tokens[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"                String description \u003d tokens[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"                String additionalInfo \u003d tokens[2];","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"                boolean marked \u003d tokens[3].equals(\"X\");","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"                    tasks.add(new ToDo(description));","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"                    tasks.add(new Event(description, additionalInfo));","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"                    tasks.add(new Deadline(description, LocalDate.parse(additionalInfo)));","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"                    throw new IllegalArgumentException();","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"                numberOfTasks++;","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"                if (marked) {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"                    tasks.get(i).mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"        } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException | DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Encounter incorrect file format when loading tasks from storage\");","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"     * Returns the representation of this task list formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"     * @return the representation of this task list formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"    public String[] formatAsFileData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[numberOfTasks];","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"            data[i] \u003d tasks.get(i).toFileFormat();","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"        return data;","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"1001mei"},"content":"     * @return the number of tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"1001mei"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"1001mei"},"content":"        return numberOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"1001mei"},"content":"     * Checks if a task index is valid with respect to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"1001mei"},"content":"     * @param index task index.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"1001mei"},"content":"     * @return true if \u003ccode\u003eindex\u003c/code\u003e is in the valid range, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"1001mei"},"content":"    public boolean isValidTaskIndex(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"1001mei"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c numberOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of a designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"1001mei"},"content":"     * @param index task index.","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of a designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"1001mei"},"content":"    public String getDescriptionOfTaskAtIndex(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"1001mei"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : index;","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"1001mei"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"1001mei"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"1001mei"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"1001mei"},"content":"    public void addToDoTask(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"1001mei"},"content":"        Task toDoTask \u003d new ToDo(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"1001mei"},"content":"        tasks.add(toDoTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"1001mei"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"1001mei"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"1001mei"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"1001mei"},"content":"     * @param date deadline of the task expressed in date.","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"1001mei"},"content":"    public void addDeadlineTask(String description, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"1001mei"},"content":"        Task deadlineTask \u003d new Deadline(description, date);","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"1001mei"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"1001mei"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"1001mei"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"1001mei"},"content":"     * @param description description of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"1001mei"},"content":"     * @param at the time of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"1001mei"},"content":"    public void addEventTask(String description, String at) {","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"1001mei"},"content":"        Task eventTask \u003d new Event(description, at);","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"1001mei"},"content":"        tasks.add(eventTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"1001mei"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"1001mei"},"content":"     * Marks a designated task in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003etaskIndex\u003c/code\u003e is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"1001mei"},"content":"    public void markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"1001mei"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The task index provided is invalid\");","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"1001mei"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : taskIndex;","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"1001mei"},"content":"        tasks.get(taskIndex).mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"1001mei"},"content":"     * Unmarks a designated task in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003etaskIndex\u003c/code\u003e is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"1001mei"},"content":"    public void unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"1001mei"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The task index provided is invalid\");","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"1001mei"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : taskIndex;","lastModifiedDate":"2022-02-09"},{"lineNumber":166,"author":{"gitId":"1001mei"},"content":"        tasks.get(taskIndex).unmark();","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"1001mei"},"content":"     * Deletes a designated task from the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"1001mei"},"content":"     * @return the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003etaskIndex\u003c/code\u003e is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"1001mei"},"content":"    public Task deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"1001mei"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The task index provided is invalid\");","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"1001mei"},"content":"        Task taskToBeDeleted \u003d tasks.get(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"1001mei"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"1001mei"},"content":"        numberOfTasks--;","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"1001mei"},"content":"        return taskToBeDeleted;","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":188,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":189,"author":{"gitId":"1001mei"},"content":"     * Removes all tasks from the task list.","lastModifiedDate":"2022-02-02"},{"lineNumber":190,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":191,"author":{"gitId":"1001mei"},"content":"    public void clear() {","lastModifiedDate":"2022-02-02"},{"lineNumber":192,"author":{"gitId":"1001mei"},"content":"        while (numberOfTasks !\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":193,"author":{"gitId":"1001mei"},"content":"            tasks.remove(numberOfTasks - 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":194,"author":{"gitId":"1001mei"},"content":"            numberOfTasks--;","lastModifiedDate":"2022-02-02"},{"lineNumber":195,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"1001mei"},"content":"        assert numberOfTasks \u003d\u003d 0 : numberOfTasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":197,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":198,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":198}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents a todo task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"     * @param description description of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        return \"T,\" + super.toFileFormat() + \",,\" + getStatusIcon();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":35}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":" * This class acts as a interface between the user and the application.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"    private final ArrayList\u003cString\u003e buffer;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    public Ui() {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"        buffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * Adds the message from the application to buffer.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     * @param message message to be shown to user.","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        buffer.add(message);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * Adds the error message from the application to buffer.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param message error message to be shown to user.","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        buffer.add(\"Uh oh! \" + message + \" :(\");","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    public String getMessage() {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c buffer.size(); i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"            stringBuilder.append(buffer.get(i));","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        buffer.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"30.0\" minWidth\u003d\"30.0\" style\u003d\"-fx-padding: 0 10 0 10; -fx-background-radius: 5; -fx-background-insets: 1; -fx-background-color: lightgreen; -fx-font-size: 12px; -fx-font-family: fantasy;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"2.0\" right\u003d\"0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"1001mei":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"380.0\" style\u003d\"-fx-background-color: cornsilk;\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"1001mei":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public void parse_invalidMarkCommandFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"            new Parser().parse(\"mark ??\");","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"The index of task to mark is not a valid integer\");","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public void parse_incompleteMarkCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"            new Parser().parse(\"mark\");","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"Seems like the command is incomplete\");","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public void parse_invalidDeadlineCommandFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"            new Parser().parse(\"deadline iP /by 2022-99-01\");","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"The date provided is invalid(or in wrong format)\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"    public void parse_invalidCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"            new Parser().parse(\"bruh\");","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":50}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public void populateWith_legalData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,2022-01-31, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    public void populateWith_illegalData_exceptionThrown() {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,helloError, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"Encounter incorrect file format when loading tasks from storage\");","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    public void getNumberOfTasks_emptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        assertEquals(0, taskList.getNumberOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    public void getNumberOfTasks_nonEmptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,2022-01-31, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"        assertEquals(3, taskList.getNumberOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"    public void isValidTaskIndex_emptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(-1));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"    public void isValidTaskIndex_nonEmptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,2022-01-31, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(-1));","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(4));","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(3));","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"        assertEquals(true, taskList.isValidTaskIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"        assertEquals(true, taskList.isValidTaskIndex(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"        assertEquals(true, taskList.isValidTaskIndex(2));","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"todo watch news","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"deadline do the laundry /by tomorrow","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"event attend lecture /at 2pm","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"1001mei":9}}]
