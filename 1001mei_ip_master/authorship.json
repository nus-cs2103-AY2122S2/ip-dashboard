[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"import duke.command.SetupCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * This class is the main controller of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * Coordinates the interactions between various other classes to accomplish the logic","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param args not used.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"            new SetupCommand().execute(ui, taskList, storage);","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"            ui.showErrorMessage(exception.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        boolean isQuitting \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"        while (!isQuitting) {","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"            try {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"                String cmd \u003d ui.getCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"                Command command \u003d Parser.parse(cmd);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"                command.execute(ui, taskList, storage);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"                isQuitting \u003d command.isBye();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"                ui.showErrorMessage(exception.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"1001mei":38,"-":4}},{"path":"src/main/java/duke/command/AddDeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed adds a deadline task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class AddDeadlineTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     * @param date deadline of the task expressed in date.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public AddDeadlineTaskCommand(String description, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003eaddDeadlineTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to add a deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        taskList.addDeadlineTask(description, date);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        int taskIndex \u003d taskList.getNumberOfTasks() - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":44}},{"path":"src/main/java/duke/command/AddEventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed adds an event task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class AddEventTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    private final String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    private final String at;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param description description of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param at the time of the event expressed in a \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public AddEventTaskCommand(String description, String at) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003eaddEventTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to add an event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        taskList.addEventTask(description, at);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        int taskIndex \u003d taskList.getNumberOfTasks() - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":42}},{"path":"src/main/java/duke/command/AddToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed adds a todo task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class AddToDoTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    private final String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    public AddToDoTaskCommand(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003eaddToDoTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to add a todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"        taskList.addToDoTask(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        int taskIndex \u003d taskList.getNumberOfTasks() - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":39}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed prepares the application for exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Prompts \u003ccode\u003eui\u003c/code\u003e to show goodbye message to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * After that, gets the formatted task list from \u003ccode\u003etaskList\u003c/code\u003e ","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * and directs \u003ccode\u003estorage\u003c/code\u003e to store it into disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        ui.sayBye();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        storage.saveToFile(taskList.formatAsFileData());","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * Checks if this command is a goodbye command.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * @return true.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    public boolean isBye() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":37}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a general command that is the superclass of all classes representing a specific command.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Carries out the actions correspond to this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public abstract void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * Checks if this command is a goodbye command.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * @return false.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    public boolean isBye() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":30}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed deletes a designated task from task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be deleted. ","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003edeleteTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to delete the designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Noted. I have deleted this task:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(deletedTask.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":41}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed finds all tasks in the task list that matches a keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final String keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param keyword keyword used to match tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * Finds all tasks in \u003ccode\u003etaskList\u003c/code\u003e that matches the designated keyword.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display those tasks to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        ArrayList\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        int numberOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"            String taskDescription \u003d taskList.getDescriptionOfTaskAtIndex(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"                matches.add(taskDescription);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(\"There are no matching tasks in your list\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(\"Here are the matching tasks in your list\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"            for (String description : matches) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"                ui.showMessage(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"1001mei":53}},{"path":"src/main/java/duke/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed displays to the user all tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     * Gets all tasks from \u003ccode\u003etaskList\u003c/code\u003e, then prompts \u003ccode\u003eui\u003c/code\u003e to display them.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        int numberOfTasks \u003d taskList.getNumberOfTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"        if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(\"Congratulations! There are no tasks in your list :)\");","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"            return;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"            ui.showMessage(String.format(\"%d. %s\", i + 1, taskList.getDescriptionOfTaskAtIndex(i)));","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":32}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed marks a designated task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public MarkTaskCommand(int taskIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003emarkTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to mark the designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        taskList.markTask(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":39}},{"path":"src/main/java/duke/command/SetupCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed prepares the application for getting commands from user.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class SetupCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Loads the data stored in disk (if any) into \u003ccode\u003etaskList\u003c/code\u003e.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to greet the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        taskList.populateWith(storage.loadTasksFromFile());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        ui.greet();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":26}},{"path":"src/main/java/duke/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":" * Represents a command that when executed unmarks a designated task as not done yet.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public UnmarkTaskCommand(int taskIndex) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Invokes \u003ccode\u003emarkTask\u003c/code\u003e method of \u003ccode\u003etaskList\u003c/code\u003e to unmark the designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * After that, prompts \u003ccode\u003eui\u003c/code\u003e to display response messages to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param ui user interface of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @param taskList task list of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @param storage disk storage of the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when an exception is thrown in the process of executing this command.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        taskList.unmarkTask(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        ui.showMessage(taskList.getDescriptionOfTaskAtIndex(taskIndex));","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents exceptions specific to this application.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"     * @param errorMessage error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"1001mei":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import duke.command.AddDeadlineTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.command.AddEventTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import duke.command.AddToDoTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"import duke.command.FindTaskCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"import duke.command.ListTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"import duke.command.MarkTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"import duke.command.UnmarkTaskCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":" * This class acts as a parser that parses user inputs into specific commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    private static final int OFFSET \u003d 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * Parses the input string entered by user into a command known to the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param command the command entered by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @return a command to be executed by the application.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003ecommand\u003c/code\u003e is invalid or its format is incorrect.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"        String[] commandTokens \u003d command.split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"            switch (commandTokens[0]) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"            case \"list\":","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"                return new ListTaskCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"            case \"find\":","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"                return new FindTaskCommand(commandTokens[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"                int indexOfTaskToMark \u003d Integer.parseInt(commandTokens[1]) - OFFSET;","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"                return new MarkTaskCommand(indexOfTaskToMark);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"                int indexOfTaskToUnmark \u003d Integer.parseInt(commandTokens[1]) - OFFSET;","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"                return new UnmarkTaskCommand(indexOfTaskToUnmark);","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"                int indexOfTaskToDelete \u003d Integer.parseInt(commandTokens[1]) - OFFSET;","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"                return new DeleteTaskCommand(indexOfTaskToDelete);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"                return new AddToDoTaskCommand(commandTokens[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"                String[] deadlineTokens \u003d commandTokens[1].split(\" /by \");","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"                LocalDate date \u003d LocalDate.parse(deadlineTokens[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"                return new AddDeadlineTaskCommand(deadlineTokens[0], date);","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"            case \"event\":","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"                String[] eventTokens \u003d commandTokens[1].split(\" /at \");","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"                return new AddEventTaskCommand(eventTokens[0], eventTokens[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"            default:","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The date provided is invalid(or in wrong format)\");","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The index of task to \" + commandTokens[0] + \" is not a valid integer\");","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Seems like the command is incomplete\");","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":71}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import static java.nio.file.StandardOpenOption.CREATE;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import static java.nio.file.StandardOpenOption.TRUNCATE_EXISTING;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import static java.nio.file.StandardOpenOption.WRITE;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":" * This class acts as the interface between the application and the disk storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    private final Path path;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    public Storage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        filePath \u003d \"tasks.txt\";","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     * Gets the data stored in designated disk location. ","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     * @return an array of task records read from the disk file.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when the disk file cannot be read or its file format is incorrect. ","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"    public String[] loadTasksFromFile() throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"            return new String[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"            BufferedReader bufferReader \u003d new BufferedReader(Files.newBufferedReader(path));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"            ","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            int numberOfTasks \u003d Integer.parseInt(bufferReader.readLine());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"            String[] data \u003d new String[numberOfTasks];","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            ","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"            for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"                data[i] \u003d bufferReader.readLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"            ","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"            return data;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Encounter incorrect file format when reading \" + filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Failed to load tasks from \" + filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"     * Stores the task data into a designated disk location.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"     * @param data an array of task records to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when unable to create (or write to) the disk file. ","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"    public void saveToFile(String... data) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"            BufferedWriter bufferedWriter \u003d Files.newBufferedWriter(","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"                    path, CREATE, TRUNCATE_EXISTING, WRITE);","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"            ","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"            bufferedWriter.write(String.valueOf(data.length));","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"            for (int i \u003d 0; i \u003c data.length; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"                bufferedWriter.write(data[i]);","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"1001mei"},"content":"            ","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"1001mei"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"1001mei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Failed to write tasks to \" + filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":83}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":" * Represents a deadline task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"    private LocalDate by;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"     * @param description description of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"     * @param date deadline of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        by \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        return \"D,\" + super.toFileFormat() + \",\" + by + \",\" + getStatusIcon();","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        return \"[D]\" + super.toString() + \" (by: \" ","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents an event task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    private String at;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     * @param description description of this event.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * @param at the time of this event.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"        return \"E,\" + super.toFileFormat() + \",\" + at + \",\" + getStatusIcon();","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents a task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    private String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"     * Returns the icon representing the status (done/not done) of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"     * @return the icon representing the status (done/not done) of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        return (isDone ? \"X\" : \" \"); // mark task that is done with X","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public void mark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"     * Unmarks this task as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"        return description;","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":" * Represents a list of tasks that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    private int numberOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"        numberOfTasks \u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"     * Populates this task list with the task data stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * @param data data read from storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException upon encountering incorrect format of data record.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    public void populateWith(String[] data) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"            numberOfTasks \u003d data.length;","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"            for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"                String tokens[] \u003d data[i].split(\",\");","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"                if (tokens[0].equals(\"T\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"                    tasks.add(new ToDo(tokens[1]));","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"                } else if (tokens[0].equals(\"E\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"                    tasks.add(new Event(tokens[1], tokens[2]));","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"                } else if (tokens[0].equals(\"D\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"                    tasks.add(new Deadline(tokens[1], LocalDate.parse(tokens[2])));","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"                    throw new IllegalArgumentException();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"                if (tokens[3].equals(\"X\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"                    tasks.get(i).mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"        } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException | DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"Encounter incorrect file format when loading tasks from storage\");","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"     * Returns the representation of this task list formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"     * @return the representation of this task list formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"    public String[] formatAsFileData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[numberOfTasks];","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"            data[i] \u003d tasks.get(i).toFileFormat();","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"        return data;","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"     * @return the number of tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"        return numberOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"     * Checks if a task index is valid with respect to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"1001mei"},"content":"     * @param index task index.","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"1001mei"},"content":"     * @return true if \u003ccode\u003eindex\u003c/code\u003e is in the valid range, false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"1001mei"},"content":"    public boolean isValidTaskIndex(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"1001mei"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c numberOfTasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of a designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"1001mei"},"content":"     * @param index task index.","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of a designated task.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"1001mei"},"content":"    public String getDescriptionOfTaskAtIndex(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"1001mei"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"1001mei"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"1001mei"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"1001mei"},"content":"    public void addToDoTask(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"1001mei"},"content":"        Task toDoTask \u003d new ToDo(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"1001mei"},"content":"        tasks.add(toDoTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"1001mei"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"1001mei"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"1001mei"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"1001mei"},"content":"     * @param date deadline of the task expressed in date.","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"1001mei"},"content":"    public void addDeadlineTask(String description, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"1001mei"},"content":"        Task deadlineTask \u003d new Deadline(description, date);","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"1001mei"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"1001mei"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"1001mei"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"1001mei"},"content":"     * @param description description of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"1001mei"},"content":"     * @param at the time of the event task.","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"1001mei"},"content":"    public void addEventTask(String description, String at) {","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"1001mei"},"content":"        Task eventTask \u003d new Event(description, at);","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"1001mei"},"content":"        tasks.add(eventTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"1001mei"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"1001mei"},"content":"     * Marks a designated task in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003etaskIndex\u003c/code\u003e is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"1001mei"},"content":"    public void markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"1001mei"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The task index provided is invalid\");","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"1001mei"},"content":"        tasks.get(taskIndex).mark();","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"1001mei"},"content":"     * Unmarks a designated task in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003etaskIndex\u003c/code\u003e is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"1001mei"},"content":"    public void unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"1001mei"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The task index provided is invalid\");","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"1001mei"},"content":"        tasks.get(taskIndex).unmark();","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"1001mei"},"content":"     * Deletes a designated task from the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"1001mei"},"content":"     * @param taskIndex index of the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"1001mei"},"content":"     * @return the task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"1001mei"},"content":"     * @throws DukeException when \u003ccode\u003etaskIndex\u003c/code\u003e is invalid.","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"1001mei"},"content":"    public Task deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"1001mei"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"1001mei"},"content":"            throw new DukeException(\"The task index provided is invalid\");","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"1001mei"},"content":"        Task taskToBeDeleted \u003d tasks.get(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"1001mei"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"1001mei"},"content":"        numberOfTasks--;","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"1001mei"},"content":"        return taskToBeDeleted;","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":176}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":" * Represents a todo task that needs to be done.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"     * Class constructor.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"     * ","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"     * @param description description of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task formatted as the way it is to be stored in disk.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        return \"T,\" + super.toFileFormat() + \",,\" + getStatusIcon();    ","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"1001mei":35}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"    private static final String DELIMITER \u003d \"*******************************************************\";","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"    private final Scanner in;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"    public Ui() {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"        out \u003d System.out;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"    public void greet() {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        out.println(logo);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    public String getCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"        out.println(DELIMITER);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"        out.print(\"Enter your command: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"        ","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"        return command;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"    public void sayBye() {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        out.println(message);","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        out.println(\"Uh oh! \" + message + \" :(\");","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":48}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public void parse_invalidMarkCommandFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"            Parser.parse(\"mark ??\");","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"The index of task to mark is not a valid integer\");","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    public void parse_incompleteMarkCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"Seems like the command is incomplete\");","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    public void parse_invalidDeadlineCommandFormat() {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"            Parser.parse(\"deadline iP /by 2022-99-01\");","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"The date provided is invalid(or in wrong format)\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"    public void parse_invalidCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"            Parser.parse(\"bruh\");","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":50}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"1001mei"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"1001mei"},"content":"    public void populateWith_legalData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,2022-01-31, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"1001mei"},"content":"    public void populateWith_IllegalData_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,helloError, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"1001mei"},"content":"            assertEquals(e.getMessage(), \"Encounter incorrect file format when loading tasks from storage\");","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"1001mei"},"content":"    public void getNumberOfTasks_emptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"1001mei"},"content":"        assertEquals(0, taskList.getNumberOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"1001mei"},"content":"    public void getNumberOfTasks_nonEmptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,2022-01-31, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"1001mei"},"content":"        assertEquals(3, taskList.getNumberOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"1001mei"},"content":"    public void isValidTaskIndex_emptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(-1));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"1001mei"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"1001mei"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"1001mei"},"content":"    public void isValidTaskIndex_nonEmptyList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"1001mei"},"content":"        String[] data \u003d new String[] {\"T,task1,, \", \"E,task2,8pm,X\", \"D,task3,2022-01-31, \"};","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"1001mei"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"1001mei"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"1001mei"},"content":"            taskList.populateWith(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"1001mei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"1001mei"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"1001mei"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(-1));","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(4));","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"1001mei"},"content":"        assertEquals(false, taskList.isValidTaskIndex(3));","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"1001mei"},"content":"        assertEquals(true, taskList.isValidTaskIndex(0));","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"1001mei"},"content":"        assertEquals(true, taskList.isValidTaskIndex(1));","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"1001mei"},"content":"        assertEquals(true, taskList.isValidTaskIndex(2));","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"1001mei"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"1001mei"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"1001mei":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"1001mei"},"content":"todo watch news","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"1001mei"},"content":"deadline do the laundry /by tomorrow","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"1001mei"},"content":"event attend lecture /at 2pm","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"1001mei"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"1001mei"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"1001mei"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"1001mei"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"1001mei"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"1001mei"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"1001mei":9}}]
