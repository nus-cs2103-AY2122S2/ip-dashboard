[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"# duke.duke.Duke project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"3. After that, locate the `src/main/java/duke.duke.Duke.java` file, right-click it, and choose `Run duke.duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"KeithCZW":2}},{"path":"data/save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"T|0|test","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"T|0|toilet","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"KeithCZW":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import duke.task.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":" * Duke class used for running the Duke chat bot","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"    private final Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor for Duke","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     * @param fileName File name to give save data","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"            tasks \u003d new TaskList(storage.ParseFile());","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"            ui.sayMessage(e.getErrorMsg());","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"     * Main function","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"     * @param args arguments to pass in","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"        new Duke(\"save.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"     * Our pseudo main function that basically handles all functionality of duke","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"     * All input handling and parsing is handled by respective classes","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"        boolean isExit \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        while (isExit) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"            try {","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"                Parser.RESULT parseResult \u003d parser.parseInput(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"                switch (parseResult) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"                case BYE:","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"                    ui.sayGoodbye();","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"                    storage.OverwriteFile(tasks.getTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"                    isExit \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"                case LIST:","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"                    ui.listTasks(tasks);","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"                case MARK: {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"                    int index \u003d parser.parseIndex(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"                    if (index \u003c tasks.getTasks().size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"                        tasks.markTaskDone(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"                        ui.sayMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTask(index).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"                    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"                        throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"                    storage.OverwriteFile(tasks.getTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"                case UNMARK: {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"                    int index \u003d parser.parseIndex(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"                    if (index \u003c tasks.getTasks().size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"                        tasks.markTaskNotDone(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"                        ui.sayMessage(\"Nice! I\u0027ve marked this task as not done:\\n\" + tasks.getTask(index).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"                    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"                        throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"                    storage.OverwriteFile(tasks.getTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"                case DELETE:","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"                    int index \u003d parser.parseIndex(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"                    if (index \u003c tasks.getTasks().size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"                        Task removedTask \u003d tasks.removeTask(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"                        ui.sayMessage(\"Noted. I\u0027ve removed this task:\\n\" + removedTask.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"                    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"                        throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"                    storage.OverwriteFile(tasks.getTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"                case TODO: {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"KeithCZW"},"content":"                    Todo newTodo \u003d new Todo(parser.parseTodo(input));","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"KeithCZW"},"content":"                    tasks.addTask(newTodo);","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"KeithCZW"},"content":"                    ui.sayMessage(","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"KeithCZW"},"content":"                            \"Got it. I\u0027ve added this task:\\n\" + newTodo + \"\\n\" + \"Now you have \" + tasks.getTasks()","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"KeithCZW"},"content":"                                    .size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"KeithCZW"},"content":"                    storage.OverwriteFile(tasks.getTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"KeithCZW"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"KeithCZW"},"content":"                case DEADLINE:","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"KeithCZW"},"content":"                    String[] deadlineInput \u003d parser.parseDeadline(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"KeithCZW"},"content":"                    Deadline newDeadline \u003d new Deadline(deadlineInput[0], deadlineInput[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"KeithCZW"},"content":"                    tasks.addTask(newDeadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"KeithCZW"},"content":"                    ui.sayMessage(","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"KeithCZW"},"content":"                            \"Got it. I\u0027ve added this task:\\n\" + newDeadline + \"\\n\" + \"Now you have \" + tasks.getTasks()","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"KeithCZW"},"content":"                                    .size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"KeithCZW"},"content":"                    storage.OverwriteFile(tasks.getTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"KeithCZW"},"content":"                case EVENT:","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"KeithCZW"},"content":"                    String[] eventInput \u003d parser.parseEvent(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"KeithCZW"},"content":"                    Event newEvent \u003d new Event(eventInput[0], eventInput[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"KeithCZW"},"content":"                    tasks.addTask(newEvent);","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"KeithCZW"},"content":"                    ui.sayMessage(","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"KeithCZW"},"content":"                            \"Got it. I\u0027ve added this task:\\n\" + newEvent + \"\\n\" + \"Now you have \" + tasks.getTasks()","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"KeithCZW"},"content":"                                    .size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"KeithCZW"},"content":"                    storage.OverwriteFile(tasks.getTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"KeithCZW"},"content":"                case FIND:","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"KeithCZW"},"content":"                    String word \u003d parser.parseFind(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"KeithCZW"},"content":"                    ui.listTasks(tasks.findTasks(word));","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"KeithCZW"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"KeithCZW"},"content":"                case ERROR:","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"KeithCZW"},"content":"                    throw new DukeException(\"Sorry :( I don\u0027t know what this means.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"KeithCZW"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"KeithCZW"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"KeithCZW"},"content":"                ui.sayMessage(e.getErrorMsg());","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"KeithCZW":131}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":" * Class used to handle exceptions/errors during runtime","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"    private final String errorMsg;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"     * Constructor for DukeException","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"     * @param msg Message to pass into the exception","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"        this.errorMsg \u003d msg;","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     * Gets the error message assigned to DukeException","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * @return The error message","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"    public String getErrorMsg() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        return errorMsg;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"KeithCZW":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":" * Parser class which is used to parse user input into a form Duke can understand","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"    public Parser() {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"     * Parses the initial input from user and outputs a RESULT","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"     * RESULT is used in Duke class to handle actions","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"     * @param input User input","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"     * @return RESULT of what action to run","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    public RESULT parseInput(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.BYE;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.LIST;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        } else if (split[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        } else if (split[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.UNMARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"        } else if (split[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.DELETE;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"        } else if (split[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"        } else if (split[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        } else if (split[0].equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"        } else if (split[0].equals(\"find\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"            return RESULT.FIND;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"        return RESULT.ERROR;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"     * Used to parse user input to figure out what index user is specifying","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"     * Used in conjunction with mark/unmark/delete","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"     * @param input User input","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"     * @return Index of object user is trying to mark/unmark/delete","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws when user enters invalid number","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"    public int parseIndex(String input) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"                throw new DukeException(\"What is this? Missing number!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"                return Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"That\u0027s not a number\");","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"     * Runs when user tries to create a Todo object","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"     * Parses the user input and splits it up for the Todo object to read","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"     * @param input User input","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"     * @return Todo description","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException If user enters invalid input, throws an exception","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"    public String parseTodo(String input) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"OH NO! The description of event cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"            return input.replace(\"todo \", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"     * Runs when user tries to create a Deadline object","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"     * Parses the user input and splits it up for the Deadline object to read","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"     * @param input User input","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"     * @return String array, String[0] contains description and String[0] contains date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws when user inputs invalid description or date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"    public String[] parseDeadline(String input) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"OH NO! The description of deadline cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"KeithCZW"},"content":"            String[] newSplit \u003d input.split(\" /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"KeithCZW"},"content":"            if (newSplit.length \u003e 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"KeithCZW"},"content":"                newSplit[0] \u003d newSplit[0].replace(\"deadline \", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"KeithCZW"},"content":"                return newSplit;","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"KeithCZW"},"content":"                throw new DukeException(\"You are missing the date!.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"KeithCZW"},"content":"     * Runs when user tries to create a Event object","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"KeithCZW"},"content":"     * Parses the user input and splits it up for the Event object to read","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"KeithCZW"},"content":"     * @param input User input","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"KeithCZW"},"content":"     * @return String array, String[0] contains description and String[0] contains date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws when user inputs invalid description or date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"KeithCZW"},"content":"    public String[] parseEvent(String input) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"KeithCZW"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"KeithCZW"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"OH NO! The description of deadline cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"KeithCZW"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"KeithCZW"},"content":"            String[] newSplit \u003d input.split(\" /at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"KeithCZW"},"content":"            if (newSplit.length \u003e 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"KeithCZW"},"content":"                newSplit[0] \u003d newSplit[0].replace(\"event \", \"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"KeithCZW"},"content":"                return newSplit;","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"KeithCZW"},"content":"                throw new DukeException(\"You are missing the date!.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"KeithCZW"},"content":"     * When user tries to find a task, this is used to parse user input","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"KeithCZW"},"content":"     * @param input User input","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"KeithCZW"},"content":"     * @return Keyword user has inputted","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws when missing a keyword","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"KeithCZW"},"content":"    public String parseFind(String input) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"KeithCZW"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"KeithCZW"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"OH NO! The you are missing the keyword!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"KeithCZW"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"KeithCZW"},"content":"            return split[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"KeithCZW"},"content":"     * Enum which holds all the various user commands","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"KeithCZW"},"content":"    public enum RESULT {","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"KeithCZW"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, ERROR, FIND","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"KeithCZW":151}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import java.io.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"import java.util.List;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":" * Storage class which is used to handle file loading/saving","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    private final String DATA_PATH \u003d \"data\";","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"    private final String fileName;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor for Storage","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * Creates the directory for the filename passed in","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"     * @param fileName Name of the save/load file","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        File directory \u003d new File(DATA_PATH);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"            directory.mkdir();","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"     * Appends to the specified file in text","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"     * @param text The text to pass into the file","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"    public void WriteToFile(String text) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"            File myFile \u003d new File(DATA_PATH + \"/\" + fileName);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"            FileWriter fw \u003d new FileWriter(myFile, true); // Boolean is for append mode","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"            fw.write(text);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"            fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"            System.out.println(\"An error occurred while writing to file\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"     * Completely overwrites the file with the contents in the taskList","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"     * Translates each task into a string representation and writes them into the file","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"     * @param tasks The tasks that will overwrite the file","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"    public void OverwriteFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"            File myFile \u003d new File(DATA_PATH + \"/\" + fileName);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"            FileWriter fw \u003d new FileWriter(myFile); // Boolean is for append mode","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"            String text \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"                text +\u003d tasks.get(i).getFileString();","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"            fw.write(text);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"            fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"            System.out.println(\"An error occurred while writing to file\");","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"     * Parses the file and outputs a List of Tasks based on the file","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"     * @return List of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws when file cannot be read","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"    public List\u003cTask\u003e ParseFile() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"            File myFile \u003d new File(DATA_PATH + \"/\" + fileName);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"            if (myFile.exists()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"                BufferedReader br \u003d new BufferedReader(new FileReader(myFile));","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"                String tempLine;","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"                List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"                while ((tempLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"                    // Split[0] \u003d identifier, [1] \u003d isDone, [2] \u003d Description, [3] \u003d at or by","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"                    String[] split \u003d tempLine.split(\"\\\\|\");","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"                    if (split[0].equals(\"T\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"                        list.add(new Todo(split[2], split[1].equals(\"1\")));","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"                    } else if (split[0].equals(\"D\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"                        list.add(new Deadline(split[2], split[1].equals(\"1\"), split[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"                    } else if (split[0].equals(\"E\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"                        list.add(new Event(split[2], split[1].equals(\"1\"), split[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"                br.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"KeithCZW"},"content":"                return list;","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"KeithCZW"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"KeithCZW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"An error occurred while reading file\");","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"KeithCZW":103}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":" * Ui class which prints all the user interface","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"    private static final String LINES \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor for Ui class","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"    Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * Shows the introduction to Duke","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"     * Shows the goodbye message","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES + \"\\nBye. Hope to see you again soon!\\n\" + LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"     * Prints the message passed into the function wrapped between lines","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"     * @param s Message to print","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"    public void sayMessage(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES + \"\\n\" + s + \"\\n\" + LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"     * Prints all the tasks passed into the function","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"     * @param tasks List of tasks to print","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"        List\u003cTask\u003e list \u003d tasks.getTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"            System.out.println((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"    public void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"        System.out.println(LINES);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"KeithCZW":68}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":" * Deadline task that inherits from Task","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor of Deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description of deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * @param by          Time/Date of deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws if given invalid date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"            String[] split \u003d by.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"            this.by \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"            if (split.length \u003e 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"                time \u003d LocalTime.parse(split[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"                time \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"Invalid date\");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded Deadline constructor that takes in extra isDone variable","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"     * to set whether deadline is done","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description of deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"     * @param isDone      Whether deadline isDone","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"     * @param by          Time/Date of deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws if given invalid date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"    public Deadline(String description, boolean isDone, String by) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"            String[] split \u003d by.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"            this.by \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"            if (split.length \u003e 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"                time \u003d LocalTime.parse(split[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"                time \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"Invalid date\");","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"     * Getter for time/date of deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"     * @return time/date","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"    public String getBy() {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"        return by.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded toString function which returns string representation of Deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"     * @return String representation of deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + (","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"                time !\u003d null ? (\" \" + time.format(DateTimeFormatter.ofPattern(\"HH:mm\"))) : \"\") + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded getFileString function which returns a string representation of Deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"     * such that the parser is able to read or write the contents into a file","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"     * @return Parser-enabled string representation of Deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"    public String getFileString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"        return \"D|\" + (isDone \u003d\u003d true ? \"1|\" : \"0|\") + getDescription() + \"|\" + getBy() + (","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"                time !\u003d null ? (\" \" + time) : \"\") + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"KeithCZW":94}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":" * Event task that inherits from Task","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor of Event","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description of event","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * @param at          Time/Date of event","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws if given invalid date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"            String[] split \u003d at.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"            this.at \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"            if (split.length \u003e 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"                time \u003d LocalTime.parse(split[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"                time \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"Invalid date/time\");","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded Event constructor that takes in extra isDone variable","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"     * to set whether event is done","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description of event","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"     * @param isDone      Whether event isDone","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"     * @param at          Time/Date of event","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"     * @throws DukeException Throws if given invalid date/time","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"    public Event(String description, boolean isDone, String at) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"            String[] split \u003d at.split(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"            this.at \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"            if (split.length \u003e 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"                time \u003d LocalTime.parse(split[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"                time \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"            throw new DukeException(\"Invalid date/time\");","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"     * Getter for time/date of event","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"     * @return time/date","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"    public String getAt() {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"        return at.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded toString function which returns string representation of Event","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"     * @return String representation of event","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + (","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"                time !\u003d null ? (\" \" + time.format(DateTimeFormatter.ofPattern(\"HH:mm\"))) : \"\") + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded getFileString function which returns a string representation of Event","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"     * such that the parser is able to read or write the contents into a file","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"     * @return Parser-enabled string representation of Event","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"    public String getFileString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"        return \"E|\" + (isDone \u003d\u003d true ? \"1|\" : \"0|\") + getDescription() + \"|\" + getAt() + (","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"                time !\u003d null ? (\" \" + time) : \"\") + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"KeithCZW":94}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":" * Task class that is inherited by Deadline,Event,Todo","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor for task","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"     * isDone is default false","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description for task","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded constructor for task","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description for task","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"     * @param isDone      Sets whether task is done","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"     * Gets description of task","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"     * @return String description of task","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"        return this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"     * Returns icon for whether task is done","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"     * X for done, empty for not done","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"     * @return X or Nothing","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"     * Sets isDone to true","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"     * Sets isDone to false","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded toString function","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"     * String with status icon and description","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"     * @return returns task as a string","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"     * Empty getFileString function for child classes","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"     * @return Nothing","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"    public String getFileString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"        return \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"KeithCZW":84}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":" * TaskList class which handles List manipulation for Tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor for TaskList","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"     * Initialises an empty List","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded constructor for TaskList","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     * Passed in task overwrites the list","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"     * @param tasks list to overwrite in TaskList","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"     * Returns the list","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"     * @return the task list","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"        return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"     * Marks the task at index as done","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"     * @param index index of task to mark","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    public void markTaskDone(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"KeithCZW"},"content":"     * Marks the task at index as not done","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"KeithCZW"},"content":"     * @param index index of task to unmark","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"KeithCZW"},"content":"    public void markTaskNotDone(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"KeithCZW"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"KeithCZW"},"content":"     * Returns the task at index","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"KeithCZW"},"content":"     * @param index index of task","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"KeithCZW"},"content":"     * @return task at index","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"KeithCZW"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"KeithCZW"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"KeithCZW"},"content":"     * Removes the task at index in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"KeithCZW"},"content":"     * @param index index of task","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"KeithCZW"},"content":"     * @return removed task","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"KeithCZW"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"KeithCZW"},"content":"        return tasks.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"KeithCZW"},"content":"     * Add the specified task into the back of the list","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"KeithCZW"},"content":"     * @param task Task to add into list","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"KeithCZW"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"KeithCZW"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"KeithCZW"},"content":"    public List\u003cTask\u003e findTasks(String word) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"KeithCZW"},"content":"        List\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"KeithCZW"},"content":"        for (int i \u003d 0 ;i \u003c tasks.size();i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"KeithCZW"},"content":"            if (tasks.get(i).getDescription().contains(word)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"KeithCZW"},"content":"                tempTasks.add(tasks.get(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"KeithCZW"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"KeithCZW"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"KeithCZW"},"content":"        return tempTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"KeithCZW":96}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":" * Todo task that inherits from Task","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"     * Default constructor for Todo","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description for Todo","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded constructor for Todo","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"     * Allows for passing in whether task is done","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"     * @param description Description for Todo","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"     * @param isDone      Whether the task is done","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded toString function","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"KeithCZW"},"content":"     * @return Returns a string representation for the task","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"KeithCZW"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"KeithCZW"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"KeithCZW"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"KeithCZW"},"content":"     * Overloaded getFileString function","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"KeithCZW"},"content":"     * Used in writing to file in a format that the parser will be able to parse","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"KeithCZW"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"KeithCZW"},"content":"     * @return A string representation of the task that the parser can understand","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"KeithCZW"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"KeithCZW"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"KeithCZW"},"content":"    public String getFileString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"KeithCZW"},"content":"        return \"T|\" + (isDone \u003d\u003d true ? \"1|\" : \"0|\") + getDescription() + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"KeithCZW":48}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"    public void testGetDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"        String text \u003d \"Trick\";","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"KeithCZW"},"content":"        Task testTask \u003d new Task(text);","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(text, testTask.getDescription());","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"KeithCZW"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"KeithCZW"},"content":"        Task testTask \u003d new Task(\"stuff\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(\"X\", testTask.getStatusIcon());","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"KeithCZW"},"content":"        testTask \u003d new Task(\"stuff\", false);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(\" \", testTask.getStatusIcon());","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"KeithCZW"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"KeithCZW"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"KeithCZW"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"KeithCZW"},"content":"        Task testTask \u003d new Task(\"stuff\", true);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"KeithCZW"},"content":"        assertEquals(\"[X] stuff\", testTask.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"KeithCZW"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"KeithCZW"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"KeithCZW":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KeithCZW"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"KeithCZW"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"KeithCZW"},"content":"deadline return book /by Today","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"event attend toilet /at Home","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"KeithCZW"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"KeithCZW"},"content":"mark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"KeithCZW"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"KeithCZW"},"content":"unmark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"KeithCZW"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"KeithCZW":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"KeithCZW"},"content":"if not exist ../bin mkdir ../bin","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KeithCZW"},"content":"java -classpath ..\\bin duke.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"KeithCZW":2}}]
