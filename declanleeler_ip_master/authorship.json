[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * Duke is an interactive bot that helps the user to note down important tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"public class Duke {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    private TaskMaster taskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        duke.run();","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * @param filePath the location of a textfile containing the user\u0027s list of tasks, relative to the root directory.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        this.taskMaster \u003d new TaskMaster(storage.loadTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"     * Kickstarts the Duke bot to begin taking in and reacting to user input.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    public void run() {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"        ui.greet();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"                String[] userCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"                Command command \u003d Parser.parse(userCommand[0], userCommand[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"                command.execute(this.taskMaster, this.ui, this.storage);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"                System.out.println(e);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":48}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.command.*;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * Parser deals with understanding the user\u0027s input and create the correspondign Command to deal with the request.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"     * Parses a single line from the user input that is broken up into 2 strings. The first string is the first","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"     * command word, and the second string is the details of the command. From here, the command word is checked to","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * decide on whether to respond with an appropriate command, or an exception if the command is not recognized.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * @param cmd the first word in a line from the user\u0027s input","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * @param details the subsequent words in the same line from the user","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * @return an appropriate Command based on the user\u0027s request","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    public static Command parse(String cmd, String details) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        switch (cmd) {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        case \"list\":","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"            return new MarkCommand(details, true);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"            return new MarkCommand(details, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"            return new DeleteCommand(details);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"            return new AddCommand(details);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        case \"event\":","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"            return new AddCommand(cmd, details);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"            return new FindCommand(details);","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":45}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":" * Storage is the entity that deals with reading and writing the list of tasks to the user\u0027s text file","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    private String filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * @param filePath the location of a textfile containing the user\u0027s list of tasks, relative to the root directory","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     * Reads in a list of tasks from the user\u0027s text file and saves them into an arraylist of Tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"     * @return the arraylist of Tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(dir, filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy\");","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"            File myObj \u003d new File(path.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"            System.out.println(\"I see you have an existing list.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"                String line \u003d myReader.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"                String[] data \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"                String task \u003d data[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"                switch (task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"                case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"                    ToDo td \u003d new ToDo(data[2]);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"                    if (data[1].equals(\"1\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"                        td.mark();","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"                    tasks.add(td);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"                case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"                    Deadline deadline \u003d new Deadline(data[2], LocalDate.parse(data[3], formatter));","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"                    if (data[1].equals(\u00271\u0027)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"                        deadline.mark();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"                case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"                    Event event \u003d new Event(data[2], LocalDate.parse(data[3], formatter));","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"                    tasks.add(event);","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"                    if (data[1].equals(\u00271\u0027)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"                        event.mark();","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"            } myReader.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"            System.out.println(\"It seems you do not have an existing list, I will create it now.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"                File file \u003d new File(path.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"                System.out.println(\"file created successfully\");","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"                System.out.println(\"Failed to create file\");","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"        return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"declanleeler"},"content":"     * Writes the given arraylist of Tasks out to the user\u0027s file.","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"declanleeler"},"content":"     * @param tasks the arraylist of Tasks to be saved","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"declanleeler"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"declanleeler"},"content":"        String text \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"declanleeler"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"declanleeler"},"content":"            text +\u003d tasks.get(i - 1) + \"\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"declanleeler"},"content":"        try (PrintWriter out \u003d new PrintWriter(this.filePath)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"declanleeler"},"content":"            out.println(text);","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"declanleeler"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"declanleeler"},"content":"            System.out.println(\"Failed to save list\");","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":102}},{"path":"src/main/java/duke/TaskMaster.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * Handles the overarching list of tasks the user has noted down.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class TaskMaster {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * @param tasks an arraylist of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    public TaskMaster(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * adds the given task to the stored list of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @param t Task t to be added","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"     * Deletes the task from the list of tasks, with index position i - 1","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     * @param i int representing the index - 1 to be deleted","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"     * @return the deleted task","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        return this.tasks.remove(i - 1); //-1 because arr index starts frm 0","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"     * retrieves all the tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"     * @return the tasks as an arraylist.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"     * finds all tasks that have details that are related to the keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"     * @param keyword String to be matched on.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"     * @return an arraylist of matching tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"            if (task.getDetails().contains(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"        return matchingTasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":61}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * Handles interactions with the user through input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * Ui constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public Ui() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"     * Take in the next line of input from the user and split it into Strings of first word and all other words.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * @return an array of the two strings","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    public String[] readCommand() {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        String command \u003d sc.next();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        String details \u003d sc.nextLine().trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        return new String[]{command, details};","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"     * Greets the user as the app starts up.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    public void greet() {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What do you need me to note down for you? Type it below!\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"                \"Feel free to identify the status of your tasks by entering \u0027marked\u0027 or \u0027unmarked\u0027 along with the \" +","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"                \"task number!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        printDoubleLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"     * Says goodbye to the user as the app shuts down.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"    public void goodbye() {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        printSingleLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        System.out.println(\"Bye. Have a great day!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        printDoubleLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"    public void printSingleLine() {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"        System.out.println(\"------------------------------------------------------\");","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"    public void printDoubleLine() {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"     * Prints out a given list of tasks for the user to see.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"     * @param tasks arraylist of desired tasks to show the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"    public void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"        System.out.println(\"Here are the requested tasks:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"            taskList.append(i).append(\". \").append(tasks.get(i - 1)).append(\"\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"        System.out.println(taskList.toString().trim());","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"        printDoubleLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"     * used when a task has been successfully deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"     * @param t task that was removed.","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"    public void notifyRemovedTaskMessage(Task t) {","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + t);","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"        printDoubleLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"     * used when a task has been successfully added.","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"     * @param t task that was added.","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"    public void notifyAddedTaskMessage(Task t) {","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"        System.out.println(\"Noted. I\u0027ve added this task:\\n\" + t);","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"        printDoubleLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"declanleeler"},"content":"     * used wehn a task was successully marked as incomplete or complete.","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"declanleeler"},"content":"     * @param t task that was marked","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"declanleeler"},"content":"     * @param isComplete boolean flag for wehether the task was marked complete or not complete.","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"declanleeler"},"content":"    public void notifyMarkedTaskMessage(Task t, boolean isComplete) {","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"declanleeler"},"content":"        if (isComplete) {","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"declanleeler"},"content":"            System.out.println(\"Task \" + t + \" has been marked complete.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"declanleeler"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"declanleeler"},"content":"            System.out.println(\"Task \" + t + \" has been marked incomplete.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"declanleeler"},"content":"        printDoubleLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":103}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":" * Responsible for adding new tasks to the list of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    private Task task;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Constructor 1 that deals with adding a ToDo item because it needs less information than other tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * @param details of the todo","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    public AddCommand(String details) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        if (details.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        this.task \u003d new ToDo(details);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     * Constuctor 2 that deals with adding a Deadline or Event item. These have a date and need to be handled","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * differently from a todo. The date must be checked to be present and in correct format of yyy-mm-dd.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * @param cmd the type of task, whether event or deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * @param details description and date of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    public AddCommand(String cmd, String details) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        if (details.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        if (!details.contains(\"/\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"☹ OOPS!!! The date of a \" + cmd + \" cannot be empty. \" +","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"                    \"Use /at and type the date with the format yyyy-mm-dd after it\");","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"            String[] d_deets \u003d details.split(\"/\");","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"            String givenDate \u003d d_deets[1].trim().substring(3); //ignore the words at or by + the space that follows","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(givenDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"            if (cmd .equals(\"event\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"                this.task \u003d new Event(details, parsedDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"                this.task \u003d new Deadline(details, parsedDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"        } catch (","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"                DateTimeParseException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"Please use /at and type the date with the format yyyy-mm-dd after it\");","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"     * Adds the new task to the existing list of tasks, notifies the user","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"     * of the completion of the task, and updates the user\u0027s file.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"    public void execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"        ui.notifyAddedTaskMessage(this.task);","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":77}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" * Command is the action that needs to be taken to carry out the user\u0027s request.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * Command constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException as the user might leave out crtiical information or input wrong commands.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    public Command() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * Kickstarts the actions to execute in order to carry out the command.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @param tasks   holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     * @param ui      used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    public abstract void execute(TaskMaster tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     * checks whether the the command was an exit command.","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * @return boolean flag","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"     * Flips the exit status to true.","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"    protected void startExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":48}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" *","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private int id;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * Constructor DeleteCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * @param i the id of the task that is to be deleted from the list","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    public DeleteCommand(String i) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"            this.id \u003d Integer.parseInt(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"Please enter a valid id\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"     * Deletes the requested task from the existing list of tasks, notifies the user","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     * of the completion of the task, and updates the user\u0027s file.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     * @param tasks   holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * @param ui      used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    public void execute(TaskMaster tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"            Task removed_task \u003d tasks.deleteTask(this.id);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"            ui.notifyRemovedTaskMessage(removed_task);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"Please enter a valid id\");","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":50}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" * Deals with shutting down the application.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public ExitCommand() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Exits the application and notifies the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public void execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        this.startExit();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        ui.goodbye();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" * Responsible for finding tasks that are relevant to the user\u0027s search keyword","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private String keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * FindCommand constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * @param keyword String that is to be matched on.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    public FindCommand(String keyword) throws DukeException{","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * Calls TaskMaster method to search for the given keyword and passes the list to storage to print.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     * @param tasks   holds all the tasks that the user has recorded down and searches for relevant tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"     * @param ui      used to notify the user of tasks found.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"    public void execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        ui.printTasks(tasks.findTasks(this.keyword));","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" * Deals with displaying the list of tasks for the user","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public ListCommand() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Prints out all the tasks in the list for the user to see.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    public void execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        ui.printTasks(tasks.getTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":31}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" * Deals with marking the completion status of a Task","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private boolean mark;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    private int id;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * @param id Task that is to be marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     * @param mark boolean on whether to mark or unmark this task\u0027s completion status","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    public MarkCommand(String id, boolean mark) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"            this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"            this.mark \u003d mark;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"That is no item in this list with that id\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     * Retrieves the given task from the list of tasks using the id, and then marks its completion status.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * Notifies the user using the Ui, and then saves the updated list to file.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    public void execute(TaskMaster tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"            Task taskToMark \u003d tasks.getTasks().get(id - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            if (this.mark) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"                taskToMark.mark();","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"                ui.notifyMarkedTaskMessage(taskToMark, true);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"                taskToMark.unmark();","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"                ui.notifyMarkedTaskMessage(taskToMark, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"No such task exists! Are you sure about that task number?\");","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":58}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"        super(s);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * Deadline is a subclass of Task. It is a more specific Task that is a reminder of an important","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * due date with its date attached.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * Deadline constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * @param details is a String containing information on what the deadline is.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * @param date is a LocalDate object of the date the deadline is due.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public Deadline(String details, LocalDate date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * Passes the Deadline object out in readable format.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @return the readable string giving the Deadline\u0027s details.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        return \"D\" + super.toString() + \" | \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * Event is a subclass of Task. It is a more specific Task that is a reminder of an important","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * occasion with its date attached.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * Event constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * @param details is a String containing information on what the event is.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * @param date is a LocalDate object of the date the event will be held.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public Event(String details, LocalDate date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * Passes the Event object out in readable format.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @return the readable string giving the Event\u0027s details.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        return \"E\" + super.toString() + \" | \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":" * Task is a parent class that represents the different tasks in the list of items that the user noted down.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    private String details;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    private int id;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"     * Task constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * @param details the details of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    public Task(String details) {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Sets the status of the task to true to mark that it has been completed.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    public void mark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     * Sets the status of the task to false to mark that it hass not been completed.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * Passes the Task object out in readable format.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * @return the readable string giving the Tasks\u0027s details.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        if (isComplete) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"            out \u003d \" | 1 | \" + details;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            out \u003d \" | 0 | \" + details;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        return out;","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"     * Returns the details of the task, including its description and date where possible.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"     * @return a string composing the details.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"    public String getDetails() {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"        return this.details;","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"declanleeler":57}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"    public ToDo(String detail) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"        super(detail);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":14}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    public void parse_incorrectInput_exceptionThrown() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"            assertEquals(0, Parser.parse(\"nonsense command\", \"random stuff\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"            fail();","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"        } catch (DukeException de){","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", de.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    public void parse_incorrectDate_exceptionThrow() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"            assertEquals(0, Parser.parse(\"deadline\", \"cs2013 homework /by 2022/20/01\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"            fail();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        } catch (DukeException de){","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"            assertEquals(\"Please enter a date with the format yyyy-mm-dd\", de.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":29}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class UiTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    public void testGoodbye() {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        ui.goodbye();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        String expected \u003d \"------------------------------------------------------\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"                \"Bye. Have a great day!\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    public void testGreet() {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        ui.greet();","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        String expected \u003d \"Hello! I\u0027m Duke\\n\" + \"What do you need me to note down for you? Type it below!\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"                \"Feel free to identify the status of your tasks by entering \u0027marked\u0027 or \u0027unmarked\u0027 along with the \" +","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"                \"task number!\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        assertEquals(expected, outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    @AfterEach","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    public void tearDown() {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":43}}]
