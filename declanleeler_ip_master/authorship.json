[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"declanleeler":16,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"Duke is a **desktop app for managing tasks**. While it is a GUI, it works ","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"similar to a CLI, thus having the best of both worlds.","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"### Add Tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"Tell Duke the tasks you need recorded and their details","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"### Archive Tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"Save completed tasks to a separate file and clear them from the list","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"### Delete Tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"Remove unwanted tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"### Mark/Unmark Tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"Mark tasks as complete/incomplete","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"### List Tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"Showcase all tasks in the list","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"### `todo` - adds a To-Do to the list","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"Format: `todo [task description]`","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"`Todo call grandma`","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"Noted. I\u0027ve added the task:","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"T | 0 | call grandma","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"### `deadline` - adds a deadline to the list","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"Format: `deadline [task description] /by [yyyy-mm-dd]`","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"`Deadline project submission /by 2022-04-20`","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"Noted. I\u0027ve added the task:","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"D | 0 | project submission | Apr 20, 2022","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"### `event` - adds an event to the list","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"Format: `event [task description] /at [yyyy-mm-dd]`","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"`Event birthday party /at 2022-04-20`","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"Noted. I\u0027ve added the task:","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"E | 0 | birthday party | Apr 20, 2022","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"### `list` - shows all tasks in list","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"`list`","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"Here are the requested tasks:","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"1. T | 0 | call grandma","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"2. D | 0 | project submission | Apr 20, 2022","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"3. E | 0 | birthday party | Apr 20, 2022","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"### `mark` - marks a task as complete","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"Format: `mark [task id]`","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"declanleeler"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"declanleeler"},"content":"`mark 1`","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"declanleeler"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"declanleeler"},"content":"Task:","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"declanleeler"},"content":"T | 1 | call grandma","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"declanleeler"},"content":"has been marked complete.","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"declanleeler"},"content":"### `unmark` - marks a task as incomplete","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"declanleeler"},"content":"Format: `unmark [task id]`","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"declanleeler"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"declanleeler"},"content":"`unmark 1`","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"declanleeler"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"declanleeler"},"content":"Task:","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"declanleeler"},"content":"T | 0 | call grandma","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"declanleeler"},"content":"has been marked incomplete.","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"declanleeler"},"content":"### `delete` - deletes a task from the list","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"declanleeler"},"content":"Format: `delete [task id]`","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"declanleeler"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"declanleeler"},"content":"`delete 1`","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"declanleeler"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"declanleeler"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"declanleeler"},"content":"T | 0 | call grandma","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"declanleeler"},"content":"```","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"declanleeler"},"content":"### `archive` - moves all completed tasks to archive","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"declanleeler"},"content":"Example of usage:","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"declanleeler"},"content":"`archive`","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"declanleeler"},"content":"Expected outcome:","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":131,"author":{"gitId":"declanleeler"},"content":"All completed tasks have been moved to the archive.","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"declanleeler":102,"-":30}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * Duke is an interactive bot that helps the user to note down important tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class Duke {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private TaskMaster taskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public Duke() {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        this.taskMaster \u003d new TaskMaster(storage.loadTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * Generates a response to user input.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     * @param input that the user gave to the GUI","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"     * @return String to respond to the user\u0027s request","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"            response \u003d command.execute(this.taskMaster, this.ui, this.storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"                System.exit(0);","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        //response to user should not be empty","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        assert !response.equals(\"\");","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        return response;","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":46}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"declanleeler":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.view.MainWindow;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"            stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"declanleeler":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.command.*;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * Parser deals with understanding the user\u0027s input and create the correspondign Command to deal with the request.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"     * Parses a single line from the user input that is broken up into 2 strings. The first string is the first","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"     * command word, and the second string is the details of the command. From here, the command word is checked to","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * decide on whether to respond with an appropriate command, or an exception if the command is not recognized.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * @param input the input line from the user","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * @return an appropriate Command based on the user\u0027s request","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        String cmd \u003d inputArr[0];","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        switch (cmd) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        case \"list\":","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        case \"archive\":","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"            return new ArchiveCommand();","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"            return new MarkCommand(inputArr[1], true);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"            return new MarkCommand(inputArr[1], false);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"            return new DeleteCommand(inputArr[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"            return new AddCommand(inputArr[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"        case \"event\":","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"            return new AddCommand(cmd, inputArr[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"        case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"            return new FindCommand(inputArr[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":47}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"import java.util.List;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":" * Storage is the entity that deals with reading and writing the list of tasks to the user\u0027s text file","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    private final String TASK_FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    private final String ARCHIVE_FILE_PATH \u003d \"data/archive.txt\";","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    public Storage() { }","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"     * Reads in a list of tasks from the user\u0027s text file and saves them into an arraylist of Tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     * @return the arraylist of Tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"    public List\u003cArrayList\u003cTask\u003e\u003e loadTasks() {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        readFile(this.TASK_FILE_PATH, currentTasks);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        ArrayList\u003cTask\u003e archivedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"        readFile(this.ARCHIVE_FILE_PATH, archivedTasks);","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        return Arrays.asList(currentTasks, archivedTasks);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    public void readFile(String path, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"            File myObj \u003d new File(path);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            Scanner sc \u003d new Scanner(myObj);","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"                readLine(tasks, sc);","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"            } sc.close();","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"            System.out.println(\"It seems you do not have an existing list, I will create it now.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"            try {","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"                File file \u003d new File(path);","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"                file.createNewFile();","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"                System.out.println(\"file created successfully\");","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"                System.out.println(\"Failed to create file\");","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"     * Reads a single line from the input file and takes in the given task","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"     * @param tasks the arraylist of tasks to be saved","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"     * @param sc scanner to read input","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"    public void readLine(ArrayList\u003cTask\u003e tasks, Scanner sc) {","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy\");","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"        String line \u003d sc.nextLine();","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"        String[] data \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"        String task \u003d data[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"        switch (task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"        case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"            ToDo td \u003d new ToDo(data[2]);","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"            if (data[1].equals(\"1\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"                td.setComplete();","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"            tasks.add(td);","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"        case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"            Deadline deadline \u003d new Deadline(data[2], LocalDate.parse(data[3], formatter));","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"            tasks.add(deadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"            if (data[1].equals(\"1\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"                deadline.setComplete();","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"declanleeler"},"content":"        case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"declanleeler"},"content":"            Event event \u003d new Event(data[2], LocalDate.parse(data[3], formatter));","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"declanleeler"},"content":"            tasks.add(event);","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"declanleeler"},"content":"            if (data[1].equals(\"1\")) {","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"declanleeler"},"content":"                event.setComplete();","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"declanleeler"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"declanleeler"},"content":"     * Writes the given arraylist of Tasks out to the user\u0027s file.","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"declanleeler"},"content":"     * @param tasks the arraylist of Tasks to be saved","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"declanleeler"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e tasks, boolean isArchive) {","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"declanleeler"},"content":"        String text \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"declanleeler"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"declanleeler"},"content":"            text +\u003d tasks.get(i - 1) + \"\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"declanleeler"},"content":"        String path;","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"declanleeler"},"content":"        if (!isArchive) {","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"declanleeler"},"content":"            path \u003d this.TASK_FILE_PATH;","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"declanleeler"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"declanleeler"},"content":"            path \u003d this.ARCHIVE_FILE_PATH;","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":112,"author":{"gitId":"declanleeler"},"content":"        try (PrintWriter out \u003d new PrintWriter(path)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"declanleeler"},"content":"            out.println(text);","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"declanleeler"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"declanleeler"},"content":"            System.out.println(\"Failed to save list\");","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":118}},{"path":"src/main/java/duke/TaskMaster.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import java.util.List;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" * Handles the overarching list of tasks the user has noted down.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class TaskMaster {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private ArrayList\u003cTask\u003e currentTasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    private ArrayList\u003cTask\u003e archivedTasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * @param group an arraylist containing 2 arraylists of tasks","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    public TaskMaster(List\u003cArrayList\u003cTask\u003e\u003e group) {","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        this.currentTasks \u003d group.get(0);","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        this.archivedTasks \u003d group.get(1);","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     * adds the given task to the stored list of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"     * @param t Task t to be added","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        int sizeBefore \u003d this.currentTasks.size();","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        this.currentTasks.add(t);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        assert this.currentTasks.size() \u003d\u003d sizeBefore + 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * Deletes the task from the list of tasks, with index position i - 1","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     * @param i int representing the index - 1 to be deleted","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"     * @return the deleted task","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        int sizeBefore \u003d this.currentTasks.size();","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        Task removedTask \u003d this.currentTasks.remove(i - 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        assert this.currentTasks.size() \u003d\u003d sizeBefore - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        return removedTask;//-1 because arr index starts frm 0","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"     * retrieves all the tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"     * @return the tasks as an arraylist.","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"    public ArrayList\u003cTask\u003e getCurrentTasks() {","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"        return this.currentTasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"    public ArrayList\u003cTask\u003e getArchivedTasks() { return this.archivedTasks; }","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"     * finds all tasks that have details that are related to the keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"     * @param keyword String to be matched on.","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"     * @return an arraylist of matching tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"        for (Task task : this.currentTasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"            if (task.getDetails().contains(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"        return matchingTasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"    public void moveToArchives() {","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"        ArrayList \u003cTask\u003e toBeArchived \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"        for (Task t : this.currentTasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"            if (t.isComplete()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"                toBeArchived.add(t);","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"        this.archivedTasks.addAll(toBeArchived);","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"        this.currentTasks.removeAll(toBeArchived);","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":86}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * Handles interactions with the user through input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"     * Ui constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    public Ui() {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * Greets the user as the app starts up.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    public String greet() {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        return \"Hello! I\u0027m Duke\\n\" + \"What do you need me to note down for you? Type it below!\\n\" +","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"                \"Feel free to identify the status of your tasks by entering \u0027marked\u0027 or \u0027unmarked\u0027 along with the \" +","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"                \"task number!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"     * Sends goodbye to the user as the app shuts down.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    public String goodbye() {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        return \"Bye. Have a great day!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * Prints out a given list of tasks for the user to see.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * @param tasks arraylist of desired tasks to show the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"    public String printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"        taskList.append(\"Here are the requested tasks:\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"            taskList.append(i).append(\". \").append(tasks.get(i - 1)).append(\"\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        String out \u003d taskList.toString().trim();","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        //output cannot be empty","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        assert !out.equals(\"\");","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        return(out);","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"     * Returns a message when a task has been successfully deleted.","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"     * @param t task that was removed.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"    public String notifyRemovedTaskMessage(Task t) {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + t;","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"     * Returns a message when a task has been successfully added.","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"     * @param t task that was added.","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"    public String notifyAddedTaskMessage(Task t) {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"        return \"Noted. I\u0027ve added this task:\\n\" + t;","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"     * Returns a message when a task was successfully marked as incomplete or complete.","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"     * @param t task that was marked","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"     * @param isComplete boolean flag for whether the task was marked complete or not complete.","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"    public String notifyMarkedTaskMessage(Task t, boolean isComplete) {","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"        if (isComplete) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"            return \"Task:\\n\" + t + \"\\nhas been marked complete.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"            return \"Task:\\n\" + t + \"\\nhas been marked incomplete.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"     * Returns a message to notify the user when tasks have been successfully archived","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"    public String notifyArchivedTasks() {","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"        return \"All completed tasks have been moved to the archive.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":87}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":" * Responsible for adding new tasks to the list of tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    private Task task;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Constructor 1 that deals with adding a ToDo item because it needs less information than other tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * @param details of the todo","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    public AddCommand(String details) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        if (details.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        this.task \u003d new ToDo(details);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     * Constuctor 2 that deals with adding a Deadline or Event item. These have a date and need to be handled","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * differently from a todo. The date must be checked to be present and in correct format of yyy-mm-dd.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * @param cmd the type of task, whether event or deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * @param details description and date of the task","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    public AddCommand(String cmd, String details) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        if (details.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        if (!details.contains(\"/\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"☹ OOPS!!! The date of a \" + cmd + \" cannot be empty.\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"                    + \"Use /at and type the date(yyyy-mm-dd) after it\");","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"            String[] detailsArray \u003d details.split(\"/\");","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"            String givenDate \u003d detailsArray[1].trim().substring(3); //ignore the words at or by + the space that follows","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(givenDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"            if (cmd .equals(\"event\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"                this.task \u003d new Event(detailsArray[0].trim(), parsedDate);","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"                this.task \u003d new Deadline(detailsArray[0].trim(), parsedDate);","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"        } catch (","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"                DateTimeParseException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"Wrong date format.\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"                    + \"Please use /at and type the date(yyyy-mm-dd) after it\");","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"     * Adds the new task to the existing list of tasks, notifies the user","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"     * of the completion of the task, and updates the user\u0027s file.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"    public String execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":"        storage.saveToFile(tasks.getCurrentTasks(), false);","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"        return ui.notifyAddedTaskMessage(this.task);","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":78}},{"path":"src/main/java/duke/command/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" * Deals with displaying the list of tasks for the user","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public ArchiveCommand() throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    public String execute(TaskMaster taskMaster, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        taskMaster.moveToArchives();","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        storage.saveToFile(taskMaster.getCurrentTasks(), false);","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        storage.saveToFile(taskMaster.getArchivedTasks(), true);","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        return ui.notifyArchivedTasks();","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"declanleeler":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" * Command is the action that needs to be taken to carry out the user\u0027s request.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * Command constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException as the user might leave out crtiical information or input wrong commands.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public Command() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * Kickstarts the actions to execute in order to carry out the command.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public abstract String execute(TaskMaster tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     * checks whether the command was an exit command.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"     * @return boolean flag","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        return this.isExit;","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"     * Flips the exit status to true.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    protected void startExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":46}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" * Responsible for deleting a task from the list of tasks in storage","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private int id;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * Constructor DeleteCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * @param i the id of the task that is to be deleted from the list","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    public DeleteCommand(String i) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"            this.id \u003d Integer.parseInt(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"Please enter a valid id\");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"     * Deletes the requested task from the existing list of tasks, notifies the user","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"     * of the completion of the task, and updates the user\u0027s file.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"    public String execute(TaskMaster tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"            Task removed_task \u003d tasks.deleteTask(this.id);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"            storage.saveToFile(tasks.getCurrentTasks(), false);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"            return ui.notifyRemovedTaskMessage(removed_task);","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"Please enter a valid id\");","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":48}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" * Deals with shutting down the application.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public ExitCommand() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Exits the application and notifies the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public String execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        this.startExit();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        return ui.goodbye();","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" * Responsible for finding tasks that are relevant to the user\u0027s search keyword","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private String keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * FindCommand constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * @param keyword String that is to be matched on.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    public FindCommand(String keyword) throws DukeException{","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * Calls TaskMaster method to search for the given keyword and passes the list to storage to print.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down and searches for relevant tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of tasks found.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"    public String execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        return ui.printTasks(tasks.findTasks(this.keyword));","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" * Deals with displaying the list of tasks for the user","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public ListCommand() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Prints out all the tasks in the list for the user to see.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    public String execute(TaskMaster tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        return ui.printTasks(tasks.getCurrentTasks());","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":31}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import duke.TaskMaster;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" * Deals with marking the completion status of a Task","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private boolean isMark;","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    private int id;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * @param id Task that is to be marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     * @param mark boolean on whether to mark or unmark this task\u0027s completion status","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    public MarkCommand(String id, boolean mark) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"            this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"            this.isMark \u003d mark;","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"That is no item in this list with that id\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"     * Retrieves the given task from the list of tasks using the id, and then marks its completion status.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"     * Notifies the user using the Ui, and then saves the updated list to file.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * @param tasks holds all the tasks that the user has recorded down.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * @param ui used to notify the user of task completion.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     * @param storage saves the tasks to file if there were any edits to it.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    public String execute(TaskMaster tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"            Task taskToMark \u003d tasks.getCurrentTasks().get(id - 1);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            if (this.isMark) {","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"                taskToMark.setComplete();","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"                storage.saveToFile(tasks.getCurrentTasks(), false);","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"                return ui.notifyMarkedTaskMessage(taskToMark, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"                taskToMark.setIncomplete();","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"                storage.saveToFile(tasks.getCurrentTasks(), false);","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"                return ui.notifyMarkedTaskMessage(taskToMark, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"            throw new DukeException(\"No such task exists! Are you sure about that task number?\");","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":59}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"        super(s);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * Deadline is a subclass of Task. It is a more specific Task that is a reminder of an important","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * due date with its date attached.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * Deadline constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * @param details is a String containing information on what the deadline is.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * @param date is a LocalDate object of the date the deadline is due.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public Deadline(String details, LocalDate date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * Passes the Deadline object out in readable format.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @return the readable string giving the Deadline\u0027s details.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        return \"D\" + super.toString() + \" | \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * Event is a subclass of Task. It is a more specific Task that is a reminder of an important","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" * occasion with its date attached.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * Event constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * @param details is a String containing information on what the event is.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * @param date is a LocalDate object of the date the event will be held.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public Event(String details, LocalDate date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * Passes the Event object out in readable format.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * @return the readable string giving the Event\u0027s details.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        return \"E\" + super.toString() + \" | \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":" * Task is a parent class that represents the different tasks in the list of items that the user noted down.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    private String details;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    private int id;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"     * Task constructor.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * @param details the details of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    public Task(String details) {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * Sets the status of the task to true to mark that it has been completed.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    public void setComplete() {","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"     * Sets the status of the task to false to mark that it hass not been completed.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    public void setIncomplete() {","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"     * Passes the Task object out in readable format.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"     * @return the readable string giving the Tasks\u0027s details.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        String out \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        if (isComplete) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"            out \u003d \" | 1 | \" + details;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"            out \u003d \" | 0 | \" + details;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        return out;","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"     * Returns the details of the task, including its description and date where possible.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"     * @return a string composing the details.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"    public String getDetails() {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"        return this.details;","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"    public boolean isComplete() {","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"        return this.isComplete;","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"declanleeler":61}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"    public ToDo(String detail) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"        super(detail);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"declanleeler":14}},{"path":"src/main/java/duke/view/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.view;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"declanleeler":61}},{"path":"src/main/java/duke/view/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package duke.view;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"declanleeler":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"-Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#393b3c\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"            \u003cFont name\u003d\"SansSerif Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"68.0\" fitWidth\u003d\"67.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"declanleeler":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"526.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.view.MainWindow\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"449.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"450.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"526.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"526.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"         \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"declanleeler":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import duke.Parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    public void parse_incorrectInput_exceptionThrown() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"            assertEquals(0, Parser.parse(\"nonsense command\", \"random stuff\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"            fail();","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", de.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    public void parse_incorrectDate_exceptionThrow() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"            assertEquals(0, Parser.parse(\"deadline\", \"cs2013 homework /by 2022/20/01\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"            fail();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"            assertEquals(\"Please use /at and type the date with the format yyyy-mm-dd after it\", de.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":31}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"public class UiTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"    private final PrintStream STANDARD_OUTPUT \u003d System.out;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private final ByteArrayOutputStream OUTPUT_STREAM_CAPTOR \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"        System.setOut(new PrintStream(OUTPUT_STREAM_CAPTOR));","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    public void testGoodbye() {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        ui.goodbye();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        String expected \u003d \"------------------------------------------------------\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"                + \"Bye. Have a great day!\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        assertEquals(expected, OUTPUT_STREAM_CAPTOR.toString().trim());","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    public void testGreet() {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        ui.greet();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"        String expected \u003d \"Hello! I\u0027m Duke\\n\" + \"What do you need me to note down for you? Type it below!\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"                + \"Feel free to identify the status of your tasks by entering \u0027marked\u0027 or \u0027unmarked\u0027 along with the \"","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"                + \"task number!\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        assertEquals(expected, OUTPUT_STREAM_CAPTOR.toString().trim());","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    @AfterEach","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"    public void tearDown() {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        System.setOut(STANDARD_OUTPUT);","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"declanleeler":44}}]
