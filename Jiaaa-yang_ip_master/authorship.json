[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"plugins {","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"version \u003d \"0.1\"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"test {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"shadowJar {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    manifest {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        attributes \u0027Main-Class\u0027: \u0027Duke\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    baseName(\"Duke\")","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"dependencies {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"repositories {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":26}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"@rem","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"@rem","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"@rem","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"@rem","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"@rem","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"@rem","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"@rem","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"echo.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"echo.","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"goto fail","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"echo.","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"echo.","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"goto fail","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":":execute","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":":end","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":":fail","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"exit /b 1","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":":mainEnd","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":":omega","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":89}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"import data.Storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import ui.ChatBot;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * Main entry class to run ChatBot instance.","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"class Duke {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final Path DEFAULT_FILE_PATH \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        Storage store \u003d Storage.initStorage(DEFAULT_FILE_PATH);","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d TaskList.initTaskList(store);","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        ChatBot chatBot \u003d new ChatBot(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        chatBot.initialise();","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        while (!chatBot.hasTerminated()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            chatBot.runCommand(input);","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jiaaa-yang":26,"-":2}},{"path":"src/main/java/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package data;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * Class that is linked to a file on disk,","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" * with methods to read and write from the file.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Path of file to link to */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Path filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private Storage(Path filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * Initialise a Storage instance linked to","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * file provided by filePath. Creates the file","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * if it does not exist.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param filePath Path of file to link.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Storage instance linked to Path","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * given by filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public static Storage initStorage(Path filePath) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        if (Files.notExists(filePath)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Storage(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"     * Writes each item in data as a new line to","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"     * linked filePath.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param data ArrayList of data to write.","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IOException If the write fails.","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    public void writeAll(ArrayList\u003cString\u003e data) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        Files.write(this.filePath, data, Charset.defaultCharset());","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"     * Read all lines of linked filePath to","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     * an ArrayList.","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList containing each line as an element.","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IOException If the read fails.","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e readAll() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(this.filePath, Charset.defaultCharset());","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        return new ArrayList\u003c\u003e(lines);","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Jiaaa-yang":61}},{"path":"src/main/java/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package data;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * Class holding list of tasks stored by","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" * users, and provides method to manipulate","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":" * the list and save it to disk.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Backing store for current task list */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Storage store;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Internal list of tasks */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    private TaskList(Storage store, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        this.store \u003d store;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     * Return ArrayList of string description of each","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"     * task in taskList.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList of tasks description.","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e getTaskDescriptions() {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.taskList.stream()","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"                .map(Task::getDescription)","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the length of taskList array.","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Size of taskList.","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the filtered ArrayList of Task by applying","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     * filter function on each Task in list.","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param filter Filter function to applied on each task returning","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"     *               a boolean on whether the task passes the filter.","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Filtered list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cTask\u003e filterTasks(Function\u003cTask, Boolean\u003e filter) {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        Predicate\u003cTask\u003e taskFilter \u003d new Predicate\u003cTask\u003e() {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            public boolean test(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"                return filter.apply(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.taskList","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"                .stream()","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"                .filter(taskFilter)","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"     * Initialise a TaskList instance with store as","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"     * a backing storage. Also loads the content of the store","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"     * into its task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param store Storage instance this task list was saved on.","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return TaskList initialised with contents in store, and","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"     * backed by store.","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"    public static TaskList initTaskList(Storage store) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.generateSavedTasks(store.readAll());","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        return new TaskList(store, tasks);","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"     * Adds task to task list, and saving to storage.","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param task Task to add to task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"     * Deletes task from task list, and saving to storage.","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return The deleted Task.","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If index is out of list range.","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"    public Task deleteTask(int index) throws IllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid index for current list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d this.taskList.remove(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"     * Check task, marking it as done in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index of task to mark as done.","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return The checked Task.","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If index is out of list range.","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"    public Task checkTask(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid index for current list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        task.markDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"     * Uncheck task, marking it as undone in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index of task to mark undone.","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return The unchecked Task.","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If index is out of list range.","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"    public Task uncheckTask(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid index for current list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d this.taskList.get(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"Jiaaa-yang"},"content":"        task.unmarkDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"Jiaaa-yang"},"content":"     * Saves current state of TaskList into backing store.","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"Jiaaa-yang"},"content":"    private void saveState() {","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cString\u003e taskData \u003d this.taskList.stream()","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"Jiaaa-yang"},"content":"                .map(task -\u003e task.encodeTaskData())","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"Jiaaa-yang"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"Jiaaa-yang"},"content":"            this.store.writeAll(new ArrayList\u003c\u003e(taskData));","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"Jiaaa-yang"},"content":"            System.err.println(\"Backed file cannot be written to: \" + store);","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"Jiaaa-yang"},"content":"     * Checks if given index is a valid index to operate","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"Jiaaa-yang"},"content":"     * on the list (0 \u003c\u003d index \u003c tasks.size()).","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index to check.","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Boolean of whether index is valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"Jiaaa-yang"},"content":"        return (0 \u003c\u003d index) \u0026\u0026 (index \u003c this.taskList.size());","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"Jiaaa-yang"},"content":"    private static ArrayList\u003cTask\u003e generateSavedTasks(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"Jiaaa-yang"},"content":"        for (String line: data) {","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"Jiaaa-yang"},"content":"            Task savedTask \u003d Task.decodeTaskData(line);","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"Jiaaa-yang"},"content":"            tasks.add(savedTask);","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"Jiaaa-yang"},"content":"        return tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Jiaaa-yang":179}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * A concrete task which contains a name","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * and a deadline by which the task should","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * be completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    final static SimpleDateFormat inputDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    final static SimpleDateFormat outputDateFormat \u003d new SimpleDateFormat(\"dd MMM\");","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Deadline for current task */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Date deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        this.deadline \u003d parseDeadline(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parse given date string to Date object, where","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * string must be in the format of DD/MM/YYYY.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param dateString Date string to parse.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Date object corresponding to dateString","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the date string is not of DD/MM/YYYY format.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    private static Date parseDeadline(String dateString) throws IllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"            Date date \u003d inputDateFormat.parse(dateString);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            return date;","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid date format: Dates should be in DD/MM/YYYY\");","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        String formattedDeadline \u003d outputDateFormat.format(this.deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"[D]%s %s (by: %s)\",","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"                super.getDoneStatusCheckbox(), super.getName(), formattedDeadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    public String encodeTaskData() {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        String doneString \u003d this.isDone() ? \"Y\" : \"N\";","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        String inputFormattedDeadline \u003d inputDateFormat.format(this.deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"D,%s,%s,%s\", super.getName(), doneString, inputFormattedDeadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":55}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":" * A concrete Task which contains","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":" * a name, and a time string where","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * the event happens.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Time at which this event occurs */","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String time;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"[E]%s %s (at: %s)\",","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"                super.getDoneStatusCheckbox(), super.getName(), this.time);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    public String encodeTaskData() {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        String doneString \u003d this.isDone() ? \"Y\" : \"N\";","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"E,%s,%s,%s\", super.getName(), doneString, this.time);","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":28}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":" * A class to represent a Task","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":" * created by user of the ChatBot.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"     * Gets the string representation of current","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"     * task with its name and any additional info.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String representing current task.","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    public abstract String getDescription();","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     * Gets the serialised data of current task,","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     * separated by commas, for storage in disk file.","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String representing data of current task.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public abstract String encodeTaskData();","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * Decodes task data previously saved to file to","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     * a task with its saved info.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param taskData String containing data of the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Task corresponding to saved data.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public static Task decodeTaskData(String taskData) {","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        String[] data \u003d taskData.split(\",\");","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        String type \u003d data[0];","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        String name \u003d data[1];","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        String isDone \u003d data[2];","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        String time \u003d data[3];","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (type) {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"T\":","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new ToDo(name);","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"E\":","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Event(name, time);","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"D\":","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Deadline(name, time);","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        if (isDone.equals(\"Y\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"            task.markDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    /** String description of current task */","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Whether the task is marked as done */","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"    protected Task(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"     * Get a checkbox describing whether the","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"     * task is done or not.","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String representing done status of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"    protected String getDoneStatusCheckbox() {","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getName() {","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":91}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":" * A concrete Task which contains","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":" * just a name description.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"[T]%s %s\",","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"                super.getDoneStatusCheckbox(), super.getName());","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    public String encodeTaskData() {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        String doneString \u003d this.isDone() ? \"Y\" : \"N\";","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"T,%s,%s,%s\", super.getName(), doneString, \"NA\");","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":24}},{"path":"src/main/java/ui/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import ui.command.Command;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * ChatBot class that allows for running of user command","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * and keeping track of its termination status.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"public class ChatBot {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    private final static String WELCOME_STRING \u003d \"Hello I\u0027m Duke!\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"                                                + \"What can I do for you?\";","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Task list maintaining list of tasks for user */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Boolean to track if bot has received a termination command */","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean hasTerminated;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public ChatBot(TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        this.hasTerminated \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     * Performs initialisation of the ChatBot. Should be called","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * before receiving commands.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public void initialise() {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        System.out.println(WELCOME_STRING);","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"     * Runs the command given by user input string.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param input String command by user to run.","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public void runCommand(String input) {","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"            Command command \u003d Command.parseCommand(input, this.taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"            this.hasTerminated \u003d command.execute();","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"            ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(\"Sorry, the following problem has occurred:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(e.getMessage());","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"            Command.styledPrint(response);","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean hasTerminated() {","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.hasTerminated;","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Jiaaa-yang":55}},{"path":"src/main/java/ui/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Event;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import task.ToDo;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which adds a given task","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * to a given TaskList.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"class AddTaskCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    public AddTaskCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        Task newTask \u003d createTask(super.getName(), super.getArgs());","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(\"The following new task has been added:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(newTask.getDescription());","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(String.format(\"You now have %d tasks!\", taskList.getTaskListSize()));","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        Command.styledPrint(response);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"     * Creates a new task based on the name and args","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"     * of the command.","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param name Name of task to create.","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param args Args to create task with.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return New Task created based on name and args.","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If args are invalid for task.","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"    private static Task createTask(String name, String args) throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Tasks description cannot be empty\");","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (name) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new ToDo(args);","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"            if (!args.contains(\"/by\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new IllegalArgumentException(\"Deadline requires a deadline!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"            String[] deadlineInfo \u003d args.split(\"/by\", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"            String deadlineName \u003d deadlineInfo[0].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"            String deadline \u003d deadlineInfo[1].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Deadline(deadlineName, deadline);","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"event\":","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"            if (!args.contains(\"/at\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new IllegalArgumentException(\"Events requires a time!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"            String[] eventInfo \u003d args.split(\"/at\", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"            String eventName \u003d eventInfo[0].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"            String time \u003d eventInfo[1].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Event(eventName, time);","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":74}},{"path":"src/main/java/ui/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * @author Jiaaa-yang","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * An abstract class to represent the commands","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * that can be issued to a ChatBot.","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Constants for styling of printing command feedback */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    private final static int FEEDBACK_DELIMITER_LENGTH \u003d 25;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    private final static int FEEDBACK_INDENT_SIZE \u003d 4;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    private final static String FEEDBACK_DELIMITER \u003d \"_\".repeat(FEEDBACK_DELIMITER_LENGTH);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private final static String FEEDBACK_INDENT \u003d \" \".repeat(FEEDBACK_INDENT_SIZE);","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     * Execute current command in ChatBot context.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Whether the command is a terminating command.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the command is executed","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * with invalid args.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    public abstract boolean execute() throws IllegalArgumentException;","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Name of current command */","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String name;","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    /** String representation of arguments for command */","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String args;","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    protected Command(String name, String args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses user inputted command to extract","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     * the name and args of the command, returning","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * the concrete Command subclass for the input.","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param input Command inputted by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param taskList TaskList maintained by ChatBot.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Command object corresponding to input.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the command is not valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    public static Command parseCommand(String input, TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        String name \u003d input;","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        String args \u003d null;","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        // Separate command name and args","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"            String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"            name \u003d command[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"            args \u003d command[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        Command command;","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"list\":","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new ShowTaskListCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"event\":","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"            // Fallthrough for add task commands","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new AddTaskCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new DeleteTaskCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new MarkTaskCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new UnmarkTaskCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"find\":","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new FindCommand(name, args, taskList);","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new ExitCommand(name, args);","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"        default:","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid command\");","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        return command;","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"     * Print response of executed command styled between 2 lines","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"     * with indentation. Each item in response array is printed","lastModifiedDate":"2022-01-17"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"     * in a new line.","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param response List of response to print.","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"    public static void styledPrint(ArrayList\u003cString\u003e response) {","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(0, FEEDBACK_DELIMITER);","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(FEEDBACK_DELIMITER);","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"        // Prepend each response item with an indent and a line break","lastModifiedDate":"2022-01-17"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        String styledResponse \u003d response.stream()","lastModifiedDate":"2022-01-17"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"                .map(item -\u003e FEEDBACK_INDENT + item + \u0027\\n\u0027)","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"                .reduce(\"\", (prevLine, nextLine) -\u003e prevLine + nextLine);","lastModifiedDate":"2022-01-17"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"        System.out.println(styledResponse);","lastModifiedDate":"2022-01-17"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"     * Reconstruct original command by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String representing original command.","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"    protected String getOriginalCommand() {","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"        if (this.args !\u003d null) {","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"            return this.name + \" \" + this.args;","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"    protected String getName() {","lastModifiedDate":"2022-01-17"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.name;","lastModifiedDate":"2022-01-17"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"    protected String getArgs() {","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.args;","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Jiaaa-yang":128}},{"path":"src/main/java/ui/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which deletes a previously","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * added task.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"class DeleteTaskCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    public DeleteTaskCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        // Args for this command represents index of task to delete","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        int taskIndex;","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"            taskIndex \u003d Integer.parseInt(super.getArgs()) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Non-number passed to delete task\");","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(\"Noted. The following task has been deleted:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(deletedTask.getDescription());","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(String.format(\"You now have %d tasks!\", taskList.getTaskListSize()));","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        Command.styledPrint(response);","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        return false;","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Jiaaa-yang":39}},{"path":"src/main/java/ui/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which echoes the name of the","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * command written by user.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"class EchoCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    public EchoCommand(String name, String args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args);","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() {","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(super.getOriginalCommand());","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        Command.styledPrint(response);","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        return false;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Jiaaa-yang":21}},{"path":"src/main/java/ui/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which causes the termination","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * of the ChatBot.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"class ExitCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String GOODBYE_STRING \u003d \"Goodbye!\";","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    public ExitCommand(String name, String args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(GOODBYE_STRING);","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        styledPrint(response);","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        return true;","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Jiaaa-yang":23}},{"path":"src/main/java/ui/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which searches among","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * the TaskList and returns","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * tasks matching a keyword.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"public class FindCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public FindCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() throws IllegalArgumentException {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        // Args for this command represents keyword to search","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        String keyword \u003d super.getArgs();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        if (keyword \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"No terms passed to find command!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cTask\u003e searchedTasks \u003d taskList.filterTasks(task -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"            return taskName.contains(keyword);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        if (searchedTasks.size() !\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(\"Here are the tasks matching your searched terms\");","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            // Prepend numbering to searched tasks list","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"            for (int i \u003d 0; i \u003c searchedTasks.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"                Task task \u003d searchedTasks.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"                String taskDescription \u003d String.format(\"%d. %s\", i + 1, task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"                response.add(taskDescription);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(\"Sorry! No tasks matching your search was found!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        Command.styledPrint(response);","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Jiaaa-yang":48}},{"path":"src/main/java/ui/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which marks a previously","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * added task as done.","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"class MarkTaskCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    public MarkTaskCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        // Args for this command represents index of task to","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        // mark as complete","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        int taskIndex;","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"            taskIndex \u003d Integer.parseInt(super.getArgs()) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Non-number passed to mark/unmark task\");","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        Task checkedTask \u003d taskList.checkTask(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(\"Congrats! The following task was marked as done:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(checkedTask.getDescription());","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        Command.styledPrint(response);","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":38}},{"path":"src/main/java/ui/command/ShowTaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which prints out a list of item","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * stored by user.","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"class ShowTaskListCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public ShowTaskListCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e taskDescriptions \u003d taskList.getTaskDescriptions();","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        // Prepend each list item with its numbering inside list","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        for (int i \u003d 0; i \u003c taskDescriptions.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"            String description \u003d taskDescriptions.get(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(String.format(\"%d.%s\", i + 1, description));","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        Command.styledPrint(response);","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":30}},{"path":"src/main/java/ui/command/TaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which operates on the TaskList","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * maintained by ChatBot","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"abstract class TaskListCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Task list maintained by ChatBot */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public TaskListCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Jiaaa-yang":21}},{"path":"src/main/java/ui/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package ui.command;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import data.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which unmarks a previously","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * added task.","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"class UnmarkTaskCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    public UnmarkTaskCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean execute() throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        // Args for this command represents index of task to","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        // mark as undone","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        int taskIndex;","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"            taskIndex \u003d Integer.parseInt(super.getArgs()) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Non-number passed to mark/unmark task\");","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        Task uncheckedTask \u003d taskList.uncheckTask(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(\"The following task was marked undone:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(uncheckedTask.getDescription());","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        Command.styledPrint(response);","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":38}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    void constructor_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        String deadlineName \u003d \"Test Deadline\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        String invalidDateString \u003d \"01-01-2020\";","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"            new Deadline(deadlineName, invalidDateString) ;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    void getDescription_sampleDeadline_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", \"01/01/2020\");","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedDescription \u003d \"[D][ ] Test Deadline (by: 01 Jan)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedDescription, deadline.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    void encodeTaskData_sampleDeadline_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", \"01/01/2020\");","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedEncoding \u003d \"D,Test Deadline,N,01/01/2020\";","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedEncoding, deadline.encodeTaskData());","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":31}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class EventTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    void getDescription_sampleEvent_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        Event event \u003d new Event(\"Test Event\", \"Mon 2-4pm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedDescription \u003d \"[E][ ] Test Event (at: Mon 2-4pm)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedDescription, event.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    void encodeTaskData_sampleEvent_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        Event event \u003d new Event(\"Test Event\", \"Mon 2-4pm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedEncoding \u003d \"E,Test Event,N,Mon 2-4pm\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedEncoding, event.encodeTaskData());","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":21}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    void decodeTaskData_todoTaskString_returnTodoInstance() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        String todoTestData \u003d \"T,Test TODO Task,N,NA\";","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d Task.decodeTaskData(todoTestData);","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(task instanceof ToDo);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    void decodeTaskData_eventTaskString_returnEventInstance() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        String eventTestData \u003d \"E,Test Event Task,N,Monday 2-4pm\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d Task.decodeTaskData(eventTestData);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(task instanceof Event);","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    void decodeTaskData_deadlineTaskString_returnDeadlineInstance() {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        String deadlineTestData \u003d \"D,Test Deadline Task,Y,01/01/2022\";","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d Task.decodeTaskData(deadlineTestData);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":28}},{"path":"src/test/java/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    void getDescription_sampleTodo_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        ToDo todo \u003d new ToDo(\"Test TODO\");","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedDescription \u003d \"[T][ ] Test TODO\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedDescription, todo.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    void encodeTaskData_sampleTodo_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        ToDo todo \u003d new ToDo(\"Test TODO\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedEncoding \u003d \"T,Test TODO,N,NA\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedEncoding, todo.encodeTaskData());","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"todo first todo","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"todo second todo","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"event first event /at first time","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"deadline first deadline /by second time","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"delete 2","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"deadline first deadline /by 01/01/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"unmark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Jiaaa-yang":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"# delete previously saved data","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"if [ -e \"data/duke.txt\" ]","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"then","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    rm data/duke.txt","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"fi","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"Jiaaa-yang":6}}]
