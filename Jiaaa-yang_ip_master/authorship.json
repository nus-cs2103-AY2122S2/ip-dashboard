[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"-":45,"Jiaaa-yang":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.ui.Main;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * Main entry class to run ChatBot application","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"public class Launcher {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"Jiaaa-yang":13}},{"path":"src/main/java/duke/chatbot/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.chatbot.command.AddTaskCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.chatbot.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.chatbot.command.DeleteTaskCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.chatbot.command.ExitCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.chatbot.command.MarkTaskCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" * ChatBot class that serves as an interface between","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":" * the JavaFX GUI application and execution of user","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" * inputted commands.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"public class ChatBot {","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Task list maintaining list of tasks for user */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Boolean to track if bot has received a termination command */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean hasTerminated;","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Last executed command by ChatBot */","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    private Command lastExecutedCommand \u003d null;","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns a ChatBot that run commands based","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"     * on given TaskList.","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param taskList TaskList instance keeping track of","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"     *                 list of tasks for user.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    public ChatBot(TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        this.hasTerminated \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     * Runs the command given by user input string, and returns","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * a response from the ChatBot for the command, in the form","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     * of an ArrayList of string.","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param input String command by user to run.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList of string containing response of command ran.","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e runCommand(String input) {","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"            Command command \u003d Command.parseCommand(input, this.taskList, this.lastExecutedCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"            ArrayList\u003cString\u003e response \u003d command.execute();","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"            this.updateTerminationStatus(command);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"            this.updateLastExecutedCommand(command);","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"            return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"            ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(\"Sorry, the following problem has occurred:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(e.getMessage());","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean hasTerminated() {","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.hasTerminated;","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates termination status of ChatBot based on last","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"     * command ran. Changes termination status to true if","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"     * command is exit command, false otherwise.","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param command Last command ran by ChatBot.","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"    private void updateTerminationStatus(Command command) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"        this.hasTerminated \u003d command instanceof ExitCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates last executed command, only if the command","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"     * is a non-trivial one which changes the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param newCommand Command that was just ran.","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"    private void updateLastExecutedCommand(Command newCommand) {","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"        //TODO: Use inheritance to group non-trivial commands","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        if (newCommand instanceof AddTaskCommand","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"                || newCommand instanceof DeleteTaskCommand","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"                || newCommand instanceof MarkTaskCommand) {","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"            this.lastExecutedCommand \u003d newCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Jiaaa-yang":93}},{"path":"src/main/java/duke/chatbot/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which adds a given task","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * to a given TaskList.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"public class AddTaskCommand extends TaskListCommand {","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    public AddTaskCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     * Adds a given task to TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList of string describing the task added, and number of","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * tasks in list.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException if the arguments are invalid for given task.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e execute() throws IllegalArgumentException {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        Task newTask \u003d createTask(super.getName(), super.getArgs());","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(\"The following new task has been added:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(newTask.getDescription());","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(String.format(\"You now have %d tasks!\", taskList.getSize()));","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     * Creates a new task based on the name and args","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * of the command.","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param name Name of task to create.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param args Args to create task with.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return New Task created based on name and args.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If args are invalid for task.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    private static Task createTask(String name, String args) throws IllegalArgumentException {","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Tasks description cannot be empty\");","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task;","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (name) {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new ToDo(args);","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            if (!args.contains(\"/by\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new IllegalArgumentException(\"Deadline requires a deadline!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"            String[] deadlineInfo \u003d args.split(\"/by\", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"            String deadlineName \u003d deadlineInfo[0].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"            String deadline \u003d deadlineInfo[1].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Deadline(deadlineName, deadline);","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"event\":","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"            if (!args.contains(\"/at\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new IllegalArgumentException(\"Events requires a time!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"            String[] eventInfo \u003d args.split(\"/at\", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"            String eventName \u003d eventInfo[0].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"            String time \u003d eventInfo[1].strip();","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Event(eventName, time);","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        default:","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid task!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"     * Removes previously added task.","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"    public void undo() {","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"        // Delete last task from list since item is always appended to end","lastModifiedDate":"2022-02-08"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"        taskList.deleteTask(taskList.getSize() - 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":93}},{"path":"src/main/java/duke/chatbot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * @author Jiaaa-yang","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * An abstract class to represent the commands","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * that can be issued to a ChatBot.","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Name of current command */","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String name;","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    /** String representation of arguments for command */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String args;","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    protected Command(String name, String args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * Executes current command in ChatBot context and","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     * returns the response to the command ra.","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList of string containing feedback to command.","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the command is executed","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     * with invalid args.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    public abstract ArrayList\u003cString\u003e execute() throws IllegalArgumentException;","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"     * Reverses the current command. Will be overridden only","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"     * if command is non-trivial and changes tasks state.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public void undo() {};","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses user inputted command to extract","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     * the name and args of the command, returning","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     * the concrete Command subclass for the input.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param input Command inputted by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param taskList TaskList maintained by ChatBot.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param lastExecutedCommand Last command executed by the ChatBot.","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Command object corresponding to input.","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the command is not valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"    public static Command parseCommand(String input, TaskList taskList, Command lastExecutedCommand)","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        String name \u003d input;","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        String args \u003d null;","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"        // Separate command name and args","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"            String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            name \u003d command[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            args \u003d command[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        Command command;","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"list\":","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new ShowTaskListCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"event\":","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            // Fallthrough for add task commands","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new AddTaskCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new DeleteTaskCommand(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new MarkTaskCommand(name, args, MarkTaskCommand.MarkType.DONE, taskList);","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new MarkTaskCommand(name, args, MarkTaskCommand.MarkType.UNDONE, taskList);","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"find\":","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new FindCommand(name, args, taskList);","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"undo\":","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new UndoCommand(name, lastExecutedCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"            command \u003d new ExitCommand(name, args);","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"        default:","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid command\");","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"        return command;","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the original command inputted by user.","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String of original command.","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getOriginalCommand() {","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.name + \" \" + this.args;","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"    protected String getName() {","lastModifiedDate":"2022-01-17"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.name;","lastModifiedDate":"2022-01-17"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"    protected String getArgs() {","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.args;","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Jiaaa-yang":115}},{"path":"src/main/java/duke/chatbot/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which deletes a previously","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * added task.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"public class DeleteTaskCommand extends TaskListCommand {","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Keeps track of task deleted by the command */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    private Task deletedTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    public DeleteTaskCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     * Deletes a task using the index of task","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * provided as an argument.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList containing string description of task deleted,","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     * and number of tasks remaining.","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If invalid index is given.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e execute() throws IllegalArgumentException {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        // Args for this command represents index of task to delete","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        int taskIndex \u003d this.getTaskIndex();","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        this.deletedTask \u003d deletedTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(\"Noted. The following task has been deleted:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(deletedTask.getDescription());","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(String.format(\"You now have %d tasks!\", taskList.getSize()));","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"     * Adds back previously deleted task.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    public void undo() {","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        int taskIndex \u003d this.getTaskIndex();","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        taskList.addTask(taskIndex, this.deletedTask);","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Jiaaa-yang":54}},{"path":"src/main/java/duke/chatbot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which causes the termination","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * of the ChatBot.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String GOODBYE_STRING \u003d \"Goodbye!\";","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    public ExitCommand(String name, String args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     * Command to signal the termination of the ChatBot,","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     * and returns a feedback to print a goodbye message.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList containing the goodbye string.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e execute() {","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(GOODBYE_STRING);","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Jiaaa-yang":28}},{"path":"src/main/java/duke/chatbot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which searches among","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * the TaskList and returns","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * tasks matching a keyword.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"public class FindCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public FindCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     * Searches the TaskList using keyword passed in","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     * by user, and returns the tasks containing the keyword.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList containing string description of tasks matching keyword.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If no search term was passed to command.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e execute() throws IllegalArgumentException {","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        // Args for this command represents keyword to search","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        String keyword \u003d super.getArgs();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        if (keyword \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"No terms passed to find command!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cTask\u003e searchedTasks \u003d taskList.filterTasks(task -\u003e {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"            return taskName.contains(keyword);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        });","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        if (searchedTasks.size() !\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(\"Here are the tasks matching your searched terms\");","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"            // Prepend numbering to searched tasks list","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"            for (int i \u003d 0; i \u003c searchedTasks.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"                Task task \u003d searchedTasks.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"                String taskDescription \u003d String.format(\"%d. %s\", i + 1, task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"                response.add(taskDescription);","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(\"Sorry! No tasks matching your search was found!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Jiaaa-yang":54}},{"path":"src/main/java/duke/chatbot/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which updates the done status of","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * a Task, either marking it as done or undone.","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"public class MarkTaskCommand extends TaskListCommand {","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"     * Enum to represent whether the command should","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"     * mark task as done or undone.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public enum MarkType {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        DONE,","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        UNDONE","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Mark type for command, either done or undone */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    private final MarkType markType;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns a command which marks a task as done or undone.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param name Name of command","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param args Index of task to mark.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param markType MarkType of DONE or UNDONE to mark task.","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param taskList TaskList maintained by ChatBot.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    public MarkTaskCommand(String name, String args, MarkType markType, TaskList taskList) {","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        this.markType \u003d markType;","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"     * Marks a given task in taskList as done or undone,","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"     * using index passed by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList containing description of task marked.","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the index is invalid.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e execute() throws IllegalArgumentException {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        // Args for this command represents index of task to mark","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        int taskIndex \u003d getTaskIndex();","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        String feedback;","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        Task markedTask;","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (this.markType) {","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        case DONE:","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"            markedTask \u003d taskList.checkTask(taskIndex);","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"            feedback \u003d \"Congrats! This task was marked as done:\";","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        case UNDONE:","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            markedTask \u003d taskList.uncheckTask(taskIndex);","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            feedback \u003d \"Okay. The following task was marked undone:\";","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"        default:","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid arguments to mark task\");","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(feedback);","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(markedTask.getDescription());","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"     * Reverses the marking of current task.","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"    public void undo() throws IllegalArgumentException {","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d super.getTaskList();","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"        int taskIndex \u003d this.getTaskIndex();","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        if (this.markType \u003d\u003d MarkType.DONE) {","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"            // Reverses previously marking of task as done","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"            taskList.uncheckTask(taskIndex);","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"        } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"            taskList.checkTask(taskIndex);","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":88}},{"path":"src/main/java/duke/chatbot/command/ShowTaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which prints out a list of item","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * stored by user.","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"class ShowTaskListCommand extends TaskListCommand {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public ShowTaskListCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args, taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     * Displays task stored by user in a list","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     * format with numbering.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList containing string description of all tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e execute() {","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        TaskList taskList \u003d this.getTaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"            response.add(\"You have no tasks currently!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"            ArrayList\u003cString\u003e taskDescriptions \u003d taskList.getTaskDescriptions();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"            // Prepend each list item with its numbering inside list","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"            for (int i \u003d 0; i \u003c taskDescriptions.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"                String description \u003d taskDescriptions.get(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"                response.add(String.format(\"%d.%s\", i + 1, description));","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":40}},{"path":"src/main/java/duke/chatbot/command/TaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which operates on the TaskList","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * maintained by ChatBot","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"abstract class TaskListCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Task list maintained by ChatBot */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public TaskListCommand(String name, String args, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, args);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     * Gets the index of task to operate on from args passed to","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     * command, and parses it to an int.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Index of task command should operate on.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the index is invalid for current list.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    protected int getTaskIndex() throws IllegalArgumentException {","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"            return Integer.parseInt(super.getArgs()) - 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Non-number passed as index for task list\");","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Jiaaa-yang":36}},{"path":"src/main/java/duke/chatbot/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.chatbot.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * Command which undo the last executed command","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * by the ChatBot.","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Last command executed by ChatBot */","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Command lastExecutedCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns an UndoCommand that will undo the given","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"     * last executed command.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param name Name of undo command.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param lastExecutedCommand Command that is last executed by ChatBot,","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     *                            to be undone.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public UndoCommand(String name, Command lastExecutedCommand) {","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name, null);","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        this.lastExecutedCommand \u003d lastExecutedCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     * Undo the command last executed by the ChatBot.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList of string describing command that was undone.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If there is no last command.","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e execute() throws IllegalArgumentException {","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        if (this.lastExecutedCommand \u003d\u003d null) {","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"No command to undo!\");","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        lastExecutedCommand.undo();","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(\"The following command was undone:\");","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        response.add(lastExecutedCommand.getOriginalCommand());","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        return response;","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"Jiaaa-yang":45}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.data;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * Class that is linked to a file on disk,","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" * with methods to read and write from the file.","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Path of file to link to */","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Path filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private Storage(Path filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * Initialise a Storage instance linked to","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * file provided by filePath. Creates the file","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * if it does not exist.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param filePath Path of file to link.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Storage instance linked to Path","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * given by filePath.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public static Storage initStorage(Path filePath) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        if (Files.notExists(filePath)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Storage(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"     * Writes each item in data as a new line to","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"     * linked filePath.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param data ArrayList of data to write.","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IOException If the write fails.","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    public void writeAll(ArrayList\u003cString\u003e data) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        Files.write(this.filePath, data, Charset.defaultCharset());","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"     * Read all lines of linked filePath to","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     * an ArrayList.","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList containing each line as an element.","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IOException If the read fails.","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e readAll() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(this.filePath, Charset.defaultCharset());","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        return new ArrayList\u003c\u003e(lines);","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Jiaaa-yang":61}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.data;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * Class holding list of tasks stored by","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" * users, and provides method to manipulate","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":" * the list and save it to disk.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Backing store for current task list */","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Storage store;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Internal list of tasks */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    private TaskList(Storage store, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        this.store \u003d store;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns ArrayList of string description of each","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"     * task in taskList.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return ArrayList of tasks description.","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cString\u003e getTaskDescriptions() {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.tasks.stream()","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"                .map(Task::getDescription)","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the length of tasks array.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Size of tasks ArrayList.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    public int getSize() {","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the filtered ArrayList of Task by applying","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     * filter function on each Task in list.","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param filter Filter function to applied on each task returning","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"     *               a boolean on whether the task passes the filter.","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Filtered list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    public ArrayList\u003cTask\u003e filterTasks(Function\u003cTask, Boolean\u003e filter) {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        Predicate\u003cTask\u003e taskFilter \u003d new Predicate\u003cTask\u003e() {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            public boolean test(Task task) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"                return filter.apply(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        };","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"                .stream()","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"                .filter(taskFilter)","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"     * Initialise a TaskList instance with store as","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"     * a backing storage. Also loads the content of the store","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"     * into its task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param store Storage instance this task list was saved on.","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return TaskList initialised with contents in store, and","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"     * backed by store.","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"    public static TaskList initTaskList(Storage store) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.generateSavedTasks(store.readAll());","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        return new TaskList(store, tasks);","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"     * Adds task to task list, and saving to storage.","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param task Task to add to task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"     * Adds task to task list at given index, and","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"     * saving to storage.","lastModifiedDate":"2022-02-08"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index to add task in.","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param task Task to add.","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If index is out of list range.","lastModifiedDate":"2022-02-08"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    public void addTask(int index, Task task) throws IllegalArgumentException {","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2022-02-08"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid index for current list\");","lastModifiedDate":"2022-02-08"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"        this.tasks.add(index, task);","lastModifiedDate":"2022-02-08"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"     * Deletes task from task list, and saving to storage.","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return The deleted Task.","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If index is out of list range.","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"    public Task deleteTask(int index) throws IllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid index for current list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d this.tasks.remove(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"     * Check task, marking it as done in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index of task to mark as done.","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return The checked Task.","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If index is out of list range.","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"Jiaaa-yang"},"content":"    public Task checkTask(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid index for current list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"        task.markDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"Jiaaa-yang"},"content":"     * Uncheck task, marking it as undone in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index of task to mark undone.","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return The unchecked Task.","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If index is out of list range.","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"Jiaaa-yang"},"content":"    public Task uncheckTask(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid index for current list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"Jiaaa-yang"},"content":"        task.unmarkDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"Jiaaa-yang"},"content":"        this.saveState();","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"Jiaaa-yang"},"content":"     * Saves current state of TaskList into backing store.","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"Jiaaa-yang"},"content":"    private void saveState() {","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cString\u003e taskData \u003d this.tasks.stream()","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"Jiaaa-yang"},"content":"                .map(task -\u003e task.encodeTaskData())","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"Jiaaa-yang"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"Jiaaa-yang"},"content":"            this.store.writeAll(new ArrayList\u003c\u003e(taskData));","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"Jiaaa-yang"},"content":"            System.err.println(\"Backed file cannot be written to: \" + store);","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"Jiaaa-yang"},"content":"     * Checks if given index is a valid index to operate","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"     * on the list (0 \u003c\u003d index \u003c tasks.size()).","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param index Index to check.","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Boolean of whether index is valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":183,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"Jiaaa-yang"},"content":"        return (0 \u003c\u003d index) \u0026\u0026 (index \u003c this.tasks.size());","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"Jiaaa-yang"},"content":"    private static ArrayList\u003cTask\u003e generateSavedTasks(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2022-01-23"},{"lineNumber":188,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":189,"author":{"gitId":"Jiaaa-yang"},"content":"        for (String line: data) {","lastModifiedDate":"2022-01-23"},{"lineNumber":190,"author":{"gitId":"Jiaaa-yang"},"content":"            Task savedTask \u003d Task.decodeTaskData(line);","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"Jiaaa-yang"},"content":"            tasks.add(savedTask);","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"Jiaaa-yang"},"content":"        return tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Jiaaa-yang":195}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * A concrete task which contains a name","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * and a deadline by which the task should","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * be completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final SimpleDateFormat INPUT_DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final SimpleDateFormat OUTPUT_DATE_FORMAT \u003d new SimpleDateFormat(\"dd MMM\");","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Deadline for current task */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Date deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns a new Deadline with the given name,","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     * and parses deadline string to a Date object.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param name Name of deadline.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param deadline Date the deadline is to be completed by,","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     *                 in string format of DD/MM/YYYY.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If deadline is not of proper format.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    public Deadline(String name, String deadline) throws IllegalArgumentException {","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        this.deadline \u003d parseDeadline(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parse given date string to Date object, where","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"     * string must be in the format of DD/MM/YYYY.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param dateString Date string to parse.","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Date object corresponding to dateString","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If the date string is not of DD/MM/YYYY format.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"    private static Date parseDeadline(String dateString) throws IllegalArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"            Date date \u003d INPUT_DATE_FORMAT.parse(dateString);","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"            return date;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Invalid date format: Dates should be in DD/MM/YYYY\");","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        String formattedDeadline \u003d OUTPUT_DATE_FORMAT.format(this.deadline);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"[D]%s %s (by: %s)\",","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"                super.getDoneStatusCheckbox(), super.getName(), formattedDeadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    public String encodeTaskData() {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        String doneString \u003d this.isDone() ? \"Y\" : \"N\";","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        String inputFormattedDeadline \u003d INPUT_DATE_FORMAT.format(this.deadline);","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"D,%s,%s,%s\", super.getName(), doneString, inputFormattedDeadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":64}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":" * A concrete Task which contains","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":" * a name, and a time string where","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" * the event happens.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Time at which this event occurs */","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String time;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns a new Event with given name,","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"     * and the time which the event occurs.","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param name Name of new event.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param time Time at which event occurs.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"[E]%s %s (at: %s)\",","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"                super.getDoneStatusCheckbox(), super.getName(), this.time);","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public String encodeTaskData() {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        String doneString \u003d this.isDone() ? \"Y\" : \"N\";","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"E,%s,%s,%s\", super.getName(), doneString, this.time);","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":" * A class to represent a Task","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":" * created by user of the ChatBot.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    /** String description of current task */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String name;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Whether the task is marked as done */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    protected Task(String name) {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     * Decodes task data previously saved to file to","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     * a task with its saved info.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param taskData String containing data of the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Task corresponding to saved data.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws IllegalArgumentException If task data to corrupt is corrupted.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    public static Task decodeTaskData(String taskData) throws IllegalArgumentException {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        String[] data \u003d taskData.split(\",\");","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        assert data.length \u003d\u003d 4 : \"Data file should have 4 comma separated values\";","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        String type \u003d data[0];","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        String name \u003d data[1];","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        String isDone \u003d data[2];","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        String date \u003d data[3];","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (type) {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"T\":","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new ToDo(name);","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"E\":","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Event(name, date);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        case \"D\":","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"            task \u003d new Deadline(name, date);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"            // Type should only be of \u0027T\u0027, \u0027E\u0027 or \u0027D\u0027.","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalArgumentException(\"Corrupted data\");","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        if (isDone.equals(\"Y\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"            task.markDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        return task;","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"     * Get a checkbox describing whether the","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"     * task is done or not.","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String representing done status of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"    protected String getDoneStatusCheckbox() {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"     * Gets the string representation of current","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"     * task with its name and any additional info.","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String representing current task.","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"    public abstract String getDescription();","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"     * Gets the serialised data of current task,","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"     * separated by commas, for storage in disk file.","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String representing data of current task.","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"    public abstract String encodeTaskData();","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"     * Marks current task as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"     * Marks current task as undone.","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"     * Gets the name of the Task.","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getName() {","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"     * Gets a boolean on whether the","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"     * task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return True if task was marked done,","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"     * false otherwise.","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":116}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":" * A concrete Task which contains","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":" * just a name description.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"[T]%s %s\",","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"                super.getDoneStatusCheckbox(), super.getName());","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    public String encodeTaskData() {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        String doneString \u003d this.isDone() ? \"Y\" : \"N\";","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(\"T,%s,%s,%s\", super.getName(), doneString, \"NA\");","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Jiaaa-yang":24}},{"path":"src/main/java/duke/ui/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.chatbot.ChatBot;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" * Duke class serving as interface between","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":" * GUI and chatbot logic.","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"public class Duke {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Default path for data file: data/duke.txt */","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final Path DEFAULT_FILE_PATH \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Start up message for duke */","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hi I\u0027m Duke!\\nWhat can I do for you?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    /** ChatBot instance for running of user commands */","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    private ChatBot chatBot \u003d null;","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * Creates a duke instance initialised with default data file path.","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public Duke() {","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            Storage store \u003d Storage.initStorage(DEFAULT_FILE_PATH);","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            TaskList taskList \u003d TaskList.initTaskList(store);","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"            this.chatBot \u003d new ChatBot(taskList);","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns a boolean on whether the chatbot","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"     * has received a termination command.","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return Whether the chatbot has terminated.","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean hasTerminated() {","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        return this.chatBot.hasTerminated();","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     * Runs the user command based on the input string and gets","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"     * the feedback response from ChatBot.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param input User input command to run.","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String feedback for command ran.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        ArrayList\u003cString\u003e response \u003d chatBot.runCommand(input);","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        // Show each item in response in a new line","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        return response.stream().reduce(\"\", (first, second) -\u003e first + \"\\n\" + second);","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns start up message to display in application.","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"     * @return String describing start up message to show.","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"Jiaaa-yang":72}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.ui.controller.MainWindow;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        // @@author Jeffrey Lum","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        // Reused from JavaFX tutorial at","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        // https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027serif\u0027\");","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"            stage.show();","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Jiaaa-yang":34,"-":3}},{"path":"src/main/java/duke/ui/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.ui.controller;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":" * This control represents a dialog box consisting of a Circle filled","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":" * with an ImagePattern to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        assert img !\u003d null : \"Image of DialogBox should not be null\";","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        // @@author Jeffrey Lum","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        // Reused from JavaFX tutorial at","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        // https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // @@author Jeffrey Lum","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Reused from JavaFX tutorial at","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        db.flip();","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        return db;","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Jiaaa-yang":54,"-":18}},{"path":"src/main/java/duke/ui/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.ui.controller;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import duke.ui.Duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"     * Allows VBox to scroll automatically as content overflows, and","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"     * adds start up message to dialog container.","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"                DialogBox.getDukeDialog(Duke.getWelcomeMessage(), dukeImage)","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        );","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        this.duke \u003d d;","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"        // @@author Jeffrey Lum","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        // Reused from JavaFX tutorial at","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        // https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        );","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (duke.hasTerminated()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            // Disables input field and sets gray fill over application","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            dialogContainer.setBackground(","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    new Background(new BackgroundFill(","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                            Color.rgb(169, 169, 169), CornerRadii.EMPTY, Insets.EMPTY)","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    ));","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Jiaaa-yang":66,"-":13}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-border-width: 2; -fx-border-color: black; -fx-border-insets: 10; -fx-border-radius: 5; -fx-background-color: #BF9270; -fx-background-insets: 10; -fx-background-radius: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"30.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Jiaaa-yang":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.controller.MainWindow\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter command...\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"         \u003c/opaqueInsets\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: #4adede; -fx-border-width: 2; -fx-border-color: black; -fx-border-radius: 5;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"550.0\" prefWidth\u003d\"380.0\" style\u003d\"-fx-background-color: #EDCDBB;\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"Jiaaa-yang":23}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    void constructor_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        String deadlineName \u003d \"Test Deadline\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        String invalidDateString \u003d \"01-01-2020\";","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"            new Deadline(deadlineName, invalidDateString) ;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"        });","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    void getDescription_sampleDeadline_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", \"01/01/2020\");","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedDescription \u003d \"[D][ ] Test Deadline (by: 01 Jan)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedDescription, deadline.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    void encodeTaskData_sampleDeadline_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", \"01/01/2020\");","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedEncoding \u003d \"D,Test Deadline,N,01/01/2020\";","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedEncoding, deadline.encodeTaskData());","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":31}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class EventTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    void getDescription_sampleEvent_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        Event event \u003d new Event(\"Test Event\", \"Mon 2-4pm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedDescription \u003d \"[E][ ] Test Event (at: Mon 2-4pm)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedDescription, event.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    void encodeTaskData_sampleEvent_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        Event event \u003d new Event(\"Test Event\", \"Mon 2-4pm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedEncoding \u003d \"E,Test Event,N,Mon 2-4pm\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedEncoding, event.encodeTaskData());","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":21}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    void decodeTaskData_todoTaskString_returnTodoInstance() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        String todoTestData \u003d \"T,Test TODO Task,N,NA\";","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d Task.decodeTaskData(todoTestData);","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(task instanceof ToDo);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    void decodeTaskData_eventTaskString_returnEventInstance() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        String eventTestData \u003d \"E,Test Event Task,N,Monday 2-4pm\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d Task.decodeTaskData(eventTestData);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(task instanceof Event);","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    void decodeTaskData_deadlineTaskString_returnDeadlineInstance() {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        String deadlineTestData \u003d \"D,Test Deadline Task,Y,01/01/2022\";","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        Task task \u003d Task.decodeTaskData(deadlineTestData);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":28}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"    void getDescription_sampleTodo_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"        ToDo todo \u003d new ToDo(\"Test TODO\");","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedDescription \u003d \"[T][ ] Test TODO\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedDescription, todo.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    void encodeTaskData_sampleTodo_matchExpected() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        ToDo todo \u003d new ToDo(\"Test TODO\");","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedEncoding \u003d \"T,Test TODO,N,NA\";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedEncoding, todo.encodeTaskData());","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Jiaaa-yang":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"todo first todo","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"todo second todo","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"event first event /at first time","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"deadline first deadline /by second time","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"delete 2","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"deadline first deadline /by 01/01/2022","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"unmark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"Jiaaa-yang":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"# delete previously saved data","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"if [ -e \"data/duke.txt\" ]","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"then","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    rm data/duke.txt","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"fi","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"Jiaaa-yang":6}}]
