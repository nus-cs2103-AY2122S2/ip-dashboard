[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"# duke.Duke project template","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gigituang":2,"-":22}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":" * add tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"    private Task task;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"     * Constructor for AddCommand","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"     * @param task to be added to the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"    public AddCommand(Task task){","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"     * @param taskList a list to store all tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"     * @param ui to display output","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"     * @param storage to store task","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"     * @throws Exception_handler","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception_handler, IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"        ui.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"        ui.println(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"        ui.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"        storage.writeToFile(taskList.getListOfTasks());","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"     * Method to check for exit command","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"     * @return A boolean to check if an exit command is entered","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"    public boolean isExit(){","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"        return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"gigituang":42}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":" * Abstract class to be inherited","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"     *Abstract method which executes commands","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws Exception_handler, IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"     *Abstract boolean method to check for exit command","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"gigituang":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"    protected LocalDateTime due;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"     * Constructor for Deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"     * @param d for task","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"     * @param due deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"    public Deadline(String d, LocalDateTime due){","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"        super(d);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"        this.due \u003d due;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"        this.type\u003d \"D\";","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"     * Constructor for deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"     * @param d for task","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"     * @param done check for done task","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"     * @param due deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"    public Deadline(String d, String done, LocalDateTime due){","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"        super(d,done);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"        this.due \u003d due;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"        this.type\u003d \"D\";","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"     * return deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"     * @return a string which represents the time","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"    public String getDue() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"        return due.format(OUT_DTF);","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"     * Overriding ToString method","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"     * @return","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"gigituang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"gigituang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + due.format(OUT_DTF) +\") \";","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"gigituang":48}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"    private int index;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"     * @param index index of the task in the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"     * Execute this delete command","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"     * @param taskList a list to store the tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"     * @param ui to display output","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"     * @param storage to store tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"     * @throws Exception_handler","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception_handler, IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"            throw new Exception_handler(\"Index out of range\");","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"        Task temp \u003d taskList.removeTask(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"        System.out.println(temp);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"        storage.writeToFile(taskList.getListOfTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"     * Method to check for exit command","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"     * @return A boolean to check if an exit command is entered","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"        return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"gigituang":43}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"    private int index;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"     * Constructor for DoneCommand","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"     * @param index of the task in the task list","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    public DoneCommand(int index){","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"     * Execute the delete command","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"     * @param taskList a list to add all the tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"     * @param ui to display output","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"     * @param storage to store task","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"     * @throws Exception_handler, IOException if error","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception_handler, IOException {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"        if (index \u003c 0 || index \u003e taskList.getSize() - 1){","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"            throw new Exception_handler(\"Invalid task number\");","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"        taskList.getListOfTasks().get(index).setDone();","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"        storage.writeToFile(taskList.getListOfTasks());","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"        ui.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"        ui.println(taskList.getListOfTasks().get(index));","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"     * Method to check for exit command","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"     * @return A boolean to check if an exit command is entered","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"    public boolean isExit(){","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"        return false;","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;//import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"//import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"//import java.util.Scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"//import java.util.List;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"//import java.io.File;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"//import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"//import java.io.PrintWriter;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"//import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"//","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"//public class duke.Duke {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"//    public static DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"//        System.out.println(\"Hello! i\u0027m duke.Duke\");","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"//        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"//        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"//","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"//        while (sc.hasNext()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"//            try {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"//                List\u003cduke.Task\u003e taskList \u003d importTask();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"//                String[] s \u003d sc.nextLine().split(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"//                if (s[0].equals(\"bye\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"//                    if (s.length \u003e 1) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"//                    break;","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"//                } else if (s[0].equals(\"list\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"//                    int count \u003d 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"//                    for (duke.Task sample : taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"//                        System.out.println(count + \". \" + sample);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"//                        count++;","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"//                } else if (s[0].equals(\"mark\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"//                    if (s.length \u003c 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"☹ OOPS!!! That task doesn\u0027t exist or you failed to include a number.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"gigituang"},"content":"//                    int index \u003d Integer.parseInt(s[1]) - 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"gigituang"},"content":"//                    if (index \u003c 0 || index \u003e taskList.size() - 1) {","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"☹ OOPS!!! That task doesn\u0027t exist or you failed to include a number.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"gigituang"},"content":"//                    taskList.get(index).setDone();","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"gigituang"},"content":"//                    System.out.print(taskList.get(index));","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"gigituang"},"content":"//                    writeToFile(taskList);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"gigituang"},"content":"//                } else if (s[0].equals(\"todo\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"gigituang"},"content":"//                    if (s.length \u003c 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"☹ OOPS!!! You\u0027re missing some descriptions for your event.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"gigituang"},"content":"//                    String str \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"gigituang"},"content":"//                    for (int i \u003d 1; i \u003c s.length; i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"gigituang"},"content":"//                        str \u003d str + s[i] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"gigituang"},"content":"//                    duke.ToDos task \u003d new duke.ToDos(str);","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"gigituang"},"content":"//                    taskList.add(task);","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Got it, I\u0027ve added this task: \");","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(task);","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"gigituang"},"content":"//                    writeToFile(taskList);","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"gigituang"},"content":"//                } else if (s[0].equals(\"event\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"gigituang"},"content":"//                    if (s.length \u003c 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"☹ OOPS!!! The description cof a todo cannot be empty.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"gigituang"},"content":"//                    String str \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"gigituang"},"content":"//                    String time \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"gigituang"},"content":"//                    int index \u003d 0;","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"gigituang"},"content":"//                    for (int i \u003d 1; i \u003c s.length; i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"gigituang"},"content":"//                        if (s[i].equals(\"/at\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"gigituang"},"content":"//                            index \u003d i + 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"gigituang"},"content":"//                            break;","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"gigituang"},"content":"//                        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"gigituang"},"content":"//                            str \u003d str + s[i] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"gigituang"},"content":"//                        }","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"gigituang"},"content":"//                    for (int k \u003d index; k \u003c s.length; k++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"gigituang"},"content":"//                        time \u003d time + s[k] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"gigituang"},"content":"//                    duke.Event event \u003d new duke.Event(str, time);","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"gigituang"},"content":"//                    taskList.add(event);","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(event);","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"gigituang"},"content":"//                    writeToFile(taskList);","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"gigituang"},"content":"//                } else if (s[0].equals(\"deadline\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"gigituang"},"content":"//                    if (s.length \u003c 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"☹ OOPS!!! You\u0027re missing some descriptions for your deadline.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"gigituang"},"content":"//                    String time \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"gigituang"},"content":"//                    String str \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"gigituang"},"content":"//                    int index \u003d 0;","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"gigituang"},"content":"//","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"gigituang"},"content":"//                    for (int i \u003d 1; i \u003c s.length; i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"gigituang"},"content":"//                        if (s[i].equals(\"/by\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"gigituang"},"content":"//                            index \u003d i + 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":102,"author":{"gitId":"gigituang"},"content":"//                            break;","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"gigituang"},"content":"//                        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":104,"author":{"gitId":"gigituang"},"content":"//                            str \u003d str + s[i] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"gigituang"},"content":"//                        }","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"gigituang"},"content":"//","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"gigituang"},"content":"//                    for (int k \u003d index; k \u003c s.length; k++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":109,"author":{"gitId":"gigituang"},"content":"//                        time \u003d time + s[k] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":111,"author":{"gitId":"gigituang"},"content":"//                    LocalDateTime dateTime \u003d LocalDateTime.parse(time.trim(), dtf);","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"gigituang"},"content":"//                    duke.Deadline deadline \u003d new duke.Deadline(str, dateTime);","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"gigituang"},"content":"//                    taskList.add(deadline);","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(deadline);","lastModifiedDate":"2022-02-03"},{"lineNumber":116,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list. \");","lastModifiedDate":"2022-02-03"},{"lineNumber":117,"author":{"gitId":"gigituang"},"content":"//                    writeToFile(taskList);","lastModifiedDate":"2022-02-03"},{"lineNumber":118,"author":{"gitId":"gigituang"},"content":"//                } else if (s[0].equals(\"delete\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"gigituang"},"content":"//                    if (s.length \u003c 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"Please enter an index\");","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":122,"author":{"gitId":"gigituang"},"content":"//                    int index \u003d Integer.parseInt(s[1]) - 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"gigituang"},"content":"//                    if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":124,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"Index out of range or invalid\");","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":126,"author":{"gitId":"gigituang"},"content":"//                    duke.Task removed \u003d taskList.remove(index);","lastModifiedDate":"2022-02-03"},{"lineNumber":127,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-03"},{"lineNumber":128,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(removed);","lastModifiedDate":"2022-02-03"},{"lineNumber":129,"author":{"gitId":"gigituang"},"content":"//                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list. \");","lastModifiedDate":"2022-02-03"},{"lineNumber":130,"author":{"gitId":"gigituang"},"content":"//                    writeToFile(taskList);","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"gigituang"},"content":"//                } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"gigituang"},"content":"//                    throw new duke.Exception_handler(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"gigituang"},"content":"//                }","lastModifiedDate":"2022-02-03"},{"lineNumber":134,"author":{"gitId":"gigituang"},"content":"//            } catch (duke.Exception_handler e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":135,"author":{"gitId":"gigituang"},"content":"//                System.out.println(e);","lastModifiedDate":"2022-02-03"},{"lineNumber":136,"author":{"gitId":"gigituang"},"content":"//            } catch (IOException ie) {","lastModifiedDate":"2022-02-03"},{"lineNumber":137,"author":{"gitId":"gigituang"},"content":"//                System.out.println(\"IOException\");","lastModifiedDate":"2022-02-03"},{"lineNumber":138,"author":{"gitId":"gigituang"},"content":"//            } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-02-03"},{"lineNumber":139,"author":{"gitId":"gigituang"},"content":"//                System.out.println(\"Please enter deadline in dd/mm/yyyy HHmm format\");","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"gigituang"},"content":"//            }","lastModifiedDate":"2022-02-03"},{"lineNumber":141,"author":{"gitId":"gigituang"},"content":"//        }","lastModifiedDate":"2022-02-03"},{"lineNumber":142,"author":{"gitId":"gigituang"},"content":"//    }","lastModifiedDate":"2022-02-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"gigituang"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"gigituang"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":146,"author":{"gitId":"gigituang"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":147,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":149,"author":{"gitId":"gigituang"},"content":"     * constructor for Duke","lastModifiedDate":"2022-02-03"},{"lineNumber":150,"author":{"gitId":"gigituang"},"content":"     * @param filePath path to source file","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":152,"author":{"gitId":"gigituang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-03"},{"lineNumber":153,"author":{"gitId":"gigituang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"gigituang"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"gigituang"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-03"},{"lineNumber":156,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":159,"author":{"gitId":"gigituang"},"content":"     * method to run the program","lastModifiedDate":"2022-02-03"},{"lineNumber":160,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":161,"author":{"gitId":"gigituang"},"content":"    public void run() {","lastModifiedDate":"2022-02-03"},{"lineNumber":162,"author":{"gitId":"gigituang"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-02-03"},{"lineNumber":163,"author":{"gitId":"gigituang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":164,"author":{"gitId":"gigituang"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-03"},{"lineNumber":165,"author":{"gitId":"gigituang"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":166,"author":{"gitId":"gigituang"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-02-03"},{"lineNumber":167,"author":{"gitId":"gigituang"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-02-03"},{"lineNumber":168,"author":{"gitId":"gigituang"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-02-03"},{"lineNumber":169,"author":{"gitId":"gigituang"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-02-03"},{"lineNumber":170,"author":{"gitId":"gigituang"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-02-03"},{"lineNumber":171,"author":{"gitId":"gigituang"},"content":"            } catch (Exception_handler | IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":172,"author":{"gitId":"gigituang"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":173,"author":{"gitId":"gigituang"},"content":"            } finally {","lastModifiedDate":"2022-02-03"},{"lineNumber":174,"author":{"gitId":"gigituang"},"content":"                ui.showLine();","lastModifiedDate":"2022-02-03"},{"lineNumber":175,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":176,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":177,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":178,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":180,"author":{"gitId":"gigituang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":181,"author":{"gitId":"gigituang"},"content":"        new Duke(\"/Users/gigi/Desktop/CS2103T/duke.txt\").run();","lastModifiedDate":"2022-02-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":185,"author":{"gitId":"gigituang"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":186,"author":{"gitId":"gigituang"},"content":"//","lastModifiedDate":"2022-02-03"},{"lineNumber":187,"author":{"gitId":"gigituang"},"content":"//public class duke.Duke {","lastModifiedDate":"2022-02-03"},{"lineNumber":188,"author":{"gitId":"gigituang"},"content":"//    private duke.Storage storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":189,"author":{"gitId":"gigituang"},"content":"//    private duke.TaskList tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":190,"author":{"gitId":"gigituang"},"content":"//    private duke.Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":191,"author":{"gitId":"gigituang"},"content":"//","lastModifiedDate":"2022-02-03"},{"lineNumber":192,"author":{"gitId":"gigituang"},"content":"//    public duke.Duke(String filePath) {","lastModifiedDate":"2022-02-03"},{"lineNumber":193,"author":{"gitId":"gigituang"},"content":"//        ui \u003d new duke.Ui();","lastModifiedDate":"2022-02-03"},{"lineNumber":194,"author":{"gitId":"gigituang"},"content":"//        storage \u003d new duke.Storage(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":195,"author":{"gitId":"gigituang"},"content":"//        tasks \u003d new duke.TaskList(storage.load());","lastModifiedDate":"2022-02-03"},{"lineNumber":196,"author":{"gitId":"gigituang"},"content":"//    }","lastModifiedDate":"2022-02-03"},{"lineNumber":197,"author":{"gitId":"gigituang"},"content":"//    public void run() {","lastModifiedDate":"2022-02-03"},{"lineNumber":198,"author":{"gitId":"gigituang"},"content":"//        ui.showWelcome();","lastModifiedDate":"2022-02-03"},{"lineNumber":199,"author":{"gitId":"gigituang"},"content":"//        boolean isExit \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":200,"author":{"gitId":"gigituang"},"content":"//        while (!isExit) {","lastModifiedDate":"2022-02-03"},{"lineNumber":201,"author":{"gitId":"gigituang"},"content":"//            try {","lastModifiedDate":"2022-02-03"},{"lineNumber":202,"author":{"gitId":"gigituang"},"content":"//                String fullCommand \u003d ui.readCommand()\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":203,"author":{"gitId":"gigituang"},"content":"//                ui.showLine();","lastModifiedDate":"2022-02-03"},{"lineNumber":204,"author":{"gitId":"gigituang"},"content":"//                duke.Command c \u003d duke.Parser.parse(fullCommand);","lastModifiedDate":"2022-02-03"},{"lineNumber":205,"author":{"gitId":"gigituang"},"content":"//                c.execute(tasks,ui,storage);","lastModifiedDate":"2022-02-03"},{"lineNumber":206,"author":{"gitId":"gigituang"},"content":"//                isExit \u003d c.isExit();","lastModifiedDate":"2022-02-03"},{"lineNumber":207,"author":{"gitId":"gigituang"},"content":"//            } catch (duke.Exception_handler | IOException) {","lastModifiedDate":"2022-02-03"},{"lineNumber":208,"author":{"gitId":"gigituang"},"content":"//                ui.showError(e.getMessage);","lastModifiedDate":"2022-02-03"},{"lineNumber":209,"author":{"gitId":"gigituang"},"content":"//            } finally {","lastModifiedDate":"2022-02-03"},{"lineNumber":210,"author":{"gitId":"gigituang"},"content":"//                ui.showLine();","lastModifiedDate":"2022-02-03"},{"lineNumber":211,"author":{"gitId":"gigituang"},"content":"//            }","lastModifiedDate":"2022-02-03"},{"lineNumber":212,"author":{"gitId":"gigituang"},"content":"//        }","lastModifiedDate":"2022-02-03"},{"lineNumber":213,"author":{"gitId":"gigituang"},"content":"//    }","lastModifiedDate":"2022-02-03"},{"lineNumber":214,"author":{"gitId":"gigituang"},"content":"//    public static","lastModifiedDate":"2022-02-03"},{"lineNumber":215,"author":{"gitId":"gigituang"},"content":"//","lastModifiedDate":"2022-02-03"},{"lineNumber":216,"author":{"gitId":"gigituang"},"content":"//        public static List\u003cduke.Task\u003e importTask() throws FileNotFoundException {","lastModifiedDate":"2022-02-03"},{"lineNumber":217,"author":{"gitId":"gigituang"},"content":"//            List\u003cduke.Task\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-03"},{"lineNumber":218,"author":{"gitId":"gigituang"},"content":"//            File temp \u003d new File(\"/Users/gigi/Desktop/CS2103T/duke.txt\");","lastModifiedDate":"2022-02-03"},{"lineNumber":219,"author":{"gitId":"gigituang"},"content":"//            try {","lastModifiedDate":"2022-02-03"},{"lineNumber":220,"author":{"gitId":"gigituang"},"content":"//                Scanner fileScanner \u003d new Scanner(temp);","lastModifiedDate":"2022-02-03"},{"lineNumber":221,"author":{"gitId":"gigituang"},"content":"//                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":222,"author":{"gitId":"gigituang"},"content":"//                    String[] token \u003d fileScanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2022-02-03"},{"lineNumber":223,"author":{"gitId":"gigituang"},"content":"//                    if (token.length \u003c\u003d 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":224,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"Invalid line\");","lastModifiedDate":"2022-02-03"},{"lineNumber":225,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":226,"author":{"gitId":"gigituang"},"content":"//                    if(token[0].equals(\"T\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":227,"author":{"gitId":"gigituang"},"content":"//                        tempList.add(new duke.ToDos(token[2], token[1]));","lastModifiedDate":"2022-02-03"},{"lineNumber":228,"author":{"gitId":"gigituang"},"content":"//                    } else if(token[0].equals(\"D\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":229,"author":{"gitId":"gigituang"},"content":"//                        tempList.add(new duke.Deadline(token[2], token[1], LocalDateTime.parse(token[3],dtf)));","lastModifiedDate":"2022-02-03"},{"lineNumber":230,"author":{"gitId":"gigituang"},"content":"//                    } else if(token[0].equals(\"E\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":231,"author":{"gitId":"gigituang"},"content":"//                        tempList.add(new duke.Event(token[2], token[1], token[3]));","lastModifiedDate":"2022-02-03"},{"lineNumber":232,"author":{"gitId":"gigituang"},"content":"//                    } else{","lastModifiedDate":"2022-02-03"},{"lineNumber":233,"author":{"gitId":"gigituang"},"content":"//                        throw new duke.Exception_handler(\"Invalid task type\");","lastModifiedDate":"2022-02-03"},{"lineNumber":234,"author":{"gitId":"gigituang"},"content":"//                    }","lastModifiedDate":"2022-02-03"},{"lineNumber":235,"author":{"gitId":"gigituang"},"content":"//                }","lastModifiedDate":"2022-02-03"},{"lineNumber":236,"author":{"gitId":"gigituang"},"content":"//                return tempList;","lastModifiedDate":"2022-02-03"},{"lineNumber":237,"author":{"gitId":"gigituang"},"content":"//            }","lastModifiedDate":"2022-02-03"},{"lineNumber":238,"author":{"gitId":"gigituang"},"content":"//            catch(duke.Exception_handler de){","lastModifiedDate":"2022-02-03"},{"lineNumber":239,"author":{"gitId":"gigituang"},"content":"//                System.out.println(de.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":240,"author":{"gitId":"gigituang"},"content":"//            }","lastModifiedDate":"2022-02-03"},{"lineNumber":241,"author":{"gitId":"gigituang"},"content":"//            catch(FileNotFoundException e){","lastModifiedDate":"2022-02-03"},{"lineNumber":242,"author":{"gitId":"gigituang"},"content":"//                System.out.println(\"File not found\");","lastModifiedDate":"2022-02-03"},{"lineNumber":243,"author":{"gitId":"gigituang"},"content":"//            }","lastModifiedDate":"2022-02-03"},{"lineNumber":244,"author":{"gitId":"gigituang"},"content":"//            return tempList;","lastModifiedDate":"2022-02-03"},{"lineNumber":245,"author":{"gitId":"gigituang"},"content":"//        }","lastModifiedDate":"2022-02-03"},{"lineNumber":246,"author":{"gitId":"gigituang"},"content":"//        public static void writeToFile(List\u003cduke.Task\u003e tasks) throws IOException, FileNotFoundException {","lastModifiedDate":"2022-02-03"},{"lineNumber":247,"author":{"gitId":"gigituang"},"content":"//            File file \u003d new File(\"/Users/gigi/Desktop/CS2103T/duke.txt\");","lastModifiedDate":"2022-02-03"},{"lineNumber":248,"author":{"gitId":"gigituang"},"content":"//            PrintWriter pw \u003d new PrintWriter(file);","lastModifiedDate":"2022-02-03"},{"lineNumber":249,"author":{"gitId":"gigituang"},"content":"//            String output \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":250,"author":{"gitId":"gigituang"},"content":"//            for (duke.Task t : tasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":251,"author":{"gitId":"gigituang"},"content":"//                if (t.getType().equals(\"T\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":252,"author":{"gitId":"gigituang"},"content":"//                    output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":253,"author":{"gitId":"gigituang"},"content":"//                } else if (t.getType().equals(\"E\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":254,"author":{"gitId":"gigituang"},"content":"//                    output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"|\"","lastModifiedDate":"2022-02-03"},{"lineNumber":255,"author":{"gitId":"gigituang"},"content":"//                            + ((duke.Event) t).getPlace() + \"\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":256,"author":{"gitId":"gigituang"},"content":"//                } else if (t.getType().equals(\"D\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":257,"author":{"gitId":"gigituang"},"content":"//                    output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"|\"","lastModifiedDate":"2022-02-03"},{"lineNumber":258,"author":{"gitId":"gigituang"},"content":"//                            + ((duke.Deadline) t).getDue() + \"\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":259,"author":{"gitId":"gigituang"},"content":"//                }","lastModifiedDate":"2022-02-03"},{"lineNumber":260,"author":{"gitId":"gigituang"},"content":"//            }","lastModifiedDate":"2022-02-03"},{"lineNumber":261,"author":{"gitId":"gigituang"},"content":"//            pw.write(output);","lastModifiedDate":"2022-02-03"},{"lineNumber":262,"author":{"gitId":"gigituang"},"content":"//            pw.close();","lastModifiedDate":"2022-02-03"},{"lineNumber":263,"author":{"gitId":"gigituang"},"content":"//        }","lastModifiedDate":"2022-02-03"},{"lineNumber":264,"author":{"gitId":"gigituang"},"content":"//    }","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":261,"-":3}},{"path":"src/main/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"public class DukeTest {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    public void ExitTest(){","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"        Command command \u003d new ExitCommand();","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        assertEquals(true,command.isExit());","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"    public void TaskListAddTest() {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"        taskList.addTask(new ToDos(\"todo walk dog\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"        assertEquals(\"todo walk dog\", taskList.getListOfTasks().get(0).getDescription());","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"    @Test","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"    public void TaskListRemoveTest(){","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"        taskList.addTask(new ToDos(\"todo walk dog\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"        assertEquals(0,taskList.getSize());","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":31}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"    protected String place;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"     * constructor for Event","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"     * @param d task description","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"     * @param place location of task to be held at","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    public Event(String d, String place) {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"        super(d);","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        this.place \u003d place;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"     * Constructor for deadline","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"     * @param d task description","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"     * @param done check if task is done","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"     * @param place location of task to be held at","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"    public Event(String d, String done, String place){","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"        super(d, done);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"        this.place \u003d place;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"     * Method to return the location of task to be held at","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"     * @return A string representing the location of task","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"    public String getPlace(){","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"        return this.place;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"    public String toString(){","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + place + \") \";","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"gigituang":41}},{"path":"src/main/java/duke/Exception_handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":" * Exceptions for duke errors","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"public class Exception_handler extends Exception {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"    public Exception_handler(String message) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"        super(message);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        return \" ☹ OOPS!!!\" + getMessage();","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"gigituang":15}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"     * Execute exit command","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"     * @param taskList list to store all tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"     * @param ui display output","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"     * @param storage store tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"     * @throws Exception_handler","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception_handler {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        ui.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"     * Method to check for exit command","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"     * @return A boolean to check if an exit command is entered","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"    public boolean isExit(){","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"        return true;","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":23}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"     * Execute ListCommand","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"     * @param taskList list to store all tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"     * @param ui display output","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"     * @param storage store tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"     * @throws Exception_handler","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception_handler {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        if(taskList.getSize() \u003c\u003d 0){","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"            throw new Exception_handler(\"No tasks in the list\");","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"        for (Task t : taskList.getListOfTasks()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"            ui.println(count + \". \" + t);","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"            count++;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"     * Method to check for exit command","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"     * @return A boolean to check if an exit command is entered","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"    public boolean isExit(){","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"        return false;","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":" * to understand user input commands","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"public class Parser {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    public static DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"     * Method to parse input","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"     * @param input input string","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"     * @return a command","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"     * @throws Exception_handler","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"    public static Command parse(String input) throws Exception_handler {","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"        String[] temp \u003d input.split(\" \");","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"        if (temp[0].equals(\"todo\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"            if (temp.length \u003c 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"                throw new Exception_handler(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"            String temp2 \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"            for (int i \u003d 1; i \u003c temp.length; i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"                temp2 \u003d temp2 + temp[i] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"            return new AddCommand(new ToDos(temp2));","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"        } else if (temp[0].equals(\"event\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"            if (temp.length \u003c\u003d 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"                throw new Exception_handler(\"The description of a event cannot be empty.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"            String temp2 \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"            String time \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"            int index \u003d 0;","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"            for (int i \u003d 1; i \u003c temp.length; i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"                if (temp[i].equals(\"/at\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"                    index \u003d i + 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"                    break;","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"                } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"                    temp2 \u003d temp2 + temp[i] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"gigituang"},"content":"                }","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"gigituang"},"content":"            for (int j \u003d index; j \u003c temp.length; j++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"gigituang"},"content":"                time \u003d time + temp[j] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"gigituang"},"content":"            return new AddCommand(new Event(temp2, time));","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"gigituang"},"content":"        } else if (temp[0].equals(\"deadline\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"gigituang"},"content":"            if (temp.length \u003c\u003d 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"gigituang"},"content":"                throw new Exception_handler(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"gigituang"},"content":"            String temp2 \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"gigituang"},"content":"            String time \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"gigituang"},"content":"            int index \u003d 0;","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"gigituang"},"content":"            for (int i \u003d 1; i \u003c temp.length; i++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"gigituang"},"content":"                if (temp[i].equals(\"/by\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"gigituang"},"content":"                    index \u003d i + 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"gigituang"},"content":"                    break;","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"gigituang"},"content":"                } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"gigituang"},"content":"                    temp2 \u003d temp2 + temp[i] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"gigituang"},"content":"                }","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"gigituang"},"content":"            for (int j \u003d index; j \u003c temp.length; j++) {","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"gigituang"},"content":"                time \u003d time + temp[j] + \" \";","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"gigituang"},"content":"            LocalDateTime dateTime \u003d null;","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"gigituang"},"content":"            try {","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"gigituang"},"content":"                dateTime \u003d LocalDateTime.parse(time.trim(), dtf);","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"gigituang"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"gigituang"},"content":"                throw new Exception_handler(\"Please enter deadline in dd/mm/yyyy HHmm format\");","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"gigituang"},"content":"            return new AddCommand(new Deadline(temp2, dateTime));","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"gigituang"},"content":"        } else if(temp[0].equals(\"bye\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"gigituang"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"gigituang"},"content":"        } else if(temp[0].equals(\"done\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"gigituang"},"content":"            return new DoneCommand(Integer.parseInt(temp[1]) - 1);","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"gigituang"},"content":"        } else if(temp[0].equals(\"list\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"gigituang"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"gigituang"},"content":"        } else if(temp[0].equals(\"delete\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"gigituang"},"content":"            return new DeleteCommand(Integer.parseInt(temp[1]) - 1);","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"gigituang"},"content":"        else{","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"gigituang"},"content":"            throw new Exception_handler(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":87}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.io.File;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"import java.util.List;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"public class Storage {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"    private String filePath;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"    public static DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"    public Storage(String filePath){","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"     * method to load tasks from file","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"     * @return a List\u003cTask\u003e which has tasks loaded from the file","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"        List\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"                String[] token \u003d fileScanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"                if (token.length \u003c\u003d 2) {","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"                    throw new Exception_handler(\"Invalid line\");","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"                }","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"                if(token[0].equals(\"T\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"                    tempList.add(new ToDos(token[2], token[1]));","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"                } else if(token[0].equals(\"D\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"                    tempList.add(new Deadline(token[2], token[1], LocalDateTime.parse(token[3], dtf)));","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"                } else if(token[0].equals(\"E\")){","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"                    tempList.add(new Event(token[2], token[1], token[3]));","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"                } else{","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"gigituang"},"content":"                    throw new Exception_handler(\"Invalid task type\");","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"gigituang"},"content":"                }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"gigituang"},"content":"            return tempList;","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"gigituang"},"content":"        catch(Exception_handler de){","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"gigituang"},"content":"            System.out.println(de);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"gigituang"},"content":"        catch(IOException ie){","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"gigituang"},"content":"            System.out.println(\"IOException\");","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"gigituang"},"content":"        return tempList;","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"gigituang"},"content":"     * method to write to file","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"gigituang"},"content":"     * @param tasks tasks to be written to the file","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"gigituang"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"gigituang"},"content":"    public void writeToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"gigituang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"gigituang"},"content":"        PrintWriter pw \u003d new PrintWriter(file);","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"gigituang"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"gigituang"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"gigituang"},"content":"            if (t.getType().equals(\"T\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"gigituang"},"content":"                output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"gigituang"},"content":"            } else if (t.getType().equals(\"E\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"gigituang"},"content":"                output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"|\"","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"gigituang"},"content":"                        + ((Event) t).getPlace() + \"\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"gigituang"},"content":"            } else if (t.getType().equals(\"D\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"gigituang"},"content":"                output +\u003d t.getType() + \"|\" + t.getIsDone() + \"|\" + t.getDescription() + \"|\"","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"gigituang"},"content":"                        + ((Deadline) t).getDue() + \"\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"gigituang"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"gigituang"},"content":"        pw.write(output);","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"gigituang"},"content":"        pw.close();","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":80}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":" * parent class for task","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"    protected String d;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"    protected String type;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    protected final DateTimeFormatter OUT_DTF \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"     * constructor for Task","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"     * @param d task descriptiom","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"    public Task(String d) {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"        this.d \u003d d;","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"     * constructor for Task","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"     * @param d task description","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"     * @param done check if task is done","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"    public Task(String d, String done){","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"        this.d \u003d d;","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"        if(done.equals(\"1\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"     * method to return the description of the task","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"     * @return A string representing the description","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"    public String getDescription(){","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"        return this.d;","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"gigituang"},"content":"    public String getIsDone(){","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"gigituang"},"content":"        if(isDone){","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"gigituang"},"content":"            return \"1\";","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"gigituang"},"content":"        else{","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"gigituang"},"content":"            return \"0\";","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"gigituang"},"content":"    public String getType(){","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"gigituang"},"content":"        return this.type;","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"gigituang"},"content":"    public String markString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"gigituang"},"content":"        return (isDone ? \"[X]\" : \"[]\");","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"gigituang"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"gigituang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"gigituang"},"content":"    public void setUndone(){","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"gigituang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"gigituang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":72,"author":{"gitId":"gigituang"},"content":"        return markString() + \" \" + d;","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"gigituang":74}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"import java.util.List;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"public class TaskList {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"    public Task deleteTask(int index) throws Exception_handler {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"            throw new Exception_handler(\"Invalid index\");","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"        return taskList.remove(index - 1);","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"        taskList.add(task);","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"    public Task removeTask(int index){","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"        return taskList.remove(index);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"    public List\u003cTask\u003e getListOfTasks(){","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"        return taskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"    public int getSize(){","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"        return taskList.size();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":39}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"    public ToDos(String d) {","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"        super(d);","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"    public ToDos(String d, String done) {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"        super(d);","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"gigituang":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gigituang"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"gigituang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"gigituang"},"content":"public class Ui {","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"gigituang"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"gigituang"},"content":"    public Ui() {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"gigituang"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"gigituang"},"content":"    public String readCommand() {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"gigituang"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"gigituang"},"content":"    public void showLine() {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"gigituang"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"gigituang"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"gigituang"},"content":"        System.out.println(message);","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"gigituang"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"gigituang"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"gigituang"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"gigituang"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"gigituang"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"gigituang"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"gigituang"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"gigituang"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"gigituang"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"gigituang"},"content":"    public void println(String message){","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"gigituang"},"content":"        System.out.println(message);","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"gigituang"},"content":"    public void println(Task task){","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"gigituang"},"content":"        System.out.print(task);","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"gigituang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"gigituang"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"gigituang"},"content":"        System.out.println(\"File can\u0027t be loaded\");","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"gigituang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"gigituang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"gigituang":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"gigituang"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gigituang":1,"-":20}}]
