[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cpwill01":16,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Encapsulates the Duke task manager bot.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" *","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":" * @author William Ming","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":" * @version 0.1","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"public class Duke {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    private boolean isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"     * Initialises a Duke task manager bot.","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     * @param dirPath path to the directory where the txt file is stored.","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * @param fileName name of the txt file.","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    public Duke(String dirPath, String fileName) {","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     * Loads data from the file stored in this Duke\u0027s storage, then","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"     * gives the welcome message and the loaded data.","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"     * @return the welcome message and the loaded data as a String.","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    public String loadDataAndWelcome() {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"        String message \u003d ui.showWelcome();","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"            storage.loadData(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"            message +\u003d ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"            return message;","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        message +\u003d ui.showLoadedData(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        return message;","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"     * Gets Duke\u0027s response to a given user input.","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"     * @param userInput the text input given by the user.","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"     * @return Duke\u0027s response as a String.","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"            Command command \u003d Parser.parse(userInput, taskList.getLength());","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"            assert command !\u003d null : \"command cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"            return command.execute(taskList, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"            return ui.showCommandError(e.getMessage());","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"     * Indicates whether the application should exit.","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"     * @return true iff a ByeCommand was previously executed in getResponse.","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"        return isExit;","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cpwill01":80,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"public class Launcher {","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"     * Launches the GUI and starts the application.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"     * @param args command-line arguments, if any","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"cpwill01":15}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    private Duke duke \u003d new Duke(\"data\", \"duke.txt\");","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"            stage.setTitle(\"Duke Task Manager\");","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"            stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/images/AppLogo.PNG\")));","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"            stage.show();","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"cpwill01":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import duke.command.RemindCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a parser for Duke. It makes sense","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":" * of the inputs supplied by the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    private static final String REMIND \u003d \"remind\";","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"     * Parses user inputs to produce commands understood by Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"     * @param userInput the user input","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"     * @param taskListLength the length of Duke\u0027s task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"     * @return a Command object that executes the user\u0027s command.","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"     * @throws DukeException for invalid user inputs.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    public static Command parse(String userInput, int taskListLength) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        String[] inputArr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        String commandString \u003d inputArr[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"        String details \u003d inputArr.length \u003e 1 ? inputArr[1] : \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"            switch (commandString) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"            case TODO:","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"                return new AddTaskCommand(makeTodo(details));","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"                return new AddTaskCommand(makeDeadline(details));","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"            case EVENT:","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"                return new AddTaskCommand(makeEvent(details));","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"            case MARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"                return new MarkCommand(convertIndex(details, taskListLength));","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"                return new UnmarkCommand(convertIndex(details, taskListLength));","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"            case DELETE:","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"                return new DeleteCommand(convertIndex(details, taskListLength));","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"            case LIST:","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"                return new ListCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"            case BYE:","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"            case FIND:","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"                return new FindCommand(details);","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"            case REMIND:","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"                return new RemindCommand(parseNumberOfDays(details));","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"            default:","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"                throw new DukeException(String.format(\"Sorry, I don\u0027t know what you mean by \u0027%s\u0027.\", userInput));","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please specify dates in the yyyy-mm-dd format\");","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"    private static Todo makeTodo(String description) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"        if (isEmptyString(description)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please enter a description for the todo task.\");","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"        return new Todo(description);","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"    private static Deadline makeDeadline(String userInput) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"        String[] deadlineDetails \u003d userInput.split(\" /by \", 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"        if (isInvalidDetails(deadlineDetails)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please specify a deadline task as\\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"                    + \"deadline [description] /by [date in yyyy-mm-dd format].\");","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"        return new Deadline(deadlineDetails[0], LocalDate.parse(deadlineDetails[1]));","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"    private static Event makeEvent(String userInput) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"        String[] eventDetails \u003d userInput.split(\" /at \", 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"        if (isInvalidDetails(eventDetails)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please specify an event task as\\n\"","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"                    + \"event [description] /by [date in yyyy-mm-dd format].\");","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"        return new Event(eventDetails[0], LocalDate.parse(eventDetails[1]));","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"    private static boolean isInvalidDetails(String[] taskDetails) {","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"        boolean isTooShort \u003d taskDetails.length \u003d\u003d 1;","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"cpwill01"},"content":"        boolean hasNoDescription \u003d isEmptyString(taskDetails[0]);","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"        boolean hasNoDate \u003d isTooShort ? true : isEmptyString(taskDetails[1]);","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"        return isTooShort || hasNoDescription || hasNoDate;","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"    private static int convertIndex(String indexString, int taskListLength) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"        if (isEmptyString(indexString)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please specify a task.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"        checkValidNumber(indexString);","lastModifiedDate":"2022-02-13"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"        int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-02-13"},{"lineNumber":120,"author":{"gitId":"cpwill01"},"content":"        if (index \u003c 1 || index \u003e taskListLength) {","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please specify a valid task index.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"        return index;","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"    private static int parseNumberOfDays(String userInput) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"        if (isEmptyString(userInput)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"            return RemindCommand.DEFAULT_NUM_DAYS;","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"        checkValidNumber(userInput);","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"        int numberOfDays \u003d Integer.parseInt(userInput);","lastModifiedDate":"2022-02-13"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"        if (numberOfDays \u003c 0) {","lastModifiedDate":"2022-02-13"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please specify a positive number of days from today for the reminder.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"        return numberOfDays;","lastModifiedDate":"2022-02-13"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":137,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":138,"author":{"gitId":"cpwill01"},"content":"    private static boolean isEmptyString(String userInput) {","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"cpwill01"},"content":"        return userInput.strip().equals(\"\");","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"cpwill01"},"content":"    private static void checkValidNumber(String userInput) throws DukeException {","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"cpwill01"},"content":"            Integer.parseInt(userInput);","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"cpwill01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":146,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(\"Please specify a task using its index in the task list.\");","lastModifiedDate":"2022-02-13"},{"lineNumber":147,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":148,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":149}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a storage for Duke. It deals with","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":" * saving data to and loading data from a txt file.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    private static final String TODO_IDENTIFIER \u003d \"T\";","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    private static final String DEADLINE_IDENTIFIER \u003d \"D\";","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    private static final String EVENT_IDENTIFIER \u003d \"E\";","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    private static final String DELIMITER \u003d \" %% \";","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    private static final String TASK_DONE \u003d \"1\";","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    private static final String TASK_NOT_DONE \u003d \"0\";","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    private String dirPath;","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    private String fileName;","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"     * Initialises a Storage object.","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"     * @param dirPath path to the directory where the txt file is stored.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     * @param fileName name of the txt file.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    public Storage(String dirPath, String fileName) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     * Loads data from the txt file in this Storage object","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"     * into a given TaskList object.","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the TaskList object to populate with the data.","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    public void loadData(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        File taskDataDir \u003d new File(dirPath);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        taskDataDir.mkdirs();","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"            File taskData \u003d new File(dirPath + File.separator + fileName);","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"            if (!taskData.exists()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"                return;","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"            fillTaskListWithData(taskList, taskData);","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"    private void fillTaskListWithData(TaskList taskList, File taskData) throws IOException, DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"        Scanner dataScanner \u003d new Scanner(taskData);","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        while (dataScanner.hasNext()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"            String[] currTask \u003d dataScanner.nextLine().split(DELIMITER);","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"            switch (currTask[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"            case TODO_IDENTIFIER:","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"                taskList.addTask(new Todo(currTask[2]));","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"            case DEADLINE_IDENTIFIER:","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(currTask[3]);","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"                assert deadlineDate !\u003d null : \"deadlineDate cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"                taskList.addTask(new Deadline(currTask[2], deadlineDate));","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"            case EVENT_IDENTIFIER:","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"                LocalDate eventDate \u003d LocalDate.parse(currTask[3]);","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"                assert eventDate !\u003d null : \"eventDate cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"                taskList.addTask(new Event(currTask[2], eventDate));","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"            default:","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"                throw new DukeException(","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"                        String.format(\"txt file supplied has unknown character %s \", currTask[0]));","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"            if (currTask[1].equals(TASK_DONE)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"                markLatestTaskDone(taskList);","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"    private void markLatestTaskDone(TaskList taskList) {","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        assert taskList.getLength() \u003e\u003d 0 : \"taskList.getLength should return an int not less than 0\";","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"        Task task \u003d taskList.getTask(taskList.getLength());","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"        assert task !\u003d null : \"task retrieved from taskList cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"        task.markAsDone();","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"     * Overwrites the txt file in this Storage object","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"     * with data from a given TaskList object.","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the TaskList object you want to save.","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"    public void saveData(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"        String tasksToSave \u003d makeStringToSave(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"            FileWriter writer \u003d new FileWriter(dirPath + File.separator + fileName);","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"cpwill01"},"content":"            writer.write(tasksToSave);","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"            writer.close();","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":112,"author":{"gitId":"cpwill01"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"    private String makeStringToSave(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"        StringBuilder tasksToSave \u003d new StringBuilder();","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"        for (int i \u003d 1; i \u003c taskList.getLength() + 1; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"cpwill01"},"content":"            assert currTask !\u003d null : \"task retrieved from taskList cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":121,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"            String description \u003d currTask.getDescription();","lastModifiedDate":"2022-02-10"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"            assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"            assert description.strip() !\u003d \"\" : \"description should not be an empty String or have whitespace only\";","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"cpwill01"},"content":"            String done \u003d currTask.isDone() ? TASK_DONE + DELIMITER : TASK_NOT_DONE + DELIMITER;","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"            if (currTask instanceof Todo) {","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"                tasksToSave.append(TODO_IDENTIFIER).append(DELIMITER).append(done).append(description);","lastModifiedDate":"2022-02-11"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"            } else if (currTask instanceof Deadline) {","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"                tasksToSave.append(DEADLINE_IDENTIFIER).append(DELIMITER).append(done).append(description)","lastModifiedDate":"2022-02-11"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"                        .append(DELIMITER).append(((Deadline) currTask).getDate());","lastModifiedDate":"2022-02-13"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"                tasksToSave.append(EVENT_IDENTIFIER).append(DELIMITER).append(done).append(description)","lastModifiedDate":"2022-02-11"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"                        .append(DELIMITER).append(((Event) currTask).getDate());","lastModifiedDate":"2022-02-13"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"                throw new DukeException(\"Unable to save unknown task type\");","lastModifiedDate":"2022-02-10"},{"lineNumber":137,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"cpwill01"},"content":"            tasksToSave.append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"cpwill01"},"content":"        return tasksToSave.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":141,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":142}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a command to add a task to a task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    private final Task task;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * Initialises an AddTaskCommand instance given a task.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     * @param task the task to add.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * Adds this AddTaskCommand\u0027s task into a given task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to execute this command on.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     * @param ui the text UI of Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * @return a message to show a task was sucessfully added.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        return ui.showTaskAdded(task, taskList) + this.saveData(taskList, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":47}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a command to exit the Duke application.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to execute this command on.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * @param ui the text UI of Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     * @return a goodbye message.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"        return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":34}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a command to be executed in Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     * Executes the command.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to execute this command on.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     * @param ui the text UI of Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * Saves the contents of the task list to the file referenced in the storage object.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to save","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     * @param ui the text UI of Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage object that references the file to save the data to.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     * @return an empty String if save is successful and an error message otherwise.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    protected String saveData(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"            storage.saveData(taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"            return ui.showSavingError(e.getMessage());","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        return \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"    private final int index;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * Initialises a DeleteCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     * @param index the index of the task to be deleted (starting from 1).","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"     * Deletes the task specified by this DeleteCommand\u0027s","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"     * index from a given task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to execute this command on.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     * @param ui the text UI of Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"        assert task !\u003d null : \"task retrieved from taskList cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        return ui.showTaskDeleted(task, taskList) + this.saveData(taskList, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":48}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a command that finds a task containing a given string.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    private final String searchString;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * Initialises a FindCommand instance given a string to search for.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     * @param searchString the string to search for in the task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public FindCommand(String searchString) {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        this.searchString \u003d searchString;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * Finds tasks containing this FindCommand\u0027s searchString","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     * displays the tasks found.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to search through.","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"     * @param ui the user interface of Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        TaskList findResults \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        for (int i \u003d 1; i \u003c taskList.getLength() + 1; i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"            assert currTask !\u003d null : \"task retrieved from taskList cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"            if (currTask.getDescription().contains(this.searchString)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"                findResults.addTask(currTask);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        return ui.showFindResult(findResults);","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"cpwill01":55}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a command to show the task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * Displays a given task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to execute this command on.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * @param ui the user interface of Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        return ui.showTaskList(taskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":33}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a command to mark a task as done.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    private final int index;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * Initialises a MarkCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     * @param index the index of the task to be marked (starting from 1).","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * Marks the task specified by this","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     * MarkCommand\u0027s index as done.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to execute this command on.","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"     * @param ui the text UI of Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        assert task !\u003d null : \"task retrieved from taskList cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        task.markAsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"        return ui.showTaskMarked(task) + this.saveData(taskList, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":50}},{"path":"src/main/java/duke/command/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"    /** The default number of days the reminder should cover. **/","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"    public static final int DEFAULT_NUM_DAYS \u003d 7;","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    private int daysFromToday;","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    public RemindCommand(int daysFromToday) {","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"        this.daysFromToday \u003d daysFromToday;","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"        TaskList upcomingTasks \u003d taskList.getUpcomingTasks(daysFromToday);","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        return ui.showRemindResult(upcomingTasks, daysFromToday);","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        return false;","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"cpwill01":28}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a command that marks a task as not done.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    private final int index;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * Initialises am UnmarkCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     * @param index the index of the task to be unmarked (starting from 1).","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * Marks the task specified by this","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     * UnmarkCommand\u0027s index as not done.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to execute this command on.","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"     * @param ui the user interface of Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * @param storage the storage of Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        assert task !\u003d null : \"task retrieved from taskList cannot be null\";","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"        return ui.showTaskUnmarked(task)","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"                + this.saveData(taskList, ui, storage);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     * Checks whether the Duke application should exit after this command.","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this Command is a ByeCommand instance.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"cpwill01":51}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.exception;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":" * Encapsulates an exception that occurs in the Duke application.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"     * Initialises a DukeException instance","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"     * with the specified message.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"     * @param message the detail message to be retrieved by getMessage().","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cpwill01":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a task that has a deadline.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"public class Deadline extends ScheduledTask {","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"     * Initialises a Deadline task with a specified","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * description and deadline.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     * @param description the description of this Deadline task.","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * @param deadline the deadline of this Deadline task as a date.","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"        super(description, deadline);","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"     * Returns the string representation of this Deadline task.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * @return the string representation of this Deadline task.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        sb.append(\"[D]\")","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"                .append(super.toString())","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"                .append(\" (by: \")","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"                .append(getDate().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")))","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"                .append(\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cpwill01":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":" * Encapsulates an event that occurs on a specific date.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"public class Event extends ScheduledTask {","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"     * Initialises an Event task with a specified","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * description and start time.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     * @param description the description of this Event task","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     * @param date the date when this Event task starts","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    public Event(String description, LocalDate date) {","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"        super(description, date);","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"     * Returns the string representation of this Event task.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * @return the string representation of this Event task.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        sb.append(\"[E]\")","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"                .append(super.toString())","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"                .append(\" (at: \")","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"                .append(getDate().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")))","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"                .append(\")\");","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cpwill01":37}},{"path":"src/main/java/duke/task/ScheduledTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.task;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"public abstract class ScheduledTask extends Task implements Comparable\u003cScheduledTask\u003e {","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"     * Initialises a scheduled task.","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * @param date the date on which this task should be scheduled.","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    public ScheduledTask(String description, LocalDate date) {","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"        super(description);","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"     * Returns the date on which this task was scheduled.","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"     * @return the LocalDate on which this task was scheduled.","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        return date;","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * Checks if this task\u0027s scheduled date is earlier","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     * than a given input date.","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     * @param date a date to compare this task\u0027s scheduled date to.","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this task\u0027s scheduled date is earlier than the given date.","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    public boolean isEarlierThan(LocalDate date) {","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        return this.date.isBefore(date);","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"     * Compares this ScheduledTask instance with another ScheduledTask instance","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"     * based on their chronological order.","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"     * @param other the other ScheduledTask instance to compare to.","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"     * @return 1, -1, 0 if this ScheduledTask\u0027s date is after, before, or equal to the other\u0027s date.","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    public int compareTo(ScheduledTask other) {","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        if (this.date.isAfter(other.date)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"            return 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        } else if (this.date.isBefore(other.date)) {","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"            return -1;","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"        } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"            return 0;","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"cpwill01":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a task to be recorded by Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"    private String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"     * Initialises a task.","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * @param description of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"     * Checks if this task is done.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"     * @return true iff this task is done.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * Returns the description of this task.","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"     * @return the description of this task.","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        return this.description;","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"     * Marks this task as not done.","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"        sb.append(\"[\")","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"                .append(this.getStatusIcon())","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"                .append(\"] \")","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"                .append(this.description);","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cpwill01":72}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a list of tasks recorded by Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"public class TaskList {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     * Initialises an empty task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    private TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     * Adds a task to this task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"     * Deletes a task, specified by an index,","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     * from this task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"     * @param index the index of the task to be deleted (starting from 1).","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"     * Returns a task specified by a given index.","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"     * @param index the index of the task (starting from 1)","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"     * @return","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"     * Gets all tasks that are scheduled within a specified number","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"     * of days from today, including tasks that are scheduled today.","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"     * @param daysFromToday the number of days from today.","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"     * @return a task list containing all such tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"    public TaskList getUpcomingTasks(int daysFromToday) {","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"        LocalDate endDate \u003d today.plusDays(daysFromToday + 1);","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        ArrayList upcomingTasks \u003d tasks.stream()","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"                .filter(task -\u003e task instanceof ScheduledTask)","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"                .map(scheduledTask -\u003e (ScheduledTask) scheduledTask)","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"                .filter(scheduledTask -\u003e !(scheduledTask.isEarlierThan(today)))","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"                .filter(scheduledTask -\u003e scheduledTask.isEarlierThan(endDate))","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"                .sorted()","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"        return new TaskList(upcomingTasks);","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"     * Returns the length of this task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"     * @return the length of this task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"    public int getLength() {","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"     * Returns the string representation of this task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"     * @return the string representation of this task list.","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"            sb.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"        return tasks.size() \u003d\u003d 0 ? \"Task list is empty.\\n\" : sb.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cpwill01":96}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":" * Encapsulates a Todo item with only a description.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"     * Initialises a Todo task with a specified description.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"     * @param description the description of this Todo task.","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"     * Returns the string representation of this Todo task.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"     * @return the string representation of this Todo task.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"        sb.append(\"[T]\").append(super.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"cpwill01":28}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    private static final String commonDialogStyles \u003d \"-fx-font-family: \\\"Courier New\\\"; \"","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"            + \"-fx-font-size: 12; \" + \"-fx-background-radius: 7; \" + \"-fx-padding: 7;\";","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    private static final String dukeDialogBackgroundStyles \u003d \"-fx-background-color: #d6e7d6;\";","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    private static final String userDialogBackgroundStyles \u003d \"-fx-background-color: #ead8eb;\";","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    private Text dialog;","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    private StackPane chatBubble;","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"        displayPicture.setClip(createClippingCircle(img));","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"    private Circle createClippingCircle(Image img) {","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"        double centerX \u003d displayPicture.getX() + displayPicture.getFitWidth() / 2;","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"        double centerY \u003d displayPicture.getY() + displayPicture.getFitHeight() / 2;","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"        double radius \u003d displayPicture.getFitWidth() / 2;","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"        return new Circle(centerX, centerY, radius);","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"    private void flip() {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"        userDialog.chatBubble.setStyle(commonDialogStyles + userDialogBackgroundStyles);","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"        userDialog.dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"        return userDialog;","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"        DialogBox dukeDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"        dukeDialog.flip();","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"        dukeDialog.chatBubble.setStyle(commonDialogStyles + dukeDialogBackgroundStyles);","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"        return dukeDialog;","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"cpwill01":85}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    private static final double exitDelayInSeconds \u003d 1;","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     * Initialises the main window by setting the scroll pane and the background.","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #c7d2e9;\");","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.loadDataAndWelcome(), dukeImage));","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"        );","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"            PauseTransition exitAfterDelay \u003d new PauseTransition(Duration.seconds(exitDelayInSeconds));","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"            exitAfterDelay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"            exitAfterDelay.play();","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"cpwill01":69}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":" * Encapsulates the text user interface of Duke, which deals","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" * with providing the messages sent from Duke to the user.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"public class Ui {","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"     * Gives the welcome message.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke welcoming the user.","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"        return \"Hello from\\n\" + logo + \"\\nHello! I\u0027m Duke\\n\";","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     * Gives an error message when saved data cannot be retrieved.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"     * @param errorMessage the details of the error.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke indicating a failure to load data.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    public String showLoadingError(String errorMessage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"        return \"There was an error in retrieving saved data:\\n\" + errorMessage","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"                + \"\\nI couldn\u0027t find any data to load, so I\u0027ve created an empty task list.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"     * Gives a message indicating data has been successfully loaded.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list containing the loaded task data.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"     * @return a String containing the latest retrieved task data.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    public String showLoadedData(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        assert taskList.getLength() \u003e\u003d 0 : \"taskList.getLength() should return an int not less than 0\";","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        if (taskList.getLength() !\u003d 0) {","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"            return \"I\u0027ve retrieved your latest task list data. \" + showTaskList(taskList);","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        return \"\";","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"     * Gives an error message when data cannot be saved into a txt file.","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"     * @param errorMessage the details of the error.","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke indicating a failure to save data.","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"    public String showSavingError(String errorMessage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"        return \"There was an error in saving the data:\\n\" + errorMessage;","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"     * Gives an error message when the user entered an invalid command.","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"     * @param errorMessage the details of the error.","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke indicating an invalid command was received.","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"    public String showCommandError(String errorMessage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        return \"Oops, there might be an error in the command entered:\\n\\\"\" + errorMessage + \"\\\"\";","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"     * Gives the contents of the task list.","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to be shown.","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"     * @return a String containing the contents of the task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"    public String showTaskList(TaskList taskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"     * Gives a message indicating a task was successfully added.","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"     * @param task the task that was added.","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list to which the task was added.","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke to show a task was added.","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"    public String showTaskAdded(Task task, TaskList taskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"        assert taskList.getLength() \u003e\u003d 0 : \"taskList.getLength() should return an int not less than 0\";","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"                + \"\\nNow you have \" + taskList.getLength() + \" tasks in the list.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"     * Gives a message to show a task was marked as complete.","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"     * @param task the task that was marked as complete.","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke to show a task was marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"     * Gives a message to show a task was marked as incomplete.","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"     * @param task the task that was marked as incomplete.","lastModifiedDate":"2022-01-31"},{"lineNumber":109,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke to show a task was unmarked.","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"cpwill01"},"content":"        return \"OK, I\u0027ve marked this task as not done yet\\n\" + task;","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"     * Gives a message to show a task was deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"     * @param task the task that was deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"     * @param taskList the task list from which the task was deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"cpwill01"},"content":"     * @return a message from duke to show a task was deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":121,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"    public String showTaskDeleted(Task task, TaskList taskList) {","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"        assert taskList.getLength() \u003e\u003d 0 : \"taskList.getLength() should return an int not less than 0\";","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"cpwill01"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"                + \"\\nNow you have \" + taskList.getLength() + \" tasks in the list.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"     * Gives the results of searching a task list.","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"     * @param findResults the tasks found, in the form of a task list.","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"     * @return the search results of the FindCommand execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"    public String showFindResult(TaskList findResults) {","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"        return \"Here are the matching tasks in your task list:\\n\" + findResults;","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"cpwill01"},"content":"     * Gives a message showing the tasks which are scheduled within a specified","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"cpwill01"},"content":"     * number of days from today.","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"cpwill01"},"content":"     * @param upcomingTasks the tasks that are scheduled within a specified number of days from today.","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"cpwill01"},"content":"     * @param daysFromToday the number of days from today.","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"cpwill01"},"content":"     * @return the upcoming tasks, with an accompanying message from Duke.","lastModifiedDate":"2022-02-13"},{"lineNumber":146,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":147,"author":{"gitId":"cpwill01"},"content":"    public String showRemindResult(TaskList upcomingTasks, int daysFromToday) {","lastModifiedDate":"2022-02-13"},{"lineNumber":148,"author":{"gitId":"cpwill01"},"content":"        boolean isReminderForToday \u003d daysFromToday \u003d\u003d 0;","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"cpwill01"},"content":"        boolean hasEmptySchedule \u003d upcomingTasks.getLength() \u003d\u003d 0;","lastModifiedDate":"2022-02-13"},{"lineNumber":150,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"cpwill01"},"content":"        if (isReminderForToday \u0026\u0026 hasEmptySchedule) {","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"cpwill01"},"content":"            return \"You\u0027re free! You have no tasks scheduled for today!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":153,"author":{"gitId":"cpwill01"},"content":"        } else if (!isReminderForToday \u0026\u0026 hasEmptySchedule) {","lastModifiedDate":"2022-02-13"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"            return \"You\u0027re free! You have no tasks scheduled for the next \" + daysFromToday + \" days!\";","lastModifiedDate":"2022-02-13"},{"lineNumber":155,"author":{"gitId":"cpwill01"},"content":"        } else if (isReminderForToday \u0026\u0026 !hasEmptySchedule) {","lastModifiedDate":"2022-02-13"},{"lineNumber":156,"author":{"gitId":"cpwill01"},"content":"            return \"Better get to work! You have the following task(s) scheduled for today:\\n\" + upcomingTasks;","lastModifiedDate":"2022-02-13"},{"lineNumber":157,"author":{"gitId":"cpwill01"},"content":"        } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":158,"author":{"gitId":"cpwill01"},"content":"            return \"For the next \" + daysFromToday + \" day(s), you have the following task(s) scheduled:\\n\"","lastModifiedDate":"2022-02-13"},{"lineNumber":159,"author":{"gitId":"cpwill01"},"content":"                    + upcomingTasks;","lastModifiedDate":"2022-02-13"},{"lineNumber":160,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":161,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":162,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":163,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":164,"author":{"gitId":"cpwill01"},"content":"     * Gives a goodbye message.","lastModifiedDate":"2022-01-31"},{"lineNumber":165,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":166,"author":{"gitId":"cpwill01"},"content":"    public String showGoodbye() {","lastModifiedDate":"2022-01-31"},{"lineNumber":167,"author":{"gitId":"cpwill01"},"content":"        return \"Bye! Hope to see you again!\";","lastModifiedDate":"2022-01-31"},{"lineNumber":168,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":169,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":170,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"cpwill01":170}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"        \u003cStackPane fx:id\u003d\"chatBubble\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"            \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\" wrappingWidth\u003d\"305.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"cpwill01":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" fillWidth\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"cpwill01":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    public void parse_blankTodoDescription_exceptionThrown() {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"            Parser.parse(\"todo       \", 3);","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"            assertEquals(\"Please enter a description for the todo task.\", e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public void parse_deadlineDateMissing_exceptionThrown() {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"            Parser.parse(\"deadline this           \", 3);","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"            assertEquals(\"Please specify a deadline task as\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"                    + \"deadline [description] /by [date in yyyy-mm-dd format].\", e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    public void parse_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"            Parser.parse(\"deadline this /by 12 Feb 2022\", 3);","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"            assertEquals(\"Please specify dates in the yyyy-mm-dd format\", e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    public void parse_invalidMarkIndex_exceptionThrown() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"            Parser.parse(\"mark 4\", 3);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"            assertEquals(\"Please specify a valid task index.\", e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"cpwill01":45}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    public void toString_validDeadline_success() {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"        Deadline d \u003d new Deadline(\"test\", LocalDate.parse(\"2022-12-10\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"        assertEquals(\"[D][ ] test (by: 10 Dec 2022)\", d.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"cpwill01":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"event     /at    ","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"event borrow book /at 20-01-2022","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"todo     ","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"todo read book","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"deadline return book /by        ","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"deadline return book /by 2 weeks later","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"mark return book","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"unmark 0","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"doSomething","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"cpwill01":15}}]
