[{"path":"src/main/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"[T][X] read book","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"[D][ ] lol  (by: add)","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"zixin448":2}},{"path":"src/main/Duke2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"[T][X] nihao","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"[T][ ] nihao","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"[D][ ] ksndsl  (by: ksand)","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"[E][ ] gigig  (at: dkff)","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"zixin448":4}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"1. [T][ ] hi","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"2. [E][ ] listen  (at: now)","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"zixin448":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeDeadlineException;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"//    protected String by;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"    protected LocalDate by_date;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    public Deadline(String name, LocalDate by_date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"//        this.by \u003d by;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"        this.by_date \u003d by_date;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public static Deadline setDeadline(String input) throws DukeDeadlineException { //method to call constructor solving","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"                                                    // \"\u0027this\u0027 should be called in first line\" error","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"        String taskname;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"        String taskby;","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"        LocalDate taskby_date;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"            String[] split \u003d input.split(\" /by \");","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"            taskname \u003d split[0];","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"            taskby \u003d split[1];","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"            taskby_date \u003d LocalDate.parse(taskby);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"            Deadline d_line \u003d new Deadline(taskname, taskby_date);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"            System.out.println(d_line);","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"            return d_line;","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"            DukeDeadlineException error \u003d new DukeDeadlineException(","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"                                                    \"OOPS!!! Please enter in format: deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e \\n \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"                                                    \"e.g. deadline complete project /by 2022-12-24\");","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        return null;","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"        return this.by_date.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"        String formatted \u003d this.by_date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + formatted + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":51}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeDeadlineException;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeEventException;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeTodoException;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"//import java.io.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"//import java.util.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"    public static void output_matching_deadline(List\u003cTask\u003e all, LocalDate input_date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"        List\u003cTask\u003e match_date \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"        for (Task t : all) {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"            if (Task.isDeadline(t)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"                if (d.getDate().equals(input_date.toString())) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"                    match_date.add(t);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"        System.out.println(\"Here you go! Hope it includes the event you were looking for:)\");","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"        for (Task t : match_date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"            System.out.println(t);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"    private static void getFileContent(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"        // print all contents in file","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"            System.out.println((s.nextLine()));","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"    public static void writeToFile(List\u003cTask\u003e taskList, String filepath) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"        // go through all Task object and write to filepath","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"            fw.write(i + \". \" + taskList.get(i - 1));","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"            fw.write(\u0027\\n\u0027);","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"        fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"    public static void main(String[] args) throws DukeException, DukeDeadlineException, IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"        String filepath \u003d \"src/main/data/duke.txt\";","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"        // check directory","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"        File directory \u003d new File(\"src/main/data\");","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"            System.out.println(\"No such directory but let me make one for you !\");","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"            directory.mkdir();","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"        // check directory","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"zixin448"},"content":"        System.out.println(\"Oh hello dear, I\u0027m Dukie, Zi Xin\u0027s favourite chattie box\\n\" +","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"zixin448"},"content":"                \"Nice to meet you dear:\u003e\\n\" +","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"zixin448"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"zixin448"},"content":"        Scanner myObj \u003d new Scanner(System.in); //Create a Scanner object","lastModifiedDate":"2022-01-15"},{"lineNumber":77,"author":{"gitId":"zixin448"},"content":"        String input; //declare a string variable to store input","lastModifiedDate":"2022-01-15"},{"lineNumber":78,"author":{"gitId":"zixin448"},"content":"        List\u003cTask\u003e all \u003d new ArrayList\u003cTask\u003e(); //ArrayList of Task","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"zixin448"},"content":"        while (myObj.hasNextLine()) {","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"zixin448"},"content":"            input \u003d myObj.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"zixin448"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"zixin448"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\"); //ending sentence","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"zixin448"},"content":"                System.exit(0);","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"zixin448"},"content":"            } else { //check input not \"bye\"","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"zixin448"},"content":"                String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"zixin448"},"content":"                if (input.equals(\"list\")) { //if list","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"zixin448"},"content":"                    writeToFile(all, filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"zixin448"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":93,"author":{"gitId":"zixin448"},"content":"                    // check file exist, if exists \u003e list","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"zixin448"},"content":"                    try {","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"zixin448"},"content":"                        getFileContent(filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"zixin448"},"content":"                    } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"zixin448"},"content":"                        System.out.println(\"I can\u0027t find duke.txt:( but I shall make one for you!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"zixin448"},"content":"                } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":100,"author":{"gitId":"zixin448"},"content":"                    int n \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":101,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"zixin448"},"content":"                    all.get(n - 1).markDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"zixin448"},"content":"                    // reload new content to duke.txt","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"zixin448"},"content":"                    try {","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"zixin448"},"content":"                        writeToFile(all, filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"zixin448"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"zixin448"},"content":"                        System.out.println(\"Something went wrong when update file duke.txt:(\");","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":111,"author":{"gitId":"zixin448"},"content":"                } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":112,"author":{"gitId":"zixin448"},"content":"                    int n \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":113,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"zixin448"},"content":"                    // call Task method, mark task as not done","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"zixin448"},"content":"                    all.get(n - 1).unMarkDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"zixin448"},"content":"                    // reload new content to duke.txt","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"zixin448"},"content":"                    try {","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"zixin448"},"content":"                        writeToFile(all, filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"zixin448"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"zixin448"},"content":"                        System.out.println(\"Something went wrong when update file duke.txt:(\");","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":124,"author":{"gitId":"zixin448"},"content":"                } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":125,"author":{"gitId":"zixin448"},"content":"                    int n \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":126,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"zixin448"},"content":"                    // remove Task from List","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"zixin448"},"content":"                    all.remove(n - 1);","lastModifiedDate":"2022-01-16"},{"lineNumber":129,"author":{"gitId":"zixin448"},"content":"                    try {","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"zixin448"},"content":"                        System.out.println(\"Now you have \" + all.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":131,"author":{"gitId":"zixin448"},"content":"                        writeToFile(all, filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"zixin448"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"zixin448"},"content":"                        System.out.println(\"Something went wrong when adding to file duke.txt:(\");","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-16"},{"lineNumber":135,"author":{"gitId":"zixin448"},"content":"                } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"zixin448"},"content":"                    // get all deadline tasks that matches input date","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"zixin448"},"content":"                    String input_date \u003d words[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"zixin448"},"content":"                    try {","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"zixin448"},"content":"                        LocalDate localdate \u003d LocalDate.parse(input_date);","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"zixin448"},"content":"                        Duke.output_matching_deadline(all, localdate);","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"zixin448"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"zixin448"},"content":"                        DukeException ex \u003d new DukeException(\"Please input date in the format YYYY-MM-DD to be found\");","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"zixin448"},"content":"                        System.out.println(ex.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-16"},{"lineNumber":147,"author":{"gitId":"zixin448"},"content":"                else {","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"zixin448"},"content":"                    // handle adding of Tasks or ending statement","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"zixin448"},"content":"                    if (words[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":150,"author":{"gitId":"zixin448"},"content":"                        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":151,"author":{"gitId":"zixin448"},"content":"                            ToDo item \u003d new ToDo(words[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":152,"author":{"gitId":"zixin448"},"content":"                            all.add(item);","lastModifiedDate":"2022-01-16"},{"lineNumber":153,"author":{"gitId":"zixin448"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-16"},{"lineNumber":154,"author":{"gitId":"zixin448"},"content":"                            System.out.println(item);","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"zixin448"},"content":"                            // update storage file","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"zixin448"},"content":"                            writeToFile(all, filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"zixin448"},"content":"                            System.out.println(\" Now you have \" + all.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"zixin448"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"zixin448"},"content":"                            System.out.println(\"Something went wrong when adding to file duke.txt:(\");","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"zixin448"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":163,"author":{"gitId":"zixin448"},"content":"                            DukeTodoException error \u003d new DukeTodoException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":164,"author":{"gitId":"zixin448"},"content":"                            System.out.println(error.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":165,"author":{"gitId":"zixin448"},"content":"                        }","lastModifiedDate":"2022-01-16"},{"lineNumber":166,"author":{"gitId":"zixin448"},"content":"                    } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"zixin448"},"content":"                        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":168,"author":{"gitId":"zixin448"},"content":"                            Deadline item \u003d Deadline.setDeadline(words[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":169,"author":{"gitId":"zixin448"},"content":"                            if (item !\u003d null) {","lastModifiedDate":"2022-01-16"},{"lineNumber":170,"author":{"gitId":"zixin448"},"content":"                                all.add(item);","lastModifiedDate":"2022-01-16"},{"lineNumber":171,"author":{"gitId":"zixin448"},"content":"//                                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"zixin448"},"content":"//                                System.out.println(item);","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"zixin448"},"content":"                                // update storage file","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"zixin448"},"content":"                                writeToFile(all, filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"zixin448"},"content":"                                System.out.println(\" Now you have \" + all.size() + \" tasks in the list.\"); //print when new task added","lastModifiedDate":"2022-01-16"},{"lineNumber":177,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"zixin448"},"content":"                            }","lastModifiedDate":"2022-01-16"},{"lineNumber":179,"author":{"gitId":"zixin448"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":180,"author":{"gitId":"zixin448"},"content":"                            DukeDeadlineException d \u003d new DukeDeadlineException(\"OOPS!!! Please re-enter.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":181,"author":{"gitId":"zixin448"},"content":"                            System.out.println(d.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":182,"author":{"gitId":"zixin448"},"content":"                        }","lastModifiedDate":"2022-01-16"},{"lineNumber":183,"author":{"gitId":"zixin448"},"content":"                    } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"zixin448"},"content":"                        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":185,"author":{"gitId":"zixin448"},"content":"                            Event item \u003d Event.setEvent(words[1]);","lastModifiedDate":"2022-01-16"},{"lineNumber":186,"author":{"gitId":"zixin448"},"content":"                            if (item !\u003d null) {","lastModifiedDate":"2022-01-16"},{"lineNumber":187,"author":{"gitId":"zixin448"},"content":"                                all.add(item);","lastModifiedDate":"2022-01-16"},{"lineNumber":188,"author":{"gitId":"zixin448"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"zixin448"},"content":"                                System.out.println(item);","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"zixin448"},"content":"                                // update storage file","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"zixin448"},"content":"                                writeToFile(all, filepath);","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"zixin448"},"content":"                                System.out.println(\" Now you have \" + all.size() + \" tasks in the list.\"); //print when new task added","lastModifiedDate":"2022-01-16"},{"lineNumber":194,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"zixin448"},"content":"                            }","lastModifiedDate":"2022-01-16"},{"lineNumber":196,"author":{"gitId":"zixin448"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"zixin448"},"content":"                            System.out.println(\"Something went wrong when adding to file duke.txt:(\");","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"zixin448"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":199,"author":{"gitId":"zixin448"},"content":"                            DukeEventException d \u003d new DukeEventException(\"OOPS!!! Please re-enter.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":200,"author":{"gitId":"zixin448"},"content":"                            System.out.println(d.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":201,"author":{"gitId":"zixin448"},"content":"                        }","lastModifiedDate":"2022-01-16"},{"lineNumber":202,"author":{"gitId":"zixin448"},"content":"                    } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":203,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":204,"author":{"gitId":"zixin448"},"content":"                        // if not within listed commands","lastModifiedDate":"2022-01-25"},{"lineNumber":205,"author":{"gitId":"zixin448"},"content":"                        DukeException d \u003d new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-16"},{"lineNumber":206,"author":{"gitId":"zixin448"},"content":"                        System.out.println(d.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":207,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-16"},{"lineNumber":208,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":209,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-16"},{"lineNumber":210,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":211,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":210,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeEventException;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"    protected String at;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    public static Event setEvent(String input) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"        String eventname;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        String eventat;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"            String[] split \u003d input.split(\" /at \");","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"            eventname \u003d split[0];","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"            eventat \u003d split[1];","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"            Event e \u003d new Event(eventname, eventat);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"//            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"//            System.out.println(e.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"            return e;","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"            DukeEventException error \u003d new DukeEventException(","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"                    \"OOPS!!! Please enter in format: event \u003cevent\u003e /at \u003cevent venue\u003e \\n \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"                    \"e.g. event Lesson /at Com1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"        return null;","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + this.at + \")\";","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"    String name;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"    boolean done;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"        System.out.println(this);","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public void unMarkDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"        System.out.println(this);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"    public static boolean isDeadline(Task t) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"        return t instanceof Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"        if (this.done) {","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":11}},{"path":"src/main/java/exceptions/DukeDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeDeadlineException extends Throwable {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    public DukeDeadlineException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":8}},{"path":"src/main/java/exceptions/DukeEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeEventException extends Throwable{","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    public DukeEventException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":7}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"    String errMsg;","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"        this.errMsg \u003d s;","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"        return errMsg;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":16}},{"path":"src/main/java/exceptions/DukeTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeTodoException extends Throwable {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    public DukeTodoException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":7}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"Oh hello dear, I\u0027m Dukie, Zi Xin\u0027s favourite chattie box","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"Nice to meet you dear:\u003e","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"What can I do for you?","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"[D][ ] return book  (by: Sunday)","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"[E][ ] project meeting  (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"[D][ ] do homework  (by: no idea :-p)","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"2. [D][ ] return book  (by: Sunday)","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"3. [E][ ] project meeting  (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"4. [D][ ] do homework  (by: no idea :-p)","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"list","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"#java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"#","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"## compare the output to the expected output","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"#diff ACTUAL.TXT EXPECTED.txt","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zixin448":4,"-":35}}]
