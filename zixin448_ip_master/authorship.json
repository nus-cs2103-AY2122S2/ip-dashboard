[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"1. [T][ ] skajdb","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"2. [E][ ] skjdb (at:nwdlcfn)","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"3. [D][X] hello world (by:Dec 24 2022)","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"4. [E][ ] read book (at:venue)","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"5. [T][ ] say hello","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"zixin448":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"import duke.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeDeadlineException;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeEventException;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":" * Represents the Duke bot","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"    private TaskList tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public Duke(String filepath) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"            tasklist \u003d new TaskList(storage.getAllTasks());","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"            System.exit(0);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"        } catch (DukeDeadlineException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"//        new Duke(\"src/main/data/duke.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"        new Duke(\"./duke.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"            try {","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"                c.execute(tasklist, ui, storage);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"            } catch (DukeDeadlineException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"            } catch (DukeEventException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"            } finally {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"                ui.showLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":55,"-":4}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":" * Extends Command class","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" * When executed, calls Ui method to print output","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"     * Initialise task attribute to the input task to be added","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"    public AddCommand (Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     * Handles adding of task to tasklist, calling of ui method to print outpyt and ypdating storage","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"     * @param taskList TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"     * @return String output from ui","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"        return ui.printTaskIsAdded(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":33}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":" * Extends Command class","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":" * When executed, calls Ui method to print output","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"     * Call ui method to print bye statement","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"     * Set isExit to true and exit program","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"     * @return String output from ui","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        super.changeExit();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"        return ui.printBye();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":20}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" * Holds all the commands for Duke bot","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":" * Commands included are Task, Todo, Event, Deadline, list, mark, unmark, find","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":" * An abstract class with abstract method execute(TaskList, Ui, Storage)","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    private boolean isExit \u003d false; // default value is false","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"     * Executes according to command","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"     * @return String return by ui","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"    public abstract String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"     * Set isExit to true","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"    public void changeExit() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"     * Getter to return exit status","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"     * @return boolean isExit","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        return isExit;","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeDeadlineException;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":" * Extends Task class","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":" * Represents events with deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"     * Takes in name of task and deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"     * @param name String name of task","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"     * @param byDate LocalDate task deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"    public Deadline(String name, LocalDate byDate) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"     * Static method to return a Deadline object","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"     * @param input String to be parsed","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"     * @return Deadline Task object","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"     * @throws DukeDeadlineException","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"    public static Deadline setDeadline(String input) throws DukeDeadlineException { //method to call constructor solving","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"                                                    // \"\u0027this\u0027 should be called in first line\" error","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"        String taskName;","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"        String taskBy;","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"        LocalDate taskByDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"            String[] split \u003d input.split(\" /by \");","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"            taskName \u003d split[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"            taskBy \u003d split[1];","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"            taskByDate \u003d LocalDate.parse(taskBy);","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"            Deadline d_line \u003d new Deadline(taskName, taskByDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"            return d_line;","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"            DukeDeadlineException error \u003d new DukeDeadlineException(","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"                                                    \"OOPS!!! Please enter in format: deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e \\n \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"                                                    \"e.g. deadline complete project /by 2022-12-24\");","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"        return null;","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"     * Getter for Deadline task","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"     * @return String parsed LocalDate","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"        return byDate.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"     * Getter for Deadline task name","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"     * @return String represents name","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"    public String getName() {","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"        return name;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"zixin448"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"zixin448"},"content":"        String formatted \u003d byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"zixin448"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + formatted + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":78}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":" * Extends Command class","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":" * When executed, calls ui to print delete output","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"    int ranking;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    public DeleteCommand(int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"        this.ranking \u003d ranking;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     * Handles deleting of a specific task by its index","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"     * Calls ui to print output for delete action and updates storage","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"     * @return String output from ui","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"        assert ranking \u003e 0 \u0026\u0026 ranking \u003c\u003d tasklist.getLength() : \"Please give a valid input (0 \u003c input \u003c number of tasks\";","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"        tasklist.delete(ranking);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"        storage.writeToFile(tasklist);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"        return ui.printTaskIsDeleted(tasklist);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":30}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeEventException;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" * Extends Task class","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":" * Represents an Event task held at a venue","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    protected String at;","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"     * Takes in Event task name and Event task venue","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"     * @param name String Event task name","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"     * @param at String Event task location","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"     * Static method that return an Event task object","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"     * @param input String to be parsed","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"     * @return Event object","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"    public static Event setEvent(String input) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"        String eventName;","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"        String eventAt;","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"        try {","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"            String[] split \u003d input.split(\" /at \");","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"            eventName \u003d split[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"            eventAt \u003d split[1];","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"            Event e \u003d new Event(eventName, eventAt);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"            return e;","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"            DukeEventException error \u003d new DukeEventException(","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"                    \"OOPS!!! Please enter in format: event \u003cevent\u003e /at \u003cevent venue\u003e \\n \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"                    \"e.g. event Lesson /at Com1\");","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"        return null;","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"     * Getter for Event task venue","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"     * @return String represents venue","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"    public String getVenue() {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"        return at;","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"     * Getter for Event task name","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"     * @return String represents name","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"    public String getName() {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"        return name;","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":71}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":" * Extends Command class","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":" * When executed, calls ui method to print output","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"    String keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"     * Takes in Java String as keyword input","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"     * @param keyword LocalDate","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"     * Handles the finding of a corresponding task in tasklist that matches input date","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"     * @return String output from ui","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"        ArrayList\u003cTask\u003e all \u003d tasklist.getAllTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"        ArrayList\u003cTask\u003e filtered \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"        for (Task t : all) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"                Deadline deadline \u003d (Deadline) t;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"                if (deadline.getDate().equals(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"                    filtered.add(t);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"                } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"                    String deadlineName \u003d deadline.getName();","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"                    String[] splitName \u003d deadlineName.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"                    for (String s : splitName) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"                        if (s.equals(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"                            filtered.add(t);","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"                        }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"            } else if (t instanceof ToDo) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"                ToDo todo \u003d (ToDo) t;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"                String todoName \u003d todo.getName();","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"                String[] splitName \u003d todoName.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"                for (String s : splitName) {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"                    if (s.equals(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"                        filtered.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"                Event event \u003d (Event) t;","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"                String venue \u003d event.getVenue();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"                String name \u003d event.getName();","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"                String[] splitVenue \u003d venue.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"                String[] splitName \u003d name.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"                int length \u003d splitName.length + splitVenue.length;","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"                String[] merged \u003d new String[length];","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"                int pointer \u003d 0;","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"                for (String s : splitVenue) {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"                    merged[pointer] \u003d s;","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"                    pointer++;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"zixin448"},"content":"                for (String s : splitName) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"zixin448"},"content":"                    merged[pointer] \u003d s;","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"zixin448"},"content":"                    pointer++;","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"zixin448"},"content":"                for (String s : merged) {","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"zixin448"},"content":"                    if (s.equals(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"zixin448"},"content":"                        filtered.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"zixin448"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"zixin448"},"content":"                throw new DukeException(\"I\u0027m not sure what happened! Please try again later or call 999...\");","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"zixin448"},"content":"        if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"zixin448"},"content":"            return ui.printFilteredDeadline(0);","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"zixin448"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"zixin448"},"content":"            TaskList filteredTasklist \u003d new TaskList(filtered);","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"zixin448"},"content":"            // do nothing to storage","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"zixin448"},"content":"            return ui.printFilteredDeadline(filteredTasklist);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":97}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"     * Calls ui method to print out all tasks stored","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"     * @return String printed by ui","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"        return ui.printAllTasks(tasklist);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":15}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":" * Extends Command class","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":" * When executed, calls ui method to print relevant output","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"    int ranking;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"     * Initialise index of task to mark as done","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"     * @param ranking int ranking of task","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public MarkCommand(int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        this.ranking \u003d ranking;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"     * Handles marking of task of specific index in tasklist as done","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"     * @return String output from ui","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"        assert ranking \u003e 0 \u0026\u0026 ranking \u003c\u003d tasklist.getLength() : \"Please give a valid input (0 \u003c input \u003c number of tasks)\";","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"        tasklist.markDone(ranking);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"        storage.writeToFile(tasklist);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"        return ui.printMarkTaskAsDone(tasklist, ranking);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":35}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeDeadlineException;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeEventException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":" * Parser for user input command","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"     * Parse all given String input to determine respective corresponding commands that the user is calling","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"     * @param input String user input command","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"     * @return Command corresponding to user input","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"     * @throws DukeDeadlineException","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     * @throws DukeEventException","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"    public static Command parse(String input) throws IOException, DukeException, DukeDeadlineException, DukeEventException {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"        if (words[0].equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"            return new ByeCommand(); //ending sentence","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"            if (words.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"                throw new DukeEventException(","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"                        \"OOPS!!! Please enter in format: mark \u003ctask_number\u003e\\n \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"                                \"e.g. mark 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"                    int ranking \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"                    return new MarkCommand(ranking);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"                    throw new DukeException(\"Ranking should be a number! Call \u0027list\u0027 to see what tasks you have.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"            if (words.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"                throw new DukeEventException(","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"                        \"OOPS!!! Please enter in format: unmark \u003ctask_number\u003e\\n \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"                                \"e.g. unmark 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"                    int ranking \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"                    return new UnmarkCommand(ranking);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"                    throw new DukeException(\"Ranking should be a number! Call \u0027list\u0027 to see what tasks you have.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"            if (words.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"                throw new DukeEventException(","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"                        \"OOPS!!! Please enter in format: delete \u003ctask_number\u003e\\n \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"                                \"e.g. delete 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"                    int ranking \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"                    return new DeleteCommand(ranking);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"                    throw new DukeException(\"Ranking should be a number! Call \u0027list\u0027 to see what tasks you have.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"zixin448"},"content":"            if (words.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"zixin448"},"content":"                throw new DukeEventException(","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"zixin448"},"content":"                        \"OOPS!!! Please enter in format: todo \u003ctask\u003e\\n \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"zixin448"},"content":"                                \"e.g. todo sing a song\");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"zixin448"},"content":"                Task task \u003d new ToDo(words[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"zixin448"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"zixin448"},"content":"                    throw new DukeDeadlineException(\"Todo not added...\");","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"zixin448"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"zixin448"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"zixin448"},"content":"            if (words.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"zixin448"},"content":"                throw new DukeEventException(","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"zixin448"},"content":"                        \"OOPS!!! Please enter in format: event \u003cevent\u003e /at \u003cevent venue\u003e \\n \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"zixin448"},"content":"                                \"e.g. event Lesson /at Com1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"zixin448"},"content":"                Task task \u003d Event.setEvent(words[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"zixin448"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"zixin448"},"content":"                    throw new DukeDeadlineException(\"Event not added...\");","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"zixin448"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"zixin448"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"zixin448"},"content":"            if (words.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"zixin448"},"content":"                throw new DukeDeadlineException(\"OOPS!!! Please enter in format: deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e \\n \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"zixin448"},"content":"                        \"e.g. deadline complete project /by 2022-12-24\");","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"zixin448"},"content":"                Task task \u003d Deadline.setDeadline(words[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"zixin448"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"zixin448"},"content":"                    throw new DukeDeadlineException(\"Deadline not added...\");","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"zixin448"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"zixin448"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"zixin448"},"content":"            int ranking \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"zixin448"},"content":"            return new DeleteCommand(ranking);","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"zixin448"},"content":"        } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"zixin448"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"zixin448"},"content":"//                LocalDate localdate \u003d LocalDate.parse(words[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"zixin448"},"content":"                return new FindCommand(words[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"zixin448"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"zixin448"},"content":"                throw new DukeException(\"I\u0027m not sure what\u0027s happening. Please try again later!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"zixin448"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"zixin448"},"content":"            throw new DukeException(\"Invalid Command!! Try something else hehe:)\");","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":133}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeDeadlineException;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"    private File file;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"     * Create a storage file in given filepath","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"     * @param filepath path to storage file","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"     * @throws DukeException when does not exist the directory or file","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"    public Storage(String filepath) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"//        String directory_path \u003d \"src/main/data\";","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"//        String directory_path \u003d \"./\";","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"//        File directory \u003d new File(directory_path);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"//        if (!directory.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"//            directory.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"//            throw new DukeException(\"No such directory but let me make one for you !\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"//        }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"        File store \u003d new File(filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"            store.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"            System.out.println(\"File is created!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"            throw new DukeException(\"No such storage file! Or maybe file exists already!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"        this.file \u003d store;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"     * Read throw all Task in Storage.file and return an ArrayList of existing Task","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"     * @return ArrayList\u003cTask\u003e all Task in Storage.file","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"     * @throws DukeDeadlineException","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"     * @throws DukeException","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() throws IOException, DukeDeadlineException, DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"        ArrayList\u003cTask\u003e all \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"        String str;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"            str \u003d s.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"            // str is in format [_type_][_completion_] rest_of_the_task","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"            // str.split(\"]\", 3) returns [ \"[_type_\", \"[_completion_\", \" rest_of_the_task\" ]","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"            String[] str_split \u003d str.split(\"\\\\]\", 3);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"            String[] type \u003d str_split[0].split(\"\\\\[\");","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"            String[] completion \u003d str_split[1].split(\"\\\\[\");","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"            String[] content \u003d str_split[2].split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"            if (type[1].equals(\"T\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"                Task todo \u003d new ToDo(content[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"zixin448"},"content":"                if (completion[1].equals(\"X\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"zixin448"},"content":"                    todo.markDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"zixin448"},"content":"                all.add(todo);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"zixin448"},"content":"            } else if (type[1].equals(\"E\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"zixin448"},"content":"                // format of Event is [E][ ] event_name (at: event_venue)","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"zixin448"},"content":"                // str_split[] \u003d { \"[E\", \"[ \", \" event_name (at: event_venue)\" }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"zixin448"},"content":"                // content \u003d { \" \", \"event_name (at: event_venue)\" }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"zixin448"},"content":"                String separator \u003d \" \\\\(at:\";","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"zixin448"},"content":"                String[] getEventName \u003d content[1].split(separator, 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"zixin448"},"content":"                String eventName \u003d getEventName[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"zixin448"},"content":"                String eventVenue \u003d getEventName[1].split(\"\\\\)\")[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"zixin448"},"content":"                Task event \u003d Event.setEvent(eventName + \" /at \" + eventVenue);","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"zixin448"},"content":"                if (completion[1].equals(\"X\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"zixin448"},"content":"                    event.markDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"zixin448"},"content":"                all.add(event);","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"zixin448"},"content":"            } else if (type[1].equals(\"D\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"zixin448"},"content":"                // format of Deadline is [D][] task_name (by: deadline_in_yyyy-mm-dd)","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"zixin448"},"content":"                // str_split[] \u003d { \"[D\", \"[ \", \" task_name (by: deadline_in_yyyy-mm-dd)\" }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"zixin448"},"content":"                // content \u003d { \" \", \"task_name (by: deadline_in_yyyy-mm-dd)\" }","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"zixin448"},"content":"                String separator \u003d \" \\\\(by:\";","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"zixin448"},"content":"                String[] getTaskName \u003d content[1].split(separator, 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"zixin448"},"content":"                String taskName \u003d getTaskName[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"zixin448"},"content":"                String taskBy \u003d getTaskName[1].split(\"\\\\)\")[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"zixin448"},"content":"                // formatting to input","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"zixin448"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"zixin448"},"content":"                String taskByDate \u003d LocalDate.parse(taskBy, formatter).toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"zixin448"},"content":"                Task deadline \u003d Deadline.setDeadline(taskName + \" /by \" + taskByDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"zixin448"},"content":"                if (completion[1].equals(\"X\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"zixin448"},"content":"                    deadline.markDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"zixin448"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"zixin448"},"content":"                all.add(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"zixin448"},"content":"                throw new DukeException(\"Error when reading storage file\");","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"zixin448"},"content":"        return all;","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"zixin448"},"content":"     * Iterate through input TaskList and update storage file","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList is an ArrayList of Task","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"zixin448"},"content":"    public void writeToFile(TaskList tasklist) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"zixin448"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"zixin448"},"content":"        ArrayList\u003cTask\u003e all \u003d tasklist.getAllTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"zixin448"},"content":"        // go through all Task object and write to filepath","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"zixin448"},"content":"        for (int i \u003d 1; i \u003c\u003d all.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"zixin448"},"content":"            fw.write(i + \". \" + all.get(i - 1));","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"zixin448"},"content":"            fw.write(\u0027\\n\u0027);","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"zixin448"},"content":"        fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":140}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"    String name;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    boolean done;","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"        done \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    public void unMarkDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"        done \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"    public static boolean isDeadline(Task t) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"        return t instanceof Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"        if (done) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":30}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":" * Tracking of all tasks added","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":" * Represents an ArrayList of Task","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" * All operations to add/delete tasks in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    private ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"     * Create new TaskList","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        this.allTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     * Create new TaskList from existing list","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"     * @param currentTasks ArrayList of existing tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"    public TaskList(ArrayList\u003cTask\u003e currentTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"        this.allTasks \u003d currentTasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"     * Getter to get the ArrayList of Task","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"     * @return ArrayList of Task","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"        return allTasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"     * Adder to add a task to the ArrayList of Task","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"     * @param task","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"        allTasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"     * Deleter to remove a task from the ArrayList of Task by its index","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"     * @param ranking ranking is index + 1","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"    public void delete(int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"        assert ranking \u003e 0 \u0026\u0026 ranking \u003c\u003d allTasks.size():","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"                \"Please give a valid input (0 \u003c input \u003c number of tasks\";","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"        allTasks.remove(ranking-1);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"     * Updater to mark a task from the ArrayList of Task as done by its index","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"     * @param ranking","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"    public void markDone(int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"        allTasks.get(ranking-1).markDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"     * Updater to unmark a task from the ArrayList of Task by its index","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"     * @param ranking","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"    public void markUndone(int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"        allTasks.get(ranking-1).unMarkDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"zixin448"},"content":"     * Getter to get the length of current ArrayList of Task","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"zixin448"},"content":"     * @return int length of Task ArrayList","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"zixin448"},"content":"    public int getLength() {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"zixin448"},"content":"        return allTasks.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":78}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"        super(name);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"     * Getter return name of Event task","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     * @return String name of Event task","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"    public String getName() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"        return name;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":20}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" * Deals with interactions with the user","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"    public String printAllTasks(TaskList tasklist) {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"        ArrayList\u003cTask\u003e all \u003d tasklist.getAllTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"        for (int i \u003d 1; i \u003c\u003d all.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"            String s \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"            Task task \u003d all.get(i-1);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"                ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"                s \u003d todo.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"                s \u003d event.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"                s \u003d deadline.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"                s \u003d task.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"            sb.append(i).append(\". \").append(s).append(\u0027\\n\u0027);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"        sb.append(\"You have \" + all.size() + \" tasks! Looks nasty, please rest well.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"        String ret \u003d sb.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"        System.out.println(ret);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"        return ret;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zixin448"},"content":"    public String printTaskIsAdded(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zixin448"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zixin448"},"content":"        sb.append(\"Got it. I\u0027ve added this task: \" + \"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zixin448"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zixin448"},"content":"            ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zixin448"},"content":"            sb.append(todo);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zixin448"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zixin448"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zixin448"},"content":"            sb.append(event);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zixin448"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zixin448"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zixin448"},"content":"            sb.append(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zixin448"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zixin448"},"content":"            sb.append(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zixin448"},"content":"        System.out.println(sb.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zixin448"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zixin448"},"content":"    public String printTaskIsDeleted(TaskList tasklist) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zixin448"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zixin448"},"content":"        int numOfTasks \u003d tasklist.getLength();","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zixin448"},"content":"        sb.append(\"Task is removed. \\n Now you have \" + numOfTasks + \" left!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zixin448"},"content":"        String s \u003d sb.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zixin448"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zixin448"},"content":"        return s;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"zixin448"},"content":"    public String printMarkTaskAsDone(TaskList tasklist, int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"zixin448"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"zixin448"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done: \\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zixin448"},"content":"        sb.append(tasklist.getAllTasks().get(ranking-1));","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"zixin448"},"content":"        String s \u003d sb.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zixin448"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"zixin448"},"content":"        return s;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"zixin448"},"content":"    public String printUnmarkTaskFromDone(TaskList tasklist, int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"zixin448"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"zixin448"},"content":"        sb.append(\"OK, I\u0027ve marked this task as not done yet: \\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"zixin448"},"content":"        sb.append(tasklist.getAllTasks().get(ranking-1));","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"zixin448"},"content":"        String s \u003d sb.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"zixin448"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"zixin448"},"content":"        return s;","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"zixin448"},"content":"    public String printFilteredDeadline(int input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"zixin448"},"content":"        String s \u003d \"None of your task is due on this date!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"zixin448"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"zixin448"},"content":"        return s;","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"zixin448"},"content":"    public String printFilteredDeadline(TaskList filtered_tasklist) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"zixin448"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"zixin448"},"content":"        ArrayList\u003cTask\u003e filtered \u003d filtered_tasklist.getAllTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"zixin448"},"content":"        sb.append(\"Here you go! \\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"zixin448"},"content":"        for (int i \u003d 0; i \u003c filtered.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"zixin448"},"content":"            sb.append(filtered.get(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"zixin448"},"content":"            sb.append(\u0027\\n\u0027);","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"zixin448"},"content":"        sb.append(\"Did you find the task you were looking for?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"zixin448"},"content":"        String s \u003d sb.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"zixin448"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"zixin448"},"content":"        return s;","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"zixin448"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"zixin448"},"content":"        System.out.println(\"Oh hello dear, I\u0027m Dukie, Zi Xin\u0027s favourite chattie box\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"zixin448"},"content":"                \"Nice to meet you dear:\u003e\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"zixin448"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"zixin448"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"zixin448"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"zixin448"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"zixin448"},"content":"        if (s.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"zixin448"},"content":"            input \u003d s.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"zixin448"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"zixin448"},"content":"        return input;","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"zixin448"},"content":"    public void showLine() {","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"zixin448"},"content":"        System.out.println(\"____________\");","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"zixin448"},"content":"    public void showError(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"zixin448"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"zixin448"},"content":"    public String printBye() {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"zixin448"},"content":"        String s \u003d \"Bye! See you soon!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"zixin448"},"content":"        System.out.println(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"zixin448"},"content":"        return s;","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":131}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":" * Extends Command class","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":" * When executed, calls ui method to print relevant output","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"    int ranking;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"     * Constructor","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"     * Initialise index of task to mark as not done","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"     * @param ranking int ranking of task","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"    public UnmarkCommand(int ranking) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        this.ranking \u003d ranking;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"     * Handles un-marking of task of specific index in tasklist as not done","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"     * @param tasklist TaskList has all current tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"     * @param ui Ui handles printing to output","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"     * @param storage Storage saves tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zixin448"},"content":"     * @return String output from ui","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zixin448"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zixin448"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"        assert ranking \u003e 0 \u0026\u0026 ranking \u003c\u003d tasklist.getLength() : \"Please give a valid input (0 \u003c input \u003c number of tasks\";","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"        tasklist.markUndone(ranking);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zixin448"},"content":"        storage.writeToFile(tasklist);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zixin448"},"content":"        return ui.printUnmarkTaskFromDone(tasklist, ranking);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zixin448":35}},{"path":"src/main/java/exceptions/DukeDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeDeadlineException extends Throwable {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    public DukeDeadlineException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":8}},{"path":"src/main/java/exceptions/DukeEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeEventException extends Throwable{","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    public DukeEventException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":7}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"    String errMsg;","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"        this.errMsg \u003d s;","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"        return errMsg;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":16}},{"path":"src/main/java/exceptions/DukeTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package exceptions;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"public class DukeTodoException extends Throwable {","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"    public DukeTodoException(String s) {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"        super(s);","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":7}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeEventException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"public class EventTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"    public void toString_EventObject_Success() {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"        assertEquals(\"[E][ ] lecture (at:LT13)\", Event.setEvent(\"lecture /at LT13\").toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"    public void markDoneToString_EventObject_Success() {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"        Event event \u003d Event.setEvent(\"lecture /at LT13\");","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"        assert event !\u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"        event.markDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"        assertEquals(\"[E][X] lecture (at:LT13)\", event.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zixin448":24}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"    public void toString_ToDoObject_Success() {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"        assertEquals(\"[T][ ] read a book\", new ToDo(\"read a book\").toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"    public void markDoneToString_ToDoObject_Success() {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"        ToDo todo \u003d new ToDo(\"read a book\");","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"        todo.markDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"        assertEquals(\"[T][X] read a book\", todo.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zixin448":20}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"Oh hello dear, I\u0027m Dukie, Zi Xin\u0027s favourite chattie box","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"Nice to meet you dear:\u003e","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"What can I do for you?","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"zixin448"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"zixin448"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"zixin448"},"content":"[D][ ] return book  (by: Sunday)","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"zixin448"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"zixin448"},"content":"[E][ ] project meeting  (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"zixin448"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"zixin448"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"zixin448"},"content":"[D][ ] do homework  (by: no idea :-p)","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"zixin448"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"zixin448"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"zixin448"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"zixin448"},"content":"2. [D][ ] return book  (by: Sunday)","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"zixin448"},"content":"3. [E][ ] project meeting  (at: Mon 2-4pm)","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"zixin448"},"content":"4. [D][ ] do homework  (by: no idea :-p)","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zixin448"},"content":"todo borrow book","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"zixin448"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"zixin448"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"zixin448"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"zixin448"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"zixin448"},"content":"list","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"zixin448":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zixin448"},"content":"#java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"zixin448"},"content":"#","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"zixin448"},"content":"## compare the output to the expected output","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"zixin448"},"content":"#diff ACTUAL.TXT EXPECTED.txt","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zixin448":4,"-":35}}]
