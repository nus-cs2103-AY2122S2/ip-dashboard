[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"This maybe is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-05-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":23,"AdrianOngJJ":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"AdrianOngJJ":15}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"D|0|submit iP|1111-11-11-11-11","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"T|0|eat snake","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"D|0|grow shrooms|2021-8-21-8-0","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"AdrianOngJJ":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"![This is an image](C:\\Users\\User\\Desktop\\iP\\docs\\Ui.png)","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"Duke but with Animal Crossing animals :D","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"### Keeping track of tasks","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"You can add, delete, mark tasks as done/undone.","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"### Text-based interface","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"Command and control Duke using just your keyboard!","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"### Different types of tasks","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"Different type of task for different occasion","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"1. To-Do","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"2. Event","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"3. Deadline","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"### `todo` - Create a To-Do task","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"Creates a new to-do task and add it into your tasklist","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"`todo Wash shoe`","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"Expected outcome:","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"Confirmation from Duke that the task has been added","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"Got it! I\u0027ve added","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"    [T][]Wash shoe","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"### `deadline` - Create a Deadline task","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"Creates a new task with a deadline and add it into your tasklist","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `deadline TASK_NAME /by yyyy-mm-dd HHMM`","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"Example of usage:","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"`deadline Sleep /by 2021-12-30 2300`","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"Expected outcome:","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"Confirmation from Duke that the task has been added","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"Got it! I\u0027ve added","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"    [D][]Sleep (by: DEC 30 2021 23:00)","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"AdrianOngJJ"},"content":"### `event` - Create an Event task","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"AdrianOngJJ"},"content":"Creates a new event with a timing and add it into your tasklist","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `event TASK_NAME /at yyyy-mm-dd HHMM`","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"AdrianOngJJ"},"content":"Example of usage:","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"AdrianOngJJ"},"content":"`event Go dance party /at 2021-12-31 2300`","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"Confirmation from Duke that the task has been added","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"AdrianOngJJ"},"content":"Got it! I\u0027ve added","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"AdrianOngJJ"},"content":"    [E][]Go dance party (at: DEC 31 2021 23:00)","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"AdrianOngJJ"},"content":"### `mark` - Marks a task as completed","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"AdrianOngJJ"},"content":"Marks a task as completed ","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"AdrianOngJJ"},"content":"Example of usage:","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"AdrianOngJJ"},"content":"`mark 1`","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"AdrianOngJJ"},"content":"Expected outcome:","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"AdrianOngJJ"},"content":"Confirmation from Duke that the task has been marked","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"AdrianOngJJ"},"content":"Congrats on completing:","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"AdrianOngJJ"},"content":"    [E][X]Go dance party (at: DEC 31 2021 23:00)","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"AdrianOngJJ"},"content":"### `unmark` - Marks a task as uncompleted","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"AdrianOngJJ"},"content":"Marks a task as uncompleted","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"AdrianOngJJ"},"content":"Example of usage:","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"AdrianOngJJ"},"content":"`unmark 1`","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"AdrianOngJJ"},"content":"Expected outcome:","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"AdrianOngJJ"},"content":"Confirmation from Duke that the task has been unmarked","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"AdrianOngJJ"},"content":"Congrats on not completing:","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"AdrianOngJJ"},"content":"    [E][]Go dance party (at: DEC 31 2021 23:00)","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"AdrianOngJJ"},"content":"### `list` - See all task","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"AdrianOngJJ"},"content":"List down all existing tasks","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `list`","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"AdrianOngJJ"},"content":"`list`","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"AdrianOngJJ"},"content":"A list of all existing tasks","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":135,"author":{"gitId":"AdrianOngJJ"},"content":"Here are the task:","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"AdrianOngJJ"},"content":"    1.[D][X]Sleep (by: DEC 30 2021 23:00)","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"AdrianOngJJ"},"content":"    2.[E][]Go dance party (at: DEC 31 2021 23:00)","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":139,"author":{"gitId":"AdrianOngJJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e :bulb: **Tip**","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"AdrianOngJJ"},"content":"The number on the left of the task is their respective index, which will be used for `mark`, `unmark` and `delete`","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"AdrianOngJJ"},"content":"### `find` - Find all tasks with a given keyword","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"AdrianOngJJ"},"content":"Find all tasks based on a given keyword given by the user","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"AdrianOngJJ"},"content":"Example of usage:","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"AdrianOngJJ"},"content":"`find apple`","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"AdrianOngJJ"},"content":"Expected outcome:","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"AdrianOngJJ"},"content":"A list of all existing tasks with the keyword \"apple\"","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"AdrianOngJJ"},"content":"Here are the task:","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"AdrianOngJJ"},"content":"    1.[T][X]Bake apple cake","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"AdrianOngJJ"},"content":"    2.[T][]Eat apple","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"AdrianOngJJ"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"AdrianOngJJ"},"content":"Delete a task based on its index in the tasklist","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"AdrianOngJJ"},"content":"Example of usage:","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"AdrianOngJJ"},"content":"`delete 1`","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"AdrianOngJJ"},"content":"Expected outcome:","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"AdrianOngJJ"},"content":"Confirmation from Duke that the task has been deleted","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"AdrianOngJJ"},"content":"Removed this task:","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"AdrianOngJJ"},"content":"    1.[T][X]Bake apple cake","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"AdrianOngJJ"},"content":"### `bye` - End Duke","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"AdrianOngJJ"},"content":"Closes the Duke application","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"AdrianOngJJ"},"content":"Format: `bye`","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"AdrianOngJJ"},"content":"Example of usage:","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"AdrianOngJJ"},"content":"`bye`","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"AdrianOngJJ"},"content":"Expected outcome:","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"AdrianOngJJ"},"content":"Application closes","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"AdrianOngJJ"},"content":"Sayonara!~","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"AdrianOngJJ"},"content":"```","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"-":31,"AdrianOngJJ":167}},{"path":"src/main/java/duke/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.time.*;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":" * DateTime object handles the storage and reading of date and time in Java format (YYYY-MM-DD HH:MM)","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"public class DateTime {","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"    DateTime(String[] dateTimeArr) {","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"        this.dateTime \u003d LocalDateTime.of(Integer.parseInt(dateTimeArr[0])","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"                , Integer.parseInt(dateTimeArr[1])","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"                , Integer.parseInt(dateTimeArr[2])","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"                , Integer.parseInt(dateTimeArr[3])","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"                , Integer.parseInt(dateTimeArr[4]));","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"        String minutes \u003d \"\";","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"        if (this.dateTime.getMinute() \u003c 10) {","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"            minutes \u003d \"0\" + this.dateTime.getMinute();","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"        } else {","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"            minutes \u003d String.valueOf(this.dateTime.getMinute());","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"        return this.dateTime.getMonth().toString().substring(0, 3) + \" \"","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"                + this.dateTime.getDayOfMonth() + \" \"","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"                + this.dateTime.getYear() + \" \"","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"                + this.dateTime.getHour()  + \":\"","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"                + minutes;","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"     * Changes the date time in YYYY-MM-DD HH:MM into String for writing into Storage","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String format of dateTime (YYYY-MM-DD-HH-MM)","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"    public String dateTimeForStorage() {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"        String toBeStored \u003d \"\";","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"        toBeStored \u003d this.dateTime.getYear()","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"                + \"-\"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"                + this.dateTime.getMonthValue()","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"                + \"-\"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"                + this.dateTime.getDayOfMonth()","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"                + \"-\"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"                + this.dateTime.getHour()","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"                + \"-\"","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"                + this.dateTime.getMinute();","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"        return toBeStored;","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"AdrianOngJJ":52}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" * Deadlines tasks that need to be done before a specific date/time","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":" * e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    private final DateTime deadline;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    public Deadlines(String description, DateTime deadline) {","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"        super(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"     * Gets date and time of this Deadlines object","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return date and time in String format","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"    public String getDateTimeForStorage() {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"        return this.deadline.dateTimeForStorage();","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.toString() + \")\";","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"AdrianOngJJ":30}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"import duke.MainWindow;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    private Label dialog;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"    private void flip() {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"AdrianOngJJ"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"        db.flip();","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"        return db;","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"AdrianOngJJ":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":" * Project Duke is a educational software project designed to take you","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":" * through the steps of building a small software incrementally,","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":" * while applying as many Java and SE techniques as possible along the way.","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":" *","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":" * @author AdrianOngJJ","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":" * @version 0.1","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":" * @since 22/1/2022","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"    private static final String LINE_BREAK \u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"    private static ArrayList\u003cTask\u003e masterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"    private  Parser parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"    public static final String END_MESSAGE \u003d \"Sayonara~\";","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"    private TextField userInput;","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"    private Button sendButton;","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"    private Scene scene;","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/isabell.png\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/kkslider.png\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"        this.ui \u003d new Ui(LINE_BREAK);","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-23"},{"lineNumber":57,"author":{"gitId":"AdrianOngJJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-23"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-23"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":63,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":64,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"AdrianOngJJ"},"content":"     * Runs Duke to receive commands until command \"bye\" is given","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"AdrianOngJJ"},"content":"    public void run() {","lastModifiedDate":"2022-02-23"},{"lineNumber":69,"author":{"gitId":"AdrianOngJJ"},"content":"//        this.ui.initUi();","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"AdrianOngJJ"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"AdrianOngJJ"},"content":"        BufferedWriter bw \u003d new BufferedWriter(new OutputStreamWriter(System.out));","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"AdrianOngJJ"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"AdrianOngJJ"},"content":"        String parserOutput \u003d \"\";","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"AdrianOngJJ"},"content":"        while (!parserOutput.equals(END_MESSAGE)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"            try {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"AdrianOngJJ"},"content":"                String input \u003d br.readLine();","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"AdrianOngJJ"},"content":"                parserOutput \u003d parser.parse(input, this.tasks, this.storage);","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"AdrianOngJJ"},"content":"                System.out.println(parserOutput);","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"AdrianOngJJ"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"AdrianOngJJ"},"content":"               System.out.println(e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"AdrianOngJJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"AdrianOngJJ"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":86,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"AdrianOngJJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"AdrianOngJJ"},"content":"        new Duke(\"/tasks.txt\").run();","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"AdrianOngJJ"},"content":"    public Duke() {}","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"AdrianOngJJ"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"AdrianOngJJ"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"AdrianOngJJ"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"AdrianOngJJ"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"AdrianOngJJ"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"AdrianOngJJ"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"AdrianOngJJ"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"AdrianOngJJ"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"AdrianOngJJ"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"AdrianOngJJ"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"AdrianOngJJ"},"content":"        stage.show();","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"AdrianOngJJ"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"AdrianOngJJ"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"AdrianOngJJ"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"AdrianOngJJ"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"AdrianOngJJ"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"AdrianOngJJ"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"AdrianOngJJ"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"AdrianOngJJ"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"AdrianOngJJ"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"AdrianOngJJ"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"AdrianOngJJ"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"AdrianOngJJ"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"AdrianOngJJ"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"AdrianOngJJ"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"AdrianOngJJ"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"AdrianOngJJ"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"AdrianOngJJ"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"AdrianOngJJ"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"AdrianOngJJ"},"content":"            userInput.clear();","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"AdrianOngJJ"},"content":"        });","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"AdrianOngJJ"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"AdrianOngJJ"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"AdrianOngJJ"},"content":"            userInput.clear();","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"AdrianOngJJ"},"content":"        });","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"AdrianOngJJ"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"AdrianOngJJ"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"AdrianOngJJ"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"AdrianOngJJ"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"AdrianOngJJ"},"content":"            handleUserInput();","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"AdrianOngJJ"},"content":"        });","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"AdrianOngJJ"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"AdrianOngJJ"},"content":"            handleUserInput();","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"AdrianOngJJ"},"content":"        });","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"AdrianOngJJ"},"content":"     * Iteration 1:","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"AdrianOngJJ"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"AdrianOngJJ"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"AdrianOngJJ"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"AdrianOngJJ"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"AdrianOngJJ"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"AdrianOngJJ"},"content":"        return textToAdd;","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"AdrianOngJJ"},"content":"     * Iteration 2:","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"AdrianOngJJ"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"AdrianOngJJ"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"AdrianOngJJ"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"AdrianOngJJ"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-03-21"},{"lineNumber":188,"author":{"gitId":"AdrianOngJJ"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"AdrianOngJJ"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"AdrianOngJJ"},"content":"                DialogBox.getUserDialog(userText.toString(), new ImageView(user).getImage()),","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"AdrianOngJJ"},"content":"                DialogBox.getDukeDialog(dukeText.toString(), new ImageView(duke).getImage())","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"AdrianOngJJ"},"content":"        );","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"AdrianOngJJ"},"content":"        userInput.clear();","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":195,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":197,"author":{"gitId":"AdrianOngJJ"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"AdrianOngJJ"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-03-21"},{"lineNumber":199,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"AdrianOngJJ"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"AdrianOngJJ"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"AdrianOngJJ"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn \u003d parser.parse(input, this.tasks, this.storage);","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"AdrianOngJJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"AdrianOngJJ"},"content":"            return e.getMessage();","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"AdrianOngJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"AdrianOngJJ"},"content":"            return e.getMessage();","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"AdrianOngJJ"},"content":"        return toReturn;","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"AdrianOngJJ":210}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" * Exception class for Duke to handle Exceptions","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    private String message;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    public String getMessage() {","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"        return this.message;","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"AdrianOngJJ":19}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" * Events are tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":" * e.g., team project meeting on 2/10/2019 2-4pm","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"public class Events extends Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    private final DateTime duration;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    public Events(String description, DateTime duration) {","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"        super(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"     * Gets date and time of this Events object","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Date and time in String format","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"    public String getDateTimeForStorage() {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"        return this.duration.dateTimeForStorage();","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.duration.toString() + \")\";","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"AdrianOngJJ":30}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"public class Launcher {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"AdrianOngJJ":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"public class Main extends Application {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    private Duke duke \u003d new Duke(\"/tasks.txt\");","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"            stage.show();","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"AdrianOngJJ":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"    private TextField userInput;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"    private Button sendButton;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"    private Duke duke;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/isabell.png\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/kkslider.png\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"    public void initialize() {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"        duke \u003d d;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"        );","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"        userInput.clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"        if (response.equals(Duke.END_MESSAGE)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"            Platform.exit();","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"AdrianOngJJ":56}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":" * Handles the raw input from user to create the corresponding objects","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"public class Parser {","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String ADD_SUCCESS \u003d \"Got it! I\u0027ve added:\\n\\t\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String MARK_SUCCESS \u003d \"Congrats on completing:\\n\\t\";","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String UNMARK_SUCCESS \u003d \"Congrats on not completing:\\n\\t\";","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String DELETE_SUCCESS \u003d \"Removed this task:\\n\\t\";","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"     * Gets the description from the raw input given by user","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param inputArr raw input with command word, description and date time","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String of description of input only","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String getDescription(String[] inputArr) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"        return inputArr[1].split(\"/\")[0]; // split input from slash","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"     * Gets date and time from the raw input given by the user","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param inputArr raw input with command word, description and date time","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return DateTime of input only","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"    private final DateTime getDateTime(String[] inputArr) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"        String[] dateTimeArr \u003d new String[6];","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"        dateTimeArr \u003d inputArr[1].split(\"/\")[1].split(\"[- ]\"); // [String, yyyy, mm, dd, HHMM, null]","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"        dateTimeArr[0] \u003d dateTimeArr[4].substring(0, 2); // hours","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"        String year \u003d dateTimeArr[1];","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"        String month \u003d dateTimeArr[2];","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"        String day \u003d dateTimeArr[3];","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"        String hour \u003d dateTimeArr[4].substring(0, 2);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"        String minute \u003d dateTimeArr[4].substring(2, 4);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"        String[] toFeedDateTime \u003d { year, month, day, hour, minute};","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"        return new DateTime(toFeedDateTime);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"        // will reduce dateTimeArr to [yyyy, mm, dd, HHMM]","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"     * Adds given task into tasklist","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param tasklist Tasklist to be store the new task","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"    private void addToTaskList(Task task, TaskList tasklist) {","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"        tasklist.addTask(task);","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"     * Makes sense of the input given by the user","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param input Raw input given by user","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param tasklist Tasklist where tasks are to be updated","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param storage Holds the backend storage of the file","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String of the result of the task executed","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws DukeException Incorrect use/format of Duke commands","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws IOException Missing file/null error","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"AdrianOngJJ"},"content":"    public String parse(String input, TaskList tasklist, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"AdrianOngJJ"},"content":"        String[] inputArr \u003d input.trim().split(\" \", 2); // split first word from body","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"AdrianOngJJ"},"content":"        switch(inputArr[0]) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"AdrianOngJJ"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"AdrianOngJJ"},"content":"                throw new DukeException(\"todo simi?\");","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"AdrianOngJJ"},"content":"            ToDos newToDo \u003d new ToDos(getDescription(inputArr));","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"            addToTaskList(newToDo, tasklist);","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"AdrianOngJJ"},"content":"            return ADD_SUCCESS + newToDo;","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"event\":","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"AdrianOngJJ"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"AdrianOngJJ"},"content":"                throw new DukeException(\"event description?\");","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"AdrianOngJJ"},"content":"            Events newEvent \u003d new Events(getDescription(inputArr), getDateTime(inputArr));","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"AdrianOngJJ"},"content":"            addToTaskList(newEvent, tasklist);","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"AdrianOngJJ"},"content":"            return ADD_SUCCESS + newEvent;","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"deadline\":","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"AdrianOngJJ"},"content":"            if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"AdrianOngJJ"},"content":"                throw new DukeException(\"deadline when end?\");","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"AdrianOngJJ"},"content":"            Deadlines newDeadline \u003d new Deadlines(getDescription(inputArr), getDateTime(inputArr));","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"AdrianOngJJ"},"content":"            addToTaskList(newDeadline, tasklist);","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"AdrianOngJJ"},"content":"            return ADD_SUCCESS + newDeadline;","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":94,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"list\":","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"AdrianOngJJ"},"content":"            return tasklist.list();","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"bye\":","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"AdrianOngJJ"},"content":"            storage.saveAllTasks(tasklist);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"AdrianOngJJ"},"content":"            return \"Sayonara~\";","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":101,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"mark\":","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"AdrianOngJJ"},"content":"            Task markedTask \u003d tasklist.mark(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"AdrianOngJJ"},"content":"            return MARK_SUCCESS + markedTask;","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":105,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"unmark\":","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"AdrianOngJJ"},"content":"            Task unmarkedTask \u003d tasklist.unmark(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"AdrianOngJJ"},"content":"            return UNMARK_SUCCESS + unmarkedTask;","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":109,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"delete\":","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"AdrianOngJJ"},"content":"            Task deletedTask \u003d tasklist.delete(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"AdrianOngJJ"},"content":"            return DELETE_SUCCESS + deletedTask;","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"find\":","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"AdrianOngJJ"},"content":"            return tasklist.find(inputArr[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"AdrianOngJJ"},"content":"        default:","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"AdrianOngJJ"},"content":"            throw new DukeException(\":( OOPS!!!! I\u0027m sorry, but I don\u0027t know what that means!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":120,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":121,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"AdrianOngJJ":121}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.File;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":" * Holds the filepath to the file in which the data will be stored","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"public class Storage {","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    private String filePath;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    private Path path;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    Storage(String filePath) {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"        String home \u003d  System.getProperty(\"user.home\"); // base directory","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"        // following code should give me [HOME_DIRECTORY]/Desktop/iP/data","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"        this.path \u003d java.nio.file.Paths.get(home);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"     * Converts String stored in the database to create tasks when booting up Duke","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param description Line read from the data file","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return A task which will be added to the Tasklist","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    private Task convertStringToTask(String description) {","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"        String[] splitDescription \u003d description.split(\"\\\\|\");","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"        String taskType \u003d splitDescription[0];","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"        Task tempTask \u003d new Task(\"Temp task\");","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"        switch (taskType) {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"T\":","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"            Task newToDo \u003d new ToDos(splitDescription[2]);","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"            if (splitDescription[1].equals(\"1\")) {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"                newToDo.markAsDone();","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"            tempTask \u003d newToDo;","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"            break;","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"D\":","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"            Task newDeadline \u003d new Deadlines(splitDescription[2], new DateTime(splitDescription[3].split(\"[- ]\")));","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"            if (splitDescription[1].equals(\"1\")) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"                newDeadline.markAsDone();","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"            tempTask \u003d newDeadline;","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"            break;","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"        case \"E\":","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"            Task newEvent \u003d new Events(splitDescription[2], new DateTime(splitDescription[3].split(\"[- ]\")));","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"            if (splitDescription[1].equals(\"1\")) {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"                newEvent.markAsDone();","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"            tempTask \u003d newEvent;","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"            break;","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"        default:","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"            System.out.println(\"All tasks loaded!\");","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"AdrianOngJJ"},"content":"        return tempTask;","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"AdrianOngJJ"},"content":"     * Read the data file and store it into an ArrayList\u003cTask\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return An ArrayList of Tasks","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws IOException Missing file","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws DukeException Missing file","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"AdrianOngJJ"},"content":"        ArrayList\u003cTask\u003e masterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"AdrianOngJJ"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"AdrianOngJJ"},"content":"            File dukeStore \u003d new File(this.path + this.filePath);","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"AdrianOngJJ"},"content":"            Scanner fileReader \u003d new Scanner(dukeStore);","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"AdrianOngJJ"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"AdrianOngJJ"},"content":"                masterList.add(convertStringToTask(fileReader.nextLine()));","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"AdrianOngJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"AdrianOngJJ"},"content":"            Path filePath \u003d Paths.get(\"data\");","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"AdrianOngJJ"},"content":"            boolean isDirectoryExists \u003d Files.exists(filePath);","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"AdrianOngJJ"},"content":"            if (!isDirectoryExists) {","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"AdrianOngJJ"},"content":"                new File(\"data\").mkdir();","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"AdrianOngJJ"},"content":"            new File(path + \"/tasks.txt\").createNewFile();","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"AdrianOngJJ"},"content":"            throw new DukeException(\"File not found. Creating new file...\");","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"AdrianOngJJ"},"content":"        return masterList;","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"AdrianOngJJ"},"content":"     * Save all tasks before exiting Duke","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param tasklist List of tasks to be saved","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"AdrianOngJJ"},"content":"     * @throws IOException Missing file","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"AdrianOngJJ"},"content":"    public void saveAllTasks(TaskList tasklist) throws IOException {","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"AdrianOngJJ"},"content":"        File dukeStore \u003d new File(this.path + this.filePath);","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"AdrianOngJJ"},"content":"        FileWriter fw \u003d new FileWriter(dukeStore);","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"AdrianOngJJ"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"AdrianOngJJ"},"content":"            fw.write(taskToString(tasklist.get(i)));","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"AdrianOngJJ"},"content":"            fw.write(\"\\n\");","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"AdrianOngJJ"},"content":"        fw.close();","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"AdrianOngJJ"},"content":"     * Converts a task to String for storage purposes","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param task Task to be converted to String to be stored","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String of Task","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String taskToString(Task task) {","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"AdrianOngJJ"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"AdrianOngJJ"},"content":"        if (task instanceof ToDos) {","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn +\u003d \"T|\";","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"AdrianOngJJ"},"content":"        } else if (task instanceof Deadlines) {","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn +\u003d \"D|\";","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"AdrianOngJJ"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn +\u003d \"E|\";","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"AdrianOngJJ"},"content":"        if (task.isDone) {","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn +\u003d \"1|\";","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"AdrianOngJJ"},"content":"        } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn +\u003d \"0|\";","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"AdrianOngJJ"},"content":"        toReturn +\u003d task.description.trim();","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"AdrianOngJJ"},"content":"        if (task instanceof Deadlines) {","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"AdrianOngJJ"},"content":"            String duration \u003d ((Deadlines) task).getDateTimeForStorage();","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn +\u003d \"|\" + duration;","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"AdrianOngJJ"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"AdrianOngJJ"},"content":"            String duration \u003d ((Events) task).getDateTimeForStorage();","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"AdrianOngJJ"},"content":"            toReturn +\u003d \"|\" + duration;","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"AdrianOngJJ"},"content":"        return toReturn;","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"AdrianOngJJ":145}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" * Task class contains the task\u0027s name and whether it is completed","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"public class Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"    protected String description;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"     * Check if task is done","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String \"X\" to indicate if a task is done","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"        return (isDone ? \"X\" : \" \"); // mark done with X","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark item as done","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Item that is done","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task markAsDone() {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"        return this;","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark item as undone","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Item that is undone","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task unmarkItem() {","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"        return this;","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"AdrianOngJJ":45}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":" * Handles the current list of Tasks while Duke is running","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"public class TaskList {","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String LIST_INIT \u003d \"Here are the task:\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    private ArrayList\u003cTask\u003e masterList;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"        this.masterList \u003d list;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"        this.masterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"    public int size() {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"        return this.masterList.size();","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"        return this.masterList.get(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"        masterList.add(task);","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"AdrianOngJJ"},"content":"     * Shows the list of existing tasks","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return String of list of tasks","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"AdrianOngJJ"},"content":"    public String list() {","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"AdrianOngJJ"},"content":"        String toPrint \u003d LIST_INIT;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"AdrianOngJJ"},"content":"        for (int i \u003d 0; i \u003c masterList.size(); i++) {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"AdrianOngJJ"},"content":"            Task currTask \u003d masterList.get(i);","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"AdrianOngJJ"},"content":"            toPrint +\u003d \"\\t\" + (i + 1) + \". \" + currTask + \"\\n\";","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"AdrianOngJJ"},"content":"        return toPrint;","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark a task as done","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param index Index of task in masterList","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Task marked as done","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task mark(int index) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"AdrianOngJJ"},"content":"        Task currTask \u003d masterList.get(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"AdrianOngJJ"},"content":"        currTask.markAsDone();","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"AdrianOngJJ"},"content":"        masterList.set(index, currTask);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"AdrianOngJJ"},"content":"        return currTask;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"AdrianOngJJ"},"content":"     * Mark a task as undone","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param index Index of task in masterList","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Task marked as undone","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task unmark(int index) {","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"AdrianOngJJ"},"content":"        Task currTask \u003d masterList.get(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"AdrianOngJJ"},"content":"        currTask.unmarkItem();","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"AdrianOngJJ"},"content":"        masterList.set(index, currTask);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"AdrianOngJJ"},"content":"        return currTask;","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"AdrianOngJJ"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"AdrianOngJJ"},"content":"     * Delete a task","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"AdrianOngJJ"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"AdrianOngJJ"},"content":"     * @param index Index of task in masterList","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"AdrianOngJJ"},"content":"     * @return Deleted task","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"AdrianOngJJ"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"AdrianOngJJ"},"content":"    public Task delete(int index) {","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"AdrianOngJJ"},"content":"        Task currTask \u003d masterList.get(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"AdrianOngJJ"},"content":"        masterList.remove(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"AdrianOngJJ"},"content":"        return currTask;","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"AdrianOngJJ"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"AdrianOngJJ"},"content":"        String toReturn \u003d \"Here are the matching tasks in your lists:\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"AdrianOngJJ"},"content":"        for (int i \u003d 0; i \u003c masterList.size(); i++) {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"AdrianOngJJ"},"content":"            if (masterList.get(i).toString().contains(keyword)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"AdrianOngJJ"},"content":"                toReturn +\u003d \"\\t\" + (i + 1) + \".\" + masterList.get(i) + \"\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"AdrianOngJJ"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"AdrianOngJJ"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"AdrianOngJJ"},"content":"        return toReturn;","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"AdrianOngJJ":94}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" * To Dos are tasks without any date/time attached to it","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"    public ToDos(String description) {","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"        super(description);","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"AdrianOngJJ":15}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":" * Handles the visual interaction with the user","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"public class Ui {","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    private final String lineBreak;","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"    Ui(String lineBreak) {","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"        this.lineBreak \u003d lineBreak;","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"    public void initUi() {","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"AdrianOngJJ"},"content":"        printLineBreak();","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"AdrianOngJJ"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"AdrianOngJJ"},"content":"    private final void printLineBreak() {","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"AdrianOngJJ"},"content":"        System.out.println(this.lineBreak);","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"AdrianOngJJ"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"AdrianOngJJ"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"AdrianOngJJ":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"AdrianOngJJ":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"AdrianOngJJ"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"AdrianOngJJ"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"AdrianOngJJ"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"AdrianOngJJ"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"AdrianOngJJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"AdrianOngJJ"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"AdrianOngJJ":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AdrianOngJJ"},"content":"todo read book","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"AdrianOngJJ"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"AdrianOngJJ"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"AdrianOngJJ"},"content":"todo join sports club","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"AdrianOngJJ"},"content":"mark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"AdrianOngJJ"},"content":"mark 4","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"AdrianOngJJ"},"content":"todo borrow book","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"AdrianOngJJ"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"AdrianOngJJ"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"AdrianOngJJ":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"AdrianOngJJ"},"content":"javac  -cp C:\\Users\\adria\\Desktop\\iP\\src\\main\\java -Xlint:none -d ..\\bin C:\\Users\\adria\\Desktop\\iP\\src\\main\\java\\*.java","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"AdrianOngJJ"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"AdrianOngJJ"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"AdrianOngJJ":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"AdrianOngJJ"},"content":"if ! javac -cp C:\\Users\\adria\\Desktop\\iP\\src\\main\\java -Xlint:none -d ../bin C:\\Users\\adria\\Desktop\\iP\\src\\main\\java*.java","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"AdrianOngJJ":1}}]
